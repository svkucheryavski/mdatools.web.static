{"version":3,"file":"pcvpca.js","sources":["../node_modules/svelte/src/runtime/internal/utils.js","../node_modules/svelte/src/runtime/internal/dom.js","../node_modules/svelte/src/runtime/internal/lifecycle.js","../node_modules/svelte/src/runtime/internal/scheduler.js","../node_modules/svelte/src/runtime/internal/transitions.js","../node_modules/svelte/src/runtime/internal/await_block.js","../node_modules/svelte/src/runtime/internal/each.js","../node_modules/svelte/src/runtime/internal/Component.js","../node_modules/svelte/src/shared/version.js","../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../node_modules/mdatools/src/stat/index.js","../node_modules/mdatools/src/misc/index.js","../node_modules/mdatools/src/distributions/index.js","../node_modules/mdatools/src/decomp/index.js","../node_modules/mdatools/src/arrays/index.js","../../controls/File.svelte","../../controls/Select.svelte","../../controls/Container.svelte","../../controls/ButtonCancel.svelte","../../controls/Button.svelte","../src/DataLoader.svelte","../../controls/Spinner.svelte","../src/wasm/pcvpca.js","../src/wasm/pcvpca_wasm.js","../src/PCVCalculator.svelte","../../controls/Range.svelte","../src/ModelCalculator.svelte","../node_modules/svelte/src/runtime/store/index.js","../node_modules/svelte-plots-basic/src/Utils.js","../node_modules/svelte-plots-basic/src/2d/Axes.svelte","../node_modules/svelte-plots-basic/src/Colors.js","../node_modules/svelte-plots-basic/src/2d/AxisLines.svelte","../node_modules/svelte-plots-basic/src/2d/AxisTickLabels.svelte","../node_modules/svelte-plots-basic/src/2d/Axis.svelte","../node_modules/svelte-plots-basic/src/2d/XAxis.svelte","../node_modules/svelte-plots-basic/src/2d/YAxis.svelte","../node_modules/svelte-plots-basic/src/2d/Box.svelte","../node_modules/svelte-plots-basic/src/2d/Segments.svelte","../node_modules/svelte-plots-basic/src/2d/Points.svelte","../node_modules/svelte-plots-basic/src/2d/Lines.svelte","../node_modules/svelte-plots-basic/src/2d/Legend.svelte","../src/plots/settings.js","../src/plots/PlotSeries.svelte","../src/plots/AppLegend.svelte","../src/plots/DistancePlot.svelte","../../controls/CompSelector.svelte","../src/plots/DistancePlotControls.svelte","../src/plots/ExtremePlot.svelte","../src/plots/ExtremePlotControls.svelte","../src/plots/ScoresPlot.svelte","../src/plots/ScoresPlotControls.svelte","../src/plots/VariancePlot.svelte","../src/plots/VariancePlotControls.svelte","../src/AppPlots.svelte","../src/AppContainer.svelte","../src/MainApp.svelte","../src/main.js","../__vite-browser-external"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tif (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { is_promise } from './utils.js';\nimport { check_outros, group_outros, transition_in, transition_out } from './transitions.js';\nimport { flush } from './scheduler.js';\nimport { get_current_component, set_current_component } from './lifecycle.js';\n\n/**\n * @template T\n * @param {Promise<T>} promise\n * @param {import('./private.js').PromiseInfo<T>} info\n * @returns {boolean}\n */\nexport function handle_promise(promise, info) {\n\tconst token = (info.token = {});\n\t/**\n\t * @param {import('./private.js').FragmentFactory} type\n\t * @param {0 | 1 | 2} index\n\t * @param {number} [key]\n\t * @param {any} [value]\n\t * @returns {void}\n\t */\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\t\tinfo.resolved = value;\n\t\tlet child_ctx = info.ctx;\n\t\tif (key !== undefined) {\n\t\t\tchild_ctx = child_ctx.slice();\n\t\t\tchild_ctx[key] = value;\n\t\t}\n\t\tconst block = type && (info.current = type)(child_ctx);\n\t\tlet needs_flush = false;\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroup_outros();\n\t\t\t\t\t\ttransition_out(block, 1, 1, () => {\n\t\t\t\t\t\t\tif (info.blocks[i] === block) {\n\t\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcheck_outros();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\t\t\tblock.c();\n\t\t\ttransition_in(block, 1);\n\t\t\tblock.m(info.mount(), info.anchor);\n\t\t\tneeds_flush = true;\n\t\t}\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t\tif (needs_flush) {\n\t\t\tflush();\n\t\t}\n\t}\n\tif (is_promise(promise)) {\n\t\tconst current_component = get_current_component();\n\t\tpromise.then(\n\t\t\t(value) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.then, 1, info.value, value);\n\t\t\t\tset_current_component(null);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t\t\tset_current_component(null);\n\t\t\t\tif (!info.hasCatch) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\t\tinfo.resolved = /** @type {T} */ (promise);\n\t}\n}\n\n/** @returns {void} */\nexport function update_await_block_branch(info, ctx, dirty) {\n\tconst child_ctx = ctx.slice();\n\tconst { resolved } = info;\n\tif (info.current === info.then) {\n\t\tchild_ctx[info.value] = resolved;\n\t}\n\tif (info.current === info.catch) {\n\t\tchild_ctx[info.error] = resolved;\n\t}\n\tinfo.block.p(child_ctx, dirty);\n}\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.1';\nexport const PUBLIC_VERSION = '4';\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","/*************************************************/\n/*    Methods for computing statistics           */\n/*************************************************/\n\nimport { isnumber, isindex, isvector, vector, Vector, _sort } from '../arrays/index.js';\n\n\n/**\n * Compute median of vector values.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} median of x.\n *\n */\nexport function median(x) {\n   return quantile(x, 0.5)\n}\n\n/**\n * Compute inter-quartile range for vector of values.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} IQR of x (Q3 - Q1).\n *\n */\nexport function iqr(x) {\n   return quantile(x, 0.75) - quantile(x, 0.25);\n}\n\n\n/**\n * Computes a p-th quantile/quantiles for a numeric vector.\n *\n * @param {Vector} x - vector with values.\n * @param {number|Array|Vector} p - probability (one value or a vector).\n *\n * @returns {number|Vector} quantile value or a vector with quantiles.\n */\nexport function quantile(x, p) {\n\n   if (isvector(x)) {\n      return quantile(x.v, p);\n   }\n\n   if (isvector(p)) {\n      return quantile(x, p.v);\n   }\n\n   const n = x.length;\n\n   if (!Array.isArray(p)) p = [p];\n\n   if (!isnumber(p[0]) || min(p) < 0 || max(p) > 1) {\n      throw new Error(\"Parameter 'p' must be between 0 and 1 (both included).\");\n   }\n\n   function q(x, p) {\n      const h = (n - 1) * p + 1;\n      const n1 = Math.floor(h);\n      const n2 = Math.ceil(h);\n      return x[n1 - 1] + (x[n2 - 1] - x[n1 - 1]) * (h - Math.floor(h));\n   }\n\n   const xs = _sort(x);\n   const out =  p.map(v => q(xs, v));\n   return p.length == 1 ? out[0] : vector(out);\n}\n\n\n/**\n * Counts how many values from a vector falls into provided intervals (bins).\n *\n * @param {Array|Vector} x - vector with values.\n * @param {Array|Vector} bins - vector with bins boundaries.\n *\n * @returns {Vector} vector with counts for each bean.\n *\n */\nexport function count(x, bins) {\n\n   if (isvector(x)) {\n      return count(x.v, isvector(bins) ? bins.v : bins);\n   }\n\n   const n = bins.length;\n\n   // add a bit extra to right side of the last bin\n   bins[n - 1] = bins[n - 1] * 1.0001\n\n   // count\n   let counts = new Vector.valuesConstructor(n - 1);\n   for (let i = 0; i < x.length; i++) {\n      for (let j = 0; j < n - 1; j++) {\n         if (x[i] >= bins[j] && x[i] < bins[j + 1]) counts[j] += 1;\n      }\n   }\n\n   return new Vector(counts);\n}\n\n\n/**\n * Computes middle points between values of a vector.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {Vector} vector with middle points.\n *\n */\nexport function mids(x) {\n\n   if (isvector(x)) {\n      return mids(x.v);\n   }\n\n   const out = new Vector.valuesConstructor(x.length - 1);\n   for (let i = 0; i < out.length; i++) {\n      out[i] = 0.5 * (x[i] + x[i + 1]);\n   }\n\n   return new Vector(out);\n}\n\n\n/**\n * Splits range of vector values into equal intervals.\n *\n * @param {Array|Vector} x - vector with values.\n * @param {number} n - number of intervals.\n *\n * @returns {Vector} vector with boundaries of the intervals.\n *\n */\nexport function split(x, n) {\n\n   if (isvector(x)) {\n      split(x.v, n);\n   }\n\n   const rn = range(x);\n\n   if (rn[0] === rn[1]) {\n      throw new Error('split: values in a vector \"x\" should vary.');\n   }\n\n   const by = (rn[1] - rn[0]) / n;\n   return Vector.seq(rn[0], rn[1], by);\n}\n\n\n/**\n * Computes difference between all adjacent values in a vector.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {Vector} vector with the differences.\n *\n */\nexport function diff(x) {\n\n   if (isvector(x)) {\n      return diff(x.v);\n   }\n\n   const out = new Vector.valuesConstructor(x.length - 1);\n   for (let i = 0; i < x.length - 1; i++) {\n      out[i] = x[i + 1] - x[i];\n   }\n\n   return new Vector(out);\n}\n\n\n/**\n * Generate probability points for QQ plot.\n *\n * @param {number} n - number of points.\n *\n * @returns {Vector} a sequence of probabilities between 0 and 1.\n *\n */\nexport function ppoints(n) {\n\n   const a = n < 10 ? 3.0/8.0 : 0.5;\n   const out = new Vector.valuesConstructor(n);\n\n   for (let i = 0; i < n; i++) {\n      out[i] = (i + 1 - a) / (n + (1 - a) - a);\n   }\n\n   return new Vector(out);\n}\n\n\n/**\n * Computes cumulative sums for the vector values.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {Vectors} vector with cumulative sums.\n *\n */\nexport function cumsum(x) {\n\n   if (isvector(x)) {\n      return cumsum(x.v);\n   }\n\n   let s = 0;\n   let out = new Vector.valuesConstructor(x.length);\n   for (let i = 0; i < x.length; i++) {\n      s += x[i];\n      out[i] = s\n   }\n\n   return new Vector(out);\n}\n\n\n/**\n * Computes kurtosis of values.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} kurtosis of x.\n *\n */\nexport function kurtosis(x) {\n\n   if (isvector(x)) {\n      return kurtosis(x.v);\n   }\n\n   let n = x.length;\n   let m = mean(x);\n\n   let m4 = 0.0;\n   let m2 = 0.0;\n   for (let i = 0; i < n; i++) {\n      m2 = m2 + Math.pow((x[i] - m), 2);\n      m4 = m4 + Math.pow((x[i] - m), 4);\n   }\n\n   return (m4/n) / Math.pow((m2/n), 2);\n}\n\n\n/**\n * Computes skewness of values.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} skewness of x.\n *\n */\nexport function skewness(x) {\n\n   if (isvector(x)) {\n      return skewness(x.v);\n   }\n\n   let n = x.length;\n   let m = mean(x);\n\n   let m3 = 0.0;\n   let m2 = 0.0;\n   for (let i = 0; i < n; i++) {\n      m2 = m2 + Math.pow((x[i] - m), 2);\n      m3 = m3 + Math.pow((x[i] - m), 3);\n   }\n\n   return (m3/n) / Math.pow((m2/n), 1.5);\n}\n\n\n/**\n * Computes correlation between two vectors.\n *\n * @param {Array|Vector} x - vector with values.\n * @param {Array|Vector} y - vector with values.\n * @param {string} method - which method to use (\"pearson\" or \"spearman\").\n *\n * @returns {number} correlation between x and y.\n *\n */\nexport function cor(x, y, method = \"pearson\") {\n\n   if (isvector(x)) {\n      return cor(x.v, y.v, method);\n   }\n\n   if (method === \"spearman\") {\n      return cor(rank(x), rank(y));\n   }\n\n   return cov(x, y) / (sd(x) * sd(y));\n}\n\n\n/**\n * Computes covariance between two vectors.\n *\n * @param {Array|Vector} x - vector with values.\n * @param {Array|Vector} y - vector with values.\n * @param {boolean} [biased=false] - compute a biased version with n degrees of freedom or not (with n - 1).\n * @param {number} [mx=undefined] - mean of x values (if already known).\n * @param {number} [my=undefined] - mean of y values (if already known).\n *\n * @returns {number} covariance between x and y.\n *\n */\nexport function cov(x, y, biased = false, mx = undefined, my = undefined) {\n\n   if (isvector(x)) {\n      return cov(x.v, y.v, biased, mx, my);\n   }\n\n   const n = x.length;\n\n   if (y.length !== n) {\n      throw Error(\"Vectors 'x' and 'y' must have the same length.\");\n   }\n\n   if (n < 2) {\n      throw Error(\"Vectors 'x' and 'y' must have at least two values.\");\n   }\n\n   if (mx === undefined) mx = mean(x);\n   if (my === undefined) my = mean(y);\n\n   let s = 0;\n   for (let i = 0; i < n; i++) {\n      s = s + (x[i] - mx) * (y[i] - my);\n   }\n\n   return s / (biased ? n : n - 1);\n}\n\n\n/**\n * Returns ranks of values in a vector (ranks start from 1, not 0).\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {Vector} vector with ranks.\n *\n */\nexport function rank(x) {\n\n   if (isvector(x)) {\n      return rank(x.v);\n   }\n\n   const y = [...x].sort((a, b) => a - b);\n\n   return new Vector(x.map(v => y.indexOf(v) + 1));\n}\n\n\n/**\n * Compute marginal range of values as [min, max]\n *\n * @param {Array|Vector} x - vector with values.\n * @param {number} m - margin as per cent of range (value between 0 and 1).\n *\n * @return {Array} array with two values, min and max.\n *\n */\nexport function mrange(x, m) {\n\n   if (isvector(x)) {\n      return mrange(x.v, m);\n   }\n\n   if (m === undefined) m = 0.10;\n   const r = range(x);\n   const d = (r[1] - r[0]) * m;\n\n   return [r[0] - d, r[1] + d];\n}\n\n\n/**\n * Compute range of values as [min, max].\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @return {Array} array with two values, min and max.\n *\n */\nexport function range(x) {\n\n   if (isvector(x)) {\n      return range(x.v);\n   }\n\n   let min = x[0];\n   let max = x[0];\n\n   for (let i = 1; i < x.length; i++) {\n      if (x[i] < min) min = x[i];\n      if (x[i] > max) max = x[i];\n   }\n\n   return [min, max];\n}\n\n\n/**\n * Compute norm2 of a vector (Euclidean distance).\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} norm value.\n *\n */\nexport function norm2(x) {\n\n   if (isvector(x)) {\n      return norm2(x.v);\n   }\n\n   return Math.sqrt(ssq(x));\n}\n\n\n/**\n * Compute sum of squared vector values\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} sum of squared values of x.\n *\n */\nexport function ssq(x) {\n\n   if (isvector(x)) {\n      return ssq(x.v);\n   }\n\n   let ssqv = 0;\n   const n = x.length;\n   for (let i = 0; i < n; i++) {\n      const v = x[i]\n      ssqv += v * v;\n   }\n\n   return ssqv;\n}\n\n\n/**\n * Compute standard deviation of vector values.\n *\n * @param {Array|Vector} x - vector with values.\n * @param {boolean} [biased=false] - compute a biased value (n degrees of freedom) or unbiased (n - 1 degrees of freedom)\n *\n * @returns {number} standard deviation of x.\n *\n */\nexport function sd(x, biased) {\n\n   if (isvector(x)) {\n      return sd(x.v, biased);\n   }\n\n   return Math.sqrt(variance(x, biased));\n}\n\n\n/**\n * Compute variance of vector values.\n *\n * @param {Array|Vector} x - vector with values.\n * @param {boolean} [biased=false] - compute a biased variance (n degrees of freedom) or unbiased (n - 1 degrees of freedom)\n *\n * @returns {number} variance of x.\n *\n */\nexport function variance(x, biased) {\n\n   if (biased === undefined) {\n      biased = false;\n   }\n\n   if (isvector(x)) {\n      return variance(x.v);\n   }\n\n   const m = mean(x);\n   let s = 0;\n   for (let i = 0; i < x.length; i++) {\n      const d = (x[i] - m);\n      s = s + d * d ;\n   }\n\n   return s / (biased ? x.length : (x.length - 1));\n}\n\n\n/**\n * Compute average of vector values.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} mean of x.\n *\n */\nexport function mean(x) {\n\n   if (isvector(x)) {\n      return mean(x.v);\n   }\n\n   return sum(x) / x.length;\n}\n\n\n/**\n * Compute sum of all values in a vector.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} sum of x.\n *\n */\nexport function sum(x) {\n\n   if (isvector(x)) {\n      return sum(x.v);\n   }\n\n   let s = 0;\n   for (let i = 0; i < x.length; i++) {\n      s = s + x[i];\n   }\n\n   return s;\n}\n\n\n/**\n * Compute product of all values in a vector.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} product of x.\n *\n */\nexport function prod(x) {\n\n   if (isvector(x)) {\n      return prod(x.v);\n   }\n\n   let p = 1;\n   for (let i = 0; i < x.length; i++) {\n      p = p * x[i];\n   }\n\n   return p;\n}\n\n\n/**\n * Find the smallest element in a vector.\n *\n * @param {Array|Vector|Index} x - vector or index with values.\n *\n * @returns {number} the smallest value.\n *\n */\nexport function min(x) {\n\n   if (isvector(x) || isindex(x)) {\n      return x.v[minind(x.v) - 1];\n   }\n\n   return x[minind(x) - 1];\n}\n\n\n/**\n * Find index of the smallest element in a vector.\n *\n * @param {Array|Vector|Index} x - vector or index with values.\n *\n * @returns {number} index of the smallest value (starting from 1).\n *\n */\nexport function minind(x) {\n\n   if (isvector(x) || isindex(x)) {\n      return minind(x.v);\n   }\n\n   let outind = 1;\n   let out = x[0]\n   for (let i = 2; i <= x.length; i++) {\n      if (x[i - 1] < out) {\n         outind = i;\n         out = x[i - 1];\n      }\n   }\n\n   return outind;\n}\n\n\n/**\n * Find the largest element in a vector.\n *\n * @param {Array|Vector|Index} x - vector or index with values.\n *\n * @returns {number} the largest value.\n *\n */\nexport function max(x) {\n\n   if (isvector(x) || isindex(x)) {\n      return x.v[maxind(x.v) - 1];\n   }\n\n   return x[maxind(x) - 1];\n}\n\n\n/**\n * Find index of the largest element in a vector.\n *\n * @param {Array|Vector|Index} x - vector or index with values.\n *\n * @returns {number} index of the largest value (starting from 1).\n *\n */\nexport function maxind(x) {\n\n   if (isvector(x) || isindex(x)) {\n      return maxind(x.v);\n   }\n\n   let outind = 1;\n   let out = x[0]\n   for (let i = 2; i <= x.length; i++) {\n      if (x[i - 1] > out) {\n         outind = i;\n         out = x[i - 1];\n      }\n   }\n\n   return outind;\n}\n\n\n","/*************************************************/\n/*    Misc extra methods for statistics          */\n/*************************************************/\n\nimport { isvector, vector, Index, Vector } from \"../arrays/index.js\";\nimport { prod, quantile } from \"../stat/index.js\";\n\n\n/**\n * Finds index of value in x which is closest to the value a.\n *\n * @param {Array|Vector} x - a vector with values.\n * @param {number} a - a value\n *\n * @returns {number} the index value (starts from 1).\n *\n */\nexport function closestind(x, a) {\n\n   if (isvector(x)) {\n      return closestind(x.v, a);\n   }\n\n   const c = x.reduce((prev, curr) => Math.abs(curr - a) < Math.abs(prev - a) ? curr : prev);\n   return x.indexOf(c) + 1;\n}\n\n\n/**\n * Computes numeric integral for function \"f\" with limits (a, b).\n *\n * @param {function} f - a reference to a function.\n * @param {number} a - lower limit for integration.\n * @param {number} b - upper limit for integration.\n * @param {number} [acc=0.000001] - absolute accuracy.\n * @param {number} [eps=0.00001] - relative accuracy.\n * @param {number[]} oldfs - vector of values needed for recursion.\n *\n * @returns {number} result of integration.\n *\n */\nexport function integrate(f, a, b, acc, eps, oldfs) {\n\n   if (acc === undefined) {\n      acc = 0.000001;\n   }\n\n   if (eps === undefined) {\n      eps = 0.00001\n   }\n\n   if (typeof(a) !== \"number\" || typeof(b) !== \"number\") {\n      throw Error(\"Parameters 'a' and 'b' must be numbers.\");\n   }\n\n   if (b < a) {\n      throw Error(\"Parameter 'b' must be larger 'a'.\");\n   }\n\n   // special case when left limit is minus infinity\n   if (a === -Infinity && b !== Infinity) {\n      return integrate((t) => f(b - (1 - t) / t) / (t ** 2), 0, 1);\n   }\n\n   // special case when right limit is plus infinity\n   if (a !== -Infinity && b === Infinity) {\n      return integrate((t) => f(a + (1 - t) / t) / (t ** 2), 0, 1);\n   }\n\n   // special case when both limits are infinite\n   if (a === -Infinity && b === Infinity) {\n      return integrate((t) => (f((1 - t) / t) + f((t - 1) / t)) / t ** 2, 0, 1);\n   }\n\n   // constants for splitting the integration interval\n   const x = [1/6, 2/6, 4/6, 5/6];\n   const w = [2/6, 1/6, 1/6, 2/6];\n   const v = [1/4, 1/4, 1/4, 1/4];\n   const p = [1, 0, 0, 1];\n\n   let n = x.length, h = b - a;\n   let fs;\n\n   if (oldfs === undefined) {\n      fs = x.map(v => f(a + v * h));\n   } else {\n      fs = new Array(n);\n      for (let k = 0, i = 0; i < n; i++) {\n         fs[i] = p[i] === 1 ? f(a + x[i] * h) : oldfs[k++];\n      }\n   }\n\n   let q4 = 0, q2 = 0;\n   for (let i = 0; i < n; i++) {\n      q4 += w[i] * fs[i] * h;\n      q2 += v[i] * fs[i] * h;\n   }\n\n   if (isNaN(q2) || isNaN(q4)) {\n      throw Error(\"Numerical integration ended up with NaN number.\")\n   }\n\n   let tol = acc + eps * Math.abs(q4);\n   let err = Math.abs((q4 - q2)/3);\n\n   if (err < tol) return q4;\n\n   acc = acc / Math.sqrt(2.);\n   const mid = (a + b) / 2;\n   const left = fs.filter((v, i) => i < n/2);\n   const right = fs.filter((v, i) => i >= n/2);\n\n   const ql = integrate(f, a, mid, eps, acc, left);\n   const qr = integrate(f, mid, b, eps, acc, right);\n\n   return ql + qr;\n}\n\n\n/**\n * Finds outliers in a vector based on inter-quartile range distance.\n *\n * @param {Array|Vector} x - vector with values.\n * @param {number} q1 - first quartile (optional parameter).\n * @param {number} q3 - third quartile (optional parameter).\n *\n * @returns {Vector} vector with outliers or empty vector if none were found.\n *\n */\nexport function getoutliers(x, q1 = undefined, q3 = undefined) {\n\n   if (q1 === undefined) q1 = quantile(x, 0.25);\n   if (q3 === undefined) q3 = quantile(x, 0.75);\n\n   const iqr15 = (q3 - q1) * 1.5;\n   const bl = q1 - iqr15\n   const bu = q3 + iqr15\n\n   return new Vector(x.v.filter(v => v < bl || v > bu));\n}\n\n\n/**\n * Rounds number (or vector of numbers) to given amount of decimals.\n *\n * @param {numbr|Array|Vector} x - a number or a vector with values.\n *\n * @return {number|Array|Vector} a number or a vector with rounded values.\n *\n */\nexport function round(x, n = 0) {\n\n   if (isvector(x)) {\n      return vector(x.v.map(v => round(v, n)));\n   }\n\n   if (Array.isArray(x)) {\n      return x.map(v => round(v, n));\n   }\n\n   return Number.parseFloat(x.toFixed(n));\n}\n\n\n/**\n * Generate combination of all levels of vectors.\n *\n * @param {...} args - a sequence of vectors.\n *\n * @returns {Array} array of arrays with values for each vector.\n *\n */\nexport function expandgrid(...args) {\n\n   const nargs = args.length;\n   const d = args.map(v => v.length);\n   let orep = prod(d);\n\n   let grid = Array(nargs);\n   let repFac = 1;\n\n   for (let i = 0; i < nargs; i++) {\n      const x = isvector(args[i]) ? args[i] : vector(args[i]);\n      const nx = x.length;\n      orep = orep / nx;\n      grid[i] = x.subset(Index.seq(1, nx).repeach(repFac).rep(orep));\n      repFac = repFac * nx;\n   }\n\n   return grid;\n}\n","/* =================================================================== */\n/*    Methods for statistical distributions                            */\n/* =================================================================== */\n\nimport { range } from '../stat/index.js';\nimport { isvector, vector, Vector } from '../arrays/index.js';\nimport { closestind, integrate } from '../misc/index.js';\n\n// threshold to switch between two approximation for chi-square distribution\nconst CHISQ_DOF_THRESHOLD = 30;\n// tolerance for chi-square distribution search\nconst CHISQ_TOL = 0.0000001;\n\n/**\n * Generates 'n' random numbers from a uniform distribution.\n *\n * @param {number} n - amount of numbers to generate.\n * @param {number} [a=0] - smallest value (min) of the population.\n * @param {number} [b=1] - largest value (max) of the population.\n *\n * @returns {Vector} vector with generated random numbers.\n *\n */\nexport function runif(n, a = 0, b = 1) {\n   let out = Vector.zeros(n);\n   for (let i = 0; i < n; i++) {\n      out.v[i] = (a + Math.random() * (b - a));\n   }\n   return out;\n}\n\n\n/**\n * Cumulative distribution function for uniform distribution.\n *\n * @param {number|Vector} x - vector of values or a single value.\n * @param {number} [a=0] - smallest value (min) of the population.\n * @param {number} [b=1] - largest value (max) of the population.\n *\n * @returns {number|Vector} computed probabilities.\n *\n */\nexport function punif(x, a = 0, b = 1) {\n\n   if (isvector(x)) {\n      return x.apply(v => punif(v, a, b));\n   }\n\n   return x < a ? 0 : (x > b ? 1 : (x - a) / (b - a));\n}\n\n\n/**\n * Probability density function for uniform distribution.\n *\n * @param {number|Vector} x - vector of values or a single value.\n * @param {number} [a=0] - smallest value (min) of the population.\n * @param {number} [b=1] - largest value (max) of the population.\n *\n * @returns {number|Vector} computed densities.\n *\n */\nexport function dunif(x, a = 0, b = 1) {\n\n   if (isvector(x)) {\n      return x.apply(v => dunif(v, a, b));\n   }\n\n   return x < a || x > b ? 0 : 1 / (b - a);\n}\n\n\n /**\n * Generates 'n' random numbers from a normal distribution.\n *\n * @param {number} n - amount of numbers to generate.\n * @param {number} [mu=0] - average value of the population.\n * @param {number} [sigma=1] - standard deviation of the population.\n *\n * @returns {Vector} vector with generated random numbers.\n */\nexport function rnorm(n, mu = 0, sigma = 1) {\n\n   let out = Vector.zeros(n);\n   for (let i = 0; i < n; i ++) {\n      const a = Math.sqrt(-2 * Math.log(Math.random()));\n      const b = 2 * Math.PI * Math.random();\n      out.v[i] = (a * Math.sin(b) * sigma + mu);\n   }\n\n   return out;\n}\n\n\n/**\n * Probability density function for normal distribution.\n *\n * @param {number|Vector} x - vector of values of a single value.\n * @param {number} [mu=0] - average value of the population.\n * @param {number} [sigma=1] - standard deviation of the population.\n *\n * @returns {number|Vector} computed densities.\n *\n */\nexport function dnorm(x, mu = 0, sigma = 1) {\n\n   if (isvector(x)) {\n      return x.apply(v => dnorm(v, mu, sigma));\n   }\n\n   const z = (x - mu) / sigma;\n   return Math.exp(-0.5 * z * z) / (Math.sqrt(2 * Math.PI) * sigma);\n}\n\n\n/**\n * Cumulative distribution function for normal distribution.\n *\n * @param {number|Vector} x - vector of values or a single value.\n * @param {number} [mu=0] - average value of the population.\n * @param {number} [sigma=1] - standard deviation of the population.\n *\n * @returns {number|Vector} computed probabilities.\n *\n */\nexport function pnorm(x, mu = 0, sigma = 1) {\n\n   if (isvector(x)) {\n      return x.apply(v => pnorm(v, mu, sigma));\n   }\n\n   const frac = 1 / (Math.sqrt(2) * sigma);\n   return  0.5 * (1 + erf((x - mu) * frac));\n}\n\n\n/**\n * Inverse cumulative distribution function for normal distribution.\n *\n * @param {number|Vector} p - vector of probabilities or a single probability value.\n * @param {number} [mu=0] - average value of the population.\n * @param {number} [sigma=1] - standard deviation of the population.\n *\n * @returns {number|Vector} computed quantiles.\n *\n */\nexport function qnorm(p, mu = 0, sigma = 1) {\n\n   if (isvector(p)) {\n      return p.apply(v => qnorm(v, mu, sigma));\n   }\n\n   if (mu !== 0 || sigma !== 1) {\n      return qnorm(p) * sigma + mu;\n   }\n\n   if (p < 0 || p > 1) {\n      throw Error('Parameter \"p\" must be between 0 and 1.');\n   }\n\n   if (p < 0.0000000001) return -Infinity;\n   if (p > 0.9999999999) return +Infinity;\n\n   const SP1 = 0.425;\n   const SP2 = 5.0;\n   const C1 = 0.180625;\n   const C2 = 1.6;\n\n   const a0 = 3.3871327179;\n   const a1 = 5.0434271938 * 10;\n   const a2 = 1.5929113202 * 100;\n   const a3 = 5.9109374720 * 10;\n   const b1 = 1.7895169469 * 10;\n   const b2 = 7.8757757664 * 10;\n   const b3 = 6.7187563600 * 10;\n\n   const c0 = 1.4234372777;\n   const c1 = 2.7568153900;\n   const c2 = 1.3067284816;\n   const c3 = 1.7023821103 * 0.1;\n   const d1 = 7.3700164250 * 0.1;\n   const d2 = 1.2021132975 * 0.1;\n\n   const e0 = 6.6579051150;\n   const e1 = 3.0812263860;\n   const e2 = 4.2868294337 * 0.1;\n   const e3 = 1.7337203997 * 0.01;\n   const f1 = 2.4197894225 * 0.1;\n   const f2 = 1.2258202635 * 0.01;\n\n   const q = p - 0.5;\n   let r;\n\n   if (Math.abs(q) <= SP1) {\n      r = C1 - q * q;\n      return q * (((a3 * r + a2) * r + a1) *r + a0) / (((b3 * r + b2) * r + b1) * r + 1.0);\n   }\n\n   r = q < 0 ? p : 1 - p;\n   r = Math.sqrt(-Math.log(r));\n   let res;\n\n   if (r <= SP2) {\n      r = r - C2;\n      res = (((c3 * r + c2) * r + c1) * r + c0) / ((d2 * r + d1) * r + 1.0);\n   } else {\n      r = r - SP2;\n      res = (((e3 * r + e2) * r + e1) + e0) / ((f2 * r + f1) * r + 1.0);\n   }\n\n   return q < 0 ? -res : res;\n}\n\n\n/**\n * Probability density function for Student's t-distribution.\n *\n * @param {number|Vector} t - t-value or a vector of t-values.\n * @param {number} dof - degrees of freedom.\n *\n * @returns {number|Vector} computed densities.\n *\n */\nexport function dt(t, dof) {\n\n   if (dof < 0) {\n      throw new Error('Parameter \"dof\" should be a positive number.');\n   }\n\n   if (isvector(t)) {\n      return t.apply(v => dt(v, dof));\n   }\n\n   const pow = -0.5 * (dof + 1);\n   const A = 1 / (Math.sqrt(dof) * beta(0.5, dof/2));\n\n   return (A * Math.pow((1 + t * t / dof), pow));\n}\n\n\n/**\n * Cumulative distribution function for Student's t-distribution.\n *\n * @param {number|Vector} t - t-value or a vector of t-values.\n * @param {number} dof - degrees of freedom.\n *\n * @returns {number|Vector} computed probabilities.\n *\n */\nexport function pt(t, dof) {\n\n   if (dof === undefined || dof === null || dof < 1) {\n      throw Error('Parameter \"dof\" (degrees of freedom) must be an integer number >= 1.');\n   }\n\n   if (isvector(t)) {\n      return t.apply(v => pt(v, dof));\n   }\n\n   // since distribution in symmetric we can use only left tail\n   if (t === 0) return 0.5;\n   if (t === -Infinity) return 0;\n   if (t === Infinity) return 1;\n   if (t > 0) return (1 - pt(-t, dof));\n\n   return integrate((x) => dt(x, dof), -Infinity, t);\n}\n\n\n/**\n * Inverse cumulative distribution (quantile) function for Student's t-distribution.\n *\n * @param {number|Vector} p - probability or vector with probabilities.\n * @param {number} dof - degrees of freedom.\n *\n * @returns {number|Vector} computed quantiles.\n *\n */\nexport function qt(p, dof) {\n\n   if (dof === undefined || dof === null || dof < 1) {\n      throw Error('Parameter \"dof\" (degrees of freedom) must be an integer number >= 1.');\n   }\n\n   if (p < 0 || p > 1) {\n      throw Error('Parameter \"p\" must be between 0 and 1.');\n   }\n\n   if (isvector(p)) {\n      return p.apply(v => qt(v, dof));\n   }\n\n   if (p < 0.0000000001) return -Infinity;\n   if (p > 0.9999999999) return +Infinity;\n\n\n   // simple cases — exact solutions\n   if (dof === 1) {\n      return Math.tan(Math.PI * (p - 0.5));\n   }\n\n   if (dof === 2) {\n      return 2 * (p - 0.5) * Math.sqrt(2 / (4 * p * (1 - p)));\n   }\n\n   // approximation\n\n   let sign = -1;\n   if (p >= 0.5){\n      sign = +1 ;\n      p = 2 * (1 - p);\n   } else {\n      sign = -1;\n      p = 2 * p;\n   }\n\n   const a = 1.0 / (dof - 0.5);\n   const b = 48.0 / (a ** 2);\n   let c = ((20700 * a / b - 98) * a - 16) * a + 96.36;\n   const d = ((94.5 / (b + c) - 3.0)/b + 1.0) * Math.sqrt(a * Math.PI / 2) * dof;\n\n   let x = d * p;\n   let y = x ** (2.0/dof);\n\n   if (y > 0.05 + a) {\n\n      // asymptotic inverse expansion about normal\n      x = qnorm(p * 0.5);\n      y = x * x;\n\n      if (dof < 5) {\n         c = c + 0.3 * (dof - 4.5) * (x + 0.6);\n      }\n\n      c = (((0.05 * d * x - 5.0) * x - 7.0) * x - 2.0) * x + b + c;\n      y = (((((0.4 * y + 6.3) * y + 36.0) * y + 94.5) / c - y - 3.0)/b + 1.0) * x;\n      y = a * (y ** 2);\n      y = y > 0.002 ? Math.exp(y) - 1.0 : 0.5 * (y ** 2) + y;\n   } else {\n      y = ((1.0 / (((dof + 6.0)/(dof * y) - 0.089 * d - 0.822) * (dof + 2.0) * 3.0) + 0.5/(dof + 4.0)) * y - 1.0) *\n         (dof + 1.0)/(dof + 2.0) + 1.0/y;\n   }\n\n   return sign * Math.sqrt(dof * y);\n}\n\n\n/**\n * Probability density function for F-distribution.\n *\n * @param {number|Vector} F - F-value or a vector of t-values\n * @param {number} d1 - degrees of freedom.\n * @param {number} d2 - degrees of freedom.\n *\n * @returns {number|Vector} computed densities.\n *\n */\nexport function df(F, d1, d2) {\n\n   if (F < 0 || d1 < 0 || d2 < 0) {\n      throw new Error('All 3 parameters must be positive.');\n   }\n\n   if (d2 <= d1) {\n      throw new Error('Parameter \"d1\" must be larger \"d2\".');\n   }\n\n   if (isvector(F)) {\n      return F.apply(v => df(v, d1, d2));\n   }\n\n   return Math.sqrt( ( Math.pow(d1 * F, d1) * Math.pow(d2, d2)) / Math.pow(d1 * F + d2, d1 + d2)) / (F * beta(d1/2, d2/2))\n}\n\n\n/**\n * Cumulative distribution function for F-distribution.\n *\n * @param {number|Vector} F - F-value or a vector of t-values.\n * @param {number} d1 - degrees of freedom.\n * @param {number} d2 - degrees of freedom.\n *\n * @returns {number|Vector} computed probabilities.\n *\n */\nexport function pf(F, d1, d2) {\n\n   if (F < 0 || d1 < 0 || d2 < 0) {\n      throw new Error('All 3 parameters must be positive.');\n   }\n\n   if (isvector(F)) {\n      return F.apply(v => pf(v, d1, d2));\n   }\n\n   return ibeta(d1 * F / (d1 * F + d2), d1/2, d2/2)\n}\n\n\n/**\n * Cumulative distribution function for chi-square distribution.\n *\n * @param {number|Vector|Array} x - chi-square value.\n * @param {number} dof - degrees of freedom.\n *\n * @description if DoF is relatively small (< 30) the method computes probabilities via\n * approximation of lower incomplete gamma function, `igamma()`, and gamma function, `gamma()`.\n * If the DoF is larger than 30 it uses the a modified power series approximation\n * (doi:10.1016/j.csda.2004.04.001) and normal distribution.\n *\n * @returns {number|Vector} computed probabilities.\n *\n */\nexport function pchisq(x, dof) {\n\n   if (Array.isArray(x)) {\n      return pchisq(vector(x), dof);\n   }\n\n   const mu = 5/6 - 1 / (9 * dof) - 7 / (648 * dof * dof) + 25 / (2187 * dof * dof * dof);\n   const sigma2 = 1 / (18 * dof) + 1 / (162 * dof * dof) - 37 / (1164 * dof * dof * dof);\n   const sigma = Math.sqrt(sigma2);\n\n   // works well for large dof\n   function F2(x) {\n      if (x === 0) return 0;\n      if (dof === 0) return 1;\n      if (dof > 100 && x > dof * 2) return 1;\n      if (dof > 50 && x > dof * 3) return 1;\n      if (dof > 10 && x > dof * 5) return 1;\n      if (dof > 5 && x > dof * 8) return 1;\n      if (x > dof * 30) return 1;\n      const l0 = x / dof;\n      const l = Math.pow(l0, 1/6) - 0.5 * Math.pow(l0, 1/3) + (1/3) * Math.pow(l0, 1/2);\n      return pnorm(l, mu, sigma);\n   }\n\n   // works well for small dof\n   function F1(x) {\n      if (x === 0) return 0;\n      if (dof === 0) return 1;\n      if (dof > 100 && x > dof * 2) return 1;\n      if (dof > 50 && x > dof * 3) return 1;\n      if (dof > 10 && x > dof * 5) return 1;\n      if (dof > 5 && x > dof * 8) return 1;\n      if (x > dof * 30) return 1;\n      return igamma(x/2, dof/2) / gamma(dof/2)\n   }\n\n   const F = dof > CHISQ_DOF_THRESHOLD ? F2 : F1;\n   return isvector(x) ? x.apply(F) : F(x)\n}\n\n\n/**\n * Inverse cumulative distribution (quantile) function for chi-square distribution.\n *\n * @param {number|Vector|Array} p - probability or vector/array with probabilities.\n * @param {number} dof - degrees of freedom.\n *\n * @description if DoF is relatively small (< 30) the method computes quantiles by sequential\n * improving, splitting possible quantile range into intervals, computing probabilities for each\n * element of the interval using `pchisq()`, then find the quantile which has the closest\n * probability value, make a new split around it and so on until the probability of the\n * currently selected quintile is close to the desired one. For large DoF (>30) the it uses\n * the a modified power series approximation (doi:10.1016/j.csda.2004.04.001) and\n * normal distribution.\n *\n * @returns {number|Vector} computed quantiles.\n *\n */\nexport function qchisq(p, dof) {\n\n   if (Array.isArray(p)) {\n      return qchisq(vector(p), dof);\n   }\n\n   // compute parameters of normal distribution for power approximation\n   const mu = 5/6 - 1 / (9 * dof) - 7 / (648 * dof * dof) + 25 / (2187 * dof * dof * dof);\n   const sigma2 = 1 / (18 * dof) + 1 / (162 * dof * dof) - 37 / (1164 * dof * dof * dof);\n   const sigma = Math.sqrt(sigma2);\n\n   // compute quantile for one probability value using power approximations\n   // and inverse solution\n   function F2(x) {\n      if (x === 0) return 0;\n      if (x === 0) return Inf;\n      if (dof === 0) return 0;\n      const l = qnorm(x, mu, sigma);\n      const o = Math.pow(Math.sqrt(36 * l * l - 30 * l + 13)/4 + (3 * l - 3/2)/2 + 1/8, 1/3);\n      return Math.pow(o - 3 / (4 * o) + 0.5, 6) * dof;\n   }\n\n   // compute quantile using sequential splits of quantile range\n   function F1(x) {\n      if (x === 0) return 0;\n      if (x === 0) return Inf;\n      if (dof === 0) return 0;\n\n      // initial split (start, end, and delta)\n      let qs = 0;\n      let qe = CHISQ_DOF_THRESHOLD * 10;\n      let qd = qe / 30;\n\n      // loop for sequential splits\n      for (let i = 0; i < 30; i++) {\n\n         // compute vector of quantiles and corresponding probabilities\n         const q = Vector.seq(qs, qe, qd);\n         const p = pchisq(q, dof);\n\n         // find index of quantile which has probability closest to x\n         const ind = closestind(p, x) - 1;\n\n         // if the probability is close enough to the desired one return the quantile\n         if (Math.abs(p.v[ind] - x) < CHISQ_TOL) return q.v[ind];\n\n         // if not make a new split by taking left and right neighbors quantiles\n         qs = ind == 0 ? q.v[0] : q.v[ind - 1];\n         qe = ind == q.v.length - 1? q.v[ind] : q.v[ind + 1];\n\n         // if the boundaries are the same stop\n         if (qs == qe) return qs;\n\n         // compute delta for new boundaries\n         qd = (qe - qs) / 30;\n      }\n\n      // if the loop did not converge we simply return the middle quantile\n      return (qe + qs) / 2;\n   }\n\n   const F = dof > CHISQ_DOF_THRESHOLD ? F2 : F1;\n   return isvector(p) ? p.apply(F) : F(p)\n}\n\n\n/**\n * Incomplete Betta function (approximation via numeric integration).\n *\n * @param {number} x - first argument.\n * @param {number} a - second argument.\n * @param {number} b - third argument.\n *\n * @returns {number} value of the function.\n *\n */\nexport function ibeta(x, a, b) {\n\n   if (x === 0) return 0;\n   if (x === 1) return 1;\n   if (b === 1) return x ** a;\n   if (a === 1) return (1 - (1 - x)**b);\n\n   return integrate((t) => t ** (a - 1) * (1 - t) ** (b - 1), 0, x) / beta(a, b);\n}\n\n\n/**\n * Gamma function (approximation).\n *\n * @param {number|Vector} z - argument (one value or a vector).\n *\n * @returns {number} value of the Gamma function.\n *\n */\nexport function gamma(z) {\n\n   if (isvector(z)) {\n      return z.apply(gamma);\n   }\n\n   if (z <= 0) {\n      throw new Error('gamma: the function only works with arguments > 0.');\n   }\n\n   // coefficients\n   const p = [\n        676.5203681218851,\n      -1259.1392167224028,\n        771.32342877765313,\n       -176.61502916214059,\n         12.507343278686905,\n         -0.13857109526572012,\n          9.9843695780195716e-6,\n          1.5056327351493116e-7\n    ];\n\n   if (z < 0.5) {\n      return Math.PI / (Math.sin(Math.PI * z) + gamma(1 - z));\n   }\n\n   z = z - 1;\n   let x = 0.99999999999980993;\n\n   for (let i = 0; i < p.length; i++) {\n      x = x + p[i] / (z + i + 1);\n   }\n\n   const t = z + p.length - 0.5;\n   return Math.sqrt(2 * Math.PI) * Math.pow(t, z + 0.5) * Math.exp(-t) * x;\n}\n\n\n\n/**\n * Lower incomplete gamma function (approximation)\n *\n * @param {number} x - first argument (one value).\n * @param {number} a - second argument (one value).\n *\n * @returns {number} value of the lower incomplete gamma function.\n *\n */\nexport function igamma(x, a) {\n\n   const epsilon = 1e-18; // Desired accuracy\n   const maxIterations = 10000; // Maximum number of iterations\n\n   let sum = 0;\n\n   for (let k = 0; k < maxIterations; k++) {\n      const s = Math.pow(x, k) / gamma(a + k + 1);\n      if (isNaN(s) || s < epsilon) break;\n      sum += s\n   }\n\n   return Math.pow(x, a) * gamma(a) * Math.exp(-x) * sum;\n}\n\n\n\n/**\n * Beta function (approximation).\n *\n * @param {number} x - first argument (one value).\n * @param {number} y - second argument (one value).\n *\n * @returns {number} value of the Beta function.\n *\n */\nexport function beta(x, y) {\n\n   if (y > 100) {\n      // for large y we use slower integrate version\n      return integrate((u) => Math.pow(u, x - 1) / Math.pow(1 + u, x + y), 0, Infinity)\n   }\n\n   return gamma(x) * gamma(y) / gamma(x + y);\n}\n\n\n/**\n * Error function for normal distribution.\n *\n * @param {number} x - a number.\n *\n * @returns {number} value for erf.\n *\n */\nexport function erf(x) {\n\n  const sign = (x >= 0) ? 1 : -1;\n  x = Math.abs(x);\n\n  // constants\n  const a1 =  0.254829592;\n  const a2 = -0.284496736;\n  const a3 =  1.421413741;\n  const a4 = -1.453152027;\n  const a5 =  1.061405429;\n  const p  =  0.3275911;\n\n  // approximation\n  const t = 1.0 / (1.0 + p * x);\n  const y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n  return sign * y;\n}\n\n\n","/************************************************************/\n/*    Methods for computing matrix decompositions           */\n/************************************************************/\n\nimport { ssq } from '../stat/index.js';\nimport { crossprod, Vector, Matrix, Index } from '../arrays/index.js';\n\n\n/**\n * Randomized SVD decomposition.\n *\n * @param {Matrix} X - matrix to decompose.\n * @param {number} [ncomp] - number of components.\n * @param {number} [pa=1] - oversampling factor (ncomp * pa + pb).\n * @param {number} [pb=10] - oversampling increment (ncomp * pa + pb).\n * @param {number} [its=3] - number of iterations\n *\n * @returns {JSON} JSON with three fields, 's' - vector with singular values,\n * 'U', 'V' - matrices with left and right singular vectors.\n *\n */\nexport function rsvd(X, ncomp, pa, pb, its) {\n\n   const m = X.nrows;\n   const n = X.ncols;\n\n   if (its === undefined) {\n      its = 3;\n   }\n\n   if (pb === undefined) {\n      pb = 5;\n   }\n\n   if (pa === undefined) {\n      pa = 1;\n   }\n\n   if (its < 1 || its > 10) {\n      throw new Error('rsvd: wrong value for parameter \"its\" (must be between 1 and 10).');\n   }\n\n   if (pa < 1 || pa > 5) {\n      throw new Error('rsvd: wrong value for parameter \"pa\" (must be between 1 and 5).');\n   }\n\n   if (pb < 1 || pb > 100) {\n      throw new Error('rsvd: wrong value for parameter \"pb\" (must be between 1 and 100).');\n   }\n\n\n   if (ncomp === undefined) {\n      ncomp = Math.round(Math.min(m - 1, n) / 1.5);\n   }\n\n   if (m < n) {\n      const res = rsvd(X.t(), ncomp, pa, pb, its);\n      return {s: res.s, V: res.U, U: res.V}\n   }\n\n   // the more the better but slower\n   const l = Math.round(pa * ncomp + pb);\n   let Q = X.dot(Matrix.rand(n, l, -1, 1));\n\n   for (let it = 1; it <= its; it++) {\n      Q = lu(crossprod(X, Q)).L;\n      Q = it < its ? lu(X.dot(Q)).L : qr(X.dot(Q)).Q;\n   }\n\n   const B = crossprod(Q, X);\n   const res = svd(B, ncomp);\n   return {s: res.s, V: res.V, U: Q.dot(res.U)};\n}\n\n/**\n * QR decomposition\n *\n * @param {Matrix} X - matrix to decompose.\n *\n * @returns {JSON} JSON with two matrices, Q and R, so X = QR.\n *\n */\nexport function qr(X) {\n\n   const m = X.nrows;\n   const n = X.ncols;\n\n   if (m < n) {\n      const res = qr(X.subset([], Index.seq(1, m)));\n      return {Q:res.Q, R:crossprod(res.Q, X)}\n   }\n\n   let Q = Matrix.eye(m);\n   let Rt = X.t();\n\n   for (let j = 1; j <= n; j++) {\n      for (let i = m; i >= (j + 1); i--) {\n\n         const r = Rt.v.subarray((i - 2) * n, i * n);\n         const q =  Q.v.subarray((i - 2) * m, i * m);\n         const rc = r.slice();\n         const qc = q.slice();\n\n         const [c, s, temp] = rot(rc[j - 1], rc[j - 1 + n]);\n\n         // apply transformation to columns i and i - 1 of matrix Rt\n         for (let k = 0; k < n; k++) {\n\n            r[k]     = rc[k] *  c + rc[k + n] * s;\n            r[k + n] = rc[k] * -s + rc[k + n] * c;\n\n            q[k]     = qc[k] *  c + qc[k + m] * s;\n            q[k + m] = qc[k] * -s + qc[k + m] * c;\n         }\n\n         for (let k = n; k < m; k++) {\n            q[k]     = qc[k] *  c + qc[k + m] * s;\n            q[k + m] = qc[k] * -s + qc[k + m] * c;\n         }\n      }\n   }\n\n   const ind = Index.seq(1, n);\n   return {\n      Q: m === n ? Q : Q.subset([], ind),\n      R: m === n ? Rt.t() : Rt.subset([], ind).t()\n   }\n}\n\n/**\n * LU decomposition.\n *\n * @param {Matrix} X - matrix to decompose.\n *\n * @returns {JSON} JSON with two matrices, L and U, so X = LU.\n *\n */\nexport function lu(X) {\n\n   const nr = X.nrows;\n   const nc = X.ncols\n   const n = Math.min(nr, nc)\n\n   const Lv = new Float64Array(nr * nc);\n   const Uv = new Float64Array(nc * nc);\n   const Xv = X.v.slice();\n\n   const s = Math.round(Math.pow(n, 0.5285425));\n   let z = 1;\n\n   for (let c = 1; c <= n; c++) {\n\n      if (c == z + s) {\n         const nro = nr - c + 1;\n         const nco = nc - c + 1;\n         const ni = c - z;\n         const Sv = new Float64Array(nro * nco);\n\n         for (let i = 0; i < nro; i++) {\n            for (let j = 0; j < nco; j++) {\n               let s = 0;\n               for (let k = 0; k < ni; k++) {\n                  s += Lv[(z - 1 + k) * nr + (c - 1) + i] * Uv[(c - 1 + j) * nc + (z - 1 + k)];\n               }\n               Sv[j * nro + i] = s;\n            }\n         }\n\n         for (let i = c; i <= nr; i++) {\n            for (let j = c; j <= nc; j++) {\n               Xv[(j - 1) * nr + (i - 1)] = Xv[(j - 1) * nr + (i - 1)] - Sv[(j - c) * nro + (i - c)];\n            }\n         }\n\n         z = c;\n      }\n\n      for (let i = c; i <= nr; i++) {\n         let acc = Xv[(c - 1) * nr + (i - 1)];\n         for (let k = z; k <= c - 1; k++) {\n            acc = acc - Lv[(k - 1) * nr + (i - 1)] * Uv[(c - 1) * nc + (k - 1)];\n         }\n         Lv[(c - 1) * nr + (i - 1)] = acc;\n      }\n\n      for (let i = c; i <= nc; i++) {\n         let acc = Xv[(i - 1) * nr + (c - 1)];\n         for (let k = z; k <= c - 1; k++) {\n            acc = acc - Lv[(k - 1) * nr + (c - 1)] * Uv[(i - 1) * nc + (k - 1)];\n         }\n         const l = Lv[(c - 1) * nr + (c - 1)];\n         Uv[(i - 1) * nc + (c - 1)] = (l == 0 ? acc : acc / l);\n      }\n   }\n\n   return {L: new Matrix(Lv, nr, nc), U: new Matrix(Uv, nc, nc)}\n}\n\n\n/**\n * Singular value decomposition\n *\n * @param {Matrix} X - matrix to decompose.\n * @param {number} [ncomp] - number of components.\n *\n * @returns {JSON} JSON with three fields, 's' - vector with singular values,\n * 'U', 'V' - matrices with left and right singular vectors.\n *\n */\nexport function svd(X, ncomp) {\n\n   let d, e, bV, bU, m, n, transposed;\n\n   if (X.nrows < X.ncols) {\n      [d, e, bV, bU] = bidiag(X.t());\n      m = X.ncols;\n      n = X.nrows;\n      transposed = true;\n   } else {\n      [d, e, bV, bU] = bidiag(X);\n      m = X.nrows;\n      n = X.ncols;\n      transposed = false;\n   }\n\n   if (!ncomp) {\n      ncomp = Math.min(m, n);\n   }\n\n   const maxit = 500 * n * n;\n   const thresh = Math.pow(10, -64);\n   let Gt = Matrix.eye(n);\n   let P = Matrix.eye(n);\n\n   for (let it = 0; it < maxit; it++) {\n\n      // find first nonzero element in e from bottom\n      let iU = 0;\n      for (let i = n - 1; i >= 1; i--) {\n         if (Math.abs(e.v[i - 1]) > thresh) {\n            iU = i\n            break;\n         }\n      }\n\n      // find first nonzero element in e from top\n      let iL = iU + 1;\n      for (let i = 1; i <= n - 1; i++) {\n         if (Math.abs(e.v[i - 1]) > thresh) {\n            iL = i;\n            break;\n         }\n      }\n\n      // check the convergence and return result\n      if ((iU == iL && Math.abs(e[iU - 1]) <= thresh) || (iU < iL)) {\n\n         // compute final results:\n         // V = bU * P\n         // U = bV * Gt\n         // and correct sign of singular values and columns of V\n\n         const s = Vector.zeros(ncomp);\n         const U = Matrix.zeros(X.nrows, ncomp);\n         const V = Matrix.zeros(X.ncols, ncomp);\n\n         for (let k = 1; k <= ncomp; k++) {\n            const sign = Math.sign(d.v[k - 1]);\n            s.v[k - 1] = Math.abs(d.v[k - 1]);\n\n            let uk, vk;\n            if (transposed) {\n               uk = V.getcolref(k);\n               vk = U.getcolref(k);\n            } else {\n               uk = U.getcolref(k);\n               vk = V.getcolref(k);\n            }\n\n            const pk = P.getcolref(k);\n            const gtk = Gt.getcolref(k);\n\n            for (let i = 0; i < n; i++) {\n               const pki = pk[i];\n               const gtki = gtk[i] * sign;\n\n               const bur = bU.getcolref(i + 1);\n               const vur = bV.getcolref(i + 1);\n\n               for (let r = 0; r < n; r++) {\n                  uk[r] += bur[r] * pki;\n                  vk[r] += vur[r] * gtki;\n               }\n               for (let r = n; r < m; r++) {\n                  uk[r] += bur[r] * pki;\n               }\n            }\n         }\n\n         return {s: s, U: U, V: V};\n      }\n\n      // re-sweep\n      const cstart = iL - 1;\n      const cend = iU + 1;\n      const clen = iU - iL + 2;\n      const [rd, re, rG, rPt] = vsweep(d.v.subarray(cstart, cend), e.v.subarray(cstart, cend - 1));\n\n      // replace elements of d and e\n      d.v.set(rd, cstart);\n      e.v.set(re, cstart);\n\n      // now we need to compute:\n      // G = rG' * G = (G' * rG)' -> this should be done only fo selected columns in G\n      // P =            P  * rP'  -> only for selected columns in P\n\n      // get local copy of the \"clen\" columns from G' and P starting from column \"cstart\"\n      const lgt = Gt.v.slice(cstart * n, cstart * n + clen * n);\n      const lp = P.v.slice(cstart * n, cstart * n + clen * n);\n\n      // compute dot(lG', rG) and save back to G'\n      // compute dot(P, rP') and save back to P\n      for (let c = 0; c < clen; c++) {\n\n         // get pointers to column \"c\" (c from \"cstart\" to \"cend\") of Gt and P - to save the results\n         const gtc = Gt.getcolref(c + cstart + 1);  // nc x 1\n         const pc = P.getcolref(c + cstart + 1);    // nc x 1\n\n         // get pointers to the columns of rG and rPt\n         const rgc = rG.getcolref(c + 1);           // clen x 1\n         const rptc = rPt.getcolref(c + 1);          // clen x 1\n\n         // copmpute and save the dot products\n         for (let r = 0; r < n; r++) {\n            // row \"r\" of lGt (nc x clen) times column \"c\" of rG (clen x 1)\n            // row of lP times column of rPt\n            let gtcr = 0;\n            let pcr = 0;\n            for (let i = 0; i < clen; i++) {\n               gtcr += lgt[i * n + r] * rgc[i];\n               pcr += lp[i * n + r] * rptc[i];\n            }\n            gtc[r] = gtcr;\n            pc[r] = pcr;\n         }\n      }\n\n\n      // get local copy of selected columns from G' and P\n      /*\n      const lGt = Matrix.zeros(n, l);\n      const lP = Matrix.zeros(n, l)\n      for (let c = iL; c <= iU + 1; c++) {\n         lGt.v.set(Gt.v.subarray((c - 1) * n, c * n), (c - iL) * n);\n         lP.v.set(P.v.subarray((c - 1) * n, c * n), (c - iL) * n);\n      }\n\n      // compute dot(lG', rG) and save back to G\n      // compute dot(P, rP') and save back to P\n      for (let c = 1; c <= l; c++) {\n         const newgc = lGt.dot(new Vector(rG.getcolref(c)));\n         const newpc = lP.dot(new Vector(rPt.getcolref(c)));\n         Gt.v.set(newgc.v, (c - 1 + iL - 1) * n);\n         P.v.set(newpc.v, (c - 1 + iL - 1) * n);\n      }\n      */\n   }\n\n   throw Error(\"svd: can not converge.\")\n}\n\n\n/**\n * Applies givens rotations to diagonal elements of bidiagonalized matrix.\n *\n * @param {Float64Array} d - vector with main diagonal elements.\n * @param {Float64Array} e - vector with diagonal elements on top of main diagonal.\n *\n * @returns {Array} array with vectors 'd' and 'e' after rotation as well as right\n * transformation matrices G and P'.\n *\n */\nexport function vsweep(d, e) {\n\n   const n = d.length;\n\n   let cold = 1;\n   let sold = 1;\n\n   let c = 1;\n   let s = 0;\n   let r = 0;\n\n   let G = Matrix.eye(n);\n   let Pt = Matrix.eye(n);\n\n   for (let k = 1; k <= (n - 1); k++) {\n\n      [c, s, r] = rot(c * d[k - 1], e[k - 1]);\n\n      // get two columns from G and rotate their values\n      const gk = G.v.subarray((k - 1) * n, (k + 1) * n);\n      const gkc = gk.slice();\n\n      for (let i = 0; i < n; i++) {\n         gk[i]     =  gkc[i] * c + gkc[i + n] * s;\n         gk[i + n] = -gkc[i] * s + gkc[i + n] * c;\n      }\n\n      if (k != 1) {\n         e[k - 2] = r * sold;\n      }\n\n      [cold, sold, r] = rot(cold * r, d[k] * s);\n      d[k - 1] = r;\n\n      // get two columns from Pt and rotate their values\n      const ptk = Pt.v.subarray((k - 1) * n, (k + 1) * n);\n      const ptkc = ptk.slice();\n\n      for (let i = 0; i < n; i++) {\n         ptk[i]     =  ptkc[i] * cold + ptkc[i + n] * sold;\n         ptk[i + n] = -ptkc[i] * sold + ptkc[i + n] * cold;\n      }\n\n   }\n\n   const h = c * d[n - 1];\n   e[n - 2] = h * sold;\n   d[n - 1] = h * cold;\n\n   return [d, e, G, Pt];\n}\n\n\n/**\n * Generate c, s, r values for Givens rotations, so [c s; -s c][f; g] = [r; 0].\n *\n * @param {number} f - first element of vector.\n * @param {number} g - second element of vector.\n *\n * @return array with values [c, s, r].\n *\n */\nexport function rot(f, g) {\n\n   if (f == 0) {\n      return [0, 1, g];\n   }\n\n   if (Math.abs(f) > Math.abs(g)) {\n      const t = g / f;\n      const t1 = Math.sqrt(1 + t * t);\n      const c = 1 / t1\n      return [c, t * c, f * t1];\n   }\n\n   const t = f / g;\n   const t1 = Math.sqrt(1 + t * t)\n   const s = 1 / t1\n   return [t * s, s, g * t1];\n}\n\n\n/**\n * Golub-Reinsch bidiagonalization of matrix A\n *\n * @param {Matrix} A - matrix with values.\n *\n * @returns {Array} array with three matrices [B, V, U].\n *\n */\nexport function bidiag(A) {\n\n   const m = A.nrows;\n   const n = A.ncols;\n\n   if (m < n) {\n      throw Error(\"bidiag: number of rows in A must not be smaller number of columns.\");\n   }\n\n   let Ut = Matrix.eye(m);\n   let V = Matrix.eye(n);\n   let B = A.copy();\n\n  for (let k = 1; k <= (m > n ? n : n - 1); k++) {\n   // for (let k = 1; k <= 1; k++) {\n      const mk = m - k + 1;\n\n      // compute:\n      // B  = H * B\n      // U' = H' * U';\n      const H1 = householder(B.getcolref(k), k);\n\n      for (let c = 1; c <= n; c++) {\n\n         // get c-th column of B (starting from (k-1) row) and make a copy\n         const bc = B.v.subarray((c - 1) * m + k - 1, c * m)\n         const bcc = bc.slice();\n\n         // get c-th column of U' (starting from (k-1) row) and make a copy\n         const utc = Ut.v.subarray((c - 1) * m + k - 1, c * m)\n         const utcc = utc.slice();\n\n         for (let r = k; r <= m; r++) {\n            // because H is symmetric we take column instead of row\n            const hr = H1.getcolref(r - k + 1);\n            let sb = 0;\n            let sut = 0;\n            for (let i = 0; i < mk; i++) {\n               sb += hr[i] * bcc[i];\n               sut += hr[i] * utcc[i]\n            }\n            bc[r - k] = sb;\n            utc[r - k] = sut;\n         }\n      }\n\n\n      for (let c = n + 1; c <= m; c++) {\n\n         // get c-th column of U' and make a copy\n         const utc = Ut.v.subarray((c - 1) * m + k - 1, c * m)\n         const utcc = utc.slice();\n\n         for (let r = k; r <= m; r++) {\n            const hr = H1.getcolref(r - k + 1);\n            let sut = 0;\n            for (let i = 0; i < mk; i++) {\n               sut += hr[i] * utcc[i];\n            }\n            utc[r - k] = sut;\n         }\n      }\n\n      if (k < n - 1) {\n\n         // compute:\n         // B = B * H'\n         // V = V * H\n         const H2 = householder(B.getrow(k).v, k + 1);\n\n         // we need to process columns from k + 1, so make a subset from the start\n         const Bvk = B.v.subarray(k * m);\n         const Vvk = V.v.subarray(k * n);\n\n         let br = new Float64Array(n - k)\n         let vr = new Float64Array(n - k)\n\n         // process first n rows for both B and V\n         for (let r = 1; r <= n; r++) {\n\n            // get elements from r-th row\n            for (let i = 0; i < n - k; i++) {\n               br[i] = Bvk[i * m + r - 1];\n               vr[i] = Vvk[i * n + r - 1];\n            }\n\n            for (let c = k + 1; c <= n; c++) {\n               const hc = H2.getcolref(c - k);\n               let sb = 0;\n               let sv = 0;\n               for (let i = 0; i < H2.nrows; i++) {\n                  sb += br[i] * hc[i];\n                  sv += vr[i] * hc[i];\n               }\n               Bvk[(c - k - 1) * m + (r - 1)] = sb;\n               Vvk[(c - k - 1) * n + (r - 1)] = sv\n            }\n         }\n\n         // process rows from (n+1) to m for B only\n         for (let r = n + 1; r <= m; r++) {\n\n            // get elements from r-th row\n            for (let i = 0; i < n - k; i++) {\n               br[i] = Bvk[i * m + r - 1];\n            }\n\n            for (let c = k + 1; c <= n; c++) {\n               const hc = H2.getcolref(c - k);\n               let sb = 0;\n               for (let i = 0; i < H2.nrows; i++) {\n                  sb += br[i] * hc[i];\n               }\n               Bvk[(c - k - 1) * m + (r - 1)] = sb;\n            }\n         }\n      }\n   }\n\n   const d = Vector.zeros(n);\n   const e = Vector.zeros(n - 1);\n   for (let i = 0; i < n - 1; i++) {\n      d.v[i] = B.v[i * m + i];\n      e.v[i] = B.v[(i + 1) * m + i];\n   }\n   d.v[n - 1] = B.v[(n - 1) * m + (n - 1)];\n\n   return [d, e, V, Ut.t()];\n}\n\n\n/**\n * Compute elements of Householder transformation as a matrix.\n *\n * @param {Float64Array} b - array with diagonal values.\n * @param {number} k - position to start with.\n *\n * @returns {Matrix} matrix with transformation values.\n *\n */\nexport function householder(b, k) {\n\n   // get vector with values\n   const h = householderv(b, k);\n   const n = h.length;\n   // compute matrix as outer product of the vector\n   const H = Matrix.zeros(n);\n   for (let c = 0; c < n; c++) {\n      const hc = H.getcolref(c + 1);\n      for (let r = 0; r < n; r++) {\n         hc[r] = 1 * (r == c) - 2 * h[r] * h[c];\n      }\n   }\n\n   return H;\n}\n\n\n/**\n * Compute elements of Householder transformation as a vector.\n *\n * @param {Float64Array} b - array with diagonal values.\n * @param {number} k - position to start with.\n *\n * @returns {Float64Array} vector with transformation values.\n *\n */\nexport function householderv(b, k) {\n\n   const n = b.length;\n\n   if (k >= n) {\n      throw Error(\"householder: parameter 'k' must be smaller than length of vector 'b'.\")\n   }\n\n   const hlen = n - k + 1;\n   const h = b.slice(k - 1);\n   // to avoid computing norm2 twice we will\n   // compute it based on the first norm\n   const hssq = ssq(h);\n   const hn2 = Math.sqrt(hssq);\n   const s = Math.sign(h[0]);\n   const a = h[0];\n\n   // change first value in the vector\n   h[0] = a - s * hn2;\n\n   // recompute the norm\n   const hn2a = Math.sqrt(2 * hssq - 2 * s * a * hn2);\n\n   // if norm is zero return vector as is\n   if (hn2a < Number.EPSILON) return h\n\n   // normalize vector and return\n   for (let i = 0; i < hlen; i++) {\n      h[i] /=  hn2a;\n   }\n   return h;\n}\n\n\n\n\n\n","/* =================================================================== */\n/*    Methods for Arrays (vectors, matrices, indices and factors, )    */\n/* =================================================================== */\n\nimport { min, max, prod } from '../stat/index.js';\nimport { rnorm, runif } from '../distributions/index.js';\nimport { qr } from '../decomp/index.js';\n\nexport function isnumber(x) {\n   return typeof(x) === 'number';\n}\n\n\n/**************************************************/\n/*    Non-class methods for Vectors and Matrix    */\n/**************************************************/\n\n/**\n * Compute XY' product of two matrices.\n *\n * @param {Matrix} X - a matrix.\n * @param {Matrix} Y - a matrix.\n *\n * @returns {Matrix} result of the product.\n *\n */\nexport function tcrossprod(X, Y) {\n\n   if (Y === undefined) {\n      Y = X;\n   }\n\n   const nrx = X.nrows;\n   const ncx = X.ncols;\n\n   const nry = Y.nrows;\n   const ncy = Y.ncols;\n\n   // create vector for the product\n   const nrows = nrx;\n   const ncols = nry;\n   const ninner = ncx;\n   const out = new Float64Array(nrows * ncols);\n\n   for (let i = 0; i < ninner; i++) {\n      const xr = X.v.subarray(i * nrx, (i + 1) * nrx);\n      const yc = Y.v.subarray(i * nry, (i + 1) * nry);\n\n      for (let c = 0; c < ncols; c++) {\n         const outc = out.subarray(c * nrows, (c + 1) * nrows);\n         for (let r = 0; r < nrows; r++) {\n            outc[r] += xr[r] * yc[c];\n         }\n      }\n   }\n\n   return new Matrix(out, nrows, ncols);\n\n}\n\n\n/**\n * Compute X'Y product of two matrices or a vector and a matrix.\n *\n * @param {Matrix|Vector} X - a matrix or a vector.\n * @param {Matrix} Y - a matrix.\n *\n * @returns {Matrix} result of the product.\n *\n */\nexport function crossprod(X, Y) {\n\n   if (Y === undefined) {\n      Y = X;\n   }\n\n   if (!ismatrix(X) || !ismatrix(Y)) {\n      throw Error('crossprod: both X and Y must be instance of Matrix class.');\n   }\n\n   const nrx = X.nrows;\n   const ncx = X.ncols;\n\n   const nry = Y.nrows;\n   const ncy = Y.ncols;\n\n   // create vector for the product\n   const nrows = ncx;\n   const ncols = ncy;\n   const ninner = nrx;\n   const out = new Float64Array(nrows * ncols);\n\n   for (let c = 0; c < ncols; c++) {\n      // column c of Y\n      const yc = Y.v.subarray(c * nry, (c + 1) * nry);\n\n      // column c of out\n      const outc = out.subarray(c * nrows, (c + 1) * nrows);\n\n      for (let r = 0; r < nrows; r++) {\n\n         // column r of X (row r of X')\n         const xr = X.v.subarray(r * nrx, (r + 1) * nrx);\n\n         let s = 0;\n         for (let i = 0; i < ninner; i++) {\n            s += xr[i] * yc[i];\n         }\n         outc[r] = s;\n      }\n   }\n\n   return new Matrix(out, nrows, ncols);\n}\n\n\n/**\n * Bind several matrices or vectors into a single matrix row wise.\n *\n * @param  {...any} args - matrices or vectors separated by comma.\n *\n * @returns {Matrix} concatenated matrix.\n *\n */\nexport function rbind(...args) {\n\n   if (args.length === 1) return args[0];\n\n   // check that all matrices have the same number of rows\n   const ncols = ismatrix(args[0]) ? args[0].ncols : args[0].length;\n   const check = args.reduce( (acc, cur) => acc & ismatrix(cur) ? cur.ncols === ncols : cur.length === ncols, true);\n\n   if (!check) {\n      throw Error('rbind: all matrices must the same number of columns.');\n   }\n\n   // compute number of columns in outside matrix\n   const nrows = args.reduce( (acc, cur) => acc + (ismatrix(cur) ? cur.nrows : 1), 0);\n   const l = nrows * ncols;\n   const out = new Matrix.valuesConstructor(l);\n\n   let start = 0;\n   for (const a of args) {\n      out.set((ismatrix(a) ? a.t().v : a.v), start);\n      start += a.v.length;\n   }\n\n   return new Matrix(out, ncols, nrows).t();\n\n}\n\n\n/**\n * Bind several matrices or vectors into a single matrix column wise.\n *\n * @param  {...any} args - matrices or vectors separated by comma.\n *\n * @returns {Matrix} concatenated matrix.\n *\n */\nexport function cbind(...args) {\n\n   if (args.length === 1) return args[0];\n\n   // check that all matrices have the same number of rows\n   const nrows = ismatrix(args[0]) ? args[0].nrows : args[0].length;\n   const check = args.reduce( (acc, cur) => acc & (ismatrix(cur) ? cur.nrows === nrows : cur.length === nrows), true);\n\n   if (!check) {\n      throw Error('cbind: all matrices must the same number of rows.');\n   }\n\n   // compute number of columns in outside matrix\n   const ncols = args.reduce( (acc, cur) => acc + (ismatrix(cur) ? cur.ncols : 1), 0);\n   const l = nrows * ncols;\n   const out = new Matrix.valuesConstructor(l);\n\n   let start = 0;\n   for (const a of args) {\n      out.set(a.v, start);\n      start += a.v.length;\n   }\n\n   return new Matrix(out, nrows, ncols);\n\n}\n\n\n/**\n * Concatenate several vectors into one vector.\n *\n * @param {...Vector | ...Index} args - vectors separated by comma.\n *\n * @returns {Vector|Index} vector with concatenated values.\n *\n */\nexport function c(...args) {\n\n   if (args.length === 1) return args[0];\n\n   const l = args.reduce( (acc, cur) => acc + cur.length, 0);\n   const out = new args[0].constructor.valuesConstructor(l);\n\n   let start = 0;\n   for (const a of args) {\n      out.set(a.v, start);\n      start += a.length;\n   }\n\n   return new args[0].constructor(out);\n}\n\n\n/**\n * Change dimension of matrices and vectors.\n * @param {Matrix|Vector} obj - a matrix or a vector.\n * @param {number} nrow - number of rows in the reshaped object.\n * @param {number} ncol - number of columns in the reshaped object, if undefined, a vector will be returned.\n *\n * @returns {Matrix|Vector} the reshaped object.\n *\n */\nexport function reshape(obj, nrow, ncol) {\n\n   if (ncol === undefined) {\n      if (nrow !== obj.v.length) {\n         throw Error(\"reshape: provided dimension does not match number of values in the object.\");\n      }\n      return new Vector(obj.v);\n   }\n\n   if (obj.v.length !== nrow * ncol) {\n      throw Error(\"reshape: provided dimension does not match number of values in the object.\");\n   }\n\n   return new Matrix(obj.v, nrow, ncol);\n}\n\n\n\n/*************************************************/\n/*         Classes and type checkers             */\n/*************************************************/\n\n\n/**\n * Return 'true' of 'X' is a Matrix object, 'false' otherwise.\n *\n * @param {any} X - any object or variable.\n *\n * @returns {boolean}\n *\n */\nexport function ismatrix(X) {\n   return X && X.constructor === Matrix;\n}\n\n\n/**\n * Create a Matrix object from array of values.\n *\n * @param {number[]} values - array with values.\n * @param {number} nrows - number of rows in matrix.\n * @param {number} ncols - number of columns in matrix.\n *\n * @returns {Matrix} the matrix.\n *\n */\nexport function matrix(values, nrows, ncols) {\n   return new Matrix(new Float64Array(values), nrows, ncols);\n}\n\n\n/** Class representing a matrix */\nexport class Matrix {\n\n   static valuesConstructor = Float64Array;\n   static TOLERANCE = Math.pow(10, -9);\n\n   /**\n    * Constructor for a Matrix object.\n    *\n    * @param {Float64Array} values - typed array with values.\n    * @param {number} nrows - number of rows in the matrix.\n    * @param {number} ncols - number of columns in the matrix.\n    *\n    * @returns {Matrix} a Matrix object (see description).\n    *\n    * @description  Create a matrix from vector of values. Matrix is represented by an object with two\n    * fields. Field 'v' is a typed Float64Array with all values, unfolded column by column. The second\n    * field, 'dim', is an array with 2 values: number of rows and number of columns.\n    *\n    */\n   constructor (values, nrows, ncols) {\n      if (!ArrayBuffer.isView(values) || values.constructor !== Matrix.valuesConstructor) {\n         throw Error('Matrix: parameter \"values\" must be Float64Array.')\n      }\n\n      if (nrows === 0 || ncols === 0) {\n         throw Error('Matrix: can not create matrix with zero rows or columns.')\n      }\n\n      if (values.length !== nrows * ncols) {\n         throw Error('Matrix: number elements in \"values\" is not equal to \"nrows\" x \"ncols\".')\n      }\n\n      this.v = values;\n      this.nrows = nrows\n      this.ncols = ncols;\n   }\n\n\n   /**\n    * Compute inverse of the matrix.\n    *\n    * @returns inverse matrix.\n    *\n    */\n   inv() {\n\n      if (this.nrows !== this.ncols) {\n         throw Error('inv: only squared matrices can be inverted.');\n      }\n\n      const n = this.ncols;\n\n      if (this.isuppertriangular()) {\n\n         if (this.islowertriangular()) {\n            // it means diagonal\n            return Matrix.diagm(this.diag().apply(v => Math.abs(v) > Number.EPSILON ? 1 / v : x));\n         }\n\n         // prepare matrices - we will transpose X to work with columns instead of rows\n         const I = Matrix.eye(n);\n         const Yt = Matrix.eye(n);\n         const Xt = this.t();\n\n         // solve for the last column\n         const s = Xt.v[(n - 1) * n + (n - 1)];\n         const c = n - 1;\n         for (let r = 0; r < n; r++) {\n            Yt.v[c * n + r] = I.v[c * n + r] / s;\n         }\n\n         // do backward substitution\n         for (let c = n - 2; c >= 0; c--) {\n            let s = I.getcolumn(c + 1);\n            const xc = Xt.getcolref(c + 1);\n            for (let r = c + 1; r < n; r++ ) {\n               const yc = Yt.getcolumn(r + 1);\n               s = s.subtract(yc.mult(xc[r]));\n            }\n            Yt.v.set(s.divide(xc[c]).v, c * n);\n         }\n\n         return Yt.t()\n      }\n\n\n      if (this.islowertriangular()) {\n\n         // check if diagonal elements are not zeros\n         const d = this.diag();\n         if (prod(d) < Number.EPSILON) {\n            throw Error('inv: the matrix is not invertible.');\n         }\n\n         // prepare matrices - we will transpose X to work with columns instead of rows\n         const I = Matrix.eye(n);\n         const Yt = Matrix.eye(n);\n         const Xt = this.t();\n\n         // solve for the first column\n         const c = 0;\n         const s = Xt.v[0];\n         for (let r = 0; r < n; r++) {\n            Yt.v[c * n + r] = I.v[c * n + r] / s;\n         }\n\n         // do forward substitution\n         for (let c = 1; c < n; c++) {\n            let s = I.getcolumn(c + 1);\n            const xc = Xt.getcolref(c + 1);\n            for (let r = 0; r < c; r++ ) {\n               const yc = Yt.getcolumn(r + 1);\n               s = s.subtract(yc.mult(xc[r]));\n            }\n            Yt.v.set(s.divide(xc[c]).v, c * n);\n         }\n\n         return Yt.t()\n      }\n\n      // invert matrix using QR transformation\n      const r = qr(this);\n      if (!r.R.isuppertriangular()) {\n         throw Error('inv: QR decomposition of the matrix returned incorrect result.');\n      }\n\n      return r.R.inv().dot(r.Q.t());\n   }\n\n\n   /**\n    * Check if matrix is lower triangular.\n    *\n    * @returns {boolean} true if matrix is lower triangular, false otherwise.\n    */\n   islowertriangular() {\n\n      if (this.nrows !== this.ncols) return false;\n      for (let j = 1; j < this.ncols; j++) {\n         for (let i = 0; i < j; i++) {\n            if (Math.abs(this.v[j * this.nrows + i]) > Matrix.TOLERANCE) return false;\n         }\n      }\n\n      return true;\n   }\n\n\n   /**\n    * Check if matrix is upper triangular.\n    *\n    * @returns {boolean} true if matrix is upper triangular, false otherwise.\n    */\n   isuppertriangular() {\n\n      if (this.nrows !== this.ncols) return false;\n\n      for (let j = 0; j < this.ncols; j++) {\n         for (let i = j + 1; i < this.nrows; i++) {\n            if (Math.abs(this.v[j * this.nrows + i]) > Matrix.TOLERANCE) return false;\n         }\n      }\n\n      return true;\n   }\n\n\n   /**\n    * Return vector with diagonal elements of matrix.\n    *\n    * @returns {Vector} vector with diagonal elements.\n    *\n    */\n   diag() {\n\n      const n = Math.min(this.nrows, this.ncols);\n      const out = new Float64Array(n);\n      for (let rc = 0; rc < n; rc++) {\n         out[rc] = this.getcolref(rc + 1)[rc];\n      }\n\n      return new Vector(out);\n   }\n\n\n   /**\n    * Transpose the matrix.\n    *\n    * @returns {Matrix} transposed matrix.\n    *\n    */\n   t() {\n\n      const ncols_out = this.nrows;\n      const nrows_out = this.ncols;\n      const out = new Matrix.valuesConstructor(this.v.length);\n\n      if (this.ncols < this.nrows) {\n         for(let i = 0; i < this.ncols; i++) {\n            const x = this.v.subarray(i * this.nrows, (i + 1) * this.nrows)\n            for(let j = 0; j < this.nrows; j++) {\n               out[j * nrows_out + i] = x[j];\n            }\n         }\n\n         return new Matrix(out, nrows_out, ncols_out);\n      }\n\n      for(let j = 0; j < this.nrows; j++) {\n         const outx = out.subarray(j * nrows_out, (j + 1) * nrows_out)\n         for(let i = 0; i < this.ncols; i++) {\n            outx[i] = this.v[i * this.nrows + j];\n         }\n      }\n\n      return new Matrix(out, nrows_out, ncols_out);\n   }\n\n\n   /**\n    * Compute a dot product of the matrix with vector or another matrix.\n    *\n    * @param {Vector|Matrix} X - a vector or a matrix to compute a dot product with.\n    *\n    * @returns {Matrix} result of the dot product.\n    *\n    */\n   dot(X) {\n\n      if (isvector(X)) {\n         return new Matrix(_dot(this.v, X.v, this.nrows, this.ncols, X.length, 1), this.nrows, 1);\n      }\n\n      if (ismatrix(X)) {\n         return new Matrix(_dot(this.v, X.v, this.nrows, this.ncols, X.nrows, X.ncols), this.nrows, X.ncols);\n      }\n\n      throw Error(\"dot: argument 'X' must be a matrix or a vector.\");\n   }\n\n   /**\n    * Does mathematical operation between the matrix and another matrix, a vector or a number.\n    *\n    * @param {number|Vector|Matrix} x - a vector or a number to operate with.\n    * @param {function} fun - function to apply.\n    * @param {number} dims - if 'x' is a vector which dimension applies it to.\n    *\n    * @returns {Matrix} result of operation.\n    *\n    */\n   op(X, fun, dims) {\n\n      if (ismatrix(X)) {\n         return new Matrix(_opvv(this.v, X.v, fun), this.nrows, this.ncols);\n      }\n\n      if (isnumber(X)) {\n         return new Matrix(_opvn(this.v, X, fun), this.nrows, this.ncols);\n      }\n\n      if (!isvector(X)) {\n         throw new Error('op: argument \"x\" must be a matrix, a vector or a number.');\n      }\n\n      if (dims === undefined) {\n         dims = X.length === this.ncols ? 2 : 1;\n      }\n\n      if (dims === 2 && X.length === this.ncols) {\n\n         const out = new Matrix.valuesConstructor(this.v.length);\n         for (let c = 0; c < this.ncols; c++) {\n            out.set(_opvn(this.getcolref(c + 1), X.v[c], fun), c * this.nrows);\n         }\n\n         return new Matrix(out, this.nrows, this.ncols);\n      }\n\n      if (dims === 1 && X.length === this.nrows) {\n\n         const out = new Matrix.valuesConstructor(this.v.length);\n         for (let c = 0; c < this.ncols; c++) {\n            out.set(_opvv(this.getcolref(c + 1), X.v, fun), c * this.nrows);\n         }\n\n         return new Matrix(out, this.nrows, this.ncols);\n      }\n\n      throw new Error('op: length of vector \"X\" does not match number of rows nor number of columns of the maytrix.');\n\n   }\n\n\n   /**\n    * Add a number or values from another matrix or vector.\n    *\n    * @param {number|Vector|Matrix} X - a matrix, a vector or a number to sum the values with.\n    *\n    * @returns {Matrix} result of operation.\n    *\n    */\n   add(X) {\n      return this.op(X, (a, b) => a + b);\n   }\n\n   /**\n    * Subtract a number or values from another matrix or vector.\n    *\n    * @param {number|Vector|Matrix} X - a matrix, a vector or a number to subtract the values of.\n    *\n    * @returns {Matrix} result of operation.\n    *\n    */\n   subtract(X) {\n      return this.op(X, (a, b) => a - b);\n   }\n\n\n   /**\n    * Multiply to a number or to values from another matrix or vector.\n    *\n    * @param {number|Vector|Matrix} X - a matrix, a vector or a number to multiply the values to.\n    *\n    * @returns {Matrix} result of operation.\n    *\n    */\n   mult(X) {\n      return this.op(X, (a, b) => a * b);\n   }\n\n\n   /**\n    * Divide to a number or to values from another matrix or vector.\n    *\n    * @param {number|Vector|Matrix} X - a matrix, a vector or a number to divide the values to.\n    *\n    * @returns {Matrix} result of operation.\n    *\n    */\n   divide(X) {\n      return this.op(X, (a, b) => a / b);\n   }\n\n\n   /**\n    * Applies a function to elements of the matrix.\n    * @param {function} fun - function to apply (should return single value).\n    * @param {number} dims - which elements to apply the function to (0 - every, 1 - rows, 2 - columns).\n    *\n    * @returns {Vector|Matrix} - result of applying the function (either array with one value for each\n    * row/column or another Matrix with transformed values).\n    */\n   apply(fun, dims) {\n\n      // by default function is applied to columns\n      if (dims === undefined) {\n         dims = 2;\n      }\n\n      // columns\n      if (dims == 2) {\n         const n = this.ncols;\n         const out = new Matrix.valuesConstructor(n);\n         for (let i = 0; i < n; i++) {\n            out[i] = fun(this.getcolref(i + 1));\n         }\n         return new Vector(out);\n      }\n\n      // rows\n      if (dims == 1) {\n         return this.t().apply(fun, 2);\n      }\n\n      // individual values\n      if (dims == 0) {\n         const n = this.v.length;\n         const out = new Matrix.valuesConstructor(n);\n         for (let i = 0; i < n; i++) {\n            out[i] = fun(this.v[i]);\n         }\n         return new Matrix(out, this.nrows, this.ncols);\n      }\n   }\n\n\n   /**\n    * Replace values of matrix specified by 'rind' and 'cind' with values from another matrix.\n    *\n    * @param {Matrix} - matrix with values to use as replacement.\n    * @param {number | Array | Index} rind - row indices (as number or vector of indices).\n    * @param {number | Array | Index} cind - column indices (as number or vector of indices).\n    *\n    * @description Row and column indices must start from 1. Empty array ([]) tells function to use\n    * all elements (e.g. all rows or all columns). Size of matrix 'X' should correspond to the\n    * number of indices.\n    *\n    * Function does not create a new matrix but changes the current one.\n    *\n    * @returns {Matrix} the matrix with replaced values.\n    *\n    */\n   replace (X, rind, cind) {\n\n      if (typeof(rind) === 'number') {\n         rind = [rind];\n      }\n\n      if (rind.length === 0) {\n         rind = Index.seq(1, this.nrows);\n      }\n\n      if (!isindex(rind)) {\n         rind = index(rind);\n      }\n\n      if (typeof(cind) === 'number') {\n         cind = [cind];\n      }\n\n      if (cind.length === 0) {\n         cind = Index.seq(1, this.ncols);\n      }\n\n      if (!isindex(cind)) {\n         cind = index(cind);\n      }\n\n      const nrows = rind.length;\n      const ncols = cind.length;\n\n      if (min(rind) < 1 || max(rind) > this.nrows) {\n         throw Error('Matrix.replace: row indices do not match the dimension of matrix.');\n      }\n\n      if (min(cind) < 1 || max(cind) > this.ncols) {\n         throw Error('Matrix.replace: column indices do not match the dimension of matrix.');\n      }\n\n      if (X.nrows !== nrows || X.ncols !== ncols) {\n         throw Error('Matrix.replace: dimension of \"X\" does not match the indices.');\n      }\n\n      for (let ic = 0; ic < cind.length; ic++) {\n         const xc = X.getcolref(ic + 1);\n         const cv = (cind.v[ic] - 1) * this.nrows;\n         for (let ir = 0; ir < rind.length; ir++) {\n            const r = rind.v[ir];\n            this.v[cv + r - 1] = xc[ir];\n         }\n      }\n\n      return this;\n   }\n\n\n   /**\n    * Create a deep copy of the matrix.\n    *\n    * @returns {Matrix}\n    *\n    */\n   copy() {\n      return new Matrix(this.v.slice(), this.nrows, this.ncols);\n   }\n\n   /**\n    * Return values from a particular matrix row as vector.\n    *\n    * @param {number} ir - row index (starting from 1).\n    *\n    * @returns {Vector} vector with column values.\n    *\n    */\n   getrow(ir) {\n\n      if (ir < 1 || ir > this.nrows) {\n         throw Error('getrow: wrong row index.');\n      }\n\n      const v = new Vector.valuesConstructor(this.ncols);\n      for (let c = 0; c < this.ncols; c++) {\n         v[c] = this.getcolref(c + 1)[ir - 1];\n      }\n      return new Vector(v);\n   }\n\n\n   /**\n    * Return values from a particular matrix column as vector.\n    *\n    * @param {number} ic - column index (starting from 1).\n    *\n    * @returns {Vector} vector with column values.\n    *\n    */\n   getcolumn(ic) {\n\n      if (ic < 1 || ic > this.ncols) {\n         throw Error('getcolumn: wrong column index.');\n      }\n\n      return new Vector(this.v.slice((ic - 1) * this.nrows, ic * this.nrows));\n   }\n\n\n   /**\n    * Return a reference (not copy) to values of a particular matrix column.\n    *\n    * @param {number} ic - index of column (starting from 1).\n    *\n    * @returns {Float64Array} - reference to the column values as typed array.\n    *\n    */\n   getcolref(ic) {\n      return this.v.subarray((ic - 1) * this.nrows, ic * this.nrows);\n   }\n\n\n   /**\n    * Create a subset of a matrix using row and column indices.\n    *\n    * @param {number|Index} rind - row indices to select (as Index or a single number).\n    * @param {number|Index} cind - column indices to select (as Index or a single number).\n    *\n    * @description Row and column indices must start from 1. If 'rind' or 'cind' are null,\n    * all items from this direction will be taken.\n    *\n    * @returns {Matrix} the subset of the matrix.\n    *\n    */\n   subset(rind, cind) {\n\n      if (typeof(rind) === 'number') {\n         rind = index([rind]);\n      }\n\n      if (typeof(cind) === 'number') {\n         cind = index([cind]);\n      }\n\n      if (Array.isArray(rind)) {\n         rind = rind.length === 0 ? null : index(rind);\n      }\n\n      if (Array.isArray(cind)) {\n         cind = cind.length === 0 ? null : index(cind);\n      }\n\n      if (rind !== null && !isindex(rind)) {\n         throw Error('subset: parameter \"rind\" can be a number, null or instance of Index.');\n      }\n\n      if (cind !== null && !isindex(cind)) {\n         throw Error('subset: parameter \"cind\" can be a number, null or instance of Index.');\n      }\n\n      if (rind !== null && (min(rind) < 1 || max(rind) > this.nrows)) {\n         throw Error('subset: parameter \"rind\" does not match size of the matrix.');\n      }\n\n      if (cind !== null && (min(cind) < 1 || max(cind) > this.ncols)) {\n         throw Error('subset: parameter \"cind\" does not match size of the matrix.');\n      }\n\n      // select all rows and a subset of columns\n      if (rind === null) {\n\n         const ncols_out = cind.length;\n         const nrows_out = this.nrows;\n         const out = new Matrix.valuesConstructor(nrows_out * ncols_out);\n         for (let ic = 0; ic < cind.length; ic++) {\n            out.set(this.v.slice((cind.v[ic] - 1) * this.nrows, cind.v[ic] * this.nrows), ic * this.nrows);\n         }\n\n         return new Matrix(out, nrows_out, ncols_out);\n      }\n\n      // select all columns and a subset of rows\n      if (cind === null || cind === undefined) {\n         return this.t().subset(cind, rind).t();\n      }\n\n      // select specific columns and rows\n      const nrows_out = rind.length;\n      const ncols_out = cind.length;\n      const out = new Matrix.valuesConstructor(nrows_out * ncols_out);\n      let xc_out = new Matrix.valuesConstructor(nrows_out)\n      for (let ic = 0; ic < ncols_out; ic++) {\n\n         // take the a whole column from matrix and pick row values from it\n         const xc = this.v.subarray((cind.v[ic] - 1) * this.nrows, (cind.v[ic]) * this.nrows);\n         for (let ir = 0; ir < nrows_out; ir++) {\n            xc_out[ir] = xc[rind.v[ir] - 1];\n         }\n         out.set(xc_out, ic * nrows_out);\n      }\n\n      return new Matrix(out, nrows_out, ncols_out);\n   }\n\n\n   /**\n    * Convert matrix to a text representation for showing the values in nice way.\n    *\n    * @param {number} ndec - number of decimals to round the values to.\n    *\n    * @returns {string} the string with matrix representation.\n    *\n    * TODO: 1) add workaround for large matrices (...)\n    *\n    */\n   toString (ndec) {\n\n      function leftpad(x, n) {\n         return  \" \".repeat(n - x.length) + x;\n      }\n\n      if (ndec === undefined) {\n         ndec = 2;\n      }\n\n      const nvar = this.ncols;\n      const ndigits = Math.round(Math.abs(Math.log10(max(this.v)))) + ndec + 3;\n\n      let str = \"\";\n      const Xt = this.t();\n      for (let c = 1; c <= Xt.ncols; c++) {\n         str += Array.from(Xt.getcolref(c)).map(v => leftpad(v.toFixed(ndec), ndigits)).join(\" \") + \"\\n\"\n      }\n\n      return str;\n   }\n\n   /**\n    * Convert matrix values to a string which can be downloaded as CSV file.\n    *\n    * @param {string} sep - symbol to use for separation of values (by default \",\").\n    * @param {string} dec - symbold to use for separation of decimals (by default \".\").\n    * @param {Array} header - optional array of header elements (column names).\n    * @param {Array} labels - optional array of labels (row names).\n    *\n    * @returns {string} - string with CSV data.\n    */\n   toCSV(sep, dec, header, labels) {\n\n      // set default separator symbol\n      if (sep === undefined) {\n         sep = \",\";\n      }\n\n      // set default decimals separator symbol\n      if (dec === undefined) {\n         dec = sep === \";\" ? \",\" : \".\"\n      }\n\n      const hasLabels = labels !== undefined && labels !== null && labels.length > 0;\n      const hasHeader = header !== undefined && header !== null && header.length > 0;\n\n      if (hasLabels && labels.length !== this.nrows) {\n         throw Error (\"Matrix.toCSV: number of elements in labels array must match number of rows in the matrix.\");\n      }\n\n      if (hasHeader && header.length !== this.ncols + (hasLabels ? 1 : 0)) {\n         throw Error (\"Matrix.toCSV: number of elements in header must match number of columns in the matrix.\");\n      }\n\n      // transpose to make it faster\n      const m = this.t();\n      let rows = hasHeader ? header.join(sep) + \"\\n\" : \"\";\n      for (let c = 1; c <= m.ncols; c++) {\n         rows = rows + (hasLabels ? labels[c - 1] + sep : \"\") + m.getcolref(c).join(sep) + \"\\n\";\n      }\n\n      // change decimal separator if it is not a dot\n      rows = rows.replace(/\\./g, dec);\n\n      return rows;\n   }\n\n   // Static methods //\n\n   /**\n    * Create a matrix with random values from normal distribution.\n    *\n    * @param {number} nrows - number of rows.\n    * @param {number} ncols - number of columns.\n    * @param {number} [mu=0] - mean (expected) value.\n    * @param {number} [sigma=1] - standard deviation.\n    *\n    * @returns {Vector} matrix with values.\n    *\n    */\n   static randn(nrows, ncols, mu, sigma) {\n      return reshape(rnorm(nrows * ncols, mu, sigma), nrows, ncols);\n   }\n\n\n   /**\n    * Create a matrix with random values from uniform distribution [a, b].\n    *\n    * @param {number} nrows - number of rows.\n    * @param {number} ncols - number of columns.\n    * @param {number} [a=0] - smallest possible value.\n    * @param {number} [b=1] - largest possible value.\n    *\n    * @returns {Vector} matrix with values.\n    *\n    */\n   static rand(nrows, ncols, a, b) {\n      return reshape(runif(nrows * ncols, a, b), nrows, ncols);\n   }\n\n\n   /**\n    * Create an identity matrix.\n    *\n    * @param {number} nrows - number of rows.\n    * @param {number} ncols - number of columns (if undefined, will be same as 'nrows').\n    *\n    * @returns {Matrix} the matrix.\n    *\n    */\n   static eye(nrows, ncols) {\n\n      if (ncols === undefined) {\n         ncols = nrows;\n      }\n\n      const out = new Float64Array(nrows * ncols);\n      for (let rc = 0; rc < Math.min(nrows, ncols); rc++) {\n         out[rc * nrows + rc] = 1;\n      }\n\n      return new Matrix(out, nrows, ncols);\n   }\n\n\n   /**\n    * Create a diagonal matrix based on vector with values.\n    *\n    * @param {Vector} x - vector with values.\n    *\n    * @returns {Matrix} the matrix.\n    *\n    */\n   static diagm(x) {\n\n      if (!isvector(x)) {\n         throw Error('diagm: the argument \"x\" must be a Vector.');\n      }\n\n      const n = x.length;\n      const out = new Float64Array(n * n);\n      for (let rc = 0; rc < n; rc++) {\n         out[rc * n + rc] = x.v[rc];\n      }\n\n      return new Matrix(out, n, n);\n   }\n\n\n   /**\n    * Create a Matrix object filled with zeros.\n    *\n    * @param {number} nrows - number of rows.\n    * @param {number} ncols - number of columns.\n    *\n    * @returns {Matrix} the generated matrix.\n    *\n    */\n   static zeros(nrows, ncols) {\n\n      if (ncols === undefined) {\n         ncols = nrows;\n      }\n\n      return new Matrix(new Float64Array(nrows * ncols), nrows, ncols);\n   }\n\n\n   /**\n    * Create a Matrix object filled with ones.\n    *\n    * @param {number} nrows - number of rows.\n    * @param {number} ncols - number of columns.\n    *\n    * @returns {Matrix} the generated matrix.\n    *\n    */\n   static ones(nrows, ncols) {\n      return Matrix.fill(1, nrows, ncols);\n   }\n\n   /**\n    * Create a Matrix object filled with a manual value.\n    *\n    * @param {number} v - value to fill the matrix with.\n    * @param {number} nrows - number of rows.\n    * @param {number} ncols - number of columns.\n    *\n    * @returns {Matrix} the generated matrix.\n    *\n    */\n   static fill(v, nrows, ncols) {\n\n      if (ncols === undefined) {\n         ncols = nrows;\n      }\n\n      const out = new Float64Array(nrows * ncols);\n      for (let i = 0; i < out.length; i++) {\n         out[i] = v;\n      }\n\n      return new Matrix(out, nrows, ncols);\n   }\n\n\n   /**\n    * Create a matrix by applying function to all possible pairs of values from two vectors.\n    *\n    * @param {Array|Vector} x - vector with values.\n    * @param {Array|Vector} y - vector with values.\n    * @param {function} fun - function of two arguments which returns a single value.\n    *\n    * @returns {Matrix}\n    */\n   static outer(x, y, fun) {\n\n      if (Array.isArray(x)) {\n         x = vector(x);\n      }\n\n      if (Array.isArray(y)) {\n         y = vector(y);\n      }\n\n      if (!isvector(x)) {\n         throw Error('Matrix.outer: parameter \"x\" must be a vector or an array with numbers.');\n      }\n\n      if (!isvector(y)) {\n         throw Error('Matrix.outer: parameter \"y\" must be a vector or an array with numbers.');\n      }\n\n      const out = Matrix.zeros(x.length, y.length);\n      for (let c = 0; c < y.length; c++) {\n         const yv = y.v[c]\n         const outc = out.getcolref(c + 1);\n         for (let r = 0; r < x.length; r++) {\n            outc[r] = fun(x.v[r], yv);\n         }\n      }\n\n      return out;\n   }\n\n\n   /**\n    * Parse string with data from a CSV file and create a matrix with values.\n    *\n    * @param {string} strData - string with all data from the CSV file.\n    * @param {string} sep - symbols used for separation of values (by default \",\").\n    * @param {boolean} hasHeader - logical, if first row must be treated as header or not.\n    * @param {boolean} hasLabels - logical, if first column must be treated as object labels or not.\n    *\n    *\n    * @returns {Object} JSON containing matrix with parsed values, header, values and decimal separators.\n    */\n   static parseCSV(strData, sep, hasHeader, hasLabels) {\n\n\n      // function which returns true if at least one value in array can not be parsed to float\n      function hasNaN(vec) {\n         return vec.some(v => Number.isNaN(Number.parseFloat(v.trim())));\n      }\n\n      // set default separator symbol\n      if (sep === undefined) {\n         sep = \",\";\n      }\n\n      // setup decimal separator\n      const dec = sep === \";\" ? \",\" : \".\";\n\n      // remove BOM symbol if any\n      strData = strData.replace(/^\\uFEFF/gm, \"\").replace(/^\\u00EF?\\u00BB\\u00BF/gm,\"\");\n\n      // remove \\r symbols\n      strData = strData.replace(/\\r/gm, \"\");\n\n      // split string with data values into array of rows\n      let rows = strData.split(/\\n/);\n\n      // check if the first row contains header\n      let header = [];\n      let startRow = 0;\n      const firstRow = rows[0].split(sep);\n      if (hasHeader || (hasHeader === undefined && hasNaN(firstRow))) {\n         header = firstRow;\n         startRow = 1;\n      }\n\n      // filter empty rows out\n      rows = rows.filter(v => v.trim().length > 1);\n\n      // check if first column contains labels\n      let labels = [];\n      let startColumn = 0;\n      if (hasLabels) {\n         startColumn = 1;\n      }\n\n      // number of rows and columns in future matrix\n      const nrows = rows.length - startRow;\n      const ncols = firstRow.length - startColumn;\n\n\n      if (nrows < 1) {\n         throw Error(\"Data file should contain at least 1 row with values.\");\n      }\n\n      if (ncols < 1) {\n         throw Error(\"Data file should contain at least 1 column with values.\");\n      }\n\n      // set rows of data as columns of matrix - it is faster\n      const data = Matrix.zeros(ncols, nrows);\n\n      // find symbol used for decimals separator\n      for (let r = startRow; r < nrows + startRow; r++) {\n\n         // parsing: trim spaces and replace non-numbers with dot (.)\n         const rowValuesAll = rows[r].split(sep)\n\n         let rowValues;\n         if (hasLabels) {\n            labels[r - startRow] = rowValuesAll[0];\n            rowValues = rowValuesAll.slice(1).map(v => Number.parseFloat(v.trim().replace(dec, \".\")));\n         } else {\n            rowValues = rowValuesAll.map(v => Number.parseFloat(v.trim().replace(dec, \".\")));\n         }\n\n         if (rowValues.some(v => Number.isNaN(v))) {\n            throw Error(\"Some of the values can not be converted to numbers, check your CSV file and try again.\");\n         }\n\n         if (rowValues.length != ncols) {\n            throw Error(\"Wrong number of values in row #\" + r);\n         }\n\n         data.v.set(new Float64Array(rowValues), (r - startRow) * ncols);\n      }\n\n      return {values: data.t(), header: header, labels: labels, sep:sep, dec:dec};\n   }\n\n}\n\n\n/**\n * Return 'true' of 'x' is a Vector object, 'false' otherwise.\n *\n * @param {any} x - any object or variable.\n *\n * @returns {boolean}\n *\n */\nexport function isvector(x) {\n   return x && x.constructor === Vector;\n}\n\n\n/**\n * Create a Vector object from array of values.\n *\n * @param {number[]} values - array with values.\n *\n * @returns {Vector} the vector.\n *\n */\nexport function vector(values) {\n   return new Vector(new Float64Array(values));\n}\n\n\n/** Class representing a vector */\nexport class Vector {\n\n   static valuesConstructor = Float64Array;\n\n   /**\n    * Constructor for a Vector object.\n    *\n    * @param {Float64Array} values - typed array with values.\n    *\n    * @returns {Vector} a Vector object (see description).\n    * @constructor\n    *\n    * @description  Create a vector of values. Vector is represented by an object with two\n    * fields. Field 'v' is a typed Float64Array with values. The second field, 'length', is\n    * the length of the vector.\n    *\n    */\n   constructor(values) {\n\n      if (!ArrayBuffer.isView(values) || values.constructor !== Float64Array) {\n         throw Error('Vector: parameter \"values\" must be Float64Array.')\n      }\n\n      this.v = values;\n      this.length = values.length;\n   }\n\n   /**\n    * Returns a vector of indices for values for which function ´fun´ returns true.\n    *\n    * @param {function} fun - function with two arguments (value and its index).\n    *\n    * @returns {Index} a vector of indices.\n    */\n   which(fun) {\n      const out = new Index.valuesConstructor(this.length);\n      let n = 0;\n      for (let i = 0; i < this.length; i++) {\n         if (fun(this.v[i], i)) {\n            out[n] = i + 1;\n            n = n + 1;\n         }\n      }\n\n      return new Index(out.subarray(0, n));\n   }\n\n\n   /**\n    * Returns a subset of values for which function ´fun´ returns true.\n    *\n    * @param {function} fun - function with two arguments (value and its index).\n    *\n    * @returns {Vector} a subset.\n    */\n   filter(fun) {\n      const out = new Vector.valuesConstructor(this.length);\n      let n = 0;\n      for (let i = 0; i < this.length; i++) {\n         if (fun(this.v[i], i)) {\n            out[n] = this.v[i];\n            n = n + 1;\n         }\n      }\n\n      return new Vector(out.subarray(0, n));\n   }\n\n\n   /**\n    * Shuffles values in vector using Fisher–Yates algorithm.\n    *\n    * @returns {Vector} vector with shuffled values.\n    */\n   shuffle() {\n      return new Vector(_shuffle(this.v));\n   }\n\n\n   /**\n    * Sorts values in a vector.\n    *\n    * @param {boolean} decreasing - if true, values will be sorted in decreasing order, otherwise in increasing.\n    *\n    * @returns {Vector} vector with sorted values\n    *\n    */\n   sort(decreasing) {\n      return new Vector(_sort(this.v, decreasing));\n   }\n\n   /**\n    * Sorts values in a vector and return indices of sorted values.\n    *\n    * @param {boolean} decreasing - if true, values will be sorted in decreasing order, otherwise in increasing.\n    *\n    * @returns {Index} vector with sorted values\n    *\n    */\n   sortind(decreasing) {\n      return new Index(_sortind(this.v, decreasing));\n   }\n\n\n   /**\n    * Replicate a vector 'n' times.\n    *\n    * @param {number} n - how many times the vector must be replicated.\n    *\n    * @returns {Vector} a vector with replicated values.\n    *\n    */\n   rep(n) {\n      return _rep(this, n);\n   }\n\n\n   /**\n    * Replicate each value in the vector 'n' times.\n    *\n    * @param {number} n - how many times every value must be replicated.\n    *\n    * @returns {Vector} a vector with replicated values.\n    *\n    */\n   repeach(n) {\n      return _repeach(this, n);\n   }\n\n\n   /**\n    * Replace values of vectors specified by 'ind' with values from another vector.\n    *\n    * @param {Vector} - vector with values to use as replacement.\n    * @param {number | Array | Index} ind - indices (as number or vector of indices).\n    *\n    * @description Indices must start from 1. Empty array ([]) tells function to use\n    * all elements. Length of vector 'x' should correspond to the\n    * number of indices.\n    *\n    * Function does not create a new vector but changes the current one.\n    *\n    * @returns {Vector} the vector with replaced values.\n    *\n    */\n   replace (x, ind) {\n\n      if (typeof(ind) === 'number') {\n         ind = [ind];\n      }\n\n      if (ind.length === 0) {\n         ind = Index.seq(1, this.length);\n      }\n\n      if (!isindex(ind)) {\n         ind = index(ind);\n      }\n\n      const n = ind.length;\n\n      if (min(ind) < 1 || max(ind) > this.length) {\n         throw Error('Vector.replace: indices do not match the lenght of the vector.');\n      }\n\n      if (x.length !== n) {\n         throw Error('Vector.replace: length of \"x\" does not match the indices.');\n      }\n\n      for (let i = 0; i < ind.length; i++) {\n         const r = ind.v[i];\n         this.v[r - 1] = x.v[i];\n      }\n\n      return this;\n   }\n\n\n   /**\n    * Create a subset of a vector using vector with indices.\n    *\n    * @param {number|Array|Index} ind - single index or vector with indices (must start from 1, not 0).\n    *\n    * @returns {Vector} a subset.\n    */\n   subset(ind) {\n\n      if (typeof(ind) === 'number') {\n         ind = index([ind]);\n      }\n\n      if (Array.isArray(ind)) {\n         ind = typeof(ind[0]) === 'boolean' ? Index.bool2ind(ind) : index(ind);\n      }\n\n      if (!isindex(ind)) {\n         throw Error('subset: parameter \"ind\" must be number, array of instance of class Index.');\n      }\n\n      const n = ind.length;\n      const out = Vector.zeros(n);\n\n      for (let i = 0; i < n; i++) {\n\n         if (ind.v[i] < 1) {\n            throw Error('subset: indices must start with 1 (not 0).');\n         }\n\n         if (ind.v[i] > this.length) {\n            throw Error('subset: index exceeds the length of the vector.');\n         }\n\n         out.v[i] = this.v[ind.v[i] - 1];\n      }\n\n      return out;\n   }\n\n\n   /**\n    * Create a subset of a vector values which are located between positions 'start' and 'end' (both included).\n    *\n    * @param {number} start - index of value to start (must start from 1, not 0).\n    * @param {number} end - index of value to end.\n    *\n    * @returns {Vector} a subset.\n    */\n   slice(start, end) {\n\n      if (start === null) {\n         start = 1;\n      }\n\n      if (end === null || end === undefined) {\n         end = this.length;\n      }\n\n      if (start < 1) {\n         throw Error('slice: indices must start with 1 (not 0).');\n      }\n\n      if (end > this.length) {\n         throw Error('slice: index exceeds the length of the vector.');\n      }\n\n      if (end < start) {\n         throw Error('slice: \"end\" must not be smaller than \"start\".');\n      }\n\n      return new Vector(this.v.slice(start - 1, end));\n   }\n\n\n   /**\n    * Make a deep copy of the vector.\n    */\n   copy() {\n      return new Vector(this.v.slice());\n   }\n\n\n   /**\n    * Compute a dot product with another vector.\n    *\n    * @param {Vector} x - a vector.\n    *\n    * @returns {number} result of the product.\n    *\n    */\n   dot(x) {\n\n      if (x === undefined) {\n         x = this;\n      }\n\n      return _dot(this.v, x.v, 1, this.length, x.length, 1)[0];\n   }\n\n\n   /**\n    * Does mathematical operation between vector values and either values from another vector or a number.\n    *\n    * @param {number|Vector} x - a vector or a number to operate with.\n    * @param {function} fun - function to apply.\n    *\n    * @returns {Vector} result of operation.\n    *\n    */\n   op(x, fun) {\n      if (isvector(x)) {\n         return new Vector(_opvv(this.v, x.v, fun));\n      }\n\n      if (isnumber(x)) {\n         return new Vector(_opvn(this.v, x, fun));\n      }\n\n      throw new Error('op: argument \"x\" must be a vector or a number.');\n   }\n\n\n   /**\n    * Add a number or values from another vector.\n    *\n    * @param {number|Vector} x - a vector or a number to sum the values with.\n    *\n    * @returns {Vector} result of operation.\n    *\n    */\n   add(x) {\n      return this.op(x, (a, b) => a + b);\n   }\n\n\n   /**\n    * Subtract a number or values from another vector.\n    *\n    * @param {number|Vector} x - a vector or a number to subtract the values of.\n    *\n    * @returns {Vector} result of operation.\n    *\n    */\n   subtract(x) {\n      return this.op(x, (a, b) => a - b);\n   }\n\n\n   /**\n    * Multiply to a number or to values from another vector.\n    *\n    * @param {number|Vector} x - a vector or a number to multiply the values to.\n    *\n    * @returns {Vector} result of operation.\n    *\n    */\n   mult(x) {\n      return this.op(x, (a, b) => a * b);\n   }\n\n\n   /**\n    * Divide to a number or to values from another vector.\n    *\n    * @param {number|Vector} x - a vector or a number to divide the values to.\n    *\n    * @returns {Vector} result of operation.\n    *\n    */\n   divide(x) {\n      return this.op(x, (a, b) => a / b);\n   }\n\n\n   /**\n    * Apply a function to each value of the vector.\n    *\n    * @param {function} fun - function to apply (should take one value and return one value).\n    *\n    * @returns {Vector} the transformed vector.\n    */\n   apply(fun) {\n\n      const n = this.v.length;\n      const out = Vector.zeros(n);\n      for (let i = 0; i < n; i++) {\n         out.v[i] = fun(this.v[i]);\n      }\n\n      return out;\n   }\n\n\n   // Static methods //\n\n\n   /**\n    * Concatenates numbers, arrays and vectors into a single vector.\n    *\n    * @param  {...any} args - numbers, arrays or/and vectors.\n    *\n    * @returns {Vector}\n    *\n    */\n   static c(...args) {\n\n      if (args.length === 1) return args[0];\n\n      const l = args.reduce( (acc, cur) => acc + (typeof(cur) === 'number' ? 1 : cur.length), 0);\n      const out = new Vector.valuesConstructor(l);\n\n      let start = 0;\n      for (const a of args) {\n\n         if (typeof(a) === 'number') {\n            out[start] = a;\n            start += 1;\n         } else {\n            out.set(isvector(a) ? a.v : new Vector.valuesConstructor(a), start);\n            start += typeof(a) === 'number' ? 1 : a.length;\n         }\n      }\n\n      return new Vector(out);\n   }\n\n\n   /**\n    * Generate sequence of values.\n    *\n    * @param {number} start - first value.\n    * @param {number} end - last value.\n    * @param {number} [by=1] - increment between values.\n    *\n    * @returns {Vector} vector with sequence values.\n    *\n    */\n   static seq(start, end, by) {\n      return _seq(start, end, by, Vector)\n   }\n\n\n   /**\n    * Create a vector with random values from normal distribution.\n    *\n    * @param {number} length - number of values.\n    * @param {number} [mu=0] - mean (expected) value.\n    * @param {number} [sigma=1] - standard deviation.\n    *\n    * @returns {Vector} vector with values.\n    *\n    */\n   static randn(length, mu, sigma) {\n      return rnorm(length, mu, sigma);\n   }\n\n\n   /**\n    * Create a vector with random values from uniform distribution [a, b].\n    *\n    * @param {number} length - number of values.\n    * @param {number} [a=0] - smallest possible value.\n    * @param {number} [b=1] - largest possible value.\n    *\n    * @returns {Vector} vector with values.\n    *\n    */\n   static rand(length, a, b) {\n      return runif(length, a, b);\n   }\n\n\n   /**\n    * Create a Vector object filled with zeros.\n    *\n    * @param {number} n - length of the vector\n    *\n    * @returns {Vector} the generated vector.\n    *\n    */\n   static zeros(n) {\n      return new Vector(new Vector.valuesConstructor(n));\n   }\n\n\n   /**\n    * Create a Vector object filled with ones.\n    *\n    * @param {number} n - length of the vector.\n    *\n    * @returns {Vector} the generated vector.\n    *\n    */\n   static ones(n) {\n      return Vector.fill(1, n);\n   }\n\n\n  /**\n    * Create a Vector object filled with a repeated value.\n    *\n    * @param {number} v - value to fill the vector with.\n    * @param {number} n - length of the vector.\n    *\n    * @returns {Vector} the generated vector.\n    *\n    */\n   static fill(v, n) {\n\n      const out = new Vector.valuesConstructor(n);\n      for (let i = 0; i < out.length; i++) {\n         out[i] = v;\n      }\n\n      return new Vector(out);\n   }\n\n}\n\n\n/**\n * Return 'true' of 'x' is an Index object, 'false' otherwise.\n *\n * @param {any} x - any object or variable.\n *\n * @returns {boolean}\n *\n */\nexport function isindex(x) {\n   return x.constructor === Index;\n}\n\n\n/**\n * Create an Index object from array of values.\n *\n * @param {number[]} values - array with values.\n *\n * @returns {Index} the vector.\n *\n */\nexport function index(values) {\n   return new Index(new Int32Array(values));\n}\n\n\n/** Class representing a vector with indices */\nexport class Index {\n\n   static valuesConstructor = Int32Array;\n\n   /**\n    * Constructor for an Index object.\n    *\n    * @param {Int32Array} values - typed array with index values.\n    *\n    * @returns {Index} an Index object (see description).\n    * @constructor\n    *\n    * @description  Create a vector of values to be used as indices (e.g. for subsetting,\n    * counting, etc.). Index is represented by an object with two fields. Field 'v' is a typed\n    * Int32Array with index values. The second field, 'length', is the length of the vector.\n    *\n    */\n   constructor(values) {\n\n      if (!ArrayBuffer.isView(values) || values.constructor !== Int32Array) {\n         throw Error('Index: parameter \"values\" must be Int32Array.')\n      }\n\n      this.v = values;\n      this.length = values.length;\n   }\n\n\n   /**\n    * Returns a vector of indices for values for which function ´fun´ returns true.\n    *\n    * @param {function} fun - function with two arguments (value and its index).\n    *\n    * @returns {Index} a vector of indices.\n    */\n   which(fun) {\n      const out = new Index.valuesConstructor(this.length);\n      let n = 0;\n      for (let i = 0; i < this.length; i++) {\n         if (fun(this.v[i], i)) {\n            out[n] = i + 1;\n            n = n + 1;\n         }\n      }\n\n      return new Index(out.subarray(0, n));\n   }\n\n\n   /**\n    * Returns a subset of indices for which function ´fun´ returns true.\n    *\n    * @param {function} fun - function with two arguments (value and its index).\n    *\n    * @returns {Index} a subset.\n    */\n   filter(fun) {\n      const out = new Index.valuesConstructor(this.length);\n      let n = 0;\n      for (let i = 0; i < this.length; i++) {\n         if (fun(this.v[i], i)) {\n            out[n] = this.v[i];\n            n = n + 1;\n         }\n      }\n\n      return new Index(out.subarray(0, n));\n   }\n\n\n   /**\n    * Shuffle indices.\n    *\n    * @returns {Index} vector with shuffled indices.\n    */\n   shuffle() {\n      return new Index(_shuffle(this.v));\n   }\n\n\n   /**\n    * Sorts indices.\n    *\n    * @param {boolean} decreasing - if true, values will be sorted in decreasing order, otherwise in increasing.\n    *\n    * @returns {Index} vector with sorted indices.\n    *\n    */\n   sort(decreasing) {\n      return new Index(_sort(this.v, decreasing));\n   }\n\n   /**\n    * Sorts indices and return indices of sorted values.\n    *\n    * @param {boolean} decreasing - if true, values will be sorted in decreasing order, otherwise in increasing.\n    *\n    * @returns {Index} vector with sorted indices.\n    *\n    */\n   sortind(decreasing) {\n      return new Index(_sortind(this.v, decreasing));\n   }\n\n   /**\n    * Replicate the index object 'n' times.\n    *\n    * @param {number} n - how many times the index must be replicated.\n    *\n    * @returns {Index} index with replicated values.\n    *\n    */\n   rep(n) {\n      return _rep(this, n);\n   }\n\n\n   /**\n    * Replicate each index in the index 'n' times.\n    *\n    * @param {number} n - how many times every value must be replicated.\n    *\n    * @returns {Index} an index object with replicated values.\n    *\n    */\n   repeach(n) {\n      return _repeach(this, n);\n   }\n\n   /**\n    * Create a subset of a index using another vector with indices.\n    *\n    * @param {number|Array|Index} ind - single index or vector with indices (must start from 1, not 0).\n    *\n    * @returns {Index} a subset.\n    */\n   subset(ind) {\n\n     if (typeof(ind) === 'number') {\n         ind = index([ind]);\n      }\n\n      if (Array.isArray(ind)) {\n         ind = index(ind);\n      }\n\n      if (!isindex(ind)) {\n         throw Error('subset: parameter \"ind\" must be number, array of instance of class Index.');\n      }\n\n      const n = ind.length;\n      const out = new Index.valuesConstructor(n);\n\n      for (let i = 0; i < n; i++) {\n\n         if (ind.v[i] < 1) {\n            throw Error('subset: indices must start with 1 (not 0).');\n         }\n\n         if (ind.v[i] > this.length) {\n            throw Error('subset: index exceeds the length of the vector.');\n         }\n\n         out[i] = this.v[ind.v[i] - 1];\n      }\n\n      return new Index(out);\n   }\n\n\n   /**\n    * Create a subset of a vector of indices which are located between positions 'start' and 'end' (both included).\n    *\n    * @param {number} start - index of value to start (must start from 1, not 0).\n    * @param {number} end - index of value to end.\n    *\n    * @returns {Index} a subset.\n    */\n   slice(start, end) {\n\n      if (start === null) {\n         start = 1;\n      }\n\n      if (end === null || end === undefined) {\n         end = this.length;\n      }\n\n      if (start < 1) {\n         throw Error('slice: indices must start with 1 (not 0).');\n      }\n\n      if (end > this.length) {\n         throw Error('slice: index exceeds the length of the vector.');\n      }\n\n      if (end < start) {\n         throw Error('slice: \"end\" must not be smaller than \"start\".');\n      }\n\n      return new Index(this.v.slice(start - 1, end));\n   }\n\n\n   // Static methods //\n\n   /**\n    * Generate sequence of indices.\n    *\n    * @param {number} start - first value.\n    * @param {number} end - last value.\n    * @param {number} [by=1] - increment between values.\n    *\n    * @returns {Index} object with sequence values.\n    *\n    */\n   static seq(start, end, by) {\n      return _seq(start, end, by, Index);\n   }\n\n\n   /**\n    * Create an Index object filled with ones.\n    *\n    * @param {number} n - length of the vector.\n    *\n    * @returns {Index} the generated vector of indices.\n    *\n    */\n   static ones(n) {\n      return Index.fill(1, n);\n   }\n\n\n  /**\n    * Create an Index object filled with a repeated value.\n    *\n    * @param {number} v - value to fill the index vector with (must be integer).\n    * @param {number} n - length of the vector.\n    *\n    * @returns {Vector} the generated vector of indices.\n    *\n    */\n   static fill(v, n) {\n\n      const out = new Index.valuesConstructor(n);\n      for (let i = 0; i < out.length; i++) {\n         out[i] = v;\n      }\n\n      return new Index(out);\n   }\n\n\n   /**\n    * Convert array of logical values to vector of indices.\n    *\n    * @param {Array} x - array of logical values.\n    *\n    * @returns {Index} vector of indices where x is true.\n    *\n    */\n   static bool2ind(x) {\n\n      let n = 0;\n      const out = new Index.valuesConstructor(x.length);\n\n      for (let i = 0; i < x.length; i++) {\n         if (x[i]) {\n            out[n] = i + 1;\n            n = n + 1;\n         }\n      }\n\n      return new Index(out.subarray(0, n));\n   }\n}\n\n/**\n * Return 'true' of 'x' is an Factor object, 'false' otherwise.\n *\n * @param {any} x - any object or variable.\n *\n * @returns {boolean}\n *\n */\nexport function isfactor(x) {\n   return x.constructor === Factor;\n}\n\n/**\n * Create a factor object from Array with values.\n *\n * @param {Array} x - array with values.\n *\n * @return {Factor} returns instance of Factor object.\n *\n */\nexport function factor(x) {\n   const n = x.length;\n   const values = new Factor.valuesConstructor(n);\n   const labels = [];\n\n   for (let i = 0; i < n; i++) {\n      const j = labels.findIndex(v => v === x[i]);\n      if (j < 0) {\n         // value is new\n         labels.push(x[i])\n         values[i] = labels.length - 1;\n      } else {\n         // value already present\n         values[i] = j;\n      }\n   }\n\n   return new Factor(values, labels)\n}\n\n\n/** Class representing a factor — vector with categorical variables */\nexport class Factor {\n\n   static valuesConstructor = Uint8Array;\n\n   /**\n    * Constructor for a Factor object.\n    *\n    * @param {Uint8Array} values - vector with indices for each category item.\n    * @param {Array} labels - array with labels for each category.\n    *\n    * @returns {Factor} class object (see description).\n    * @constructor\n    *\n    */\n   constructor(values, labels) {\n\n      if (values.constructor !== Factor.valuesConstructor) {\n         throw Error('Factor: wrong class for parameter \"values\".')\n      }\n\n      if (values.nrows < 1 || values.ncols < 1) {\n         throw Error('Factor: parameter \"values\" must have at least one row and one column.')\n      }\n\n      if (!labels || !Array.isArray(labels)) {\n         throw Error('Factor: parameter \"labels\" must be an array.')\n      }\n\n      this.v = values;\n      this.length = values.length;\n      this.labels = labels.map(v => v.toString());\n      this.nlevels = this.labels.length;\n   }\n\n   /**\n    * Return vector of indices corresponding to location of a particular category.\n    *\n    * @param {string} value - name (label) of the category to find.\n    *\n    * @returns {Index} vector with indices (starts from 1).\n    */\n   which(value) {\n      const ind = this.labels.findIndex((v, i) => v === value);\n      const out = new Index.valuesConstructor(this.length);\n      let k = 0;\n      for (let i = 0; i < this.length; i++) {\n         if (this.v[i] === ind) {\n            out[k] = i + 1;\n            k += 1;\n         }\n      }\n\n      return new Index(out.slice(0, k))\n   }\n}\n\n\n\n/***********************************************/\n/*    Generic methods                          */\n/***********************************************/\n\n/**\n * Generate sequence of values for vector or index.\n *\n * @param {number} start - first value.\n * @param {number} end - last value.\n * @param {number} [by=1] - increment between values.\n * @param {class} classRef - class reference\n *\n * @returns {Object} object with sequence values.\n *\n */\nfunction _seq(start, end, by, classRef) {\n\n   // by default increment is unit\n   if (by === undefined) by = (start <= end) ? 1 : -1;\n\n   // compute length of sequence\n   const length = Math.floor((end - start) / by) + 1;\n\n   if (length < 1) {\n      throw Error('seq: wrong combination of parameters.');\n   }\n\n   const x = new classRef.valuesConstructor(length);\n   for (let i = 0; i < length; i++) {\n      x[i] = start + i * by;\n   }\n\n   return new classRef(x);\n}\n\n\n/**\n * Replicate object 'n' times.\n *\n * @param {Object} obj - object to replicate (Vector or Index).\n * @param {number} n - how many times the vector must be replicated.\n *\n * @returns {Object} an object with replicated values.\n *\n */\nfunction _rep(obj, n) {\n\n   const l = obj.length * n;\n   const out = new obj.constructor.valuesConstructor(l);\n   for (let i = 1; i <= n; i++) {\n      for (let j = 0; j < obj.length; j++) {\n         out[(i - 1) * obj.length + j] = obj.v[j];\n      }\n   }\n\n   return new obj.constructor(out);\n}\n\n\n/**\n * Replicate each value in the object 'n' times.\n *\n * @param {Object} obj - object to replicate (Vector or Index).\n * @param {number} n - how many times every value must be replicated.\n *\n * @returns {Object} an object with replicated values.\n *\n */\nfunction _repeach(obj, n) {\n\n   if (n < 1 || Math.round(n) !== n) {\n      throw Error('rep: parameter \"n\" must be an integer number > 1.');\n   }\n\n   const l = obj.length * n;\n   const out = new obj.constructor.valuesConstructor(l);\n   for (let j = 0; j < obj.length; j++) {\n      for (let i = 0; i < n; i++) {\n         out[j * n + i] = obj.v[j];\n      }\n   }\n\n   return new obj.constructor(out);\n}\n\n\n/**\n * Does an arithmetic operation for individual values from two arrays.\n *\n * @param {Array|Float64Array} v1 - the first array.\n * @param {Array|Float64Array} v2 - the second array.\n * @param {function} fun - function to use.\n *\n * @description the function must take two numbers and return one.\n *\n * @returns array of the same type as v1 and v2.\n */\nfunction _opvv(v1, v2, fun) {\n\n   if (v1.length !== v2.length) {\n      throw new Error(\"_opvv: arrays sizes do not match.\");\n   }\n\n   if (v1.constructor !== v2.constructor) {\n      throw new Error(\"_opvv: array types do not match.\");\n   }\n\n   const out = new v1.constructor(v1.length);\n   for (let i = 0; i < v1.length; i++) {\n      out[i] = fun(v1[i], v2[i]);\n   }\n\n   return out;\n}\n\n\n\n/**\n * Does an arithmetic operation for individual value from an array and a number.\n *\n * @param {Array|Float64Array} v1 - an array.\n * @param {number} v2 - a number.\n * @param {function} fun - function to use.\n *\n * @description the function must take two numbers and return one.\n *\n * @returns array of the same type as v1.\n */\nfunction _opvn(v1, v2, fun) {\n\n   const out = new v1.constructor(v1.length);\n   for (let i = 0; i < v1.length; i++) {\n      out[i] = fun(v1[i], v2);\n   }\n\n   return out;\n}\n\n\n/**\n * Generic function for taking a dot product of two matrices, X and Y, represented as vectors\n * @param {TypedArray} xv - vector with values from X\n * @param {TypedArray} yv - vector with values from Y\n * @param {number} nrx - number of rows in X\n * @param {number} ncx - number of columns in X\n * @param {number} nry - number of rows in Y\n * @param {number} ncy - number of columns in Y\n *\n * @returns {TypedArray} - vector with result of the product\n */\nexport function _dot(xv, yv, nrx, ncx, nry, ncy) {\n\n   if (ncx !== nry) {\n      throw Error('_dot: matrix dimensions do not much.');\n   }\n\n   // create vector for the product\n   const nrows = nrx;\n   const ncols = ncy;\n   const ninner = ncx;\n   const out = new xv.constructor(nrows * ncols);\n\n   for (let c = 0; c < ncols; c++) {\n      const yc = yv.subarray(c * nry, (c + 1) * nry)\n      const outc = out.subarray(c * nrows, (c + 1) * nrows);\n\n      for (let i = 0; i < ninner; i++) {\n         const yci = yc[i];\n         const xr = xv.subarray(i * nrx, (i + 1) * nrx)\n         for (let r = 0; r < nrows; r++) {\n            outc[r] += xr[r] * yci;\n         }\n      }\n   }\n\n   return out;\n}\n\n\n/**\n * Shuffles values in vector x using Fisher–Yates algorithm.\n *\n * @param {Arrat|TypedArray} x - a vector with values.\n *\n * @returns {Array|TypedArray} ector with shuffled values.\n *\n */\nexport function _shuffle(x) {\n\n  let y = x.slice();\n  let n = y.length;\n  let t, i;\n\n  while (n) {\n    i = Math.floor(Math.random() * n--);\n    t = y[n];\n    y[n] = y[i];\n    y[i] = t;\n  }\n\n  return y;\n}\n\n\n/**\n * Sorts values in a vector.\n *\n * @param {Array|TypedArray} x - vector with values.\n * @param {boolean} decreasing - should order be decreasing (true) or increasing (false).\n *\n * @returns {Array} array with two vectors: sorted values and indices of the sorted values.\n *\n */\nexport function _sort(x, decreasing = false) {\n   return decreasing ? x.slice().sort((a, b) => b - a) : x.slice().sort((a, b) => a - b);\n}\n\n\n/**\n * Sorts values in a vector.\n *\n * @param {Array|TypedArray} x - vector with values.\n * @param {boolean} decreasing - should order be decreasing (true) or increasing (false).\n *\n * @returns {Array} array with two vectors: sorted values and indices of the sorted values.\n *\n */\nexport function _sortind(x, decreasing = false) {\n   const ind = Index.seq(1, x.length).v;\n   return decreasing ? ind.sort((a, b) => x[b - 1] - x[a - 1]) : ind.sort((a, b) => x[a - 1] - x[b - 1]);\n}\n","<script>\n/***************************************************************\n * File                                                        *\n * --------------------                                        *\n * control element for uploading CSV files                     *\n ***************************************************************/\n\n   export let id;             // text ID for file input\n   export let file = null;    // container to get return the uploaded file\n\n   let fileInput;\n\n   function changeStatus(e) {\n      if (fileInput.files.length > 0) {\n         file = fileInput.files[0];\n      }\n   }\n</script>\n\n<label class:selected=\"{file !== null}\">\n   { file ? file.name : \"Select CSV file with dataset\" }\n   <input on:change={changeStatus} bind:this={fileInput} name={id} type=\"file\" accept=\".csv\">\n</label>\n\n<style>\n   input {\n      display: none;\n   }\n\n   label {\n      display: inline-block;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      overflow: hidden;\n      flex: 1 1;\n      min-width: 0;\n   }\n\n   label::before {\n      display: inline-block;\n      content: '\\21ea';\n      font-size: 1.2em;\n      margin: 0 0.5em 0 0em;\n   }\n\n   label.selected {\n      color: #909090;\n   }\n\n   label.selected::before {\n      content: '\\28FF\\28FF';\n      letter-spacing: -.25em;\n      color: #6EB8FF;\n      font-weight: bold;\n   }\n</style>","<script>\n/***************************************************************\n * Select                                                      *\n * --------------------                                        *\n * control element for selecting among a few options           *\n ***************************************************************/\n\n   export let id;                         // text ID of the input element\n   export let options;                    // array with all options\n   export let value = options[0];         // initial selected value\n\n</script>\n\n<div class=\"selector\">\n   {#each options as option (option)}\n   <div on:click={() => value = option} on:keydown={() => value = option} class=\"option\" class:selected={option==value}>\n   {@html option}\n   </div>\n   {/each}\n</div>\n<input name={id} bind:value={value}>\n\n<style>\n   input {\n      display: none;\n   }\n\n   .selector {\n      position: relative;\n      box-sizing: border-box;\n      display: inline-block;\n      flex: 0 0 auto;\n\n      font-size: 1em;\n      height: 1.5em;\n      line-height: 1.5em;\n      margin: 0;\n      padding: 0;\n      width: auto;\n      border-radius: 2px;\n      flex-grow: 1;\n      user-select: none;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n\n      display: flex;\n   }\n\n   .option {\n      cursor: default;\n      padding: 0 0.5em;\n      margin: 0 0.2em;\n      color: #606060;\n      background: #f0f0f0;\n      border: 1px solid transparent;\n      border-radius: 0.3em;\n   }\n\n   .option.selected {\n      background-color: #6EB8FF;\n      color: #fefefe;\n   }\n\n   .option:not(.selected):hover {\n      border: 1px solid #66abec;\n      background: #6eb8ff20;\n      color: #4777a4;\n   }\n</style>","<script>\n/***************************************************************\n * Container                                                   *\n * --------------------                                        *\n * a container for any control element                         *\n ***************************************************************/\n\n   export let label = null;   // text label (optional)\n   export let status = '';    // class name for status (e.g. 'hidden' or 'error')\n</script>\n\n<div class=\"control-element {status}\">\n   {#if label}\n   <span class=\"label\">{label}</span>\n   {/if}\n   <slot></slot>\n</div>\n\n<style>\n   .control-element {\n      font-size: 0.85em;\n      background: #fff;\n      padding: 0.5em 0.75em;\n      border-radius: 0;\n      display: flex;\n      justify-items: center;\n      justify-content: center;\n      align-items: center;\n      margin-bottom: 0.5px;\n   }\n\n   .control-element:first-of-type {\n      margin-top: 0.25rem;\n      border-top-left-radius: 0.25rem;\n      border-top-right-radius: 0.25rem;\n      margin-bottom: 1px;\n   }\n\n   .control-element:last-of-type {\n      margin-bottom: 0.25rem;\n      border-bottom-left-radius: 0.25rem;\n      border-bottom-right-radius: 0.25rem;\n   }\n\n   .hidden {\n      display: none;\n   }\n\n   .control-element.error {\n      background: crimson;\n      color: #fefefe;\n   }\n\n   .label {\n      padding-right: 1em;\n      flex-basis: 14ch;\n      flex-grow: 0;\n      flex-shrink: 0;\n      color: #606570;\n   }\n\n   .control-element > :global(.wrapper) {\n      flex: 1 1;\n   }\n\n   .control-element > :global(p) {\n      text-align: left;\n      flex-grow: 1;\n      padding: 0 0.25em;\n      margin: 0;\n      font-size: 0.9em;\n   }\n\n   .control-element > :global(.title) {\n      font-size: 1.05em;\n      font-weight: bold;\n      color: #303540;\n      flex-grow: 1;\n      padding: 0 0.25em 0 0;\n      margin: 0;\n   }\n</style>","<script>\n/***************************************************************\n * ButtonCancel                                                *\n * --------------------                                        *\n * control element in form of red circle button with cross     *\n ***************************************************************/\n   export let title = \"Reset\";\n</script>\n\n<button on:click alt={title} title={title} ></button>\n\n<style>\n\n   button {\n      background: #606060;\n      display: inline-block;\n      color: #fefefe;\n      font-size: 1em;\n      width: 1.3em;\n      height: 1.3em;\n      border: none;\n      border-radius: 50%;\n      box-shadow: none;\n      margin-left: 1.5em;\n      text-align: center;\n      padding: 0;\n      background-image:\n        url('data:image/svg+xml;utf8,<svg class=\"svg-icon\" style=\"width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;\" viewBox=\"-300 -300 1624 1624\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"%23FAFAFA\" d=\"M810.65984 170.65984q18.3296 0 30.49472 12.16512t12.16512 30.49472q0 18.00192-12.32896 30.33088l-268.67712 268.32896 268.67712 268.32896q12.32896 12.32896 12.32896 30.33088 0 18.3296-12.16512 30.49472t-30.49472 12.16512q-18.00192 0-30.33088-12.32896l-268.32896-268.67712-268.32896 268.67712q-12.32896 12.32896-30.33088 12.32896-18.3296 0-30.49472-12.16512t-12.16512-30.49472q0-18.00192 12.32896-30.33088l268.67712-268.32896-268.67712-268.32896q-12.32896-12.32896-12.32896-30.33088 0-18.3296 12.16512-30.49472t30.49472-12.16512q18.00192 0 30.33088 12.32896l268.32896 268.67712 268.32896-268.67712q12.32896-12.32896 30.33088-12.32896z\"/></svg>');\n   }\n\n   button:hover {\n      background-color: crimson;\n   }\n\n</style>\n","<script>\n/***************************************************************\n * Button                                                      *\n * --------------------                                        *\n * control element in form of rectangular button with text     *\n ***************************************************************/\n\n</script>\n\n<span class=\"wrapper\">\n<button class=\"button-rect\" on:click><slot></slot></button>\n</span>\n\n<style>\n\nbutton {\n   background: #606060;\n   display: inline-block;\n   color: #fefefe;\n   font-size: 0.9em;\n   padding: 0.2em 0.5em;\n   line-height: 1.5em;\n   border: none;\n   border-radius: 0.25em;\n   box-shadow: none;\n   text-align: center;\n   border: 1px solid transparent;\n}\n\nbutton:hover {\n   border-color: #6eb8ff;\n   background: #6eb8ff20;\n   color: #5086b9;\n}\n\n</style>\n","<script>\n   /*************************************************************/\n   /* Svelte component for loading dataset from CSV file       */\n   /*************************************************************/\n\n// Matrix and related methods\nimport { Matrix } from 'mdatools/arrays';\n\n// control elements\nimport FileSelector from '../../controls/File.svelte';\nimport Select from '../../controls/Select.svelte';\nimport ControlElementContainer from '../../controls/Container.svelte';\nimport ButtonCancel from '../../controls/ButtonCancel.svelte';\nimport Button from '../../controls/Button.svelte';\n\n// calibration set\nexport let dataset = null;\n\nlet x = null;\nlet dataFile = null;\nlet sep = \",\";\nlet firstColumn = \"values\";\nlet firstRow = \"header\"\n\nlet status = \"neutral\";\nlet errMsg = \"\";\n\n// possible delimeters\nconst sepOptions = [\",\", \";\"];\nconst firstRowOptions = [\"header\", \"values\"];\nconst firstColumnOptions = [\"labels\", \"values\"];\n\n// gets CSV content as one large string, parse it into matrix\nfunction setData(strData) {\n   try{\n      dataset = Matrix.parseCSV(\n         strData,\n         sep,\n         firstRow === \"header\",\n         firstColumn === \"labels\"\n      );\n\n      if (dataset.values.nrows < 3 || dataset.values.ncols < 3) {\n         throw new Error(\"Dataset must have at least 3 rows and 3 columns\")\n      }\n      errMsg = \"\"\n      status = \"success\";\n   } catch (e) {\n      dataset = null;\n      status = \"error\";\n      errMsg = e;\n   }\n}\n\n// promise for reading the CSV file\nfunction readFile (e) {\n   const reader = new FileReader()\n   reader.onload = () => setData(reader.result);\n   reader.readAsBinaryString(dataFile)\n}\n\n// reset whole component to initial state\nfunction reset () {\n   dataset = null;\n   dataFile = null;\n}\n\n// reactive expression for tracking changes of 'dataFile'\n$: if (dataFile === null) {\n   // if data file is empty reset status and error messages\n   reset();\n} else {\n   // if not just remove error messages if any\n   status = \"neutral\";\n   errMsg = \"\";\n}\n\n// reactive expression for tracking changes of 'sep'\n$: if (sep) {\n   // if separator was changed remove error message\n   status = \"neutral\";\n   errMsg = \"\";\n}\n\n</script>\n\n{#if dataset === null}\n\n<!-- show if data is not loaded -->\n<!-- reset component if dataFile is changed inside -->\n{#key dataFile === undefined}\n<ControlElementContainer>\n   <FileSelector id=\"dataFile\" bind:file={dataFile} />\n</ControlElementContainer>\n{/key}\n\n<!-- show if file is selected but data is not loaded -->\n{#if dataFile}\n<ControlElementContainer label=\"Delimiter:\">\n   <Select id=\"sep\" bind:value={sep} options={sepOptions} />\n</ControlElementContainer>\n<ControlElementContainer label=\"First row:\">\n   <Select id=\"firstRow\" bind:value={firstRow} options={firstRowOptions} />\n</ControlElementContainer>\n<ControlElementContainer label=\"First column:\">\n   <Select id=\"firstColumn\" bind:value={firstColumn} options={firstColumnOptions} />\n</ControlElementContainer>\n<ControlElementContainer label=\"&nbsp;\">\n   <Button on:click={readFile}>Load</Button>\n</ControlElementContainer>\n{/if}\n\n{:else}\n\n<!-- dataset is loaded - show info and cancel button -->\n<ControlElementContainer>\n<p>Dataset is loaded: {dataset.values.nrows} &times; {dataset.values.ncols},\n   {dataset.header.length === 0 ? \"no header\" : \"with header\"}</p>\n   <ButtonCancel on:click={reset} />\n</ControlElementContainer>\n{/if}\n\n<!-- error message -->\n{#if status === \"error\" || errMsg}\n<ControlElementContainer status=\"error\">\n   <p>{errMsg}</p>\n</ControlElementContainer>\n{/if}\n\n","<script>\n/***************************************************************\n * Spinner                                                     *\n * --------------------                                        *\n * shows an active spinner                                     *\n ***************************************************************/\n\n</script>\n\n\n<div class=\"spinner\"></div>\n\n<style>\n\n.spinner {\n   display: inline-block;\n   height: 1.5em;\n   line-height: 1.5em;\n   width: 1.5em;\n   margin: 0 0.5em;\n}\n\n.spinner:after {\n  content: \" \";\n  display: block;\n  width: 0.8em;\n  height: 0.8em;\n  margin: 0.1em;\n  border-radius: 50%;\n  border: 0.2em solid #6eb8ff;\n  border-color: #6eb8ff transparent #6eb8ff transparent;\n  animation: spinner 1.2s linear infinite;\n}\n\n@keyframes spinner {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>","import { ismatrix, Matrix } from 'mdatools/arrays';\nimport { qchisq } from 'mdatools/distributions';\n\n// zero level for distance parameters (if below, set Nu = 0)\nconst ZERO = Math.pow(10,-16);\n\n/**\n * Returns length of array with PCA results.\n *\n * @param {number} nrows number of rows in a dataset.\n * @param {number} ncomp number of components in the model.\n *\n * @returns {number} the length of the results array.\n */\nexport function pca_getreslength(nrows, ncomp) {\n\n   // Structure of PCA results:\n   // - T: nr x ncomp\n   // - H: nr x ncomp\n   // - Q: nr x ncomp\n   // - expvar: 1 x ncomp\n\n   return 3 * nrows * ncomp + ncomp;\n}\n\n/**\n * Returns length of array with PCA model.\n * @param {number} ncols number of columns in calibration set (number of variables).\n * @param {number} ncomp number of components\n *\n * @returns {number} the length of the model array.\n */\nexport function pca_getmodellength(ncols, ncomp) {\n\n   // Structure of PCA model:\n   // - mX: 1 x ncols\n   // - sX: 1 x ncols\n   // - P: ncols x ncomp\n   // - eigenvals: 1 x ncomp\n   // - Q_mean: 1 x ncomp\n   // - Q_sd: 1 x ncomp\n   // - Q_median: 1 x ncomp\n   // - Q_iqr: 1 x ncomp\n   // - H_mean: 1 x ncomp\n   // - H_sd: 1 x ncomp\n   // - H_median: 1 x ncomp\n   // - H_iqr: 1 x ncomp\n\n   return 2 * ncols + ncols * ncomp + 9 * ncomp;\n}\n\n/**\n * Returns part of PCA model array for given outcome.\n *\n * @param {TypedArray} m array with PCA model.\n * @param {string} name name of the outcome (e.g. 'mX', 'sX', 'loadings', etc.).\n * @param {number} a component number (for loadings).\n *\n * @returns {TypedArray} array with outcomes (by reference).\n */\nexport function pcamodel_get(m, name, a) {\n\n   if (!m || !m.class || m.class !== 'pcamodel') {\n      throw new Error('pcamodel_get: parameter \"m\" must be JSON with PCA model.');\n   }\n\n   const ncols = m.ncols;\n   const ncomp = m.ncomp;\n   let offset, length;\n\n   switch(name) {\n      case 'mX':\n         offset = 0;\n         length = ncols;\n         break;\n      case 'sX':\n         offset = ncols;\n         length = ncols;\n         break;\n      case 'loadings':\n         offset = 2 * ncols + (a - 1) * ncols;\n         length = ncols;\n         break;\n      case 'eigenvals':\n         offset = 2 * ncols + ncols * ncomp;\n         length = ncomp;\n         break;\n      case 'qmean':\n         offset = 2 * ncols + ncols * ncomp + ncomp;\n         length = ncomp;\n         break;\n      case 'qsd':\n         offset = 2 * ncols + ncols * ncomp + 2 * ncomp;\n         length = ncomp;\n         break;\n      case 'qmedian':\n         offset = 2 * ncols + ncols * ncomp + 3 * ncomp;\n         length = ncomp;\n         break;\n      case 'qiqr':\n         offset = 2 * ncols + ncols * ncomp + 4 * ncomp;\n         length = ncomp;\n         break;\n      case 'hmean':\n         offset = 2 * ncols + ncols * ncomp + 5 * ncomp;\n         length = ncomp;\n         break;\n      case 'hsd':\n         offset = 2 * ncols + ncols * ncomp + 6 * ncomp;\n         length = ncomp;\n         break;\n      case 'hmedian':\n         offset = 2 * ncols + ncols * ncomp + 7 * ncomp;\n         length = ncomp;\n         break;\n      case 'hiqr':\n         offset = 2 * ncols + ncols * ncomp + 8 * ncomp;\n         length = ncomp;\n         break;\n      default:\n         throw Error(\"pcamodel_get: wrong outcome name.\");\n   }\n\n   return m.v.subarray(offset, offset + length);\n}\n\n/**\n * Returns distance parameters (u0, Nu) for PCA model.\n * @param {Object} model a PCA model\n * @param {string} name name of distance (\"q\" or \"h\").\n * @param {number} a component number.\n * @param {string} type distance type (\"classic\" or \"robust\").\n *\n * @return {Object} JSON with two arrays u0 and Nu.\n */\nexport function pcamodel_get_distparams(m, name, type) {\n   if (!m || !m.class || m.class !== 'pcamodel') {\n      throw new Error('pcamodel_get_distparams: parameter \"model\" must be JSON with PCA model.');\n   }\n\n   if (!name) name = 'q';\n   if (!type) type = 'classic';\n\n   const Nu = new m.v.constructor(m.ncomp);\n\n   if (type == 'robust') {\n      const u0 = new m.v.constructor(m.ncomp);\n      const Mu = pcamodel_get(m, name + 'median');\n      const Su = pcamodel_get(m, name + 'iqr');\n\n      for (let i = 0; i < m.ncomp; i++) {\n\n         if (Su[i] < ZERO  ) {\n            u0[i] = ZERO;\n            Nu[i] = 1;\n            continue;\n         }\n\n         const RM = Su[i] / Mu[i];\n         let Nu_i;\n         if (RM > 2.685592117) {\n            Nu_i = 1;\n         } else if (RM < 0.194565995) {\n            Nu_i = 100;\n         } else {\n            Nu_i = Math.round(Math.exp(Math.pow(1.380948 * Math.log(2.68631 / RM), 1.185785)));\n         }\n\n         const a = qchisq(0.75, Nu_i) - qchisq(0.25, Nu_i);\n         const b = qchisq(0.5, Nu_i);\n         u0[i] = 0.5 * Nu_i * (Mu[i]/b + Su[i]/a);\n         Nu[i] = Nu_i > 250 ? 250 : Nu_i;\n      }\n\n      return {u0, Nu};\n   }\n\n   const u0 = pcamodel_get(m, name + 'mean');\n   const su = pcamodel_get(m, name + 'sd');\n   for (let i = 0; i < m.ncomp; i++) {\n      if (su[i] < ZERO) {\n         Nu[i] = 1;\n      } else {\n         const Nu_l = 2 * (u0[i] / su[i]) ** 2;\n         Nu[i] = Nu_l < 1 ? 1 : Nu_l > 250 ? 250 : Math.round(Nu_l);\n      }\n   }\n\n   return {u0, Nu};\n}\n\n/**\n * Returns part of PCA result array for given outcome.\n *\n * @param {TypedArray} r array with PCA results.\n * @param {string} name name of the outcome (e.g. 'scores', 'hdist', 'qdist', 'expvar').\n * @param {number} a component number (for scores and distances).\n *\n * @returns {TypedArray} array with outcomes (by reference).\n */\nexport function pcares_get(r, name, a) {\n\n   if (!r || !r.class || r.class !== 'pcares') {\n      throw new Error('pcares_get: parameter \"r\" must be JSON with PCA results.');\n   }\n\n   const nrows = r.nrows;\n   const ncomp = r.ncomp;\n   let offset, length;\n\n   switch(name) {\n      case 'scores':\n         offset = (a - 1) * nrows;\n         length = nrows;\n         break;\n      case 'hdist':\n         offset = nrows * ncomp + (a - 1) * nrows;\n         length = nrows;\n         break;\n      case 'qdist':\n         offset = 2 * nrows * ncomp + (a - 1) * nrows;\n         length = nrows;\n         break;\n      case 'cumexpvar':\n         offset = 3 * nrows * ncomp;\n         length = ncomp;\n         break;\n      default:\n         throw new Error('pcares_get: wrong outcome name.');\n   }\n\n   return r.v.subarray(offset, offset + length);\n}\n\n\n/**\n * Creates a PCA model using wasm implementation.\n *\n * @param {Object} Module object with wasm module for PCVPCA.\n * @param {Matrix} X matrix with calibration set.\n * @param {number} ncomp number of components.\n * @param {boolean} center mean center the data columns or not.\n * @param {boolean} scale standardize the data columns or not.\n *\n * @returns {Array} array with to JSONs - for PCA model and calibration set results.\n */\nexport function pca_fit(Module, X, ncomp, center, scale) {\n\n   if (ncomp === undefined) {\n      ncomp = Math.min(X.nrows - 1, X.ncols);\n   }\n\n   if (center === undefined) {\n      center = true;\n   }\n\n   if (scale === undefined) {\n      scale = false;\n   }\n\n   if (!ismatrix(X)) {\n      throw new Error(\"pca_fit: X must be a matrix.\");\n   }\n\n   if (X.nrows < 3 || X.ncols < 2) {\n      throw new Error(\"pca_fit: X must have at least 3 rows and 2 columns.\");\n   }\n\n   if (ncomp < 1 || ncomp > Math.min(X.nrows - 1, X.ncols)) {\n      throw new Error(\"pca_fit: the value of 'ncomp' does not match the dimension of X.\");\n   }\n\n   // allocate memory in WASM heap space and copy dataset values\n   const x_ptr = Module._malloc(X.v.length * X.v.BYTES_PER_ELEMENT);\n   Module.HEAPF64.set(X.v, x_ptr / X.v.BYTES_PER_ELEMENT);\n\n   // allocate memory in WASM heap space for model and calibration set results outcomes\n   const m_length = pca_getmodellength(X.ncols, ncomp);\n   const r_length = pca_getreslength(X.nrows, ncomp);\n   const o_length = m_length + r_length;\n   const o_constructor = Float64Array;\n   const o_ptr = Module._malloc(o_length * o_constructor.BYTES_PER_ELEMENT);\n\n   // call WASM function for PCA\n   Module.ccall('pcafit_wasm',\n               [], // return type\n               ['number', 'number', 'number', 'number', 'number', 'number', 'number'], // argument types\n               [x_ptr, X.nrows, X.ncols, ncomp, center, scale, o_ptr]); // arguments\n\n   // copy part of HEAP memory with model outcomes\n   const model = Module.HEAPF64.slice(\n      o_ptr/o_constructor.BYTES_PER_ELEMENT,\n      o_ptr/o_constructor.BYTES_PER_ELEMENT + m_length\n   );\n\n   // copy part of HEAP memory with calibration set results\n   const calres = Module.HEAPF64.slice(\n      o_ptr/o_constructor.BYTES_PER_ELEMENT + m_length,\n      o_ptr/o_constructor.BYTES_PER_ELEMENT + m_length + r_length\n   );\n\n   // free the memory\n   Module._free(x_ptr);\n   Module._free(o_ptr);\n\n   // return PCA model and result objects\n   return [\n      {\n         class: \"pcamodel\",\n         v: model,\n         ncomp: ncomp,\n         nrows: X.nrows,\n         ncols: X.ncols,\n         center: center,\n         scale: scale\n      },\n      {\n         class: \"pcares\",\n         v: calres,\n         ncomp: ncomp,\n         nrows: X.nrows,\n         ncols: X.ncols,\n         center: center,\n         scale: scale\n      }\n   ];\n}\n\n\n/**\n * Projects dataset to a PCA model.\n *\n * @param {Object} Module object with wasm module for PCVPCA.\n * @param {Object} m JSON with PCA model created by `pca_fit()`.\n * @param {Matrix} X matrix with dataset.\n *\n * @returns {Object} JSON with PCA results.\n */\nexport function pca_predict(Module, m, X) {\n\n   if (!m || !m.class || m.class !== 'pcamodel') {\n      throw new Error('pca_predict: parameter \"m\" must be JSON with PCA results.');\n   }\n\n   if (!ismatrix(X)) {\n      throw new Error(\"pca_predict: X must be a matrix.\");\n   }\n\n   if (X.nrows < 1) {\n      throw new Error(\"pca_fit: X must have at least 1 row.\");\n   }\n\n   if (X.ncols !== m.ncols) {\n      throw new Error(\"pca_fit: X must have the same number of columns as the training set.\");\n   }\n\n   // allocate memory in WASM heap space and copy dataset values\n   const x_ptr = Module._malloc(X.v.length * X.v.BYTES_PER_ELEMENT);\n   Module.HEAPF64.set(X.v, x_ptr / X.v.BYTES_PER_ELEMENT);\n\n   // allocate memory in WASM heap space and copy model values\n   const m_ptr = Module._malloc(m.v.length * m.v.BYTES_PER_ELEMENT);\n   Module.HEAPF64.set(m.v, m_ptr / m.v.BYTES_PER_ELEMENT);\n\n   // allocate memory in WASM heap space for result values\n   const r_length = pca_getreslength(X.nrows, m.ncomp);\n   const r_constructor = Float64Array;\n   const r_ptr = Module._malloc(r_length * r_constructor.BYTES_PER_ELEMENT);\n\n   // call WASM function for PCA prediction\n   Module.ccall('pcapredict_wasm',\n               [], // return type\n               ['number', 'number', 'number', 'number', 'number', 'number'], // argument types\n               [x_ptr, X.nrows, X.ncols, m.ncomp, m_ptr, r_ptr]); // arguments\n\n   // copy part of HEAP memory with result values\n   const res = Module.HEAPF64.slice(\n      r_ptr/r_constructor.BYTES_PER_ELEMENT,\n      r_ptr/r_constructor.BYTES_PER_ELEMENT + r_length\n   );\n\n   // free the memory\n   Module._free(x_ptr);\n   Module._free(m_ptr);\n   Module._free(r_ptr);\n\n   // return PCA results\n   return {\n      class: \"pcares\",\n      v: res,\n      ncomp: m.ncomp,\n      nrows: X.nrows,\n      ncols: X.ncols,\n      center: m.center,\n      scale: m.scale\n   };\n}\n\n\n/**\n * Create a PV-set based on PCA decomposition.\n *\n * @param {Object} Module object with wasm module for PCVPCA.\n * @param {Object} m JSON with PCA model created by `pca_fit()`.\n * @param {Matrix} X matrix with dataset.\n * @param {number} ncomp number of components for PV-set generation.\n * @param {number} cv_nseg number of segments for cross-validation.\n * @param {number} cv_type type of cross-validation (0: loo, 1: ven, 2: rand).\n * @param {number} cv_scope scope of cross-validation (0: global, 1: local).\n *\n * @returns {Matrix} the generated PV-set.\n */\nexport function pcvpca(Module, m, X, ncomp, cv_nseg, cv_type, cv_scope) {\n\n   if (!m || !m.class || m.class !== 'pcamodel') {\n      throw new Error('pcapcv: parameter \"m\" must be JSON with PCA results.');\n   }\n\n   if (!ismatrix(X)) {\n      throw new Error('pcapcv: X must be a matrix.');\n   }\n\n   if (X.nrows < 3) {\n      throw new Error('pcapcv: X must have at least 3 rows.');\n   }\n\n   if (X.ncols !== m.ncols) {\n      throw new Error('pcapcv: X must have the same number of columns as the training set.');\n   }\n\n   if (!Number.isInteger(cv_type) || ![0, 1, 2].includes(cv_type)) {\n      throw new Error('pcapcv: parameter \"cv_type\" must be one of 0 (\"loo\"), 1 (\"ven\"), 2 (\"rand).');\n   }\n\n   if (!Number.isInteger(cv_scope) || ![0, 1].includes(cv_scope)) {\n      throw new Error('pcapcv: parameter \"cv_scope\" must be 0 (\"global\") or 1 (\"local\").');\n   }\n\n   if (cv_type > 0 && (!Number.isInteger(cv_nseg) || cv_nseg < 2)) {\n      throw new Error('pcapcv: parameter \"cv_nseg\" must be a number ≥ 2.');\n   }\n\n   if (cv_type > 0 && cv_nseg > X.nrows) {\n      throw new Error('pcapcv: the value of \"cv_nseg\" is too large for the given X.');\n   }\n\n   if (!Number.isInteger(ncomp) || ncomp < 1) {\n      throw new Error('pcapcv: the value of \"ncomp\" must be a number >= 1.');\n   }\n\n   const max_ncomp = cv_type === 0 ?\n      Math.min(X.nrows - 2, X.ncols, m.ncomp) :\n      Math.min(X.nrows - Math.ceil(X.nrows / cv_nseg) - 1, X.ncols, m.ncomp);\n\n   if (ncomp > max_ncomp) {\n      throw new Error('pcapcv: the value of \"ncomp\" is too large.');\n   }\n\n\n   // allocate memory in WASM heap space and copy dataset values\n   const x_ptr = Module._malloc(X.v.length * X.v.BYTES_PER_ELEMENT);\n   Module.HEAPF64.set(X.v, x_ptr / X.v.BYTES_PER_ELEMENT);\n\n   // allocate memory in WASM heap space and copy model values\n   const m_ptr = Module._malloc(m.v.length * m.v.BYTES_PER_ELEMENT);\n   Module.HEAPF64.set(m.v, m_ptr / m.v.BYTES_PER_ELEMENT);\n\n   // allocate memory in WASM heap space for Xpv values\n   const xpv_length = X.v.length;\n   const xpv_constructor = X.v.constructor;\n   const xpv_ptr = Module._malloc(xpv_length * xpv_constructor.BYTES_PER_ELEMENT);\n\n   // call WASM function for PCAPCV\n   Module.ccall('pcvpca_wasm',\n               [], // return type\n               ['number', 'number', 'number', 'number', 'number', 'number',\n               'number', 'number', 'number', 'number', 'number'], // argument types\n               [x_ptr, X.nrows, X.ncols, ncomp, m.center, m.scale,\n               cv_type, cv_nseg, cv_scope, m_ptr, xpv_ptr]); // arguments\n\n   // copy part of HEAP memory with Xpv values\n   const xpv = Module.HEAPF64.slice(\n      xpv_ptr/xpv_constructor.BYTES_PER_ELEMENT,\n      xpv_ptr/xpv_constructor.BYTES_PER_ELEMENT + xpv_length\n   );\n\n   // free the memory\n   Module._free(x_ptr);\n   Module._free(m_ptr);\n   Module._free(xpv_ptr);\n\n   // return Xpv\n   return new Matrix(xpv, X.nrows, X.ncols);\n}\n","\nvar PCV = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nasync function(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_NODE){const{createRequire:createRequire}=await import(\"module\");var require=createRequire(import.meta.url);var fs=require(\"fs\");var nodePath=require(\"path\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\"}else{scriptDirectory=require(\"url\").fileURLToPath(new URL(\"./\",import.meta.url))}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror,binary=true)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,binary?undefined:\"utf8\",(err,data)=>{if(err)onerror(err);else onload(binary?data.buffer:data)})};if(!Module[\"thisProgram\"]&&process.argv.length>1){thisProgram=process.argv[1].replace(/\\\\/g,\"/\")}arguments_=process.argv.slice(2);quit_=(status,toThrow)=>{process.exitCode=status;throw toThrow};Module[\"inspect\"]=()=>\"[Emscripten Module object]\"}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;if(Module[\"locateFile\"]){wasmBinaryFile=\"pcvpca_wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}}else{wasmBinaryFile=new URL(\"pcvpca_wasm.wasm\",import.meta.url).href}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(binaryFile)){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+binaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(()=>getBinarySync(binaryFile))}else if(readAsync){return new Promise((resolve,reject)=>{readAsync(binaryFile,response=>resolve(new Uint8Array(response)),reject)})}}return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(instance=>instance).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(binaryFile)&&!isFileURI(binaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(`wasm streaming compile failed: ${reason}`);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(binaryFile,imports,callback)})})}return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){var exports=instance.exports;wasmExports=exports;wasmMemory=wasmExports[\"d\"];updateMemoryViews();wasmTable=wasmExports[\"k\"];addOnInit(wasmExports[\"e\"]);removeRunDependency(\"wasm-instantiate\");return exports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var _emscripten_date_now=()=>Date.now();var _emscripten_memcpy_big=(dest,src,num)=>HEAPU8.copyWithin(dest,src,src+num);var getHeapMax=()=>2147483648;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};var getCFunc=ident=>{var func=Module[\"_\"+ident];return func};var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer)};var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var ccall=(ident,returnType,argTypes,args,opts)=>{var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};var wasmImports={b:_emscripten_date_now,c:_emscripten_memcpy_big,a:_emscripten_resize_heap};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"e\"])();var _pcafit_wasm=Module[\"_pcafit_wasm\"]=(a0,a1,a2,a3,a4,a5,a6)=>(_pcafit_wasm=Module[\"_pcafit_wasm\"]=wasmExports[\"f\"])(a0,a1,a2,a3,a4,a5,a6);var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"g\"])(a0);var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"h\"])(a0);var _pcapredict_wasm=Module[\"_pcapredict_wasm\"]=(a0,a1,a2,a3,a4,a5)=>(_pcapredict_wasm=Module[\"_pcapredict_wasm\"]=wasmExports[\"i\"])(a0,a1,a2,a3,a4,a5);var _pcvpca_wasm=Module[\"_pcvpca_wasm\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(_pcvpca_wasm=Module[\"_pcvpca_wasm\"]=wasmExports[\"j\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var ___errno_location=()=>(___errno_location=wasmExports[\"__errno_location\"])();var stackSave=()=>(stackSave=wasmExports[\"l\"])();var stackRestore=a0=>(stackRestore=wasmExports[\"m\"])(a0);var stackAlloc=a0=>(stackAlloc=wasmExports[\"n\"])(a0);Module[\"ccall\"]=ccall;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg.ready\n}\n\n);\n})();\nexport default PCV;","<script>\nimport Select from '../../controls/Select.svelte';\nimport ControlElementContainer from '../../controls/Container.svelte';\nimport ButtonCancel from '../../controls/ButtonCancel.svelte';\nimport Button from '../../controls/Button.svelte';\nimport Spinner from '../../controls/Spinner.svelte';\n\nimport { pcvpca, pca_predict } from './wasm/pcvpca.js';\nimport PCV from './wasm/pcvpca_wasm.js';\n\nexport let dataset = null;\nexport let model = null;\nexport let pvset = null\nexport let pvres = null\n\nlet nseg = 4;\nlet cvtypeOptions = ['ven', 'rand', 'loo'];\nlet cvType = 'ven';\nlet status = 'neutral';\nlet errMsg = null;\nlet promise;\n\n$: if (dataset && dataset.values && dataset.values.nrows < 4) {\n   cvtypeOptions = ['loo'];\n   cvType = 'loo';\n}\n\nfunction downloadPVSet(e) {\n   const blob = new Blob([pvset.toCSV(dataset.sep, dataset.dec, dataset.header, dataset.labels)], { type: 'text/csv' });\n   const url = window.URL.createObjectURL(blob)\n   const a = document.createElement('a')\n   a.setAttribute('href', url)\n   a.setAttribute('download', 'pvset.csv');\n   a.click()\n}\n\nasync function computePVSet(data, model, cv) {\n   promise = PCV()\n      .then(Module => {\n         const cv_type = cv.type == 'loo' ? 0 : cv.type == 'rand' ? 2 : 1;\n         pvset = pcvpca(Module, model, data, model.ncomp, cv.nseg, cv_type, 0);\n         pvres = pca_predict(Module, model, pvset);\n      })\n      .catch((e) => {\n         status = 'error';\n         errMsg = e;\n      });\n}\n\nfunction compute(e) {\n   computePVSet(dataset.values, model, {type: cvType, nseg: nseg});\n}\n\nfunction reset() {\n   status = 'neutral';\n   errMsg = null;\n   promise = null;\n   pvset = null;\n}\n\n// if data file is empty reset status and error messages\n$: if (model === null) reset();\n\n// adjust options for number of CV segments based on dataset size\n$: nsegOptions = dataset && dataset.values.nrows > 0 ?\n   [2, 3, 4, 5, 10, 20].filter(v => v <= dataset.values.nrows / 2 ) : [];\n\n</script>\n\n\n{#if (model && !pvset) && status !== 'busy'}\n<ControlElementContainer label='Split type:'>\n   <Select id='cvType' bind:value={cvType} options={cvtypeOptions} />\n</ControlElementContainer>\n\n{#if cvType !== 'loo'}\n<ControlElementContainer label='Segments:'>\n   <Select id='nseg' bind:value={nseg} options={nsegOptions} />\n</ControlElementContainer>\n{/if}\n\n<ControlElementContainer label=' '>\n   <Button on:click={compute}>Compute PV-set</Button>\n</ControlElementContainer>\n{/if}\n\n{#if promise}\n\n{#await promise}\n   <ControlElementContainer>\n      <Spinner />\n      <p>Computing PV-set...</p>\n   </ControlElementContainer>\n{:then value}\n   {#if pvset !== null}\n   <ControlElementContainer>\n      <p>PV-set is computed: {pvset.nrows} &times; {pvset.ncols}</p>\n      <ButtonCancel on:click={reset} />\n   </ControlElementContainer>\n   <ControlElementContainer label=' '>\n      <Button on:click={downloadPVSet}>Download</Button>\n   </ControlElementContainer>\n   {/if}\n\n{:catch error}\n   <ControlElementContainer status='error'>\n      <p>{error}</p>\n   </ControlElementContainer>\n{/await}\n\n{/if}\n\n\n{#if status === 'error' && errMsg}\n   <ControlElementContainer status='error'>\n      <p>{errMsg}</p>\n   </ControlElementContainer>\n{/if}\n\n","<script>\n/***************************************************************\n * Range                                                       *\n * --------------------                                        *\n * control element for taking a numeric value from a range     *\n ***************************************************************/\n\n   import { createEventDispatcher } from 'svelte';\n\n   export let id;                                        // text ID for the input element\n   export let value;                                     // initial value\n   export let min;                                       // smallest value of the range\n   export let max;                                       // largest value of the range\n   export let decNum = 1;                                // number of decimals to show the current value\n   export let step = +((max - min) / 100).toFixed(4);    // increment/decrement step\n\n\n   if (value < min || value > max) {\n      throw new Error('The value is outside of the provided range.');\n   }\n\n   const dispatch = createEventDispatcher();\n\n   let sliderElement;\n   let sliderContainer;\n   let isDragging = false;\n\n   const computeValue = (p) => {\n      const tmpValue = min + p * (max - min);\n\n      // strange construction below is needed for:\n      // a. make a value fractionated according to step\n      // b. get rid of small decimals added by JS due to loss of precision\n      return(+(Math.round(tmpValue / step) * step).toFixed(4));\n   }\n\n   /**\n    * Returns relative position of the element 'e' inside the slider\n    * @param e\n    */\n   const getRelativePosition = (e) => {\n      const sliderRect = sliderElement.getBoundingClientRect();\n      const parentRect = sliderContainer.getBoundingClientRect();\n      const minX = sliderRect.x;\n      const maxX = parentRect.x + parentRect.width;\n\n      return (e.clientX - minX) / (maxX - minX);\n   }\n\n   /**\n    * Handler of changing start event\n    * @param e\n    */\n   const startChanging = (e) => {\n      const p = getRelativePosition(e);\n      if (p < 0 || p > 1) return;\n      isDragging = p * 100 > width - 5 && p * 100 < width + 5;\n   }\n\n   /**\n    * Handler of changing cancel event\n    * @param e\n    */\n   const cancelChanging = (e) => {\n      isDragging = false;\n   }\n\n   /**\n    * Handler of changing stop event\n    * @param e\n    */\n   const stopChanging = (e) => {\n      isDragging = false;\n      const p = getRelativePosition(e);\n      if (p < 0 || p > 1) return;\n\n      value = computeValue(p);\n   }\n\n   /**\n    * Handler of event when changes are made by mouse wheel\n    * @param e\n    */\n   const changingByWheel = (e) => {\n      let newValue = value + step * e.deltaY * 0.5;\n      if (newValue < min) newValue = min;\n      if (newValue > max) newValue = max;\n\n      value = +(Math.round(newValue / step) * step).toFixed(4);\n   }\n\n   /**\n    * Handler of event when changes are made by dragging an element\n    * @param e\n    */\n   const changing = (e) => {\n      if (!isDragging) return;\n      const p = getRelativePosition(e);\n      if (p < 0 || p > 1) return;\n\n      value = computeValue(p);\n   }\n\n\n   $: width = (value - min) / (max - min) * 100;\n   $: dispatch(\"change\", value);\n</script>\n\n<div\n   class=\"range-slider-container\"\n   bind:this={sliderContainer}\n   on:mousewheel|preventDefault={changingByWheel}\n   on:mousemove={changing}\n   on:mousedown={startChanging}\n   on:mouseleave={cancelChanging}\n   on:mouseup={stopChanging}>\n\n   <div class=\"range-slider\" style=\"width:{width}%\" bind:this={sliderElement}></div>\n</div>\n<span class=\"range-value\">{value.toFixed(decNum)}</span>\n<input type=\"range\" name={id} step={step} bind:value={value} min={min} max={max}>\n\n<style>\n   .range-slider-container {\n      position: relative;\n      box-sizing: border-box;\n      display: inline-block;\n      flex: 1 1 auto;\n      background: #f0f0f0;\n      height: 1.5em;\n      margin: 0;\n      padding: 1px 0;\n      width: auto;\n      border-radius: 2px;\n\n      user-select: none;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n\n   }\n\n   .range-slider {\n      position: relative;\n      display: inline-block;\n      box-sizing: border-box;\n      background: #6EB8FF;\n      border-radius: 2px;\n      text-align: right;\n      color: #fafafa;\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      cursor:default;\n      border-right: 5px solid #528abe;\n      user-select: none;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n   }\n\n   .range-value {\n      display: inline-block;\n      right: 0;\n      top: 0;\n      font-size: 0.85em;\n      padding: 1px 0em 1px 0.5em;\n      color: #606060;\n      line-height: 1.6em;\n      user-select: none;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n   }\n\n   input {\n      display: none;\n      width: 100%;\n   }\n</style>\n\n","<script>\n\nimport ControlElementContainer from '../../controls/Container.svelte';\nimport ButtonCancel from '../../controls/ButtonCancel.svelte';\nimport Button from '../../controls/Button.svelte';\nimport Range from '../../controls/Range.svelte';\nimport Select from '../../controls/Select.svelte';\nimport Spinner from '../../controls/Spinner.svelte';\n\nimport { pca_fit } from './wasm/pcvpca.js';\nimport PCV from './wasm/pcvpca_wasm.js';\n\nexport let dataset = null;\nexport let model = null;\nexport let calres = null;\n\nlet promise;\nlet status = \"neutral\";\nlet errMsg = null;\nlet ncomp;\nlet center = \"yes\";\nlet scale = \"no\"\n\nasync function computeModel(data, ncomp, center, scale) {\n   promise = PCV()\n      .then(Module => {\n         [model, calres] = pca_fit(Module, data, ncomp, center, scale);\n         status = \"success\";\n      })\n      .catch(e =>{\n         status = \"error\";\n         errMsg = e;\n      });\n}\n\nfunction compute(e) {\n   computeModel(dataset.values, ncomp, center === \"yes\", scale === \"yes\");\n}\n\nfunction reset() {\n   status = \"neutral\";\n   promise = null;\n   model = null;\n   errMsg = null;\n}\n\n// if data file is empty reset status and error messages\n$: if (dataset === null) reset();\n$: maxNComp = dataset ? Math.min(dataset.values.nrows - 2, dataset.values.ncols - 1) : null;\n$: ncomp = maxNComp ? Math.min(maxNComp, 20) : null;\n</script>\n\n{#if promise}\n\n{#await promise}\n\n<ControlElementContainer>\n   <Spinner />\n   <p>Computing global model...</p>\n</ControlElementContainer>\n\n{:then value}\n   <!-- status if succeed -->\n   {#if model !== null}\n   <ControlElementContainer>\n      <p>Global model is computed: {model.ncomp} PCs</p>\n      <ButtonCancel on:click={reset} />\n   </ControlElementContainer>\n   {/if}\n\n{:catch error}\n   <!-- error message if failed -->\n   <ControlElementContainer status=\"error\">\n      <p>{error}</p>\n   </ControlElementContainer>\n   {/await}\n\n{:else}\n   <!-- settings for global model calculation -->\n   {#if dataset && !model}\n   <ControlElementContainer label=\"# of PCs\">\n      <Range id=\"ncomp\" bind:value={ncomp} min={1} max={maxNComp} step={1} decNum={0} />\n   </ControlElementContainer>\n   <ControlElementContainer label=\"Center\">\n      <Select id=\"center\" bind:value={center} options={[\"yes\", \"no\"]} />\n   </ControlElementContainer>\n   <ControlElementContainer label=\"Scale\">\n      <Select id=\"scale\" bind:value={scale} options={[\"yes\", \"no\"]} />\n   </ControlElementContainer>\n   <ControlElementContainer label=\" \">\n      <Button on:click={compute}>Create model</Button>\n   </ControlElementContainer>\n   {/if}\n\n{/if}\n\n<!-- error message -->\n{#if status === \"error\" || errMsg}\n<ControlElementContainer status=\"error\">\n   <p>{errMsg}</p>\n</ControlElementContainer>\n{/if}\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","import { cbind, vector, isvector, Vector } from 'mdatools/arrays';\n\n/**\n * Check coordinates and convert them to vector if necessary.\n *\n * @param {Array|Vector} x - vector or array with coordinates.\n * @param {string} source - name of component which called the method (needed for error message).\n *\n * @returns {Vector}\n *\n */\nexport function checkCoords(x, source) {\n\n   if (Array.isArray(x)) {\n      x = vector(x);\n   }\n\n   if (!isvector(x)) {\n      throw Error(source + \": coordinates must be provided as array or instance of Vector class.\");\n   }\n\n   if (x.length < 1) {\n      throw Error(source + \": vector with coordinates is empty.\");\n   }\n\n   return x;\n}\n\n/**\n * Create string with coordinates of SVG polygon in 3D.\n *\n * @param {Array|Vector} x - vector with x-coordinates of polygon points.\n * @param {Array|Vector} y - vector with y-coordinates of polygon points.\n * @param {Array|Vector} z - vector with y-coordinates of polygon points.\n * @param {Array} tM - transformation matrix for 3D->2D (from 'Axes').\n * @param {Object} axes - JSON with Axes context.\n *\n * @returns {string} string with coordinates.\n *\n */\nexport function val2p3d(x, y, z, tM, axes) {\n\n   if (x === undefined || y === undefined) return undefined;\n\n   const [px, py] = axes.transform(cbind(checkCoords(x), checkCoords(y), checkCoords(z)), tM);\n\n   if (px.length !== py.length) {\n      throw Error('PlotSeries: parameters \"xValues\", \"yValues\" and \"zValues\" must be numeric vectors of the same length.');\n   }\n\n   let p = \"\";\n   for (let i = 0; i < px.length; i++) {\n      p += px[i] + \",\" + py[i] + \" \";\n   }\n\n   return p;\n}\n\n\n/**\n * Create string with coordinates of SVG polygon.\n *\n * @param {Array|Vector} x - vector with x-coordinates of polygon points.\n * @param {Array|Vector} y - vector with y-coordinates of polygon points.\n * @param {Array} tX - transformation parameters for x-coordinates (from 'Axes').\n * @param {Array} tY - transformation parameters for y-coordinates (from 'Axes').\n * @param {Object} axes - JSON with Axes context.\n *\n * @returns {string} string with coordinates.\n *\n */\nexport function val2p(x, y, tX, tY, axes) {\n\n   if (x === undefined || y === undefined) return undefined;\n\n   const px = axes.transform(checkCoords(x), tX.coords);\n   const py = axes.transform(checkCoords(y), tY.coords);\n\n   if (px.length != py.length) {\n      throw Error('PlotSeries: parameters \"xValues\" and \"yValues\" must be numeric vectors of the same length.');\n   }\n\n   let p = \"\";\n   for (let i = 0; i < px.length; i++) {\n      p += px[i] + \",\" + py[i] + \" \";\n   }\n\n   return p;\n}\n\n/**\n * Computes nice tick values for axis.\n *\n * @param {Array} ticks - vector with ticks if alredy available (if not, new will be computed).\n * @param {Array} lim - vector with axis limits tickets must be computed for.\n * @param {number} maxTickNum - maximum number of ticks to compute.\n * @param {boolean} round - round or not the fractions when computing nice numbers for the ticks.\n *\n * @returns {Array} an array with computed tick positions.\n *\n */\nexport function getAxisTicks(ticks, lim, maxTickNum, round = true) {\n\n   // if ticks are already provided do not recompute them\n   if (ticks !== undefined) {\n      if (Array.isArray(ticks)) {\n         ticks = vector(ticks);\n      }\n\n      if (!isvector(ticks)) {\n         throw Error('getAxisTicks: axis ticks must be provided as an array or as a vector.');\n      }\n\n      return ticks.filter(x => x >= lim[0] & x <= lim[1]);\n   }\n\n   // check if limits are ok\n   if (typeof(lim) !== \"object\" || lim[0] === undefined || lim[1] === undefined) return undefined;\n\n   // get range as a nice number and compute min, max and steps for the tick sequence\n   const delta = (lim[1] - lim[0]) / 50;\n   const range = niceNum(lim[1] - lim[0] - 1 * delta, round);\n   const tickSpacing = niceNum(range / (maxTickNum - 1), round);\n   const tickMin = Math.ceil((lim[0] + delta) / tickSpacing) * tickSpacing;\n   const tickMax = Math.floor((lim[1] - delta) / tickSpacing) * tickSpacing;\n\n   // recompute maxTickNum\n   maxTickNum = Math.round((tickMax - tickMin + 1) / tickSpacing) + 1;\n\n   // create a sequence of ticks\n   ticks = Vector.seq(tickMin, tickMax, tickSpacing);\n\n   // if step is smaller than 1 round values to remove small decimals accidentiall added by JS\n   if (Math.abs(tickSpacing) < 1) {\n      const r = Math.pow(10, 1 + Math.round(-Math.log10(tickSpacing)));\n      ticks = ticks.apply(v => Math.round((v + Number.EPSILON) * r) / r)\n   }\n\n   // make sure the ticks are not aligned with axes limits\n   return ticks.filter(x => x >= lim[0] & x <= lim[1]);\n}\n\n\n/**\n * Computes a nice spacing value for a given range.\n *\n * @param {Number} localRange - a range (max - min).\n * @param {boolean} round - round or not the fractions when computing the number.\n *\n * @returns {Number} the computed spacing value.\n *\n */\nexport function niceNum( localRange,  round) {\n\n   const exponent = Math.floor(Math.log10(localRange));\n   const fraction = localRange / Math.pow(10, exponent);\n   let niceFraction;\n\n   if (round) {\n      if (fraction < 1.5)\n         niceFraction = 1;\n      else if (fraction < 3)\n         niceFraction = 2;\n      else if (fraction < 7)\n         niceFraction = 5;\n      else\n         niceFraction = 10;\n   } else {\n      if (fraction <= 1)\n         niceFraction = 1;\n      else if (fraction <= 2)\n         niceFraction = 2;\n      else if (fraction <= 5)\n         niceFraction = 5;\n      else\n         niceFraction = 10;\n   }\n\n   return niceFraction * Math.pow(10, exponent);\n}\n\n\n/**\n * Rounds coordinate values to single decimal\n */\nexport function roundCoords(x) {\n   return Math.round(x * 10) / 10\n}\n\n\n/**\n * Computes a scale level.\n *\n * @param {numeric} width - width of plotting area in pixels.\n * @param {numeric} height - height of plotting area in pixels.\n *\n * @returns {text} the scale level (\"small\", \"medium\" or \"large\").\n *\n */\nexport function getScale(width, height) {\n   if (height < 300.2 || width < 300.2) return \"small\";\n   if (height < 600.2 || width < 600.2) return \"medium\";\n   if (height < 850.2 || width < 850.2) return \"large\";\n   return \"xlarge\";\n}","<script>\n   /****************************************************\n   * Axes                                              *\n   * --------------------                              *\n   * root item for any plot                            *\n   *****************************************************/\n\n\timport { setContext, createEventDispatcher, onMount, onDestroy } from 'svelte';\n\timport { writable } from 'svelte/store';\n   import { isvector, vector, Vector } from 'mdatools/arrays';\n   import { roundCoords, getScale } from '../Utils.js';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let limX;                                   // array with limits for x-axis (in plot units) [min, max]\n   export let limY;                                   // array with limits for y-axis (in plot units) [min, max]\n   export let title = '';                             // title of the plot\n   export let xLabel = '';                            // label for x-axis\n   export let yLabel = '';                            // label for y-axis\n   export let margins = [0.034, 0.034, 0.034, 0.034]; // margins [bottom, left, top, right] )\n\n\n   /*****************************************/\n   /* Constants                             */\n   /*****************************************/\n\n   // event dispatcher\n   const dispatch = createEventDispatcher();\n\n   // how big are margins (number of pixels in unit margin value) between axis and plot area if axis are shown\n   const AXES_MARGIN_FACTORS = {\n      'small': 30,\n      'medium': 40,\n      'large': 50,\n      'xlarge': 60\n   }\n\n   // number of ticks along each axis\n   const TICK_NUM = {\n      'small': 5,\n      'medium': 8,\n      'large': 12,\n      'xlarge': 15\n   };\n\n   // size of ticks\n   const TICK_SIZE = {\n      'small': 4,\n      'medium': 6,\n      'large': 8,\n      'xlarge': 10\n   };\n\n   // font size for legend items in pixels\n   const LEGEND_FONT_SIZE = {\n      \"small\": 10,\n      \"medium\": 12,\n      \"large\": 14,\n      \"xlarge\": 16\n   };\n\n   // margin between plot series elements and data labels\n   const LABELS_MARGIN = {\n      'small': 10,\n      'medium': 13,\n      'large': 15,\n      'xlarge': 17\n   };\n\n   // line styles for different scales and types\n   const LINE_STYLES = {\n      small: ['0', '3,3', '1,1', '3,1'],\n      medium: ['0', '5,5', '2,2', '5,2'],\n      large: ['0', '7,7', '3,3', '7,3'],\n      xlarge: ['0', '9,9', '4,4', '9,3'],\n   }\n\n   // marker symbols\n   const MARKER_SYMBOLS = [\"●\", \"◼\", \"▲\", \"▼\", \"⬥\", \"＋\", \"*\", \"×\"];\n\n   // constant to make clip path ID unique\n   const clipPathID = 'plottingArea' + Math.round(Math.random() * 10000);\n\n\n   /*****************************************/\n   /* Variable parameters for internal use  */\n   /*****************************************/\n\n   /* parameters for internal use inside the component */\n   let plotElement;\n   let axesElement;\n   let width, height = 100;\n\n\n   /*****************************************/\n   /* Helper functions                      */\n   /*****************************************/\n\n   /**\n    * Dispatcher for click events.\n    * @param {string} eventName - name of the event.\n    * @param {HTMLDOMElement} el - DOM element the click was registered for.\n    *\n    */\n   function dispatchClickEvent(eventName, el) {\n      const id = Array.prototype.indexOf.call(el.parentNode.children, el)\n      dispatch(eventName, {seriesTitle: el.parentNode.getAttribute('title'), elementID: id});\n   }\n\n   /**\n    * Handler (router) for click events.\n    *\n    * @param {event} e - event object.\n    *\n    * @description\n    * Checks which element the click was made on and dispatch a corresponding event.\n    *\n    */\n   function handleClick(e) {\n\n      // click on scatter plot markers\n      if (e.target.tagName === 'text' && e.target.parentNode.classList.contains('series_points')) {\n         dispatchClickEvent('markerclick', e.target);\n         return;\n      }\n\n      // click on bar plot bars\n      if (e.target.tagName === 'rect' && e.target.parentNode.classList.contains('series_bar')) {\n         dispatchClickEvent('barclick', e.target);\n         return;\n      }\n\n      // click outside any plot element\n      dispatch('axesclick');\n   }\n\n   /**\n    * Generic function to transform x or y-values from plot coordinates to screen (SVG) coordinates.\n    *\n    * @param {Array|Vector} v - vector with coordinates (or objects size) in original plot coordinates.\n    * @param {Object} tA - array with scaling and translation factors.\n    *\n    * @returns {Vector} vector with rescaled values\n    *\n    */\n   const transform = function(v, tA) {\n\n      if (!$isOk || v === undefined || v === null) return undefined;\n      if (Array.isArray(v)) v = vector(v);\n      if (!isvector(v) || v.length < 1) return undefined;\n\n      return v.apply(a => roundCoords((a - tA[1]) * tA[0] + tA[2])).v;\n   }\n\n\n   /**\n    * Generic function to transform x or y-values from screen (SVG) coordinates to plot coordinates.\n    *\n    * @param {Array|Vector} v - vector with coordinates (or objects size) in screen (SVG) coordinates.\n    * @param {Object} tA - array with scaling and translation factors.\n    *\n    * @returns {Vector} vector plot coordinates.\n    *\n    */\n   const invTransform = function(v, tA) {\n\n      if (!$isOk || v === undefined || v === null) return undefined;\n      if (Array.isArray(v)) v = vector(v);\n      if (!isvector(v) || v.length < 1) return undefined;\n\n      return v.apply(a => (a - tA[2]) / tA[0] + tA[1]).v;\n   }\n\n   /*****************************************/\n   /* Storage to share with children        */\n   /*****************************************/\n\n   const scale = writable('medium');                                  // scale factor (how big the shown plot is)\n   const tX = writable({'coords': [1, 0, 0], 'objects': [1, 0, 0]});  // scaling and translation factors for x-dimension\n   const tY = writable({'coords': [1, 0, 0], 'objects': [1, 0, 0]});  // scaling and translation factors for y-dimension\n   const isOk = writable(false);                                      // are axes ready for drawing\n   const xLim = writable(limX);\n   const yLim = writable(limY);\n\n\n   /*****************************************/\n   /* Axes context                          */\n   /*****************************************/\n\n   let context = {\n\n      // methods\n      transform: transform,\n      invTransform: invTransform,\n\n      // variables\n      scale: scale,\n      isOk: isOk,\n      xLim: xLim,\n      yLim: yLim,\n      tX: tX,\n      tY: tY,\n\n      // constants\n      LINE_STYLES: LINE_STYLES,\n      LABELS_MARGIN: LABELS_MARGIN,\n      TICK_NUM: TICK_NUM,\n      TICK_SIZE: TICK_SIZE,\n      MARKER_SYMBOLS: MARKER_SYMBOLS,\n      LEGEND_FONT_SIZE: LEGEND_FONT_SIZE\n   }\n\n\tsetContext('axes', context);\n\n   /*****************************************/\n   /* Reactive updates of the parameters    */\n   /*****************************************/\n\n   // computes real margins in pixels based on current scale\n   $: pxMargins = margins.map(v => v * AXES_MARGIN_FACTORS[$scale]);\n\n   // update limits if necessary\n   $: xLim.update(v => limX);\n   $: yLim.update(v => limY);\n\n   // computes status which tells that axes limits look fine and it is safe to draw\n   // the status is based on the axis limits validity\n   $: isOk.update(v =>\n      Array.isArray($yLim) &&\n      Array.isArray($xLim) &&\n      $xLim.length === 2 &&\n      $yLim.length === 2 &&\n      !$yLim.some(v => v === undefined) &&\n      !$xLim.some(v => v === undefined) &&\n      !$yLim.some(v => isNaN(v)) &&\n      !$xLim.some(v => isNaN(v)) &&\n      $xLim[1] !== $xLim[0] &&\n      $yLim[1] !== $yLim[0] &&\n      width > (pxMargins[1] + pxMargins[3]) &&\n      height > (pxMargins[0] + pxMargins[2])\n   )\n\n   // update transformation array for x-coordinates\n   $: {\n      if ($isOk) {\n         tX.update(v => ({\n            'coords':  [ (width - pxMargins[1] - pxMargins[3]) / ($xLim[1] - $xLim[0]), $xLim[0], pxMargins[1]],\n            'objects': [ (width - pxMargins[1] - pxMargins[3]) / ($xLim[1] - $xLim[0]),       0,             0]\n         }));\n      }\n   };\n\n   // update transformation array for y-coordinates\n   $: {\n      if ($isOk) {\n         tY.update(v => ({\n            'coords':  [-(height - pxMargins[0] - pxMargins[2]) / ($yLim[1] - $yLim[0]), $yLim[1], pxMargins[2]],\n            'objects': [ (height - pxMargins[0] - pxMargins[2]) / ($yLim[1] - $yLim[0]),        0,            0]\n         }));\n      }\n   };\n\n   // computes coordinates for clip path box\n   $: cpx = $isOk ? transform($xLim, $tX.coords) : [0, 1];\n   $: cpy = $isOk ? transform($yLim, $tY.coords) : [1, 0];\n\n\n   /*****************************************/\n   /* Events observers                      */\n   /*****************************************/\n\n   // observer for the plot area size — to update the scale\n   const ro1 = new ResizeObserver(entries => {\n      for (let entry of entries) {\n         const pcr = plotElement.getBoundingClientRect();\n         scale.update(x => getScale(pcr.width, pcr.height));\n      }\n   });\n\n   // observer for the axes area size - to update size of axes\n   const ro2 = new ResizeObserver(entries => {\n      for (let entry of entries) {\n         const acr = axesElement.getBoundingClientRect();\n         width = acr.width;\n         height = acr.height;\n      }\n   });\n\n   onMount(() => {\n      ro1.observe(plotElement);\n      ro2.observe(axesElement);\n   });\n\n   onDestroy(() => {\n      ro1.unobserve(plotElement);\n      ro2.unobserve(axesElement);\n   })\n\n</script>\n\n<div class=\"plot {'plot_' + $scale}\"  bind:this={plotElement} class:plot_error={!$isOk}>\n   <!-- plot title and axis labels -->\n   {#if title !== ''}<div class=\"axes__title\">{@html title}</div>{/if}\n   {#if yLabel !== ''}<div class=\"axes__ylabel\"><span>{@html yLabel}</span></div>{/if}\n   {#if xLabel !== ''}<div class=\"axes__xlabel\"><span>{@html xLabel}</span></div>{/if}\n\n   <!-- axes (coordinate system) -->\n   <div class=\"axes-wrapper\" bind:this={axesElement} >\n      <svg on:click={handleClick} on:keydown={handleClick} preserveAspectRatio=\"none\" class=\"axes\">\n\n         <!-- define clipping path -->\n         <defs>\n            <clipPath id={clipPathID}>\n               <rect style=\"pointer-events:none\" x={cpx[0]} y={cpy[1]} width={cpx[1]-cpx[0]} height={cpy[0]-cpy[1]} />\n            </clipPath>\n         </defs>\n\n\n         <!-- axis and box -->\n         <slot name=\"xaxis\"></slot>\n         <slot name=\"yaxis\"></slot>\n\n         <!-- main plot content -->\n         <g class=\"axes-content\" clip-path=\"url(#{clipPathID})\">\n            <slot></slot>\n         </g>\n\n\n         <!-- axis and box -->\n         <slot name=\"box\"></slot>\n\n      </svg>\n\n   {#if !$isOk}\n   <p class=\"message_error\">\n      Axes component was not properly initialized. <br />\n      Check that you defined axes limits and margins correctly.\n   </p>\n   {/if}\n   </div>\n\n\n</div>\n\n<style>\n\n   /* Plot (main container) */\n   .plot {\n      font-family: Arial, Helvetica, sans-serif;\n\n      display: grid;\n      grid-template-columns: min-content auto;\n      grid-template-rows: min-content auto min-content;\n      grid-template-areas:\n         \". title\"\n         \"ylab axes\"\n         \". xlab\";\n\n      box-sizing: border-box;\n      /* background: #fefefe; */\n      min-width: 100px;\n      min-height: 50px;\n      width: 100%;\n      height: 100%;\n      padding: 0;\n      margin: 0;\n   }\n\n   .plot_small {\n      font-size: 11px;\n   }\n\n   .plot_medium {\n      font-size: 13px;\n   }\n\n   .plot_large {\n      font-size: 16px;\n   }\n\n   .plot_xlarge {\n      font-size: 19px;\n   }\n\n   .plot_error {\n      display: flex;\n   }\n\n   .plot_error > .axes-wrapper > svg {\n      display: none;\n   }\n\n   .message_error {\n      font-size: 1.2em;\n      color: crimson;\n      padding: 1em;\n      box-sizing: border-box;\n      text-align: center;\n   }\n\n   /* Axes (coordinate system) */\n   .axes-wrapper {\n      grid-area: axes;\n      position:relative;\n      box-sizing: border-box;\n      display: flex;\n      width: 100%;\n      height: 100%;\n      padding: 0;\n      margin: 0;\n   }\n\n   .axes {\n      display: block;\n      box-sizing: border-box;\n      position:absolute;\n\n      padding: 0;\n      margin: 0;\n      height: 100%;\n      width: 100%;\n      max-height: 100%;\n      max-width: 100%;\n      min-height: 100%;\n      min-width: 100%;\n   }\n\n   .axes-content {\n      padding: 0;\n      margin: 0;\n      height: 100%;\n      width: 100%;\n      max-height: 100%;\n      max-width: 100%;\n      min-height: 100%;\n      min-width: 100%;\n\n   }\n\n   .axes__xlabel {\n      grid-area: xlab;\n      font-size: 1.0em;\n      font-weight: 600;\n      padding: 0.25em;\n      text-align: center;\n   }\n\n\n   .axes__ylabel {\n      grid-area: ylab;\n      font-size: 1.0em;\n      font-weight: 600;\n      padding: 0.25em;\n      text-align: center;\n      vertical-align: middle;\n      display: flex;\n   }\n\n   .axes__ylabel > span {\n      width: 1.5em;\n      line-height: 1.5em;\n      display: inline-block;\n      writing-mode: vertical-rl;\n      transform: rotate(180deg);\n   }\n\n\n   .axes__title {\n      background: transparent;\n      grid-area: title;\n\n      font-size: 1.3em;\n      font-weight: bold;\n      line-height: 1.2em;\n      padding: 0.5em 0;\n      text-align: center;\n   }\n\n   /* Axis */\n   :global(.axis-labels) {\n      fill: #303030;\n      font-size: 0.95em;\n   }\n\n   /* Data labels */\n   :global(.labels) {\n      fill: #606060;\n      font-size: 0.90em;\n   }\n\n   :global(.labels) {\n      visibility: hidden;\n      transition:visibility 0.25s linear, opacity 0.25s linear;\n      opacity: 0;\n   }\n\n</style>","export const Colors = {\n   \"AXIS_LINE\": \"#303030\",\n   \"AXIS_TICK\": \"#606060\",\n   \"WHITE\":     \"#fff\",\n   \"BLACK\":     \"#000\",\n   \"GRAY\":      \"#909090\",\n   \"MIDDLEGRAY\": \"#dadada\",\n   \"LIGHTGRAY\": \"#f0f0f0\",\n   \"DARKGRAY\":  \"#606060\",\n   \"LEGEND\": \"#303030\",\n\n   \"PRIMARY\": \"#2679B2\",\n   \"PRIMARY_TEXT\": \"#333\",\n}\n\n\n/**\n * Returns an array with 'n' colors.\n *\n * @param {number} n - number of colors to return.\n *\n * @returns {Array} array with colors as strings (hexadecimal).\n *\n */\nexport function getcolmap(n) {\n   if (n ==  1) return [\"#2679B2\"];\n   if (n ==  2) return [\"#2679B2\", \"#D22C2F\"];\n   if (n ==  3) return [\"#2679B2\", \"#92B42A\", \"#D22C2F\"];\n   if (n ==  4) return [\"#2679B2\", \"#2E9658\", \"#F2B825\", \"#D22C2F\"];\n   if (n ==  5) return [\"#2679B2\", \"#22988A\", \"#92B42A\", \"#F79426\", \"#D22C2F\"];\n   if (n ==  6) return [\"#2679B2\", \"#1C9AA8\", \"#379531\", \"#EED524\", \"#FB7F28\", \"#D22C2F\"];\n   if (n ==  7) return [\"#2679B2\", \"#1D94A9\", \"#2E9658\", \"#92B42A\", \"#F2B825\", \"#F47129\", \"#D22C2F\"];\n   if (n ==  8) return [\"#2679B2\", \"#1E90AA\", \"#279775\", \"#519E2F\", \"#D3CB25\", \"#F5A326\", \"#EF672A\", \"#D22C2F\"];\n   if (n ==  9) return [\"#2679B2\", \"#1F8DAB\", \"#22988A\", \"#33953F\", \"#92B42A\", \"#EFCA24\", \"#F79426\", \"#EB5F2A\", \"#D22C2F\"];\n   if (n == 10) return [\"#2679B2\", \"#208BAC\", \"#1E999A\", \"#2E9658\", \"#5FA32E\", \"#C5C626\", \"#F2B825\", \"#F98827\", \"#E85A2B\", \"#D22C2F\"];\n   if (n == 11) return [\"#2679B2\", \"#2089AD\", \"#1C9AA8\", \"#29976C\", \"#379531\", \"#92B42A\", \"#EED524\", \"#F4AA26\", \"#FB7F28\",\n      \"#E6552B\", \"#D22C2F\"];\n   if (n == 12) return [\"#2679B2\", \"#2188AD\", \"#1C97A8\", \"#25987C\", \"#329546\", \"#68A62D\", \"#BCC327\", \"#F0C524\", \"#F69E26\",\n      \"#F77728\", \"#E4512B\", \"#D22C2F\"];\n   if (n == 13) return [\"#2679B2\", \"#2186AD\", \"#1D94A9\", \"#22988A\", \"#2E9658\", \"#469A2F\", \"#92B42A\", \"#DECF25\", \"#F2B825\",\n      \"#F79426\", \"#F47129\", \"#E34E2C\", \"#D22C2F\"];\n   if (n == 14) return [\"#2679B2\", \"#2285AE\", \"#1E92AA\", \"#209995\", \"#2A9767\", \"#34953A\", \"#6FA82D\", \"#B5C128\", \"#EFCE24\", \"#F3AD25\",\n      \"#F98C27\", \"#F16B29\", \"#E14B2C\", \"#D22C2F\"];\n   if (n == 15) return [\"#2679B2\", \"#2284AE\", \"#1E90AA\", \"#1D999F\", \"#279775\", \"#31964A\", \"#519E2F\", \"#92B42A\", \"#D3CB25\", \"#F0C224\",\n      \"#F5A326\", \"#FA8527\", \"#EF672A\", \"#E0492C\", \"#D22C2F\"];\n\n   // if n > 15 return 16 colors\n   return [\"#2679B2\", \"#2283AE\", \"#1F8FAB\", \"#1C9AA8\", \"#249880\", \"#2E9658\", \"#379531\", \"#73AA2C\", \"#B0BF28\", \"#EDD424\", \"#F2B825\",\n      \"#F69B26\", \"#FB7F28\", \"#ED632A\", \"#DF472C\", \"#D22C2F\"];\n}\n","<script>\n   /****************************************************\n   * Axis lines                                        *\n   * --------------------                              *\n   * generic component for axis lines (main, grid, ...)*\n   * !!! not for users !!!                             *\n   *****************************************************/\n\n   import { getContext } from 'svelte';\n   import { Colors } from '../Colors.js';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let lineCoords = [];               // coordinates of start and end points of the lines\n   export let lineColor = Colors.DARKGRAY;   // line color\n   export let lineType = 1;                  // line type\n   export let lineWidth = 1;                 // lined width (thickness)\n   export let className = '';                // CSS class name for the component\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // get axes context and adjust x margins\n   const axes = getContext('axes');\n   const scale = axes.scale;\n   const tX = axes.tX;\n   const tY = axes.tY;\n\n   // reactive variables for coordinates of axis lines\n   let x1, x2, y1, y2 = undefined;\n   $: if (lineCoords.length == 2) {\n      x1 = axes.transform(lineCoords[0][0], $tX.coords);\n      y1 = axes.transform(lineCoords[0][1], $tY.coords);\n      x2 = axes.transform(lineCoords[1][0], $tX.coords);\n      y2 = axes.transform(lineCoords[1][1], $tY.coords);\n   }\n\n   /* styles for axis and grid lines */\n   $: lineStyleStr = `stroke:${lineColor};stroke-width: ${lineWidth}px;stroke-dasharray:${axes.LINE_STYLES[$scale][lineType-1]}`;\n\n</script>\n\n{#if x1 !== undefined && y1 !== undefined && x2 !== undefined && y2 !== undefined}\n<g class={className}>\n   {#each x1 as v, i}\n   <line vector-effect=\"non-scaling-stroke\" x1={x1[i]} x2={x2[i]} y1={y1[i]} y2={y2[i]} style={lineStyleStr} />\n   {/each}\n</g>\n{/if}\n","<script>\n   /****************************************************\n   * AxisTickLabels                                    *\n   * --------------------                              *\n   * shows a series of tick labels along an axis       *\n   * !!! not for users !!!                             *\n   *****************************************************/\n\n   import { getContext } from 'svelte';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n\texport let tickCoords;  // array with tick coordinates\n   export let textColor;   // color of tick labels\n   export let tickLabels;  // array with tick labels\n   export let pos = 1;     // position of tick labels\n   export let las = 1;     // rotation of tick labels (1 - horizontal, 2 - vertical)\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // get axes context and reactive variables needed to compute coordinates\n   const axes = getContext('axes');\n   const scale = axes.scale;\n   const tX = axes.tX;\n   const tY = axes.tY;\n   const isOk = axes.isOk;\n\n\n   let x, y = undefined;\n   let dx = 0, dy = 0, textAnchor;\n\n   // reactive calculations triggered by changes in coordinates and plot parameters\n   $: if ($isOk) {\n      x = axes.transform(tickCoords[1][0], $tX.coords);\n      y = axes.transform(tickCoords[1][1], $tY.coords);\n   }\n\n   // reactive calculations triggered by changes in scale\n   $: m = axes.LABELS_MARGIN[$scale];\n\n   // reactive calculations triggered by changes in pos\n   $: {\n      textAnchor = (['middle', 'middle', 'start', 'middle', 'end'])[pos];\n      dx = ([0, 0, m,  0, -m])[pos];\n      dy = ([0, m, 0, -m, 0])[pos];\n   }\n\n   // styles for the elements\n   $: textStyleStr = `dominant-baseline:middle;fill:${textColor};font-size:1em; text-anchor:middle;`;\n</script>\n\n{#if x !== undefined && y !== undefined}\n<g class=\"tick_labels\" style={textStyleStr} >\n   {#if las === 2 && pos === 4}\n   {#each x as v, i}\n      <text data-id={i} x={x[i]} y={y[i]} dx={0} dy={dx*1.25} transform={`rotate(-90, ${x[i]}, ${y[i]})`} text-anchor={\"middle\"}>{@html tickLabels[i]}</text>\n   {/each}\n   {:else if las === 2 && pos === 1}\n   {#each x as v, i}\n      <text data-id={i} x={x[i]} y={y[i]} dx={-dy/2} dy={0} transform={`rotate(-90, ${x[i]}, ${y[i]})`} text-anchor={\"end\"}>{@html tickLabels[i]}</text>\n   {/each}\n   {:else}\n   {#each x as v, i}\n      <text data-id={i} x={x[i]} y={y[i]} dx={dx} dy={dy} text-anchor={textAnchor}>{@html tickLabels[i]}</text>\n   {/each}\n   {/if}\n</g>\n{/if}\n\n<style>\n   text, text > :global(tspan) {\n      cursor: default;\n      user-select: none;\n      dominant-baseline: middle;\n   }\n</style>","<script>\n   /****************************************************\n   * Axis                                              *\n   * ---------------------------------                 *\n   * generic element for X- or Y-axis                  *\n   * !!! not for users !!!                             *\n   *****************************************************/\n\n   import { Colors } from '../Colors.js';\n   import AxisLines from './AxisLines.svelte';\n   import AxisTickLabels from './AxisTickLabels.svelte';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let tickLabels = [];               // vector with labels for each tick\n   export let showGrid = false;              // logical, show or not grid lines\n   export let las = 1;                       // rotation of tick labels\n\n   export let pos = 1;                       // position of tick labels\n   export let className = \"\";                // name of CSS class for the axis\n   export let grid = [];                     // array with grid coordinates\n   export let axisLine = [];                 // array with coordinates of main axis line\n   export let tickCoords = [];               // array with axis tick coordinates\n\n   export let lineColor = Colors.DARKGRAY;   // color of main axis line\n   export let gridColor = Colors.MIDDLEGRAY; // color of grid lines\n   export let textColor = Colors.DARKGRAY;   // color of tick labels\n</script>\n\n<g class=\"mdaplot__axis {className}\">\n   <!-- grid -->\n   {#if showGrid }\n      <AxisLines lineCoords={grid} lineColor={gridColor} lineType={3} />\n   {/if}\n\n   <!-- main axis line -->\n   <AxisLines lineCoords={axisLine} lineColor={lineColor} lineType={1} />\n\n   <!-- ticks-->\n   <AxisLines lineCoords={tickCoords} lineColor={lineColor} lineType={1} />\n\n   <!-- labels -->\n   {#if tickCoords.length === 2 && tickLabels.length === tickCoords[1][0].length}\n   <AxisTickLabels {las} {pos} {tickCoords} {tickLabels} {textColor}/>\n   {/if}\n</g>\n\n","<script>\n   /****************************************************\n   * X-Axis                                            *\n   * --------------------                              *\n   * shows x-axis and its elements (ticks, grid, etc.) *\n   *****************************************************/\n\n   import { getContext } from 'svelte';\n   import { Vector, vector } from 'mdatools/arrays';\n   import { Colors } from '../Colors.js';\n   import { getAxisTicks } from '../Utils.js';\n   import Axis from './Axis.svelte';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let slot = 'xaxis';                // slot the component must be placed in (must be \"xaxis\")\n   export let ticks = undefined;             // vector with numeric tick positions (by default is computed automatically)\n   export let tickLabels = undefined;        // vector with labels for each tick (by default tick values will be used)\n   export let showGrid = false;              // logical, show or not grid lines\n   export let las = 1;                       // orientation of tick labels (1 - horizontal, 2 - vertical)\n\n   export let lineColor = Colors.DARKGRAY;   // color of axis and tick lines\n   export let gridColor = Colors.MIDDLEGRAY; // color og grid lines\n   export let textColor = Colors.DARKGRAY;   // color of text tick labels\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // sanity checks of input parameters\n   if (slot !== 'xaxis') {\n      throw('Component XAxis must have \"slot=\\'xaxis\\'\" attribute.');\n   }\n\n   // get axes context and adjust x margins\n   const axes = getContext('axes');\n\n   // get reactive variables needed to compute coordinates\n   const xLim = axes.xLim;\n   const yLim = axes.yLim;\n   const scale = axes.scale;\n   const isOk = axes.isOk;\n   const tY = axes.tY;\n\n   // prepare variables for coordinates\n   let grid = [];\n   let axisLine = [];\n   let tickCoords = [];\n\n   // compute coordinates for ticks, grid and axis line\n   $: if ($isOk) {\n\n      // compute x-coordinates of the ticks or take the ones manually specified by user\n      const ticksX = getAxisTicks(ticks, $xLim, axes.TICK_NUM[$scale], true);\n      const tickNum = ticksX.length;\n\n      // compute tick y-coordinates (up and bottom)\n      const dY = axes.invTransform([axes.TICK_SIZE[$scale]], $tY.objects)[0];\n      const ticksY1 = Vector.fill($yLim[0], tickNum);\n      const ticksY2 = ticksY1.add(dY);\n\n      // compute coordinates for the ends of grid\n      const gridYEnd = Vector.fill($yLim[1], tickNum);\n\n      // tick labels\n      tickLabels = (ticks === undefined || tickLabels === undefined) ? ticksX.v : tickLabels;\n      if (tickLabels.length !== ticksX.length) {\n         throw('XAxis: \"tickLabels\" must be a array of the same size as ticks.')\n      }\n\n      // combine all coordinates together\n      grid = [\n         [ticksX, ticksY1],\n         [ticksX, gridYEnd]\n      ];\n\n      axisLine = [\n         [vector([$xLim[0]]), vector([$yLim[0]])],\n         [vector([$xLim[1]]), vector([$yLim[0]])]\n      ]\n\n      tickCoords = [\n         [ticksX, ticksY2],\n         [ticksX, ticksY1]\n      ];\n   }\n</script>\n\n{#if $isOk && axisLine.length > 0}\n<Axis\n   className=\"mdaplot__xaxis\" pos={1}\n   {lineColor} {gridColor} {textColor}\n   {showGrid} {grid} {axisLine} {tickCoords} {tickLabels} {las}\n/>\n{/if}","<script>\n   /****************************************************\n   * Y-Axis                                            *\n   * --------------------                              *\n   * shows y-axis and its elements (ticks, grid, etc.) *\n   *****************************************************/\n\n   import { getContext } from 'svelte';\n   import { Vector, vector } from 'mdatools/arrays';\n   import { Colors } from '../Colors.js';\n   import { getAxisTicks } from '../Utils.js';\n   import Axis from './Axis.svelte';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let slot = 'yaxis';                // slot the component must be placed in (must be \"yaxis\")\n   export let ticks = undefined;             // vector with numeric tick positions (by default is computed automatically)\n   export let tickLabels = undefined;        // vector with labels for each tick (by default tick values will be used)\n   export let showGrid = false;              // logical, show or not grid lines\n   export let las = 1;                       // orientation of tick labels (1 - horizontal, 2 - vertical)\n\n   export let lineColor = Colors.DARKGRAY;   // color of axis and tick lines\n   export let gridColor = Colors.MIDDLEGRAY; // color og grid lines\n   export let textColor = Colors.DARKGRAY;   // color of text tick labels\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // sanity checks of input parameters\n   if (slot !== 'yaxis') {\n      throw('Component YAxis must have \"slot=\\'yaxis\\'\" attribute.');\n   }\n\n   // get axes context and adjust x margins\n   const axes = getContext('axes');\n\n   // get reactive variables needed to compute coordinates\n   const xLim = axes.xLim;\n   const yLim = axes.yLim;\n   const scale = axes.scale;\n   const isOk = axes.isOk;\n   const tX = axes.tX;\n\n   // prepare variables for coordinates\n   let grid = [];\n   let axisLine = [];\n   let tickCoords = [];\n\n   // compute tick x-coordinates\n   $: if ($isOk) {\n\n      // compute x-coordinates of the ticks or take the ones manually specified by user\n      const ticksY = getAxisTicks(ticks, $yLim, axes.TICK_NUM[$scale], true);\n      const tickNum = ticksY.length;\n\n      // compute tick y-coordinates (up and bottom)\n      const dX = axes.invTransform([axes.TICK_SIZE[$scale]], $tX.objects)[0];\n      const ticksX1 = Vector.fill($xLim[0], tickNum)\n      const ticksX2 = ticksX1.add(dX)\n\n      // coordinates for the ends of grid\n      const gridXEnd = Vector.fill($xLim[1], tickNum);\n\n      // tick labels\n      tickLabels = (ticks === undefined || tickLabels === undefined) ? ticksY.v : tickLabels;\n      if (tickLabels.length !== ticksY.length) {\n         throw('YAxis: \"tickLabels\" must be a array of the same size as ticks.')\n      }\n\n      // combine all coordinates together\n      grid = [\n         [ticksX1, ticksY],\n         [gridXEnd, ticksY]\n      ];\n\n      axisLine = [\n         [vector([$xLim[0]]), vector([$yLim[0]])],\n         [vector([$xLim[0]]), vector([$yLim[1]])]\n      ]\n\n      tickCoords = [\n         [ticksX1, ticksY],\n         [ticksX2, ticksY]\n      ];\n   }\n</script>\n\n{#if $isOk && axisLine.length > 0}\n<Axis\n   className=\"mdaplot__yaxis\" pos={4}\n   {lineColor} {gridColor} {textColor}\n   {showGrid} {grid} {axisLine} {tickCoords} {tickLabels} {las}\n/>\n{/if}","<script>\n   /****************************************************\n   * Box                                               *\n   * --------------------                              *\n   * shows border box around axes                      *\n   *****************************************************/\n\n   import { getContext } from 'svelte';\n   import { Colors } from '../Colors';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let slot;  // slot name, must be \"box\"\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // check that the box is located in a correct slot\n   if (slot !== 'box') {\n      throw('Component Box must have \\'slot=\"box\"\\' attribute.')\n   }\n\n   // box style\n   const rectStyleStr = `fill:transparent;stroke:${Colors.DARKGRAY};stroke-width:1px;`;\n\n   // get axes context and reactive variables needed to compute coordinates\n   const axes = getContext('axes');\n   const xLim = axes.xLim;\n   const yLim = axes.yLim;\n   const isOk = axes.isOk;\n   const tX = axes.tX;\n   const tY = axes.tY;\n\n   // reactive variables for coordinates of box points in pixels\n   $: xx = $isOk ? axes.transform($xLim, $tX.coords) : undefined;\n   $: yy = $isOk ? axes.transform($yLim, $tY.coords) : undefined;\n\n</script>\n\n{#if $isOk}\n   <g style=\"pointer-events:none\" class=\"mdaplot__axes-box\">\n   <rect x={xx[0]} y={yy[1]} width={xx[1] - xx[0]} height={yy[0] - yy[1]} style={rectStyleStr} />\n   </g>\n{/if}\n\n","<script>\n   /****************************************************\n   * Segments                                          *\n   * --------------------                              *\n   * shows series of line segments                     *\n   *****************************************************/\n\n   import { getContext } from 'svelte';\n   import { Colors } from '../Colors';\n   import { checkCoords } from '../Utils';\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n\texport let xStart;                        // vector or array with x-coordinates of starting points\n   export let xEnd;                          // vector or array with x-coordinates of end points\n   export let yStart;                        // vector or array with y-coordinates of starting points\n   export let yEnd;                          // vector or array with y-coordinates of end points\n   export let lineColor = Colors.PRIMARY;    // color of segment lines\n   export let lineType = 1;                  // type of segment lines (1 - solid, 2 - dashed, 3 - dotted, 4 - dashdot)\n   export let lineWidth = 1;                 // width (thickness) of segment lines\n   export let className = 'series_seg';      // CSS class name of the SVG group\n   export let title = '';                    // title of the segment series (reserved for future use)\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // get axes context and reactive variables needed to compute coordinates\n   const axes = getContext('axes');\n   const scale = axes.scale;\n   const isOk = axes.isOk;\n   const tX = axes.tX;\n   const tY = axes.tY;\n\n   let x1, x2, y1, y2 = undefined;\n   $: {\n      if ($isOk) {\n\n         x1 = axes.transform(checkCoords(xStart, 'Segments'), $tX.coords);\n         y1 = axes.transform(checkCoords(yStart, 'Segments'), $tY.coords);\n         x2 = axes.transform(checkCoords(xEnd, 'Segments'), $tX.coords);\n         y2 = axes.transform(checkCoords(yEnd, 'Segments'), $tY.coords);\n\n         const n = x1.length;\n         if (x2.length !== n || y1.length !== n || y2.length !== n) {\n            throw Error('Segments: parameters \"xStart\", \"yStart\", \"xEnd\" and \"yEnd\" should have the same length.');\n         }\n      }\n   }\n\n   // reactive variables for coordinates of data points in pixels (and line style)\n   $: lineStyleStr = `stroke:${lineColor};stroke-width: ${lineWidth}px;stroke-dasharray:${axes.LINE_STYLES[$scale][lineType-1]}`;\n</script>\n\n{#if $isOk}\n   <g class=\"series {className}\" title={title} style={lineStyleStr}>\n   {#each x1 as v, i}\n      <line x1={x1[i]} x2={x2[i]} y1={y1[i]} y2={y2[i]} />\n   {/each}\n   </g>\n{/if}\n\n","<script>\n   /****************************************************\n   * Points                                            *\n   * --------------------                              *\n   * shows series of points/markers on a plot          *\n   *****************************************************/\n\n   import { getContext } from 'svelte';\n   import { Colors } from '../Colors';\n   import { checkCoords } from '../Utils';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n\texport let xValues;                          // array of vector with x-coordinates of points\n   export let yValues;                          // array of vector with y-coordinates of points\n   export let marker = 1                        // index for point symbol (from 1 to 8): \"●\", \"◼\", \"▲\", \"▼\", \"⬥\", \"＋\", \"*\", \"✕\"\n   export let faceColor = 'transparent';        // face (fill) color of the points\n   export let borderColor = Colors.PRIMARY;     // border color of the points\n   export let borderWidth = 1;                  // width (thickness) of the points\n   export let markerSize = 1;                   // size of the marker symbols\n   export let title = '';                       // title of the point series - required for handling mouse click events\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // get axes context and adjust x margins\n   const axes = getContext('axes');\n   const tX = axes.tX;\n   const tY = axes.tY;\n   const isOk = axes.isOk;\n\n   let x, y, markerSymbol;\n\n   // reactive calculations triggered by changes in coordinates and plot parameters\n   $: if ($isOk) {\n\n      if (typeof(marker) !== \"number\" || marker < 1 || marker > axes.MARKER_SYMBOLS.length) {\n         throw Error(`ScatterSeries: parameter \"marker\" must be a number from 1 to ${axes.MARKER_SYMBOLS.length}.`);\n      }\n\n      markerSymbol = axes.MARKER_SYMBOLS[marker - 1];\n\n\n      x = axes.transform(checkCoords(xValues, 'Points'), $tX.coords);\n      y = axes.transform(checkCoords(yValues, 'Points'), $tY.coords);\n\n      // sanity check for input parameters\n      if (x.length !== y.length) {\n         throw Error('Points: parameters \"xValues\" and \"yValues\" must be vectors of the same length.')\n      }\n   }\n\n\n   // styles for the elements\n   $: textStyleStr = `dominant-baseline:middle;fill:${faceColor};stroke-width:${borderWidth}px;stroke:${borderColor};\n      font-size:${markerSize}em; text-anchor:middle;cursor:default;user-select:none;`;\n</script>\n\n{#if $isOk && x !== undefined && y !== undefined}\n<g class=\"series series_points\" title={title} style={textStyleStr} >\n   {#each x as v, i}\n      <text x={x[i]} y={y[i]}>{markerSymbol}</text>\n   {/each}\n</g>\n{/if}\n\n<style>\ntext, text > :global(tspan) {\n   dominant-baseline: middle;\n   text-anchor: middle;\n   cursor: default;\n   user-select: none;\n}\n</style>","<script>\n   /****************************************************\n   * Lines                                             *\n   * --------------------                              *\n   * shows lines connected sequence of points          *\n   *****************************************************/\n\n   import { getContext } from 'svelte';\n   import { Colors } from '../Colors';\n   import { val2p } from '../Utils';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n\texport let xValues;                       // vector or array with x-coordinates of the points\n   export let yValues;                       // vector or array with y-coordinates of the points\n   export let lineWidth = 1;                 // width (thickness) of the lines\n   export let lineColor = Colors.PRIMARY;    // color of the lines\n   export let lineType = 1;                  // type of the lines (1 - solid, 2 - dashed, 3 - dotted, 4 - dashdot)\n   export let title = '';                    // title of the bar series (reserved for future use)\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // get axes context\n   const axes = getContext('axes');\n\n   const scale = axes.scale;\n   const isOk = axes.isOk;\n   const tX = axes.tX;\n   const tY = axes.tY;\n\n   // compute polynomial coordinates as string\n   $: p = $isOk ? val2p(xValues, yValues, $tX, $tY, axes) : undefined;\n\n   // reactive variables for coordinates of data points in pixels\n   $: lineStyleStr = `fill:transparent;stroke:${lineColor};stroke-width: ${lineWidth}px; stroke-dasharray:${axes.LINE_STYLES[$scale][lineType-1]}`;\n</script>\n\n{#if $isOk && p !== undefined}\n   <g class=\"series series_line\" style={lineStyleStr} title={title}>\n      <polyline class=\"line\" points={p}/>\n   </g>\n{/if}\n\n","<script>\n   /****************************************************\n   * Legend                                            *\n   * --------------------                              *\n   * shows legend for plot components                  *\n   *****************************************************/\n\n   import { mean } from 'mdatools/stat';\n   import { getContext } from 'svelte';\n   import { Colors } from '../Colors';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let items;                 // array with text labels for each legend element\n\texport let position = \"topleft\";  // position of the legend (\"topleft\", \"top\", \"topright\", \"right\", \"bottomright\", etc).\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   const axes = getContext('axes');\n   const scale = axes.scale;\n   const xLim = axes.xLim;\n   const yLim = axes.yLim;\n   const tX = axes.tX;\n   const tY = axes.tY;\n   const isOk = axes.isOk;\n\n\n   /**\n    * Computes width of text element for given font.\n    *\n    * @param {string} text - string with text\n    * @param {string} font - font name and size, e.g. '12px Arial'\n    *\n    * @return {number} size of element in pixels\n    */\n   function getTextWidth(text, font) {\n      const element = document.createElement('canvas');\n      const context = element.getContext('2d');\n      context.font = font;\n      return context.measureText(text).width;\n   }\n\n   /**\n    * Compute size of main legend elements.\n    *\n    * @param {Array} items - array of legend items and their properties.\n    * @param {number} fontSize - font size of a legend element.\n    * @param {string} position - position of the legend.\n    *\n    * @return {Array} array with height and width og graphical part of legend item, padding size,\n    * height and width of text labels (all in pixels).\n    */\n   function getLegendSize(items, fontSize, position)  {\n\n      // compute size of graphical elements\n      const elHeight = fontSize;       // height of legend element without padding\n      const elPadding = elHeight / 4;  // top and bottom padding\n      const elWidth = elHeight * 1.5;  // width of legend element without padding\n\n      // compute size of text label elements\n      // TODO: implement one row legend if position is \"top\" or \"bottom\"\n      const lbHeight = elHeight;\n      let lbWidth = 0;\n      for (let i = 0; i < items.length; i++) {\n         const w = getTextWidth('  ' + items[i].label + '  ', fontSize + 'px Arial');\n         lbWidth = w > lbWidth ? w : lbWidth;\n      }\n\n      return [elHeight, elWidth, elPadding, lbHeight, lbWidth];\n   }\n\n   // reactive expression to compute all sizes and coordinates\n   let left, top, elHeight, elWidth, elPadding, lbHeight, lbWidth, legendHeight, legendWidth, fontSize;\n   $: if ($isOk) {\n\n      fontSize = axes.LEGEND_FONT_SIZE[$scale];\n\n      // compute size of elements\n      [elHeight, elWidth, elPadding, lbHeight, lbWidth] = getLegendSize(items, fontSize, position);\n\n      // compute size of whole legend box\n      legendHeight = (elHeight + 2 * elPadding) * items.length;\n      legendWidth = (elWidth + 2 * elPadding + lbWidth);\n\n      // compute coordinates of top left corner of the legend box\n      const xLimPx = axes.transform($xLim, $tX.coords);\n      left = position.includes(\"left\") ? xLimPx[0] + axes.TICK_SIZE[$scale] :\n          position.includes(\"right\") ? xLimPx[1] - legendWidth - axes.TICK_SIZE[$scale] :\n          mean(xLimPx) - legendWidth/2;\n\n      const yLimPx = axes.transform($yLim, $tY.coords);\n      top = position.includes(\"top\") ? yLimPx[1] + axes.TICK_SIZE[$scale] :\n          position.includes(\"bottom\") ? yLimPx[0] - legendHeight - axes.TICK_SIZE[$scale] :\n          mean(yLimPx) - legendHeight/2;\n   }\n</script>\n\n{#if $isOk }\n\n<!-- outer legend box, background and frame -->\n<svg x=\"{left}px\" y=\"{top}px\" height=\"{legendHeight}px\" width=\"{legendWidth}\">\n<rect height=\"100%\" width=\"100%\" style=\"fill:white;stroke:{Colors.MIDDLEGRAY};\"></rect>\n\n{#each items as item, i}\n\n<!-- individual legend item -->\n<svg x=\"{0}px\" y=\"{i * (elHeight + 2 * elPadding)}px\" width=\"{legendWidth}px\" height=\"{elHeight + 2 * elPadding}px\">\n\n   <!-- line -->\n   {#if item.lineType && item.lineType > 0 && item.lineType <= 4}\n   <line x1={elPadding} x2={elPadding + elWidth} y1={(elHeight + elPadding * 2)/2} y2={(elHeight + elPadding * 2)/2} style={`\n      stroke:${item.lineColor ? item.lineColor : Colors.PRIMARY};\n      stroke-width: ${item.lineWidth ? item.lineWidth : 1}px;\n      stroke-dasharray:${axes.LINE_STYLES[$scale][item.lineType - 1]}\n   `}/>\n   {/if}\n\n   <!-- marker -->\n   {#if item.marker && item.marker > 0 && item.marker < axes.MARKER_SYMBOLS.length}\n   <text x=\"{(elWidth + 2 * elPadding)/2}px\" y=\"{(elHeight + 2 * elPadding)/2}px\"\n      dominant-baseline=\"middle\"\n      style={`\n         fill:${item.faceColor ? item.faceColor : \"transparent\"};\n         stroke-width:${item.borderWidth ? item.borderWidth : 1}px;\n         stroke:${item.borderColor ? item.borderColor : Colors.PRIMARY};\n         font-size:${fontSize}px;\n         text-anchor:middle;`}\n   >{axes.MARKER_SYMBOLS[item.marker - 1]}</text>\n   {/if}\n\n\n\n   <!-- text -->\n   <text x=\"{elWidth + elPadding * 3}px\" y=\"{elPadding}px\"\n      dominant-baseline=\"hanging\"\n      style={`text-anchor:start;fill:${Colors.LEGEND};font-size:${fontSize}px`};\n   >{@html '&nbsp;' + item.label}</text>\n\n</svg>\n{/each}\n</svg>\n{/if}\n","export const ps = {\n   cal: {\n      label: 'cal',\n      marker: 1,\n      borderColor:'white',\n      borderWidth: 0.5,\n      faceColor:'#B0A8A0',\n      lineColor:'#B0A8A0',\n      lineWidth: 1.0\n   },\n   pv: {\n      label: 'cal',\n      marker: 1,\n      borderColor:'#2679B2',\n      borderWidth: 1.5,\n      faceColor:'transparent',\n      lineColor:'#2679B2',\n      lineWidth: 1.25\n   },\n}","<script>\n   /*************************************************************\n   * Point series for any set                                   *\n   **************************************************************/\n\n   import { Points, Lines } from 'svelte-plots-basic/2d';\n   import { ps } from './settings.js';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let type = \"p\";  // plot type\n   export let values;      // JSON with x and y-values\n</script>\n\n{#if values }\n\n   {#if type == \"l\" || type == \"b\"}\n   <Lines xValues={values.x} yValues={values.y} lineWidth={ps[values.id].lineWidth} lineColor={ps[values.id].lineColor} />\n   {/if}\n\n   {#if type == \"p\" || type == \"b\"}\n   <Points xValues={values.x} yValues={values.y} marker={ps[values.id].marker} borderWidth={ps[values.id].borderWidth}\n      faceColor={ps[values.id].faceColor} borderColor={ps[values.id].borderColor}/>\n   {/if}\n\n{/if}\n\n","<script>\n   /*************************************************************\n   * AppLegend                                                  *\n   * --------------------                                       *\n   * shows legend for cal and pv series                         *\n   **************************************************************/\n\n   import { Legend } from 'svelte-plots-basic/2d';\n   import { ps } from './settings.js';\n\n   export let position = 'topright';\n</script>\n\n<Legend {position} items={[\n   { label: 'cal', marker: ps.cal.marker, borderColor: ps.cal.borderColor, faceColor: ps.cal.faceColor },\n   { label: 'pv',  marker: ps.pv.marker,  borderWidth: ps.pv.borderColor,  borderColor: ps.pv.borderColor }\n]} />\n","<script>\n   /*************************************************************\n   * DistancePlot                                               *\n   * --------------------                                       *\n   * shows plot with score and orthogonal distances             *\n   **************************************************************/\n\n   import { Vector } from 'mdatools/arrays';\n   import { max } from 'mdatools/stat';\n   import { pcamodel_get, pcares_get } from '../wasm/pcvpca';\n   import { Axes, XAxis, YAxis, Box } from 'svelte-plots-basic/2d';\n\n   import PlotSeries from './PlotSeries.svelte';\n   import AppLegend from './AppLegend.svelte';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let model;                           // PCA model object\n   export let res;                             // JSON with results\n   export let params;                          // JSON with main plot parameters\n\n   // constant parameters\n   const margins = [0.65, 0.75, 0.1, 0.5];\n   const showGrid = true;\n   const xLabel = 'Score distance, h/h0';\n   const yLabel = 'Orthogonal distance, q/q0';\n\n   function getDistanceValues(id, res, u0, params) {\n      if (!params || !params.ncomp) return null;\n      const h = new Vector(pcares_get(res, \"hdist\", params.ncomp));\n      const q = new Vector(pcares_get(res, \"qdist\", params.ncomp));\n      return { id: id, x: h.apply(v => v / u0.h[params.ncomp - 1]), y: q.apply(v => v / u0.q[params.ncomp - 1]) };\n   }\n\n   function getDistanceParams(model) {\n      if (!model) return null;\n      const h = pcamodel_get(model, \"hmean\");\n      const q = pcamodel_get(model, \"qmean\");\n      return { h, q };\n   }\n\n   $: title = params && params.ncomp ? 'Distance plot (A = ' + params.ncomp + ')' : '';\n\n   $: u0 = getDistanceParams(model);\n   $: ps = params && res ? Object.keys(res).map(id => getDistanceValues(id, res[id], u0, params)) : null;\n\n   $: limX = ps ? [0, 1.2 * max(Object.keys(ps).map(id => max(ps[id].x)))] : [0, 1];\n   $: limY = ps ? [0, 1.2 * max(Object.keys(ps).map(id => max(ps[id].y)))] : [0, 1];\n</script>\n\n{#if params }\n<Axes {margins} {xLabel} {yLabel} {limX} {limY} {title} >\n\n   {#each ps as series}\n   <PlotSeries values={series} type=\"p\" />\n   {/each}\n\n   <AppLegend />\n   <XAxis {showGrid} slot=\"xaxis\" />\n   <YAxis {showGrid} slot=\"yaxis\" />\n   <Box slot=\"box\" />\n</Axes>\n{/if}\n\n","<script>\n   /**************************************************************/\n   /* Svelte component for selection of a component              */\n   /**************************************************************/\n\n   import { Container as ControlElementContainer, Range } from '.';\n\n   export let model;\n   export let value = 1;\n   export let label = \"# PCs\";\n</script>\n\n{#if model}\n<ControlElementContainer {label}>\n<Range id=\"ncomp\" bind:value min={1} max={model.ncomp} step={1} decNum={0}/>\n</ControlElementContainer>\n{/if}\n\n","<script>\n   /**************************************************************/\n   /* Svelte component for DistancePlot settings                 */\n   /**************************************************************/\n\n   import {  Container, CompSelector } from '../../../controls';\n\n   export let model;\n   export let params;\n   export let res;\n\n   let ncomp = 1;\n\n   $: params = {\n      ncomp\n   }\n</script>\n\n<Container label=\"\">\n<p class=\"title\">Distances</p>\n</Container>\n\n{#if model && res}\n<CompSelector bind:value={ncomp} label=\"# PCs\" {model} />\n{/if}\n","<script>\n   /****************************************************************\n   * ExtremePlot                                                   *\n   * --------------------                                          *\n   * shows plot with number of extreme samples for different alpha *\n   *****************************************************************/\n\n   import { pchisq } from 'mdatools/distributions';\n   import { Vector } from 'mdatools/arrays';\n   import { Axes, XAxis, YAxis, Box, Lines, Segments } from 'svelte-plots-basic/2d';\n   import { pcares_get, pcamodel_get_distparams} from '../wasm/pcvpca.js';\n\n   import PlotSeries from './PlotSeries.svelte';\n   import AppLegend from './AppLegend.svelte';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let model;                            // PCA model object\n   export let res;                              // JSON with results\n   export let params;                           // JSON with main plot parameters\n\n   // constant parameters\n   export let margins = [0.65, 0.75, 0.1, 0.5];    // axes margins\n   export let showGrid = true;                  // logical, show grid or not\n   export let xLabel = 'Number of extremes (expected)';\n   export let yLabel = 'Number of extremes (observed)';\n\n   // function to compute observed extremes\n   function get_observed(res, hParams, qParams, params) {\n\n      if (!params || !params.ncomp) return undefined;\n      if (!res || !hParams || !qParams || params.ncomp < 0) return undefined;\n\n      const h0 = hParams.u0[params.ncomp - 1];\n      const Nh = hParams.Nu[params.ncomp - 1];\n      const q0 = qParams.u0[params.ncomp - 1];\n      const Nq = qParams.Nu[params.ncomp - 1];\n\n      const h = pcares_get(res, \"hdist\", params.ncomp);\n      const q = pcares_get(res, \"qdist\", params.ncomp);\n\n      // loop over rows to make predictions\n      let observed = Vector.zeros(nObj);\n      for (let i = 0; i < nObj; i++) {\n         const fi  = h[i] / h0 * Nh + q[i] / q0 * Nq;\n         const pi = pchisq(fi, Nq + Nh);\n         observed = observed.add((alpha.apply(v => 1 - pi < v)));\n      }\n      return observed;\n   }\n\n   $: title = params ? 'Extreme plot (A = ' + params.ncomp + ')' : '';\n\n   // distance distribution parameters (only for moments)\n   let hParams, qParams;\n   $: if (model) {\n      hParams = pcamodel_get_distparams(model, \"h\", \"classic\");\n      qParams = pcamodel_get_distparams(model, \"q\", \"classic\");\n   } else {\n      hParams = undefined;\n      qParams = undefined;\n   }\n\n   // number of observations\n   $: nObj = res ? res['cal'].nrows : undefined;\n\n   // compute expected values values\n   let expected, Nm, Np, alpha;\n   $: if (nObj) {\n      alpha = Vector.zeros(nObj);\n      expected = Vector.zeros(nObj);\n      Nm = Vector.zeros(nObj);\n      Np = Vector.zeros(nObj);\n\n      for (let i = 1; i <= nObj; i++) {\n         const a = i / nObj;\n         const D = 2 * Math.sqrt(i * (1 - a));\n         Nm.v[i - 1] = i - D;\n         Np.v[i - 1] = i + D;\n         alpha.v[i - 1] = a;\n         expected.v[i - 1] = i;\n      }\n\n   } else {\n      expected = undefined;\n      Nm = undefined;\n      Np = undefined;\n      alpha = undefined;\n   }\n\n   $: ps = params && res ? Object.keys(res).map(id => ({\n      'id': id,\n      'x': expected,\n      'y': get_observed(res[id], hParams, qParams, params)\n   })) : null;\n</script>\n\n{#if params }\n<Axes {margins} {title} {xLabel} {yLabel}\n   limX={[-1, nObj + 2]}\n   limY={[-1, nObj + 2]}>\n\n   <Lines xValues={expected} yValues={expected} lineColor=\"#e0e0e0\" />\n   <Lines xValues={expected} yValues={Nm} lineColor=\"#e0e0e0\" />\n   <Lines xValues={expected} yValues={Np} lineColor=\"#e0e0e0\" />\n   <Segments xStart={expected} xEnd={expected} yStart={Nm} yEnd={Np}  lineColor=\"#e0e0e0\"/>\n\n   {#each ps as series}\n   <PlotSeries values={series} type=\"p\" />\n   {/each}\n\n   <AppLegend position=\"bottomright\"/>\n   <XAxis {showGrid} slot=\"xaxis\" />\n   <YAxis {showGrid} slot=\"yaxis\" />\n   <Box slot=\"box\" />\n</Axes>\n{/if}","<script>\n   /**************************************************************/\n   /* Svelte component for ExtremePlot settings                  */\n   /**************************************************************/\n\n   import { Container, CompSelector } from '../../../controls';\n\n   export let params;\n   export let model;\n   export let res;\n\n   let ncomp = 1;\n\n   $: params = {\n      ncomp,\n   }\n</script>\n\n\n<Container label=\"\">\n<p class=\"title\">Extremes</p>\n</Container>\n\n{#if model && res}\n<CompSelector bind:value={ncomp} label=\"# PCs\" {model} />\n{/if}\n\n\n","<script>\n   /*********************************************************\n   * ScoresPlot                                             *\n   * --------------------                                   *\n   * shows plot for PCA scores                              *\n   **********************************************************/\n\n   import { mrange, range } from 'mdatools/stat';\n   import { Vector } from 'mdatools/arrays';\n   import { Axes, XAxis, YAxis, Segments, Box } from 'svelte-plots-basic/2d';\n   import { pcares_get } from '../wasm/pcvpca';\n\n   import PlotSeries from './PlotSeries.svelte';\n   import AppLegend from './AppLegend.svelte';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let model;                // PCA model object\n   export let params;               // JSON with main plot parameters\n   export let res;                  // JSON with results\n\n   const title = 'Scores';\n   const margins = [0.75, 1.0, 0.1, 0.5];\n   const showGrid = true;\n\n   function get_series(id, res, params) {\n      return {\n         id: id,\n         x: new Vector(pcares_get(res, 'scores', params.comp[0])),\n         y: new Vector(pcares_get(res, 'scores', params.comp[1]))\n      };\n   }\n\n   // get score values\n   $: ps = params && res ? Object.keys(res).map(id => get_series(id, res[id], params)) : null;\n\n   // set axis labels\n   $: xLabel = params && params.comp ? 'PC' + params.comp[0] : '';\n   $: yLabel = params && params.comp ? 'PC' + params.comp[1] : '';\n\n   // set limits\n   $: limX = ps ? range(...Object.keys(ps).map(id => mrange(ps[id].x))) : [0, 1];\n   $: limY = ps ? range(...Object.keys(ps).map(id => mrange(ps[id].y))) : [0, 1];\n</script>\n\n{#if params && model }\n<Axes {margins} {xLabel} {yLabel} {limX} {limY} {title} >\n\n   <Segments xStart={[limX[0]]} xEnd={[limX[1]]} yStart={[0]} yEnd={[0]} lineColor='#a0a0a0'/>\n   <Segments yStart={[limY[0]]} yEnd={[limY[1]]} xStart={[0]} xEnd={[0]} lineColor='#a0a0a0'/>\n\n   {#each ps as series}\n   <PlotSeries values={series} type=\"p\" />\n   {/each}\n\n   <AppLegend />\n   <XAxis {showGrid} slot=\"xaxis\" />\n   <YAxis {showGrid} slot=\"yaxis\" />\n   <Box slot=\"box\" />\n</Axes>\n{/if}","<script>\n   /**************************************************************/\n   /* Svelte component for ScoresPlot settings                   */\n   /**************************************************************/\n\n   import { Container } from '../../../controls';\n   import CompSelector from '../../../controls/CompSelector.svelte';\n\n   export let params;\n   export let model;\n   export let res;\n\n   let comp1 = 1;\n   let comp2 = model.ncomp > 1 ? 2 : 1;\n\n   $: params = {\n      'comp': [comp1, comp2],\n   }\n</script>\n\n<Container label=\"\">\n<p class=\"title\">Scores</p>\n</Container>\n\n{#if model && res}\n<CompSelector bind:value={comp1} label='PC for x-axis' {model} />\n<CompSelector bind:value={comp2} label='PC for y-axis' {model} />\n{/if}\n\n","<script>\n   /*********************************************************\n   * VariancePlot                                           *\n   * --------------------                                   *\n   * shows plot for explained variance                      *\n   **********************************************************/\n\n   import { diff } from 'mdatools/stat';\n   import { Vector } from 'mdatools/arrays';\n   import { Axes, XAxis, YAxis, Box } from 'svelte-plots-basic/2d';\n   import { pcares_get } from '../wasm/pcvpca';\n\n   import PlotSeries from './PlotSeries.svelte';\n   import AppLegend from './AppLegend.svelte';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let model;                // PCA model object\n   export let params;               // JSON with main plot parameters\n   export let res;                  // JSON with results onkects\n\n   // constant parameters\n   const margins = [0.75, 1, 0.1, 0.5];\n   const showGrid = true;\n   const xLabel = \"Components\";\n   const yLabel = \"Relative variance\";\n\n   // compute and return explaned variance\n   function get_series(res, params) {\n      if (!res || !params) return null;\n      const cumexpvar = new Vector(pcares_get(res, \"cumexpvar\"));\n      if (params.vartype == \"cumexpvar\") return cumexpvar;\n\n      const out = Vector.zeros(res.ncomp);\n      out.v[0] = cumexpvar.v[0];\n      out.v.set(diff(cumexpvar).v, 1);\n      return out;\n   }\n\n   // set titles\n   $: title = params && params.vartype == \"expvar\" ? \"Explained variance\" : \"Cumulative explained variance\";\n\n   // get values\n   $: x = Vector.seq(1, model.ncomp);\n   $: ps = Object.keys(res).map(id => ({'id': id, 'x': x, 'y': get_series(res[id], params)}));\n\n   // set limits\n   $: limX = model ? [0.5, model.ncomp + +.5] : [0, 1];\n   $: limY = [-0.05, 1.1];\n</script>\n\n{#if params}\n<Axes {margins} {xLabel} {yLabel} {limX} {limY} {title} >\n\n   {#each ps as series}\n   <PlotSeries values={series} type=\"b\" />\n   {/each}\n\n   <AppLegend position={params.vartype === \"cumexpvar\" ? \"bottomright\" : \"topright\"}/>\n   <XAxis {showGrid} slot=\"xaxis\" />\n   <YAxis {showGrid} slot=\"yaxis\" />\n   <Box slot=\"box\" />\n</Axes>\n{/if}","<script>\n   /**************************************************************/\n   /* Svelte component for ScoresPlot settings                   */\n   /**************************************************************/\n\n   import { Container, Select } from '../../../controls';\n\n   export let params;\n   export let model;\n   export let res;\n\n   let vartype = 'expvar';\n   $: params = {\n      vartype: vartype\n   }\n\n</script>\n\n<Container label=\"\">\n<p class=\"title\">Variance</p>\n</Container>\n\n{#if model && res}\n<Container label=\"Type\">\n<Select id=\"variance\" bind:value={vartype} options={[\"expvar\", \"cumexpvar\"]} />\n</Container>\n{/if}\n","<script>\n   /*************************************************************/\n   /* Svelte component for showing plots                        */\n   /*************************************************************/\n\n   // import plot and plot controls components\n   import DistancePlot from './plots/DistancePlot.svelte';\n   import DistancePlotControls from './plots/DistancePlotControls.svelte';\n\n   import ExtremePlot from './plots/ExtremePlot.svelte';\n   import ExtremePlotControls from './plots/ExtremePlotControls.svelte';\n\n   import ScoresPlot from './plots/ScoresPlot.svelte';\n   import ScoresPlotControls from './plots/ScoresPlotControls.svelte';\n\n   import VariancePlot from './plots/VariancePlot.svelte';\n   import VariancePlotControls from './plots/VariancePlotControls.svelte';\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let model;\n   export let res;\n\n   // selected plot number and its parameters\n   let selected_plot = 0;\n   let params = null;\n\n   const options = [\n      {label: 'Variance', plotComponent: VariancePlot, controlsComponent: VariancePlotControls},\n      {label: 'Scores', plotComponent: ScoresPlot, controlsComponent: ScoresPlotControls},\n      {label: 'Extremes', plotComponent: ExtremePlot, controlsComponent: ExtremePlotControls},\n      {label: 'Distance', plotComponent: DistancePlot, controlsComponent: DistancePlotControls}\n   ]\n\n   function switchPlot(i) {\n      params = null;\n      selected_plot = i;\n   }\n</script>\n\n<div class=\"plot-container\">\n   <!-- column with current plot -->\n   <div class=\"plot-area\">\n      <svelte:component this={options[selected_plot].plotComponent} {model} {res} {params}  />\n   </div>\n   <!-- column with plot selectors and current plot settings -->\n   <div class=\"plot-controls-area\">\n      {#each options as {label, plotComponent, controlsComponent}, i}\n      {#if selected_plot === i}\n      <svelte:component this={controlsComponent} bind:params={params} {model} {res} />\n      {:else}\n      <button class=\"plot-selector\" on:keydown={() => switchPlot(i)} on:click={() => switchPlot(i)}>{label}</button>\n      {/if}\n      {/each}\n   </div>\n</div>\n\n\n<style>\n   .plot-container {\n      width: 100%;\n      height: 100%;\n      box-sizing: border-box;\n      padding: 0;\n      display: grid;\n      grid-template-rows: 1fr;\n      grid-template-columns: 1fr minmax(270px, 30%);\n   }\n\n   .plot-area {\n      padding: 1em;\n      margin-top: 0.25rem;\n      border-radius: 0.25em;\n      background: #fefefe;\n   }\n\n   .plot-controls-area {\n      padding: 0 0.25em 0 0.5em;\n   }\n\n   .plot-selector {\n      cursor: pointer;\n      color: #606060;\n      background: #fffef480;\n      box-sizing: border-box;\n      padding: 0.5em 1em;\n      margin: 0.25em 0;\n      border-radius: 0.25rem;\n      box-shadow: none;\n      border: none;\n      width: 100%;\n      text-align: left;\n      font-size: 1rem;\n   }\n\n   .plot-selector:hover {\n      background: #e0e0e0;\n      color: #403020;\n   }\n\n   @media(min-width:1100px) {\n      .plot-container {\n         grid-template-columns: 1fr minmax(285px, 30%);\n      }\n   }\n\n   @media(min-width:1300px) {\n      .plot-container {\n         grid-template-columns: 1fr minmax(300px, 30%);\n      }\n   }\n\n</style>","<script>\n   /***********************************************/\n   /* Svelte component with parent app layout     */\n   /***********************************************/\n\n   import DataLoader from './DataLoader.svelte';\n   import PCVCalculator from './PCVCalculator.svelte';\n   import ModelCalculator from './ModelCalculator.svelte';\n   import AppPlots from './AppPlots.svelte';\n\n   let dataset = null;  // calibration set\n   let pvset = null;    // computed PV-set\n   let model = null;    // global PCA model\n   let calres = null;   // calibration results\n   let pvres = null;    // PV-set results\n\n   $: res = {cal: calres, pv: pvres};\n</script>\n\n<div class=\"app-container\">\n\n   <!-- left column with main app controls -->\n   <div class=\"app-controls\">\n      <div class=\"data-loader\">\n         <DataLoader bind:dataset={dataset} />\n      </div>\n      <div class=\"model-calculator\">\n         <ModelCalculator {dataset} bind:model={model} bind:calres={calres} />\n      </div>\n      <div class=\"pcv-calculator\">\n         <PCVCalculator {dataset} {model} bind:pvset={pvset} bind:pvres={pvres} />\n      </div>\n   </div>\n\n   <!-- right column with help text or with plots and plot controls -->\n   <div class=\"app-content\">\n      {#if !pvset || !pvres}\n         <div class=\"help-text\">\n         {#if dataset === null}\n            <p>\n               <strong>Step 1.</strong>\n               Load your calibration set from a CSV file. The file should contain numeric values delimited\n               by comma (with dot as decimal separator) or by semicolon (with comma as decimal separator). Rows correspond to observations or objects, columns — to variables. First row can contain variable names (header) and first column can contain labels for the objects/observations — just set the corresponding options after selecting\n               the file.\n            </p>\n         {:else}\n            {#if model === null}\n            <p>\n               <strong>Step 2</strong>\n               Next step is to create a global PCA model for the training set. Use more components/latent variables (PCs)\n               than you expect to be optimal.\n            </p>\n            {/if}\n\n            {#if model !== null && pvset === null}\n            <p>\n               <strong>Step 3</strong>\n               Now set necessary parameters for Procrustes cross-validation method and click button to compute the PV-set. The parameters are the same as you use for cross-validation: type of splits and number of segments. It is recommended to use fewer number of segments (e.g. 3, 4 or 5). The more segment you use the more time it will take to compute the PV-set.\n            </p>\n            {/if}\n         {/if}\n         </div>\n      {:else}\n         {#key pvres}\n         <AppPlots {model} {res} />\n         {/key}\n      {/if}\n   </div>\n</div>\n\n<style>\n\n   .app-container {\n      font-family: Helvetica, Arial, sans-serif;\n      font-size: 1rem;\n      color: #404040;\n      box-sizing: border-box;\n      margin: 0 auto;\n      padding: 0.35em 0.25em;\n      width: 100%;\n      height: 100%;\n      display: grid;\n      grid-template-areas: \"controls content\";\n      grid-template-rows: 100%;\n      grid-template-columns: min(300px, 30%) 1fr;\n   }\n\n   .app-controls {\n      box-sizing: border-box;\n      padding: 0.25em 0.5em;\n   }\n\n   .app-content {\n      box-sizing: border-box;\n      padding: 0 1em 0 0.5em;\n      padding: 0.25em 0.25em;\n   }\n\n   .app-controls > div {\n      background: #e8e8e8;\n      border-radius: 0.5rem;\n   }\n\n   .help-text {\n      padding-right: 2em;\n      margin-top: 0.25rem;\n   }\n\n   .help-text > :global(p){\n      background: #fafafa;\n      padding: 1.2em;\n      color: #606060;\n      line-height: 1.5em;\n      border-radius: 0.25rem;\n      margin: 0;\n   }\n\n   .help-text > :global(p > strong){\n      display: block;\n      margin: 0;\n      padding-bottom: 0.25em;\n   }\n\n   .help-text > :global(p > span){\n      display: block;\n      font-weight: bold;\n      padding: 0.5em 0;\n   }\n\n   .help-text :global(hgroup) {\n      margin-bottom: 1em;\n      padding-left: 1em;\n   }\n\n   .help-text :global(hgroup h1) {\n      margin: 0;\n      padding: 0 0 0.25em 0;\n      font-size: 1.6em;\n      color: #404040;\n   }\n\n   .help-text :global(hgroup p) {\n      margin: 0;\n      padding: 0;\n      font-size: 0.9em;\n      color: #606060;\n   }\n\n   @media(min-width:1300px) {\n      .app-container {\n         grid-template-columns: min(340px, 30%) 1fr;\n      }\n   }\n\n   @media(min-width:1100px) {\n      .app-container {\n         grid-template-columns: min(320px, 30%) 1fr;\n      }\n   }\n\n</style>","<script>\n   import AppContainer from './AppContainer.svelte';\n</script>\n\n<div class=\"page\">\n\n   <header>\n      <div class=\"header-group\">\n         <img class=\"logo\" alt=\"PCV logo\" src=\"logo.svg\" />\n         <h1>Procrustes cross-validation (PCA based)</h1>\n         <p>Create a validation set in your browser</p>\n      </div>\n   </header>\n\n   <main>\n      <AppContainer />\n   </main>\n\n   <footer>\n      <p>More details: <a class=\"github-link\" href=\"https://github.com/svkucheryavski/pcv/\">svkucheryavski/pcv</a></p>\n      <p>Theory and citation reference: <a class=\"paper-link\" href=\"https://doi.org/10.1016/j.aca.2023.341096\">10.1016/j.aca.2023.341096</a></p>\n   </footer>\n</div>\n\n<style>\n   .page {\n      width: 100%;\n      height: 100%;\n      margin: 0;\n      padding: 0;\n\n      min-width: 1020px;\n      min-height: 590px;\n\n      display: flex;\n      flex-direction: column;\n   }\n\n   .page > header{\n      flex-basis: min-content;\n      flex-shrink: 0;\n      flex-grow: 0;\n      text-align: center;\n      background: #f8f6f4;\n   }\n\n   .header-group {\n      width: max-content;\n      margin: 0 auto;\n      display: grid;\n      align-items: center;\n      grid-template-columns: min-content 1fr;\n      grid-template-rows: min-content min-content min-content min-content;\n      grid-template-areas:\n         \"logo .\"\n         \"logo title\"\n         \"logo subtitle\"\n         \"logo .\";\n   }\n\n   .logo{\n      width: 5rem;\n      margin: 0.25rem;\n      grid-area: logo;\n   }\n\n   .header-group > h1{\n      margin: 0;\n      padding: 0;\n      text-align: left;\n      font-size: 1.6rem;\n      color: #4e5052;\n      white-space: nowrap;\n      grid-area: title;\n   }\n\n   .header-group > p{\n      margin: 0;\n      padding: 0;\n      text-align: left;\n      font-size: 1.1rem;\n      color: #7e8082;\n      grid-area: subtitle;\n   }\n\n   .page > main{\n      flex-basis: auto;\n      flex-grow: 1;\n      flex-shrink: 1;\n      box-sizing: border-box;\n      padding: 0.2rem 0rem;\n   }\n\n   .page > footer {\n      font-size: 0.9rem;\n      flex-basis: min-content;\n      flex-grow: 0;\n      flex-shrink: 0;\n      background: #4e5052;\n      color: #c0c0c0;\n      padding: 0.5em;\n   }\n\n   .page > footer  p {\n      max-width: 500px;\n      text-align: center;\n      margin: 0 auto;\n      padding: 0.15em;\n   }\n\n   .page > footer  a {\n      color: #f8ebc5\n   }\n\n   .page > footer  a.github-link {\n      display: inline-block;\n      padding-left: 1.3em;\n      margin-left: 0.2em;\n      background-size: 1em;\n      background-repeat: no-repeat;\n      background-image: url(\"data:image/svg+xml;utf8,<svg width='98' height='96' fill='%23f8ebc5' xmlns='http://www.w3.org/2000/svg'><path fill-rule='evenodd' clip-rule='evenodd' d='M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z'/></svg>\");\n   }\n</style>","import MainApp from './MainApp.svelte';\n\nconst app = new MainApp({\n\ttarget: document.body,\n});\n\nexport default app;","export default {}"],"names":["noop","assign","tar","src","k","is_promise","value","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","b","is_empty","obj","subscribe","store","callbacks","callback","unsub","component_subscribe","component","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","get_slot_changes","dirty","lets","merged","len","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","get_all_dirty_from_scope","length","i","append","target","node","insert","anchor","detach","destroy_each","iterations","detaching","element","name","svg_element","text","data","space","empty","listen","event","handler","options","prevent_default","attr","attribute","to_number","children","set_data","set_input_value","input","set_style","key","important","toggle_class","toggle","custom_event","type","detail","bubbles","cancelable","HtmlTag","is_svg","__publicField","html","construct_svelte_component","props","current_component","set_current_component","get_current_component","onMount","onDestroy","createEventDispatcher","setContext","context","getContext","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","add_flush_callback","seen_callbacks","flushidx","saved_component","update","$$","flush_render_callbacks","filtered","targets","c","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","handle_promise","promise","info","token","index","child_ctx","needs_flush","error","update_await_block_branch","resolved","ensure_array_like","array_like_or_iterator","destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","o","n","old_indexes","new_blocks","new_lookup","deltas","updates","will_move","did_move","new_block","old_block","new_key","old_key","bind","create_component","mount_component","fragment","after_update","new_on_destroy","destroy_component","make_dirty","init","instance","create_fragment","not_equal","append_styles","parent_component","ready","ret","rest","nodes","SvelteComponent","PUBLIC_VERSION","diff","x","isvector","out","Vector","mrange","m","r","range","d","min","max","mean","sum","s","prod","p","isindex","minind","outind","maxind","closestind","prev","curr","CHISQ_DOF_THRESHOLD","CHISQ_TOL","runif","rnorm","mu","sigma","pnorm","v","frac","erf","qnorm","SP1","SP2","C1","C2","a0","a1","a2","a3","b1","b2","b3","c0","c1","c2","c3","d1","d2","e0","e1","e2","e3","f1","f2","q","res","pchisq","dof","vector","sigma2","F2","l0","l","F1","igamma","gamma","F","qchisq","qs","qe","qd","ind","z","sign","a4","a5","t","y","qr","X","Index","crossprod","Q","Matrix","Rt","j","rc","qc","temp","rot","f","g","t1","isnumber","Y","ismatrix","nrx","ncx","nry","ncy","nrows","ncols","ninner","yc","outc","xr","reshape","nrow","ncol","_Matrix","values","I","Yt","Xt","xc","ncols_out","nrows_out","outx","_dot","fun","dims","_opvv","_opvn","rind","cind","ic","cv","ir","xc_out","ndec","leftpad","ndigits","str","sep","dec","header","labels","hasLabels","hasHeader","rows","yv","strData","hasNaN","vec","startRow","firstRow","startColumn","rowValuesAll","rowValues","_Vector","_shuffle","decreasing","_sort","_sortind","_rep","_repeach","start","end","args","acc","cur","by","_seq","_Index","classRef","v1","v2","xv","yci","label","t0","t0_value","id","$$props","file","fileInput","changeStatus","e","$$invalidate","$$value","div","html_tag","raw_value","click_handler","option","keydown_handler","span","create_if_block","status","button","title","previous_key","create_if_block_2","t5_value","t1_value","t3","t3_value","current","t5","dataset","dataFile","firstColumn","errMsg","sepOptions","firstRowOptions","firstColumnOptions","setData","readFile","reader","reset","ZERO","pca_getreslength","ncomp","pca_getmodellength","pcamodel_get","offset","pcamodel_get_distparams","Nu","u0","Mu","Su","RM","Nu_i","su","Nu_l","pcares_get","pca_fit","Module","center","scale","x_ptr","m_length","r_length","o_length","o_constructor","o_ptr","model","calres","pca_predict","m_ptr","r_constructor","r_ptr","pcvpca","cv_nseg","cv_type","cv_scope","max_ncomp","xpv_length","xpv_constructor","xpv_ptr","xpv","PCV","_scriptDir","_documentCurrentScript","moduleArg","readyPromiseResolve","readyPromiseReject","resolve","reject","moduleOverrides","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","scriptDirectory","locateFile","path","read_","readAsync","readBinary","createRequire","__vitePreload","__viteBrowserExternal$1","require","fs","nodePath","filename","binary","isFileURI","onload","onerror","err","url","xhr","wasmBinary","abort","wasmMemory","ABORT","HEAP8","HEAPU8","updateMemoryViews","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","preRun","addOnPreRun","callRuntimeCallbacks","initRuntime","postRun","addOnPostRun","cb","addOnInit","runDependencies","dependenciesFulfilled","addRunDependency","removeRunDependency","what","dataURIPrefix","isDataURI","wasmBinaryFile","getBinarySync","getBinaryPromise","binaryFile","response","instantiateArrayBuffer","imports","receiver","reason","instantiateAsync","result","createWasm","wasmImports","receiveInstance","module","exports","wasmExports","receiveInstantiationResult","_emscripten_date_now","_emscripten_memcpy_big","dest","num","getHeapMax","growMemory","size","pages","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","multiple","cutDown","overGrownHeapSize","newSize","replacement","getCFunc","ident","func","writeArrayToMemory","array","buffer","lengthBytesUTF8","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","endIdx","u","u1","stringToUTF8","outPtr","stringToUTF8OnStack","stackAlloc","UTF8Decoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endPtr","u2","ch","UTF8ToString","ptr","ccall","returnType","argTypes","opts","toC","arr","convertReturnValue","cArgs","stack","converter","stackSave","onDone","stackRestore","a6","a7","a8","a9","a10","calledRun","runCaller","doRun","if_block","create_if_block_4","promise_1","t_value","if_block0","create_if_block_3","create_if_block_1","pvset","pvres","nseg","cvtypeOptions","cvType","downloadPVSet","blob","computePVSet","compute","nsegOptions","div1","div0","decNum","step","dispatch","sliderElement","sliderContainer","isDragging","computeValue","tmpValue","getRelativePosition","sliderRect","parentRect","minX","maxX","startChanging","width","cancelChanging","stopChanging","changingByWheel","newValue","changing","select_props","computeModel","maxNComp","subscriber_queue","writable","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","checkCoords","source","val2p","tX","tY","axes","px","py","getAxisTicks","ticks","lim","maxTickNum","round","delta","niceNum","tickSpacing","tickMin","tickMax","localRange","exponent","fraction","niceFraction","roundCoords","getScale","height","if_block1","if_block2","rect","rect_x_value","rect_y_value","rect_width_value","rect_height_value","div1_class_value","svg","defs","clipPath","limX","limY","xLabel","yLabel","margins","AXES_MARGIN_FACTORS","TICK_NUM","TICK_SIZE","LEGEND_FONT_SIZE","LABELS_MARGIN","LINE_STYLES","MARKER_SYMBOLS","clipPathID","plotElement","axesElement","dispatchClickEvent","eventName","el","handleClick","transform","tA","$isOk","invTransform","isOk","xLim","yLim","ro1","entries","entry","pcr","ro2","acr","pxMargins","$scale","$yLim","$xLim","cpx","$tX","cpy","$tY","Colors","line","line_x__value","line_x__value_1","line_y__value","line_y__value_1","lineCoords","lineColor","lineType","lineWidth","className","x1","x2","y1","y2","lineStyleStr","text_1","text_1_x_value","text_1_y_value","text_1_dx_value","text_1_transform_value","text_1_dy_value","tickCoords","textColor","tickLabels","pos","las","dx","dy","textAnchor","textStyleStr","showGrid","grid","axisLine","gridColor","ticksX","tickNum","dY","ticksY1","ticksY2","gridYEnd","ticksY","dX","ticksX1","ticksX2","gridXEnd","rectStyleStr","xx","yy","xStart","xEnd","yStart","yEnd","xValues","yValues","marker","faceColor","borderColor","borderWidth","markerSize","markerSymbol","polyline","svg_y_value","getTextWidth","font","getLegendSize","items","fontSize","position","elHeight","elPadding","elWidth","lbHeight","lbWidth","w","left","top","legendHeight","legendWidth","xLimPx","yLimPx","ps","lines_changes","points_changes","each_blocks","params","getDistanceValues","h","getDistanceParams","range_changes","get_observed","hParams","qParams","h0","Nh","q0","Nq","observed","nObj","fi","pi","alpha","expected","Nm","Np","D","segments0_changes","segments1_changes","get_series","comp1","comp2","cumexpvar","vartype","div2","selected_plot","VariancePlot","VariancePlotControls","ScoresPlot","ScoresPlotControls","ExtremePlot","ExtremePlotControls","DistancePlot","DistancePlotControls","switchPlot","div5","div3","div4","main","footer","MainApp"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,27,28,29,30,31,32,33,34,35,36,37,38,39,40]}