{"version":3,"file":"pca.js","sources":["../../node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/svelte/src/runtime/internal/await_block.js","../../node_modules/svelte/src/runtime/internal/each.js","../../node_modules/svelte/src/runtime/internal/Component.js","../../node_modules/svelte/src/shared/version.js","../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../shared/components/MainApp.svelte","../src/utils.js","../../node_modules/mdatools/src/stat/index.js","../../node_modules/mdatools/src/distributions/index.js","../../node_modules/mdatools/src/decomp/index.js","../../node_modules/mdatools/src/arrays/index.js","../../shared/wasm/dist/pca.js","../../shared/utils.js","../../shared/controls/Select.svelte","../../shared/controls/Container.svelte","../../shared/controls/Button.svelte","../../shared/controls/Spinner.svelte","../../shared/controls/ButtonCancel.svelte","../../shared/controls/Range.svelte","../src/tab_train/ModelCalculator.svelte","../src/shared/AppPlots.svelte","../../node_modules/svelte/src/runtime/store/index.js","../../node_modules/svelte-plots-basic/src/Utils.js","../../node_modules/svelte-plots-basic/src/2d/Axes.svelte","../../node_modules/svelte-plots-basic/src/Colors.js","../../node_modules/svelte-plots-basic/src/2d/AxisLines.svelte","../../node_modules/svelte-plots-basic/src/2d/AxisTickLabels.svelte","../../node_modules/svelte-plots-basic/src/2d/Axis.svelte","../../node_modules/svelte-plots-basic/src/2d/XAxis.svelte","../../node_modules/svelte-plots-basic/src/2d/YAxis.svelte","../../node_modules/svelte-plots-basic/src/2d/Box.svelte","../../node_modules/svelte-plots-basic/src/2d/Segments.svelte","../../node_modules/svelte-plots-basic/src/2d/TextLabels.svelte","../../node_modules/svelte-plots-basic/src/2d/Points.svelte","../../node_modules/svelte-plots-basic/src/2d/Lines.svelte","../../node_modules/svelte-plots-basic/src/2d/ColormapLegend.svelte","../../shared/plots/Defaults.js","../../shared/plots/PlotSeries.svelte","../src/shared/VariancePlot.svelte","../src/shared/DistancePlot.svelte","../src/shared/BiPlot.svelte","../src/shared/EigenvaluesPlot.svelte","../../shared/controls/PlotTypeSelector.svelte","../src/shared/EigenvaluesPlotControls.svelte","../src/shared/VariancePlotControls.svelte","../src/shared/DistancePlotControls.svelte","../src/shared/BiPlotControls.svelte","../../shared/plots/HotellingEllipse.svelte","../../shared/plots/ConfidenseEllipses.svelte","../../shared/plots/ScoresPlot.svelte","../../shared/plots/LoadingsPlot.svelte","../../shared/plots/ScoresPlotControls.svelte","../../shared/plots/LoadingsPlotControls.svelte","../src/tab_train/AppPlots.svelte","../../shared/widgets/DatasetWidget.svelte","../../shared/controls/FileSelector.svelte","../../shared/controls/TextInput.svelte","../../shared/components/PCADataLoader.svelte","../src/shared/ModelTable.svelte","../../shared/widgets/Outliers.svelte","../src/tab_train/AppContainer.svelte","../src/tab_new/ModelLoader.svelte","../src/tab_new/AppPlots.svelte","../src/shared/ResultTable.svelte","../src/tab_new/AppContainer.svelte","../../shared/wasm/dist/pca_wasm.js","../src/MainApp.svelte","../src/main.js","../__vite-browser-external"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { is_promise } from './utils.js';\nimport { check_outros, group_outros, transition_in, transition_out } from './transitions.js';\nimport { flush } from './scheduler.js';\nimport { get_current_component, set_current_component } from './lifecycle.js';\n\n/**\n * @template T\n * @param {Promise<T>} promise\n * @param {import('./private.js').PromiseInfo<T>} info\n * @returns {boolean}\n */\nexport function handle_promise(promise, info) {\n\tconst token = (info.token = {});\n\t/**\n\t * @param {import('./private.js').FragmentFactory} type\n\t * @param {0 | 1 | 2} index\n\t * @param {number} [key]\n\t * @param {any} [value]\n\t * @returns {void}\n\t */\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\t\tinfo.resolved = value;\n\t\tlet child_ctx = info.ctx;\n\t\tif (key !== undefined) {\n\t\t\tchild_ctx = child_ctx.slice();\n\t\t\tchild_ctx[key] = value;\n\t\t}\n\t\tconst block = type && (info.current = type)(child_ctx);\n\t\tlet needs_flush = false;\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroup_outros();\n\t\t\t\t\t\ttransition_out(block, 1, 1, () => {\n\t\t\t\t\t\t\tif (info.blocks[i] === block) {\n\t\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcheck_outros();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\t\t\tblock.c();\n\t\t\ttransition_in(block, 1);\n\t\t\tblock.m(info.mount(), info.anchor);\n\t\t\tneeds_flush = true;\n\t\t}\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t\tif (needs_flush) {\n\t\t\tflush();\n\t\t}\n\t}\n\tif (is_promise(promise)) {\n\t\tconst current_component = get_current_component();\n\t\tpromise.then(\n\t\t\t(value) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.then, 1, info.value, value);\n\t\t\t\tset_current_component(null);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t\t\tset_current_component(null);\n\t\t\t\tif (!info.hasCatch) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\t\tinfo.resolved = /** @type {T} */ (promise);\n\t}\n}\n\n/** @returns {void} */\nexport function update_await_block_branch(info, ctx, dirty) {\n\tconst child_ctx = ctx.slice();\n\tconst { resolved } = info;\n\tif (info.current === info.then) {\n\t\tchild_ctx[info.value] = resolved;\n\t}\n\tif (info.current === info.catch) {\n\t\tchild_ctx[info.error] = resolved;\n\t}\n\tinfo.block.p(child_ctx, dirty);\n}\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","<script>\n   /*************************************************************/\n   /* Root component for an application                         */\n   /*************************************************************/\n\n   export let WASM;\n   export let appTitle;\n   export let appShortTitle;\n   export let appSlogan;\n   export let containers = [];\n   export let isBeta = false;\n\n   let selectedContainer = 0;\n\n   let isInfoShown = false;\n   function showInfo() {\n      isInfoShown = true;\n   }\n\n   function closeInfo() {\n      isInfoShown = false;\n   }\n\n   function selectContainer(id) {\n      selectedContainer = id;\n   }\n</script>\n\n<div class=\"page\">\n\n   <header class=\"page-header\">\n      <div class=\"header-group\">\n         <img class=\"logo\" alt={appShortTitle} src=\"logo.svg\" />\n         <h1>{appTitle}{#if isBeta}<sup style=\"color:red\">β</sup>{/if}</h1>\n         <p>{appSlogan}</p>\n      </div>\n      <ul class=\"nav\">\n         {#each containers as container, i}\n         <li class=\"nav-item\" class:selected={selectedContainer === i} >\n            <button on:click={() => selectContainer(i)} on:keydown={() => selectContainer(i)}>{container.name}</button>\n         </li>\n         {/each}\n      </ul>\n   </header>\n\n   <main>\n      {#each containers as container, i}\n      <div class:hidden={selectedContainer !== i} class=\"app-container\">\n      <svelte:component this={container.container} {WASM} />\n      </div>\n      {/each}\n   </main>\n\n   <footer>\n      <button class=\"button-info\" on:click={showInfo} on:keydown={showInfo}>info</button>\n      <slot name=\"footer\">\n      </slot>\n   </footer>\n\n   {#if isInfoShown}\n   <div class=\"info-backdrop\">\n      <div class=\"info-container\">\n         <button class=\"info-close-button\" on:click={closeInfo}>✕</button>\n         <slot>\n         </slot>\n      </div>\n   </div>\n   {/if}\n</div>\n\n<style>\n\n   .page {\n      width: 100%;\n      height: 100%;\n      margin: 0 auto;\n      padding: 0;\n\n      min-width: 1020px;\n      min-height: 590px;\n      max-width: 1900px;\n\n      display: flex;\n      flex-direction: column;\n   }\n\n   header{\n      display: flex;\n      justify-content: flex-start;\n      flex-direction: row;\n      background: #f8f6f4;\n   }\n\n   .header-group {\n      width: min-content;\n      min-width: 400px;\n      margin: 0 0 0 0.25rem;\n      display: grid;\n      align-items: center;\n      grid-template-columns: min-content 1fr;\n      grid-template-rows: min-content min-content min-content min-content;\n      grid-template-areas:\n         \"logo .\"\n         \"logo title\"\n         \"logo subtitle\"\n         \"logo .\";\n   }\n\n   .logo{\n      width: 5rem;\n      margin: 0.25rem;\n      grid-area: logo;\n   }\n\n   .header-group > h1{\n      margin: 0;\n      padding: 0;\n      text-align: left;\n      font-size: 1.6rem;\n      color: #4e5052;\n      white-space: nowrap;\n      grid-area: title;\n   }\n\n   .header-group > p{\n      margin: 0;\n      padding: 0;\n      text-align: left;\n      font-size: 1.1rem;\n      color: #7e8082;\n      grid-area: subtitle;\n   }\n\n   main{\n      flex-basis: auto;\n      flex-grow: 1;\n      flex-shrink: 1;\n      box-sizing: border-box;\n      padding: 0.2rem 0;\n   }\n\n   main > div{\n      height: 100%;\n   }\n\n   footer {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 0.9rem;\n      flex-basis: min-content;\n      flex-grow: 0;\n      flex-shrink: 0;\n      background: #4e5052;\n      color: #c0c0c0;\n      padding: 0.5em;\n   }\n\n   footer :global(p) {\n      max-width: 800px;\n      text-align: center;\n      margin: 0 auto;\n      padding: 0.15em;\n   }\n\n   footer :global(span),\n   footer :global(a) {\n      color: #f8ebc5\n   }\n\n   .hidden {\n      display: none;\n   }\n\n   .nav,\n   .nav * {\n      user-select: none;\n      -moz-user-select: none;\n   }\n\n   .nav {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-end;\n      list-style: none;\n      margin: 0 100px 0 auto;\n      padding: 0;\n      align-self: flex-end;\n   }\n\n   .nav-item {\n      list-style: none;\n      margin: 0 2px;\n      border-bottom: 5px solid transparent;\n   }\n\n   .nav-item > button {\n      cursor: pointer;\n      padding: 0.5em 1em;\n      border: none;\n      box-shadow: none;\n      background: transparent;\n      font-size: inherit;\n   }\n\n   .nav-item > button > :global(span) {\n      color: #888;\n   }\n\n   .nav-item.selected {\n      border-bottom: 5px solid #80888f;\n   }\n\n   .nav-item.selected > button{\n      font-weight: bold;\n      cursor: default;\n   }\n\n   .nav-item.selected:hover {\n      border-bottom: 5px solid #80888f;\n   }\n\n\n   @media (min-width: 1600px) {\n      .page > header {\n         border-bottom-right-radius: 0.25rem;\n         border-bottom-left-radius: 0.25rem;\n      }\n\n      .page > footer {\n         border-top-right-radius: 0.25rem;\n         border-top-left-radius: 0.25rem;\n      }\n   }\n\n   .button-info {\n      cursor: pointer;\n      border: none;\n      box-shadow: none;\n      background: transparent;\n      font-weight: bold;\n      color: #4e5052;\n      border-radius: 0.2em;\n\n      padding: 0.25em 0.5em;\n      text-align: center;\n      line-height: 1em;\n      margin-left: 0.25em;\n      margin-right: 0.5em;\n      background-color: #f8ebc5;\n   }\n\n   .info-backdrop{\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: #000000a0;\n      z-index: 100;\n\n      display: flex;\n      justify-content: center;\n      align-items: flex-start;\n   }\n\n   .info-container {\n      position: relative;\n      top: 10%;\n      width: 100%;\n      max-width: 940px;\n      max-height: 600px;\n      background-color: #f8f6f4;\n      border-radius: 0.25rem;\n      padding: 1rem;\n      z-index: 101;\n   }\n\n   .info-container > :global(p) {\n      font-size: 1.15em;\n      line-height: 1.35em;\n      padding: 0 1em 0.5em 1em;\n      margin: 0;\n   }\n\n   .info-container > :global(.release-info) {\n      font-size: 1em;\n      color: #808080;\n      line-height: 1.25em;\n      padding: 0 1.2em 0.5em 1.2em;\n      margin: 0;\n   }\n\n   .info-container > :global(h2) {\n      font-size: 1.5em;\n      line-height: 1.25em;\n      padding: 0.5em 1rem 0.5em 1rem;\n      margin: 0;\n   }\n\n   .info-container > :global(h3) {\n      font-size: 1.15em;\n      line-height: 1.25em;\n      padding: 1rem 1em 0.25em 1em;\n      margin: 0;\n   }\n\n   .info-container > :global(ul) {\n      margin: 0;\n   }\n\n   .info-container > :global(ul > li) {\n      font-size: 1.15em;\n      line-height: 1.25em;\n      padding: 0 0.5em 0.5em 0em;\n      margin: 0;\n   }\n\n   .info-container > :global(ul > li > span) {\n      font-size: 0.9em;\n      color: #808080;\n      line-height: 1.25em;\n      padding: 0 0.25em;\n      margin: 0;\n\n   }\n\n   .info-container :global(a) {\n      color: #ae8032;\n   }\n\n   .info-container :global(a:hover) {\n      color: #eb9707;\n   }\n\n   .info-close-button {\n      cursor: pointer;\n      border: none;\n      box-shadow: none;\n      background: transparent;\n      font-size: inherit;\n      font-weight: bold;\n      color: #f8ebc5;\n      border-radius: 50%;\n      width: 20px;\n      height: 20px;\n      background-color: #9ea0a2;\n      float: right;\n      text-align: center;\n      padding: 0;\n      line-height: 20px;\n      font-size: 12px;\n   }\n\n   .info-close-button:hover {\n      background-color: #4e5052;\n   }\n\n   .info-container:last-child {\n      padding-bottom: 2rem;\n   }\n\n\n</style>","/**\n * Creates CSV file with PCA result outcomes and download it as a file.\n *\n * @param {Object} res - object with PCA results.\n * @param {Object} dataset - object with dataset used to get the results.\n * @param {string} name - name of the results (e.g. 'cal')\n * @param {Array} outliers - array with row indices of excluded data rows.\n * @param {Object} model - object with PCA model.\n */\nexport function downloadResults(res, dataset, name, outliers, model) {\n\n   if (!outliers || !Array.isArray(outliers)) {\n      outliers = [];\n   }\n\n   // number of rows with/without outliers\n   const nAll = dataset.values.nrows;\n   const nCols = dataset.values.ncols;\n   const nOut = outliers.length;\n   const n = nAll - nOut;\n   const nComp = res.ncomp;\n   const nStat = 4; // var, expvar, resvar, respexpvar\n\n   // number of empty columns to add in addition to row name and first value\n   const nfiller = Math.max(nComp, nStat);\n   const filler = Array(nfiller).fill('');\n   const fillerComp = nComp > nfiller ? Array(nfiller - nComp).fill('') : [];\n\n   // vector with component names/labels and values separator\n   const compNames = Array(nComp).fill(0).map((v, i) => 'PC' + (i + 1));\n   const sep = dataset.sep\n\n   // function for adding component based outcomes for every row\n   function addChunk(name, offset, rowlabels) {\n      out += '\\n';\n      out += [name + ': ', '', ...filler].join(sep) + '\\n';\n      out += ['object', 'group', 'outlier', ...compNames, ...fillerComp].join(sep) + '\\n';\n      const values = res.v.subarray(offset, offset + nComp * n);\n      let j = 0;\n      for (let i = 0; i < nAll; i++) {\n         const groupname = dataset.classes ? dataset.classes[i] : '-';\n\n         // outlier\n         if (nOut > 0 && outliers.includes(i)) {\n            out += [rowlabels[i], groupname, 'yes', ...Array(nComp).fill('-'), ...fillerComp].join(sep) + '\\n';\n            continue;\n         }\n\n         // regular\n         const valuesi = Array(nComp);\n         for (let a = 0; a < nComp; a++) {\n            valuesi[a] = values[a * nComp + i];\n         }\n         out += [rowlabels[i], groupname, '', ...valuesi, fillerComp].join(sep) + '\\n';\n         j = j + 1;\n      }\n      out += '\\n';\n   }\n\n\n   // general information\n   let out = '';\n   out += ['Number of components:', nComp, ...filler].join(sep) + '\\n';\n   out += ['Center: ', res.center, ...filler].join(sep) + '\\n';\n   out += ['Scale: ', res.scale, ...filler].join(sep) + '\\n';\n\n   // statistics\n   out += '\\n';\n   out += ['Statistics: ', '', ...filler].join(sep) + '\\n';\n   if (model) {\n      // if model is provided we also show eigenvalues\n      // but for the sake of simplicity we get the from \"res\" object\n      const fillerStat = nStat > nfiller ? Array(nfiller - nStat - 1).fill('') : [];\n      out += ['', 'PC', 'Expvar', 'Cumexpvar', 'Resvar', 'Cumresvar', 'Eigenvalues', ...fillerStat].join(dataset.sep) + '\\n';\n      for (let a = 0; a < nComp; a++) {\n         out += [\n            '',\n            a + 1,\n            res.stat.expvar[a],\n            res.stat.cumexpvar[a],\n            res.stat.resvar[a],\n            res.stat.cumresvar[a],\n            res.eigenvals[a],\n            ...fillerStat\n         ].join(dataset.sep) + '\\n';\n      }\n   } else {\n      const fillerStat = nStat > nfiller ? Array(nfiller - nStat).fill('') : [];\n      out += ['', 'PC', 'Expvar', 'Cumexpvar', 'Resvar', 'Cumresvar', ...fillerStat].join(sep) + '\\n';\n      for (let a = 0; a < nComp; a++) {\n         out += [\n            '',\n            a + 1,\n            res.stat.expvar[a],\n            res.stat.cumexpvar[a],\n            res.stat.resvar[a],\n            res.stat.cumresvar[a],\n            ...fillerStat\n         ].join(sep) + '\\n';\n      }\n   }\n   out += '\\n';\n\n   // if model is provided show loadings as well\n   if (model) {\n      out += '\\n';\n      out += ['Loading, center and scale values: ', '', ...filler].join(sep) + '\\n';\n      out += ['variable', 'center', 'scale', ...compNames, ...fillerComp].join(sep) + '\\n';\n      const center = model.v.subarray(2, 2 + nCols);\n      const scale = model.v.subarray(2 + nCols, 2 + nCols * 2);\n      const loadings = model.v.subarray(2 + nCols * 2, n + nCols * 2 + nComp * nCols);\n      let j = 0;\n      for (let i = 0; i < nCols; i++) {\n         const loadingsi = Array(nComp);\n         for (let a = 0; a < nComp; a++) {\n            loadingsi[a] = loadings[a * nComp + i];\n         }\n         out += [dataset.varlabels[i], center[i], scale[i], ...loadingsi, fillerComp].join(sep) + '\\n';\n         j = j + 1;\n      }\n      out += '\\n';\n   }\n\n   // scores and distances\n   addChunk('Scores', 0, dataset.objlabels);\n   addChunk('Score distances, h', nComp * n, dataset.objlabels);\n   addChunk('Orthogonal distances, q', nComp * n * 2, dataset.objlabels);\n\n\n   // if decimal separator is not \".\", replace all \".\" with the corect separator\n   if (dataset.dec !== '.') {\n      out = out.replace(/\\./g, dataset.dec);\n   }\n\n   // add header\n   out = ['Data filename:', dataset.fileName, ...filler].join(dataset.sep) + '\\n' + out;\n   let hdr = ['PCA results (' + name + ')', 'https://mda.tools/pca/', ...filler].join(dataset.sep) + '\\n\\n';\n\n   // create Blob and start download process\n   const blob = new Blob([hdr + out], { type: 'text/csv' });\n   const url = window.URL.createObjectURL(blob)\n   const a = document.createElement('a')\n   a.setAttribute('href', url)\n   a.setAttribute('download', `pca-results-${name}.csv`);\n   a.click()\n}\n\n\n/**\n * Creates JSON with model object, stringify it and download as a file.\n *\n * @param {Object} model - object with PCA model\n */\nexport function downloadModel(model) {\n\n   const blob = new Blob([JSON.stringify(\n      {\n         center: model.center,\n         class: model.class,\n         hash: model.hash,\n         exclvars: model.exclvars,\n         ncols: model.ncols,\n         ncomp: model.ncomp,\n         nrows: model.nrows,\n         prep: model.prep,\n         scale: model.scale,\n         v: Array.from(model.v),\n         exclvars: model.exclvars,\n         varlabels: model.varlabels,\n         varvalues: model.varvalues,\n         varvaluesName: model.varvaluesName,\n         varvaluesUnits: model.varvaluesUnits,\n      }\n   )], { type: 'application/json' });\n   const url = window.URL.createObjectURL(blob)\n   const a = document.createElement('a')\n   a.setAttribute('href', url)\n   a.setAttribute('download', 'pca-model.json');\n   a.click()\n}\n","/*************************************************/\n/*    Methods for computing statistics           */\n/*************************************************/\n\nimport { isnumber, isindex, isvector, vector, Vector, _sort } from '../arrays/index.js';\n\n\n/**\n * Compute median of vector values.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} median of x.\n *\n */\nexport function median(x) {\n   return quantile(x, 0.5)\n}\n\n/**\n * Compute inter-quartile range for vector of values.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} IQR of x (Q3 - Q1).\n *\n */\nexport function iqr(x) {\n   return quantile(x, 0.75) - quantile(x, 0.25);\n}\n\n\n/**\n * Computes a p-th quantile/quantiles for a numeric vector.\n *\n * @param {Vector} x - vector with values.\n * @param {number|Array|Vector} p - probability (one value or a vector).\n *\n * @returns {number|Vector} quantile value or a vector with quantiles.\n */\nexport function quantile(x, p) {\n\n   if (isvector(x)) {\n      return quantile(x.v, p);\n   }\n\n   if (isvector(p)) {\n      return quantile(x, p.v);\n   }\n\n   const n = x.length;\n\n   if (!Array.isArray(p)) p = [p];\n\n   if (!isnumber(p[0]) || min(p) < 0 || max(p) > 1) {\n      throw new Error(\"Parameter 'p' must be between 0 and 1 (both included).\");\n   }\n\n   function q(x, p) {\n      const h = (n - 1) * p + 1;\n      const n1 = Math.floor(h);\n      const n2 = Math.ceil(h);\n      return x[n1 - 1] + (x[n2 - 1] - x[n1 - 1]) * (h - Math.floor(h));\n   }\n\n   const xs = _sort(x);\n   const out =  p.map(v => q(xs, v));\n   return p.length == 1 ? out[0] : vector(out);\n}\n\n\n/**\n * Counts how many values from a vector falls into provided intervals (bins).\n *\n * @param {Array|Vector} x - vector with values.\n * @param {Array|Vector} bins - vector with bins boundaries.\n *\n * @returns {Vector} vector with counts for each bean.\n *\n */\nexport function count(x, bins) {\n\n   if (isvector(x)) {\n      return count(x.v, isvector(bins) ? bins.v : bins);\n   }\n\n   const n = bins.length;\n\n   // add a bit extra to right side of the last bin\n   bins[n - 1] = bins[n - 1] * 1.0001\n\n   // count\n   let counts = new Vector.valuesConstructor(n - 1);\n   for (let i = 0; i < x.length; i++) {\n      for (let j = 0; j < n - 1; j++) {\n         if (x[i] >= bins[j] && x[i] < bins[j + 1]) counts[j] += 1;\n      }\n   }\n\n   return new Vector(counts);\n}\n\n\n/**\n * Computes middle points between values of a vector.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {Vector} vector with middle points.\n *\n */\nexport function mids(x) {\n\n   if (isvector(x)) {\n      return mids(x.v);\n   }\n\n   const out = new Vector.valuesConstructor(x.length - 1);\n   for (let i = 0; i < out.length; i++) {\n      out[i] = 0.5 * (x[i] + x[i + 1]);\n   }\n\n   return new Vector(out);\n}\n\n\n/**\n * Splits range of vector values into equal intervals.\n *\n * @param {Array|Vector} x - vector with values.\n * @param {number} n - number of intervals.\n *\n * @returns {Vector} vector with boundaries of the intervals.\n *\n */\nexport function split(x, n) {\n\n   if (isvector(x)) {\n      split(x.v, n);\n   }\n\n   const rn = range(x);\n\n   if (rn[0] === rn[1]) {\n      throw new Error('split: values in a vector \"x\" should vary.');\n   }\n\n   const by = (rn[1] - rn[0]) / n;\n   return Vector.seq(rn[0], rn[1], by);\n}\n\n\n/**\n * Computes difference between all adjacent values in a vector.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {Vector} vector with the differences.\n *\n */\nexport function diff(x) {\n\n   if (isvector(x)) {\n      return diff(x.v);\n   }\n\n   const out = new Vector.valuesConstructor(x.length - 1);\n   for (let i = 0; i < x.length - 1; i++) {\n      out[i] = x[i + 1] - x[i];\n   }\n\n   return new Vector(out);\n}\n\n\n/**\n * Generate probability points for QQ plot.\n *\n * @param {number} n - number of points.\n *\n * @returns {Vector} a sequence of probabilities between 0 and 1.\n *\n */\nexport function ppoints(n) {\n\n   const a = n < 10 ? 3.0/8.0 : 0.5;\n   const out = new Vector.valuesConstructor(n);\n\n   for (let i = 0; i < n; i++) {\n      out[i] = (i + 1 - a) / (n + (1 - a) - a);\n   }\n\n   return new Vector(out);\n}\n\n\n/**\n * Computes cumulative sums for the vector values.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {Vectors} vector with cumulative sums.\n *\n */\nexport function cumsum(x) {\n\n   if (isvector(x)) {\n      return cumsum(x.v);\n   }\n\n   let s = 0;\n   let out = new Vector.valuesConstructor(x.length);\n   for (let i = 0; i < x.length; i++) {\n      s += x[i];\n      out[i] = s\n   }\n\n   return new Vector(out);\n}\n\n\n/**\n * Computes kurtosis of values.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} kurtosis of x.\n *\n */\nexport function kurtosis(x) {\n\n   if (isvector(x)) {\n      return kurtosis(x.v);\n   }\n\n   let n = x.length;\n   let m = mean(x);\n\n   let m4 = 0.0;\n   let m2 = 0.0;\n   for (let i = 0; i < n; i++) {\n      m2 = m2 + Math.pow((x[i] - m), 2);\n      m4 = m4 + Math.pow((x[i] - m), 4);\n   }\n\n   return (m4/n) / Math.pow((m2/n), 2);\n}\n\n\n/**\n * Computes skewness of values.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} skewness of x.\n *\n */\nexport function skewness(x) {\n\n   if (isvector(x)) {\n      return skewness(x.v);\n   }\n\n   let n = x.length;\n   let m = mean(x);\n\n   let m3 = 0.0;\n   let m2 = 0.0;\n   for (let i = 0; i < n; i++) {\n      m2 = m2 + Math.pow((x[i] - m), 2);\n      m3 = m3 + Math.pow((x[i] - m), 3);\n   }\n\n   return (m3/n) / Math.pow((m2/n), 1.5);\n}\n\n\n/**\n * Computes correlation between two vectors.\n *\n * @param {Array|Vector} x - vector with values.\n * @param {Array|Vector} y - vector with values.\n * @param {string} method - which method to use (\"pearson\" or \"spearman\").\n *\n * @returns {number} correlation between x and y.\n *\n */\nexport function cor(x, y, method = \"pearson\") {\n\n   if (isvector(x)) {\n      return cor(x.v, y.v, method);\n   }\n\n   if (method === \"spearman\") {\n      return cor(rank(x), rank(y));\n   }\n\n   return cov(x, y) / (sd(x) * sd(y));\n}\n\n\n/**\n * Computes covariance between two vectors.\n *\n * @param {Array|Vector} x - vector with values.\n * @param {Array|Vector} y - vector with values.\n * @param {boolean} [biased=false] - compute a biased version with n degrees of freedom or not (with n - 1).\n * @param {number} [mx=undefined] - mean of x values (if already known).\n * @param {number} [my=undefined] - mean of y values (if already known).\n *\n * @returns {number} covariance between x and y.\n *\n */\nexport function cov(x, y, biased = false, mx = undefined, my = undefined) {\n\n   if (isvector(x)) {\n      return cov(x.v, y.v, biased, mx, my);\n   }\n\n   const n = x.length;\n\n   if (y.length !== n) {\n      throw Error(\"Vectors 'x' and 'y' must have the same length.\");\n   }\n\n   if (n < 2) {\n      throw Error(\"Vectors 'x' and 'y' must have at least two values.\");\n   }\n\n   if (mx === undefined) mx = mean(x);\n   if (my === undefined) my = mean(y);\n\n   let s = 0;\n   for (let i = 0; i < n; i++) {\n      s = s + (x[i] - mx) * (y[i] - my);\n   }\n\n   return s / (biased ? n : n - 1);\n}\n\n\n/**\n * Returns ranks of values in a vector (ranks start from 1, not 0).\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {Vector} vector with ranks.\n *\n */\nexport function rank(x) {\n\n   if (isvector(x)) {\n      return rank(x.v);\n   }\n\n   const y = [...x].sort((a, b) => a - b);\n\n   return new Vector(x.map(v => y.indexOf(v) + 1));\n}\n\n\n/**\n * Compute marginal range of values as [min, max]\n *\n * @param {Array|Vector} x - vector with values.\n * @param {number} m - margin as per cent of range (value between 0 and 1).\n *\n * @return {Array} array with two values, min and max.\n *\n */\nexport function mrange(x, m) {\n\n   if (isvector(x)) {\n      return mrange(x.v, m);\n   }\n\n   if (m === undefined) m = 0.10;\n   const r = range(x);\n   const d = (r[1] - r[0]) * m;\n\n   return [r[0] - d, r[1] + d];\n}\n\n\n/**\n * Compute range of values as [min, max].\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @return {Array} array with two values, min and max.\n *\n */\nexport function range(x) {\n\n   if (isvector(x)) {\n      return range(x.v);\n   }\n\n   let min = x[0];\n   let max = x[0];\n\n   for (let i = 1; i < x.length; i++) {\n      if (x[i] < min) min = x[i];\n      if (x[i] > max) max = x[i];\n   }\n\n   return [min, max];\n}\n\n\n/**\n * Compute norm2 of a vector (Euclidean distance).\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} norm value.\n *\n */\nexport function norm2(x) {\n\n   if (isvector(x)) {\n      return norm2(x.v);\n   }\n\n   return Math.sqrt(ssq(x));\n}\n\n\n/**\n * Compute sum of squared vector values\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} sum of squared values of x.\n *\n */\nexport function ssq(x) {\n\n   if (isvector(x)) {\n      return ssq(x.v);\n   }\n\n   let ssqv = 0;\n   const n = x.length;\n   for (let i = 0; i < n; i++) {\n      const v = x[i]\n      ssqv += v * v;\n   }\n\n   return ssqv;\n}\n\n\n/**\n * Compute standard deviation of vector values.\n *\n * @param {Array|Vector} x - vector with values.\n * @param {boolean} [biased=false] - compute a biased value (n degrees of freedom) or unbiased (n - 1 degrees of freedom)\n *\n * @returns {number} standard deviation of x.\n *\n */\nexport function sd(x, biased) {\n\n   if (isvector(x)) {\n      return sd(x.v, biased);\n   }\n\n   return Math.sqrt(variance(x, biased));\n}\n\n\n/**\n * Compute variance of vector values.\n *\n * @param {Array|Vector} x - vector with values.\n * @param {boolean} [biased=false] - compute a biased variance (n degrees of freedom) or unbiased (n - 1 degrees of freedom)\n *\n * @returns {number} variance of x.\n *\n */\nexport function variance(x, biased) {\n\n   if (biased === undefined) {\n      biased = false;\n   }\n\n   if (isvector(x)) {\n      return variance(x.v);\n   }\n\n   const m = mean(x);\n   let s = 0;\n   for (let i = 0; i < x.length; i++) {\n      const d = (x[i] - m);\n      s = s + d * d ;\n   }\n\n   return s / (biased ? x.length : (x.length - 1));\n}\n\n\n/**\n * Compute average of vector values.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} mean of x.\n *\n */\nexport function mean(x) {\n\n   if (isvector(x)) {\n      return mean(x.v);\n   }\n\n   return sum(x) / x.length;\n}\n\n\n/**\n * Compute sum of all values in a vector.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} sum of x.\n *\n */\nexport function sum(x) {\n\n   if (isvector(x)) {\n      return sum(x.v);\n   }\n\n   let s = 0;\n   for (let i = 0; i < x.length; i++) {\n      s = s + x[i];\n   }\n\n   return s;\n}\n\n\n/**\n * Compute product of all values in a vector.\n *\n * @param {Array|Vector} x - vector with values.\n *\n * @returns {number} product of x.\n *\n */\nexport function prod(x) {\n\n   if (isvector(x)) {\n      return prod(x.v);\n   }\n\n   let p = 1;\n   for (let i = 0; i < x.length; i++) {\n      p = p * x[i];\n   }\n\n   return p;\n}\n\n\n/**\n * Find the smallest element in a vector.\n *\n * @param {Array|Vector|Index} x - vector or index with values.\n *\n * @returns {number} the smallest value.\n *\n */\nexport function min(x) {\n\n   if (isvector(x) || isindex(x)) {\n      return x.v[minind(x.v) - 1];\n   }\n\n   return x[minind(x) - 1];\n}\n\n\n/**\n * Find index of the smallest element in a vector.\n *\n * @param {Array|Vector|Index} x - vector or index with values.\n *\n * @returns {number} index of the smallest value (starting from 1).\n *\n */\nexport function minind(x) {\n\n   if (isvector(x) || isindex(x)) {\n      return minind(x.v);\n   }\n\n   let outind = 1;\n   let out = x[0]\n   for (let i = 2; i <= x.length; i++) {\n      if (x[i - 1] < out) {\n         outind = i;\n         out = x[i - 1];\n      }\n   }\n\n   return outind;\n}\n\n\n/**\n * Find the largest element in a vector.\n *\n * @param {Array|Vector|Index} x - vector or index with values.\n *\n * @returns {number} the largest value.\n *\n */\nexport function max(x) {\n\n   if (isvector(x) || isindex(x)) {\n      return x.v[maxind(x.v) - 1];\n   }\n\n   return x[maxind(x) - 1];\n}\n\n\n/**\n * Find index of the largest element in a vector.\n *\n * @param {Array|Vector|Index} x - vector or index with values.\n *\n * @returns {number} index of the largest value (starting from 1).\n *\n */\nexport function maxind(x) {\n\n   if (isvector(x) || isindex(x)) {\n      return maxind(x.v);\n   }\n\n   let outind = 1;\n   let out = x[0]\n   for (let i = 2; i <= x.length; i++) {\n      if (x[i - 1] > out) {\n         outind = i;\n         out = x[i - 1];\n      }\n   }\n\n   return outind;\n}\n\n\n","/* =================================================================== */\n/*    Methods for statistical distributions                            */\n/* ------------------------------------------------------------------- */\n/*    Some of the methods and helper functions are based               */\n/*    on C translation of ACM TOMS 708                                 */\n/* =================================================================== */\n\nimport { isvector, vector, Vector } from \"../arrays/index.js\";\n\n// threshold to switch between two approximation for chi-square distribution\nconst CHISQ_DOF_THRESHOLD = 30;\n\n// tolerance for chi-square and f- distribution search\nconst PTOL = 0.0000001;\nconst QTOL = 0.0000001;\nconst QMIN = 0.0000000000001;\nconst QMAX = 1000;\nconst QNITER = 100;\n\n/**\n * Search quantile value using CDF function and splits.\n *\n * @param {Number} p - probability for quantile (left tail).\n * @param {Function} pfun - CDF function\n * @param {Number} min - smallest possible quantile.\n * @param {Number} max - largest possible quantile.\n * @param {Number} niter - maximum number of iterations.\n * @returns quantile value for given \"p\".\n */\nexport function quantsearch(p, pfun, min, max, niter) {\n   if (max === undefined) max = QMAX;\n   if (min === undefined) min = QMIN;\n   if (niter === undefined) niter = QNITER;\n\n   // initial split (start, end, and delta)\n   let qs = min;\n   let qe = max;\n   let qd = (qe - qs) / niter;\n\n   // loop for sequential splits\n   for (let i = 0; i < niter; i++) {\n\n\n      // find q1/q2 so F(q1) ≤ p ≤ F(q2)\n      let q1, q2;\n      for (let j = 0; j < niter; j++) {\n         q1 = qs + j * qd;\n         q2 = qs + (j + 1) * qd;\n         const p1 = pfun(q1);\n         const p2 = pfun(q2);\n         if (p1 <= p && p2 >= p) break;\n      }\n\n      // compute new quantile value as mean of q1 and q2\n      const q0 = (q1 + q2) / 2;\n      const p0 = pfun(q0);\n\n      // check convergence\n      if (Math.abs(p0 - p) < PTOL) return q0;\n\n      // prepare interval and delta for next iteration\n      qs = q1;\n      qe = q2;\n      qd = (qe - qs) / niter;\n\n      // check if delta is small enough\n      if (qd / qe < QTOL) return q0;\n   }\n\n   // if did not converge return anyway\n   return (qs + qe) / 2;\n}\n\n\n/******************************************************/\n/* Uniform distribution                               */\n/******************************************************/\n\n/**\n * Generates 'n' random numbers from a uniform distribution.\n *\n * @param {number} n - amount of numbers to generate.\n * @param {number} [a=0] - smallest value (min) of the population.\n * @param {number} [b=1] - largest value (max) of the population.\n *\n * @returns {Vector} vector with generated random numbers.\n */\nexport function runif(n, a = 0, b = 1) {\n  let out = Vector.zeros(n);\n  for (let i = 0; i < n; i++) {\n    out.v[i] = a + Math.random() * (b - a);\n  }\n  return out;\n}\n\n/**\n * Cumulative distribution function for uniform distribution.\n *\n * @param {number|Vector} x - vector of values or a single value.\n * @param {number} [a=0] - smallest value (min) of the population.\n * @param {number} [b=1] - largest value (max) of the population.\n *\n * @returns {number|Vector} computed probabilities.\n */\nexport function punif(x, a = 0, b = 1) {\n  if (isvector(x)) {\n    return x.apply((v) => punif(v, a, b));\n  }\n\n  return x < a ? 0 : x > b ? 1 : (x - a) / (b - a);\n}\n\n/**\n * Probability density function for uniform distribution.\n *\n * @param {number|Vector} x - vector of values or a single value.\n * @param {number} [a=0] - smallest value (min) of the population.\n * @param {number} [b=1] - largest value (max) of the population.\n *\n * @returns {number|Vector} computed densities.\n */\nexport function dunif(x, a = 0, b = 1) {\n  if (isvector(x)) {\n    return x.apply((v) => dunif(v, a, b));\n  }\n\n  return x < a || x > b ? 0 : 1 / (b - a);\n}\n\n\n/******************************************************/\n/* Normal distribution                                */\n/******************************************************/\n\n/**\n * Generates 'n' random numbers from a normal distribution.\n *\n * @param {number} n - amount of numbers to generate.\n * @param {number} [mu=0] - average value of the population.\n * @param {number} [sigma=1] - standard deviation of the population.\n *\n * @returns {Vector} vector with generated random numbers.\n */\nexport function rnorm(n, mu = 0, sigma = 1) {\n  let out = Vector.zeros(n);\n  for (let i = 0; i < n; i++) {\n    const a = Math.sqrt(-2 * Math.log(Math.random()));\n    const b = 2 * Math.PI * Math.random();\n    out.v[i] = a * Math.sin(b) * sigma + mu;\n  }\n\n  return out;\n}\n\n/**\n * Probability density function for normal distribution.\n *\n * @param {number|Vector} x - vector of values of a single value.\n * @param {number} [mu=0] - average value of the population.\n * @param {number} [sigma=1] - standard deviation of the population.\n *\n * @returns {number|Vector} computed densities.\n *\n */\nexport function dnorm(x, mu = 0, sigma = 1) {\n  if (isvector(x)) {\n    return x.apply((v) => dnorm(v, mu, sigma));\n  }\n\n  const z = (x - mu) / sigma;\n  return Math.exp(-0.5 * z * z) / (Math.sqrt(2 * Math.PI) * sigma);\n}\n\n/**\n * Cumulative distribution function for normal distribution.\n *\n * @param {number|Vector} x - vector of values or a single value.\n * @param {number} [mu=0] - average value of the population.\n * @param {number} [sigma=1] - standard deviation of the population.\n *\n * @returns {number|Vector} computed probabilities.\n *\n */\nexport function pnorm(x, mu = 0, sigma = 1) {\n  if (isvector(x)) {\n    return x.apply((v) => pnorm(v, mu, sigma));\n  }\n\n  const frac = 1 / (Math.sqrt(2) * sigma);\n  return 0.5 * (1 + erf((x - mu) * frac));\n}\n\n/**\n * Inverse cumulative distribution function for normal distribution.\n *\n * @param {number|Vector} p - vector of probabilities or a single probability value.\n * @param {number} [mu=0] - average value of the population.\n * @param {number} [sigma=1] - standard deviation of the population.\n *\n * @returns {number|Vector} computed quantiles.\n *\n */\nexport function qnorm(p, mu = 0, sigma = 1) {\n  if (isvector(p)) {\n    return p.apply((v) => qnorm(v, mu, sigma));\n  }\n\n  if (mu !== 0 || sigma !== 1) {\n    return qnorm(p) * sigma + mu;\n  }\n\n  if (p < 0 || p > 1) {\n    throw Error('Parameter \"p\" must be between 0 and 1.');\n  }\n\n  if (p < 0.0000000001) return -Infinity;\n  if (p > 0.9999999999) return +Infinity;\n\n  const SP1 = 0.425;\n  const SP2 = 5.0;\n  const C1 = 0.180625;\n  const C2 = 1.6;\n\n  const a0 = 3.3871327179;\n  const a1 = 5.0434271938 * 10;\n  const a2 = 1.5929113202 * 100;\n  const a3 = 5.910937472 * 10;\n  const b1 = 1.7895169469 * 10;\n  const b2 = 7.8757757664 * 10;\n  const b3 = 6.71875636 * 10;\n\n  const c0 = 1.4234372777;\n  const c1 = 2.75681539;\n  const c2 = 1.3067284816;\n  const c3 = 1.7023821103 * 0.1;\n  const d1 = 7.370016425 * 0.1;\n  const d2 = 1.2021132975 * 0.1;\n\n  const e0 = 6.657905115;\n  const e1 = 3.081226386;\n  const e2 = 4.2868294337 * 0.1;\n  const e3 = 1.7337203997 * 0.01;\n  const f1 = 2.4197894225 * 0.1;\n  const f2 = 1.2258202635 * 0.01;\n\n  const q = p - 0.5;\n  let r;\n\n  if (Math.abs(q) <= SP1) {\n    r = C1 - q * q;\n    return (\n      (q * (((a3 * r + a2) * r + a1) * r + a0)) /\n      (((b3 * r + b2) * r + b1) * r + 1.0)\n    );\n  }\n\n  r = q < 0 ? p : 1 - p;\n  r = Math.sqrt(-Math.log(r));\n  let res;\n\n  if (r <= SP2) {\n    r = r - C2;\n    res = (((c3 * r + c2) * r + c1) * r + c0) / ((d2 * r + d1) * r + 1.0);\n  } else {\n    r = r - SP2;\n    res = ((e3 * r + e2) * r + e1 + e0) / ((f2 * r + f1) * r + 1.0);\n  }\n\n  return q < 0 ? -res : res;\n}\n\n\n/******************************************************/\n/* Student's t-distribution                           */\n/******************************************************/\n\n/**\n * Probability density function for Student's t-distribution.\n *\n * @param {number|Vector} t - t-value or a vector of t-values.\n * @param {number} df - degrees of freedom.\n *\n * @returns {number|Vector} computed densities.\n *\n */\nexport function dt(t, df) {\n   if (df < 0) {\n      throw new Error('Parameter \"df\" should be a positive number.');\n   }\n\n   if (isvector(t)) {\n      return t.apply((v) => dt(v, df));\n   }\n\n   const pow = -0.5 * (df + 1);\n   const A = 1 / (Math.sqrt(df) * beta(0.5, df / 2));\n\n   return A * Math.pow(1 + (t * t) / df, pow);\n}\n\n/**\n * Cumulative distribution function for Student's t-distribution.\n *\n * @param {number|Vector} t - t-value or a vector of t-values.\n * @param {number} df - degrees of freedom.\n *\n * @returns {number|Vector} computed probabilities.\n *\n */\nexport function pt(t, df) {\n   if (df === undefined || df === null || df < 1) {\n      throw Error('Parameter \"df\" (degrees of freedom) must be an integer number >= 1.',);\n   }\n\n   if (isvector(t)) {\n      return t.apply((v) => pt(v, df));\n   }\n\n   // since distribution in symmetric we can use only left tail\n   if (t === 0) return 0.5;\n   if (t === -Infinity) return 0;\n   if (t === Infinity) return 1;\n   if (t < 0) return 1 - pt(-t, df);\n\n   if (df === 1) return 0.5 + Math.atan(t) / Math.PI;\n   if (df === 2) return 0.5 + t / (2 * Math.sqrt(2 + t * t));\n   if (df === 3) return (0.5 + (t / Math.sqrt(3) / (1 + (t * t) / 3) + Math.atan(t / Math.sqrt(3))) / Math.PI);\n   if (df === 4) return (0.5 + ((t / Math.sqrt(1 + t * t * 0.25)) * (1 - (t * t) / (12 * (1 + t * t * 0.25))) * 3) / 8);\n\n   if (!Number.isFinite(df) || df > 1e5) return pnorm(x, 0.0, 1.0);\n\n   const dft = 1 + (t / df) * t;\n   const val = (df > t * t) ? (1 - pbeta(t * t / (df + t * t), 0.5, df / 2.)) : pbeta(1. / dft, df / 2., 0.5);\n   return 1 - val / 2.;\n}\n\n\n/**\n * Inverse cumulative distribution (quantile) function for Student's t-distribution.\n *\n * @param {number|Vector} p - probability or vector with probabilities.\n * @param {number} df - degrees of freedom.\n *\n * @returns {number|Vector} computed quantiles.\n *\n */\nexport function qt(p, df) {\n   if (df === undefined || df === null || df < 1) {\n      throw Error('Parameter \"df\" (degrees of freedom) must be an integer number >= 1.',);\n   }\n\n   if (isvector(p)) {\n      return p.apply((v) => qt(v, df));\n   }\n\n   if (p < 0 || p > 1) {\n      throw Error('Parameter \"p\" must be between 0 and 1.');\n   }\n\n   if (p < 0.0000000001) return -Infinity;\n   if (p > 0.9999999999) return +Infinity;\n\n   // simple cases — exact solutions\n   if (df === 1) {\n      return Math.tan(Math.PI * (p - 0.5));\n   }\n\n   if (df === 2) {\n      return 2 * (p - 0.5) * Math.sqrt(2 / (4 * p * (1 - p)));\n   }\n\n  // approximation\n\n   let sign = -1;\n   if (p >= 0.5) {\n      sign = +1;\n      p = 2 * (1 - p);\n   } else {\n      sign = -1;\n      p = 2 * p;\n   }\n\n   const a = 1.0 / (df - 0.5);\n   const b = 48.0 / a ** 2;\n   let c = (((20700 * a) / b - 98) * a - 16) * a + 96.36;\n   const d = ((94.5 / (b + c) - 3.0) / b + 1.0) * Math.sqrt((a * Math.PI) / 2) * df;\n\n   let x = d * p;\n   let y = x ** (2.0 / df);\n\n   if (y > 0.05 + a) {\n      // asymptotic inverse expansion about normal\n      x = qnorm(p * 0.5);\n      y = x * x;\n\n      if (df < 5) {\n         c = c + 0.3 * (df - 4.5) * (x + 0.6);\n      }\n\n      c = (((0.05 * d * x - 5.0) * x - 7.0) * x - 2.0) * x + b + c;\n      y = (((((0.4 * y + 6.3) * y + 36.0) * y + 94.5) / c - y - 3.0) / b + 1.0) * x;\n      y = a * y ** 2;\n      y = y > 0.002 ? Math.exp(y) - 1.0 : 0.5 * y ** 2 + y;\n   } else {\n      y = (((1.0 / (((df + 6.0) / (df * y) - 0.089 * d - 0.822) * (df + 2.0) * 3.0) +\n         0.5 / (df + 4.0)) * y - 1.0) * (df + 1.0)) / (df + 2.0) + 1.0 / y;\n   }\n\n   return sign * Math.sqrt(df * y);\n}\n\n\n/******************************************************/\n/* F-distribution                                     */\n/******************************************************/\n\n/**\n * Probability density function for F-distribution.\n *\n * @param {number|Vector} F - F-value or a vector of t-values\n * @param {number} d1 - degrees of freedom.\n * @param {number} d2 - degrees of freedom.\n *\n * @returns {number|Vector} computed densities.\n *\n */\nexport function df(F, d1, d2) {\n  if (F < 0 || d1 < 0 || d2 < 0) {\n    throw new Error(\"All 3 parameters must be positive.\");\n  }\n\n  if (d2 <= d1) {\n    throw new Error('Parameter \"d1\" must be larger \"d2\".');\n  }\n\n  if (isvector(F)) {\n    return F.apply((v) => df(v, d1, d2));\n  }\n\n  return (\n    Math.sqrt(\n      (Math.pow(d1 * F, d1) * Math.pow(d2, d2)) /\n        Math.pow(d1 * F + d2, d1 + d2),\n    ) /\n    (F * beta(d1 / 2, d2 / 2))\n  );\n}\n\n/**\n * Cumulative distribution function for F-distribution.\n *\n * @param {number|Vector} F - F-value or a vector of t-values.\n * @param {number} df1 - degrees of freedom.\n * @param {number} df2 - degrees of freedom.\n *\n * @returns {number|Vector} computed probabilities.\n *\n */\nexport function pf(F, df1, df2) {\n\n   if (df1 <= 0 || df2 <= 0) {\n      throw new Error('pf: parameters \"df1\" and \"df2\" must be positive numbers.')\n   }\n   if (Array.isArray(F)) {\n      return pf(vector(F), df1, df2);\n   }\n\n   if (isvector(F)) {\n      return F.apply((v) => pf(v, df1, df2));\n   }\n\n   if (F <= 0) return 0;\n\n   if (df1 <= 0. || df2 <= 0.) ML_ERR_return_NAN;\n\n   if (df2 == Number.POSITIVE_INFINITY) {\n\n   \tif (df1 == Number.POSITIVE_INFINITY) {\n\t      if(F <  1.) return 0.0;\n\t      if(F == 1.) return 0.5;\n\t      if(F >  1.) return 1.0;\n\t   }\n\n\t   return pchisq(F * df1, df1);\n   }\n\n   if (df1 == Number.POSITIVE_INFINITY) return 1 - pchisq(df2 / F , df2);\n\n   if (df1 * F > df2)\n   \treturn 1 - pbeta(df2 / (df2 + df1 * F), df2 / 2., df1 / 2.);\n   else\n\t   return pbeta(df1 * F / (df2 + df1 * F), df1 / 2., df2 / 2.);\n\n}\n\n\n/**\n * Inverse cumulative distribution (quantile) function for F-distribution.\n *\n * @param {number|Vector|Array} p - probability or vector/array with probabilities.\n * @param {number} d1 - degrees of freedom.\n * @param {number} d2 - degrees of freedom.\n *\n * @returns {number|Vector} computed probabilities.\n *\n * @description the method computes quantiles by sequential improving, splitting possible quantile\n * range into intervals, computing probabilities for each element of the interval using `pf()`,\n * then find the quantile which has the closest probability value, make a new split around it\n * and so on until the probability of the currently selected quintile is close to the desired\n * one.\n *\n * @returns {number|Vector} computed quantiles.\n *\n */\nexport function qf(p, df1, df2) {\n\n   if (p === 0) return 0;\n   if (p === 1) return Inf;\n   if (df1 <= 0) return NaN;\n   if (df2 <= 0) return NaN;\n\n   let MAXQ = QMAX;\n   let MINQ = QMIN;\n   if (p > 0.9997 && df2 === 1) { MAXQ = 10000000; MINQ = 600000; p = 0.9997}\n   else if (p > 0.9992 && df2 === 1) { MAXQ = 10000000; MINQ = 600000; }\n   else if (p > 0.997 && df2 === 1) { MAXQ = 1000000; MINQ = 45000; }\n   else if (p > 0.992 && df2 === 1) { MAXQ = 100000; MINQ = 5000; }\n   else if (p > 0.97 && df2 === 1) { MAXQ = 10000; MINQ = 400; }\n\n   if (Array.isArray(p)) {\n     return qf(vector(p), df1, df2);\n   }\n\n   const pfun = (v) => pf(v, df1, df2);\n\n  // compute quantile using sequential splits of quantile range\n   function F(x, df1, df2) {\n     if (x === 0) return 0;\n     if (x === 1) return Inf;\n     if (df1 === 0) return NaN;\n     if (df2 === 0) return NaN;\n\n     return quantsearch(x, pfun, MINQ, MAXQ);\n   }\n\n   return isvector(p) ? p.apply(F, df1, df2) : F(p, df1, df2);\n}\n\n\n\n/******************************************************/\n/* Chi-square distribution                            */\n/******************************************************/\n\n\n/**\n * Cumulative distribution function for chi-square distribution.\n *\n * @param {number|Vector|Array} x - chi-square value.\n * @param {number} df - degrees of freedom.\n *\n * @description if DoF is relatively small (< 30) the method computes probabilities via\n * approximation of lower incomplete gamma function, `igamma()`, and gamma function, `gamma()`.\n * If the DoF is larger than 30 it uses the a modified power series approximation\n * (doi:10.1016/j.csda.2004.04.001) and normal distribution.\n *\n * @returns {number|Vector} computed probabilities.\n *\n */\nexport function pchisq(x, df) {\n\n   if (Array.isArray(x)) {\n      return pchisq(vector(x), df);\n   }\n\n   const mu = 5 / 6 - 1 / (9 * df) - 7 / (648 * df * df) + 25 / (2187 * df * df * df);\n   const sigma2 = 1 / (18 * df) + 1 / (162 * df * df) - 37 / (1164 * df * df * df);\n   const sigma = Math.sqrt(sigma2);\n\n  // works well for large df\n   function F2(x) {\n      if (x === 0) return 0;\n      if (df === 0) return 1;\n      if (df > 100 && x > df * 2) return 1;\n      if (df > 50 && x > df * 3) return 1;\n      if (df > 10 && x > df * 5) return 1;\n      if (df > 5 && x > df * 8) return 1;\n      if (x > df * 30) return 1;\n      const l0 = x / df;\n      const l = Math.pow(l0, 1 / 6) - 0.5 * Math.pow(l0, 1 / 3) + (1 / 3) * Math.pow(l0, 1 / 2);\n      return pnorm(l, mu, sigma);\n   }\n\n  // works well for small df\n  function F1(x) {\n    if (x === 0) return 0;\n    if (df === 0) return 1;\n    if (df > 100 && x > df * 2) return 1;\n    if (df > 50 && x > df * 3) return 1;\n    if (df > 10 && x > df * 5) return 1;\n    if (df > 5 && x > df * 8) return 1;\n    if (x > df * 30) return 1;\n    return igamma(x / 2, df / 2) / gamma(df / 2);\n  }\n\n   const F = df > CHISQ_DOF_THRESHOLD ? F2 : F1;\n   return isvector(x) ? x.apply(F) : F(x);\n}\n\n\n/**\n * Inverse cumulative distribution (quantile) function for chi-square distribution.\n *\n * @param {number|Vector|Array} p - probability or vector/array with probabilities.\n * @param {number} df - degrees of freedom.\n *\n * @description if DoF is relatively small (< 30) the method computes quantiles by sequential\n * improving, splitting possible quantile range into intervals, computing probabilities for each\n * element of the interval using `pchisq()`, then find the quantile which has the closest\n * probability value, make a new split around it and so on until the probability of the\n * currently selected quintile is close to the desired one. For large DoF (>30) the it uses\n * the a modified power series approximation (doi:10.1016/j.csda.2004.04.001) and\n * normal distribution.\n *\n * @returns {number|Vector} computed quantiles.\n *\n */\nexport function qchisq(p, df) {\n   if (Array.isArray(p)) {\n      return qchisq(vector(p), df);\n   }\n\n   // compute parameters of normal distribution for power approximation\n   const mu = 5 / 6 - 1 / (9 * df) - 7 / (648 * df * df) + 25 / (2187 * df * df * df);\n   const sigma2 = 1 / (18 * df) + 1 / (162 * df * df) - 37 / (1164 * df * df * df);\n   const sigma = Math.sqrt(sigma2);\n\n   // compute quantile for one probability value using power approximations\n   // and inverse solution\n   function F2(x) {\n      if (x === 0) return 0;\n      if (x === 1) return Inf;\n      if (df === 0) return 0;\n      const l = qnorm(x, mu, sigma);\n      const o = Math.pow(Math.sqrt(36 * l * l - 30 * l + 13) / 4 + (3 * l - 3 / 2) / 2 + 1 / 8, 1 / 3);\n      return Math.pow(o - 3 / (4 * o) + 0.5, 6) * df;\n   }\n\n   // compute quantile using sequential splits of quantile range\n   function F1(x) {\n      if (x === 0) return 0;\n      if (x === 1) return Inf;\n      if (df === 0) return 0;\n\n      const pfun = (v) => pchisq(v, df);\n      return quantsearch(x, pfun, 0, CHISQ_DOF_THRESHOLD * 10);\n   }\n\n   const F = df > CHISQ_DOF_THRESHOLD ? F2 : F1;\n   return isvector(p) ? p.apply(F) : F(p);\n}\n\n\n\n/******************************************************/\n/* Beta distribution                            */\n/******************************************************/\n\n\n/**\n * Cumulative distribution function for beta distribution\n * (a.k.a regularized incomplete beta function I_x(a, b)).\n *\n * @param {number|Vector|Array} x - argument value or vector/array.\n * @param {number} a - degrees of freedom.\n * @param {number} b - degrees of freedom.\n *\n * @description\n *\n * @returns {number|Vector} computed probabilities.\n *\n */\nfunction pbeta(x, a, b) {\n\n   if (Array.isArray(x)) {\n      return pbeta(vector(x), a, b);\n   }\n\n   if (isvector(x)) {\n      return x.apply(v => pbeta(v, a, b));\n   }\n\n   // check corner cases for x\n   if (x <= 0) return 0;\n   if (x >= 1) return 1;\n\n   // check corner cases for a and b\n   if (a == 0 || b == 0 || !Number.isFinite(a) || !Number.isFinite(b)) {\n      if (a == 0 && b == 0) return 0.5;\n      if (a == 0 || a / b == 0) return 1.0;\n      if (b == 0 || b / a == 0) return 0.0;\n      // remaining corner case when both a and b are infinite\n      return x < 0.5 ? 0.0 : 1.0;\n   }\n\n   const x1 = 0.5 - x + 0.5;\n   return bratio(a, b, x, x1);\n}\n\n/******************************************************/\n/* Helper functions                                   */\n/******************************************************/\n\n/**\n * Gamma function (approximation).\n *\n * @param {number|Vector} z - argument (one value or a vector).\n *\n * @returns {number} value of the Gamma function.\n *\n */\nexport function gamma(z) {\n   if (isvector(z)) {\n      return z.apply(gamma);\n   }\n\n   if (z <= 0) {\n      throw new Error(\"gamma: the function only works with arguments > 0.\");\n   }\n\n   // coefficients\n   const p = [\n    676.5203681218851, -1259.1392167224028, 771.32342877765313,\n    -176.61502916214059, 12.507343278686905, -0.13857109526572012,\n    9.9843695780195716e-6, 1.5056327351493116e-7,\n   ];\n\n   if (z < 0.5) {\n      return Math.PI / (Math.sin(Math.PI * z) + gamma(1 - z));\n   }\n\n   z = z - 1;\n   let x = 0.99999999999980993;\n\n   for (let i = 0; i < p.length; i++) {\n      x = x + p[i] / (z + i + 1);\n   }\n\n   const t = z + p.length - 0.5;\n   return Math.sqrt(2 * Math.PI) * Math.pow(t, z + 0.5) * Math.exp(-t) * x;\n}\n\n\n/**\n * Lower incomplete gamma function (approximation)\n *\n * @param {number} x - first argument (one value).\n * @param {number} a - second argument (one value).\n *\n * @returns {number} value of the lower incomplete gamma function.\n *\n */\nexport function igamma(x, a) {\n   const epsilon = 1e-18; // Desired accuracy\n   const maxIterations = 10000; // Maximum number of iterations\n\n   let sum = 0;\n\n   for (let k = 0; k < maxIterations; k++) {\n      const s = Math.pow(x, k) / gamma(a + k + 1);\n      if (isNaN(s) || s < epsilon) break;\n      sum += s;\n   }\n\n   return Math.pow(x, a) * gamma(a) * Math.exp(-x) * sum;\n}\n\n\n/**\n * Error function for normal distribution.\n *\n * @param {number} x - a number.\n *\n * @returns {number} value for erf.\n *\n */\nexport function erf(x) {\n   const sign = x >= 0 ? 1 : -1;\n   x = Math.abs(x);\n\n   // constants\n   const a1 = 0.254829592;\n   const a2 = -0.284496736;\n   const a3 = 1.421413741;\n   const a4 = -1.453152027;\n   const a5 = 1.061405429;\n   const p = 0.3275911;\n\n   // approximation\n   const t = 1.0 / (1.0 + p * x);\n   const y = 1.0 - ((((a5 * t + a4) * t + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n   return sign * y;\n}\n\n\n/**\n * Beta function (approximation).\n *\n * @param {number} x - first argument (one value).\n * @param {number} y - second argument (one value).\n *\n * @returns {number} value of the Beta function.\n *\n */\nexport function beta(x, y) {\n  return Math.exp(lgamma(x) + lgamma(y) - lgamma(x + y));\n}\n\n\n/**\n * Evaluation of complementary error function\n * @param {Number} ind a flag (0/1)\n * @param {Number} x an argument\n * @returns {Number} erfx(x) if ind = 0, exp(x * x) * erfc(x) otherwise\n */\nfunction erfc1(ind, x) {\n    /* Initialized data */\n\n   const c = .564189583547756;\n   const a = [7.7105849500132e-5,-.00133733772997339,\n\t    .0323076579225834,.0479137145607681,.128379167095513];\n   const b = [.00301048631703895,.0538971687740286,\n\t    .375795757275549];\n   const p = [-1.36864857382717e-7,.564195517478974,\n\t    7.21175825088309,43.1622272220567,152.98928504694,\n\t    339.320816734344,451.918953711873,300.459261020162];\n   const q = [1.,12.7827273196294,77.0001529352295,\n\t    277.585444743988,638.980264465631,931.35409485061,\n\t    790.950925327898,300.459260956983];\n   const r = [2.10144126479064,26.2370141675169,\n\t    21.3688200555087,4.6580782871847,.282094791773523];\n   const s = [94.153775055546,187.11481179959,\n\t    99.0191814623914,18.0124575948747];\n\n   let ret_val;\n   let e, t, w, bot, top;\n   let ax = Math.abs(x);\n   if (ax <= 0.5) {\n\t   t = x * x;\n\t   top = (((a[0] * t + a[1]) * t + a[2]) * t + a[3]) * t + a[4] + 1.;\n\t   bot = ((b[0] * t + b[1]) * t + b[2]) * t + 1.;\n\t   ret_val = 0.5 - x * (top / bot) + 0.5;\n   \tif (ind != 0) {\n         ret_val = Math.exp(t) * ret_val;\n\t   }\n\t   return ret_val;\n   }\n\n   if (ax <= 4.) {\n   \ttop = ((((((p[0] * ax + p[1]) * ax + p[2]) * ax + p[3]) * ax + p[4]) * ax + p[5]) * ax + p[6]) * ax + p[7];\n\t   bot = ((((((q[0] * ax + q[1]) * ax + q[2]) * ax + q[3]) * ax + q[4]) * ax + q[5]) * ax + q[6]) * ax + q[7];\n\t   ret_val = top / bot;\n   } else {\n   \tif (x <= -5.6) {\n   \t    ret_val = 2.;\n\t       if (ind != 0) {\n\t\t      ret_val = Math.exp(x * x) * 2.;\n\t      }\n\t      return ret_val;\n\t   }\n\n      if (ind == 0 && (x > 100. || x * x > -exparg(1))) {\n         return 0.;\n\t   }\n\n      t = 1. / (x * x);\n      top = (((r[0] * t + r[1]) * t + r[2]) * t + r[3]) * t + r[4];\n      bot = (((s[0] * t + s[1]) * t + s[2]) * t + s[3]) * t + 1.;\n      ret_val = (c - t * top / bot) / ax;\n   }\n\n   if (ind != 0) {\n   \tif (x < 0.) {\n         ret_val = Math.exp(x * x) * 2. - ret_val;\n      }\n   } else {\n      w = x * x;\n      t = w;\n      e = w - t;\n      ret_val = (0.5 - e + 0.5) * Math.exp(-t) * ret_val;\n      if (x < 0.) {\n         ret_val = 2. - ret_val;\n      }\n   }\n   return ret_val;\n\n}\n\n\n/**\n * log-gamma function\n * @param {Number} z\n * @returns function value (single)\n */\nfunction lgamma(z) {\n  const g = 7,\n    p = [\n      0.99999999999980993, 676.5203681218851, -1259.1392167224028,\n      771.32342877765313, -176.61502916214059, 12.507343278686905,\n      -0.13857109526572012, 9.9843695780195716e-6, 1.5056327351493116e-7,\n    ];\n\n  if (z < 0.5) {\n    return Math.log(Math.PI) - Math.log(Math.sin(Math.PI * z)) - lgamma(1 - z);\n  } else {\n    z -= 1;\n    let x = p[0];\n    for (let i = 1; i < g + 2; i++) {\n      x += p[i] / (z + i);\n    }\n    var t = z + g + 0.5;\n    return (\n      Math.log(2 * Math.PI) / 2 + (z + 0.5) * Math.log(t) - t + Math.log(x)\n    );\n  }\n}\n\n\n/**\n * Evaluation of the function ln(gamma(a + b))\n * @param {Number} a\n * @param {Number} b\n * @returns function value.\n */\nfunction gsumln(a, b) {\n\n   let x = a + b - 2.;\n\n   if (x <= 0.25) return gamln1(x + 1.);\n   if (x <= 1.25) return gamln1(x) + alnrel(x);\n   return gamln1(x - 1.) + Math.log(x * (x + 1.));\n}\n\n\n/**\n * Evaluation of del(a0) + del(b0) - del(a0 + b0)\n * @param {Number} a0\n * @param {Number} b0\n * @returns function value\n */\nfunction bcorr(a0, b0) {\n   const c0 = .0833333333333333;\n   const c1 = -.00277777777760991;\n   const c2 = 7.9365066682539e-4;\n   const c3 = -5.9520293135187e-4;\n   const c4 = 8.37308034031215e-4;\n   const c5 = -.00165322962780713;\n\n   let ret_val, r1;\n   let a, b, c, h, t, w, x, s3, s5, x2, s7, s9, s11;\n\n   a = Math.min(a0, b0);\n   b = Math.max(a0, b0);\n\n   h = a / b;\n   c = h / (h + 1.);\n   x = 1. / (h + 1.);\n   x2 = x * x;\n\n   s3 = x + x2 + 1.;\n   s5 = x + x2 * s3 + 1.;\n   s7 = x + x2 * s5 + 1.;\n   s9 = x + x2 * s7 + 1.;\n   s11 = x + x2 * s9 + 1.;\n\n   r1 = 1. / b;\n   t = r1 * r1;\n   w = ((((c5 * s11 * t + c4 * s9) * t + c3 * s7) * t + c2 * s5) * t + c1 *\n      s3) * t + c0;\n   w *= c / b;\n\n   r1 = 1. / a;\n   t = r1 * r1;\n   ret_val = (((((c5 * t + c4) * t + c3) * t + c2) * t + c1) * t + c0) / a +\n      w;\n\n   return ret_val;\n}\n\n/**\n * Computation of 1 / gamma(1 + a)\n * @param {Number} a\n * @returns function value.\n */\nfunction gam1(a) {\n   let d, t, w, bot, top;\n\n   t = a;\n   d = a - 0.5;\n   if (d > 0.) t = d - 0.5;\n   if (t < 0.) { /* L30: */\n\t   const r = [-.422784335098468,-.771330383816272,\n\t\t     -.244757765222226,.118378989872749,9.30357293360349e-4,\n\t\t     -.0118290993445146,.00223047661158249,2.66505979058923e-4,\n\t\t     -1.32674909766242e-4];\n\t   const s1 = .273076135303957;\n\t   const s2 = .0559398236957378;\n\n   \ttop = (((((((r[8] * t + r[7]) * t + r[6]) * t + r[5]) * t + r[4]) * t + r[3]) * t + r[2]) * t + r[1]) * t + r[0];\n\t   bot = (s2 * t + s1) * t + 1.;\n\t   w = top / bot;\n      return d > 0. ? t * w / a : a * (w + 0.5 + 0.5);\n   } else if (t == 0) {\n\t   return 0.;\n   } else {\n\t   const p = [.577215664901533,-.409078193005776,\n\t\t     -.230975380857675,.0597275330452234,.0076696818164949,\n\t\t     -.00514889771323592,5.89597428611429e-4];\n\t   const q = [1.,.427569613095214,.158451672430138,\n\t\t     .0261132021441447,.00423244297896961];\n\n\t   top = (((((p[6] * t + p[5]) * t + p[4]) * t + p[3]) * t + p[2]) * t + p[1]) * t + p[0];\n   \tbot = (((q[4] * t + q[3]) * t + q[2]) * t + q[1]) * t + 1.;\n\t   w = top / bot;\n\t   return d > 0. ? t / a * (w - 0.5 - 0.5) : a * w;\n   }\n}\n\n/**\n *\n * @param {*} x\n * @param {*} a\n * @param {*} n\n * @returns\n */\nfunction chebyshev_eval(x, a, n) {\n   let b0, b1, b2, twox;\n\n   if (n > 1000) return Number.NaN;\n   if (x < -1.1 || x > 1.1) return Number.NaN;\n\n   twox = x * 2;\n   b2 = b1 = 0;\n   b0 = 0;\n   for (let i = 1; i <= n; i++) {\n\t   b2 = b1;\n\t   b1 = b0;\n\t   b0 = twox * b1 - b2 + a[n - i];\n   }\n   return (b0 - b2) * 0.5;\n}\n\n/**\n * More precise evaluation of log(1 + x) for small x.\n * @param {Number} x\n * @returns function value.\n */\nfunction log1p(x) {\n   const alnrcs = [\n\t+.10378693562743769800686267719098e+1,\n\t-.13364301504908918098766041553133e+0,\n\t+.19408249135520563357926199374750e-1,\n\t-.30107551127535777690376537776592e-2,\n\t+.48694614797154850090456366509137e-3,\n\t-.81054881893175356066809943008622e-4,\n\t+.13778847799559524782938251496059e-4,\n\t-.23802210894358970251369992914935e-5,\n\t+.41640416213865183476391859901989e-6,\n\t-.73595828378075994984266837031998e-7,\n\t+.13117611876241674949152294345011e-7,\n\t-.23546709317742425136696092330175e-8,\n\t+.42522773276034997775638052962567e-9,\n\t-.77190894134840796826108107493300e-10,\n\t+.14075746481359069909215356472191e-10,\n\t-.25769072058024680627537078627584e-11,\n\t+.47342406666294421849154395005938e-12,\n\t-.87249012674742641745301263292675e-13,\n\t+.16124614902740551465739833119115e-13,\n\t-.29875652015665773006710792416815e-14,\n\t+.55480701209082887983041321697279e-15,\n\t-.10324619158271569595141333961932e-15,\n\t+.19250239203049851177878503244868e-16,\n\t-.35955073465265150011189707844266e-17,\n\t+.67264542537876857892194574226773e-18,\n\t-.12602624168735219252082425637546e-18,\n\t+.23644884408606210044916158955519e-19,\n\t-.44419377050807936898878389179733e-20,\n\t+.83546594464034259016241293994666e-21,\n\t-.15731559416479562574899253521066e-21,\n\t+.29653128740247422686154369706666e-22,\n\t-.55949583481815947292156013226666e-23,\n\t+.10566354268835681048187284138666e-23,\n\t-.19972483680670204548314999466666e-24,\n\t+.37782977818839361421049855999999e-25,\n\t-.71531586889081740345038165333333e-26,\n\t+.13552488463674213646502024533333e-26,\n\t-.25694673048487567430079829333333e-27,\n\t+.48747756066216949076459519999999e-28,\n\t-.92542112530849715321132373333333e-29,\n\t+.17578597841760239233269760000000e-29,\n\t-.33410026677731010351377066666666e-30,\n\t+.63533936180236187354180266666666e-31,\n   ];\n\n   const nlnrel = 22;\n   const xmin = -0.999999985;\n\n   if (x == 0.) return 0.;/* speed */\n   if (x == -1) return(Number.NEGATIVE_INFINITY);\n   if (x  < -1) return(Number.NaN);\n\n   if (Math.abs(x) <= .375) {\n   \tif(Math.abs(x) < .5 * Number.EPSILON) return x;\n\t   if( (0 < x && x < 1e-8) || (-1e-9 < x && x < 0)) return x * (1 - .5 * x);\n   \treturn x * (1 - x * chebyshev_eval(x / .375, alnrcs, nlnrel));\n   }\n\n   if (x < xmin) {\n      throw new Error('log1p: error evaluating the functio value.')\n   }\n\n   return Math.log(1 + x);\n}\n\n/**\n * Computation of ln(gamma(b) / gamma(a + b)) when b ≥ 8\n * @param {Number} a\n * @param {Number} b\n * @returns function value\n */\nfunction algdiv(a, b) {\n   const c0 = .0833333333333333;\n   const c1 = -.00277777777760991;\n   const c2 = 7.9365066682539e-4;\n   const c3 = -5.9520293135187e-4;\n   const c4 = 8.37308034031215e-4;\n   const c5 = -.00165322962780713;\n\n   let c, d, h, t, u, v, w, x, s3, s5, x2, s7, s9, s11;\n\n   if (a > b) {\n      h = b / a;\n      c = 1. / (h + 1.);\n      x = h / (h + 1.);\n      d = a + (b - 0.5);\n   } else {\n      h = a / b;\n      c = h / (h + 1.);\n      x = 1. / (h + 1.);\n      d = b + (a - 0.5);\n   }\n\n   x2 = x * x;\n   s3 = x + x2 + 1.;\n   s5 = x + x2 * s3 + 1.;\n   s7 = x + x2 * s5 + 1.;\n   s9 = x + x2 * s7 + 1.;\n   s11 = x + x2 * s9 + 1.;\n\n   t = 1./ (b * b);\n   w = ((((c5 * s11 * t + c4 * s9) * t + c3 * s7) * t + c2 * s5) * t + c1 * s3) * t + c0;\n   w *= c / b;\n\n   u = d * alnrel(a / b);\n   v = a * (Math.log(b) - 1.);\n\n   return u > v ? w - v - u : w - u - v;\n}\n\n/**\n * Evaluation of ln(gamma(1 + a)) for –0.2 ≤ a ≤ 1.25\n * @param {Number} a\n * @returns function value.\n */\nfunction gamln1(a) {\n   if (a < 0.6) {\n\t   const p0 = .577215664901533;\n\t   const p1 = .844203922187225;\n\t   const p2 = -.168860593646662;\n\t   const p3 = -.780427615533591;\n\t   const p4 = -.402055799310489;\n\t   const p5 = -.0673562214325671;\n\t   const p6 = -.00271935708322958;\n\t   const q1 = 2.88743195473681;\n\t   const q2 = 3.12755088914843;\n\t   const q3 = 1.56875193295039;\n\t   const q4 = .361951990101499;\n\t   const q5 = .0325038868253937;\n\t   const q6 = 6.67465618796164e-4;\n\t   const w = ((((((p6 * a + p5)* a + p4)* a + p3)* a + p2)* a + p1)* a + p0) /\n\t      ((((((q6 * a + q5)* a + q4)* a + q3)* a + q2)* a + q1)* a + 1.);\n\t   return -(a) * w;\n   } else {\n\t   const r0 = .422784335098467;\n\t   const r1 = .848044614534529;\n\t   const r2 = .565221050691933;\n\t   const r3 = .156513060486551;\n\t   const r4 = .017050248402265;\n\t   const r5 = 4.97958207639485e-4;\n\t   const s1 = 1.24313399877507;\n\t   const s2 = .548042109832463;\n\t   const s3 = .10155218743983;\n\t   const s4 = .00713309612391;\n\t   const s5 = 1.16165475989616e-4;\n\t   const x = a - 0.5 - 0.5;\n\t   const w = (((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x + r0) /\n\t       (((((s5 * x + s4) * x + s3) * x + s2) * x + s1) * x + 1.);\n\t   return x * w;\n   }\n}\n\n/**\n * Evaluation of  ln(gamma(a))  for positive a\n * @param {Number} a\n * @returns function value\n */\nfunction gamln(a) {\n   const d  = .418938533204673;\n   const c0 = .0833333333333333;\n   const c1 = -.00277777777760991;\n   const c2 = 7.9365066682539e-4;\n   const c3 = -5.9520293135187e-4;\n   const c4 = 8.37308034031215e-4;\n   const c5 = -.00165322962780713;\n\n   if (a <= 0.8) return gamln1(a) - Math.log(a);\n   if (a <= 2.25) return gamln1(a - 0.5 - 0.5);\n\n   if (a < 10.) {\n   \tlet n = Math.round(a - 1.25);\n\t   let t = a;\n\t   let w = 1.;\n\t   for (let i = 1; i <= n; ++i) {\n\t      t += -1.;\n\t      w *= t;\n\t   }\n\t   return gamln1(t - 1.) + Math.log(w);\n   }\n\n\tlet t = 1. / (a * a);\n\tlet w = (((((c5 * t + c4) * t + c3) * t + c2) * t + c1) * t + c0) / a;\n\treturn d + w + (a - 0.5) * (Math.log(a) - 1.);\n}\n\n/**\n * Evaluation of the logarithm of the beta function  ln(beta(a0,b0))\n * @param {Number} a0\n * @param {Number} b0\n * @returns function value\n */\nfunction betaln(a0, b0) {\n\n   const e = .918938533204673;\n\tlet a = Math.min(a0, b0);\n\tlet b = Math.max(a0, b0);\n\n   function l140(w, a, b) {\n\t   let n = Math.round(b - 1);\n      let z = 1.;\n\t   for (let i = 1; i <= n; ++i) {\n\t\t   b += -1.;\n\t\t   z *= b / (a + b);\n      }\n      return w + Math.log(z) + (gamln(a) + (gamln(b) - gsumln(a, b)));\n   }\n\n   if (a < 8.) {\n\n\t   if (a < 1.) {\n\t      if (b < 8.) {\n\t\t      return gamln(a) + (gamln(b) - gamln(a+b));\n         } else {\n   \t\t   return gamln(a) + algdiv(a, b);\n         }\n\t   }\n\n   \tlet w;\n\t   if (a < 2.) {\n\t      if (b <= 2.) {\n\t\t      return gamln(a) + gamln(b) - gsumln(a, b);\n\t      }\n\n   \t    if (b < 8.) {\n\t      \tw = 0.;\n\t\t      return l140(w, a, b);\n\t      }\n\n\t      return gamln(a) + algdiv(a, b);\n      }\n\n      if (b <= 1e3) {\n         let n = Math.round(a - 1);\n         w = 1.;\n         for (let i = 1; i <= n; ++i) {\n            a += -1.;\n            let h = a / b;\n            w *= h / (h + 1.);\n         }\n         w = Math.log(w);\n\n         if (b >= 8.) {\n            return w + gamln(a) + algdiv(a, b);\n         }\n\n         return l140(w, a, b);\n\n      } else {\n\n         let n = Math.round(a - 1);\n         w = 1.;\n         for (let i = 1; i <= n; ++i) {\n            a += -1.;\n            w *= a / (a / b + 1.);\n         }\n         return log(w) - n * log(b) + (gamln(a) + algdiv(a, b));\n      }\n\n    } else {\n\t   let w = bcorr(a, b);\n\t   let h = a / b;\n\t   let u = -(a - 0.5) * Math.log(h / (h + 1.));\n\t   let v = b * alnrel(h);\n   \treturn (u > v) ? Math.log(b) * -0.5 + e + w - v - u : Math.log(b) * -0.5 + e + w - u - v;\n   }\n}\n\n/**\n * If l = 0 then returns largest positive W for which exp(W) can be computed.\n * @param {Number} l\n * @returns\n */\nfunction exparg(l) {\n   const lnb = .69314718055995;\n   let m = (l == 0) ? 1024 : -300; // TODO: constants are chosen manually\n   return m * lnb * .99999;\n}\n\n/**\n * Evaluation of the function  x - ln(1 + x)\n * @param {Number} x\n * @returns\n */\nfunction rlog1(x) {\n   const a = .0566749439387324;\n   const b = .0456512608815524;\n   const p0 = .333333333333333;\n   const p1 = -.224696413112536;\n   const p2 = .00620886815375787;\n   const q1 = -1.27408923933623;\n   const q2 = .354508718369557;\n\n   let h, r, t, w, w1;\n   if (x < -0.39 || x > 0.57) {\n\t   w = x + 0.5 + 0.5;\n\t   return x - Math.log(w);\n   }\n\n   if (x < -0.18) {\n      h = x + .3;\n      h /= .7;\n      w1 = a - h * .3;\n   } else if (x > 0.18) {\n      h = x * .75 - .25;\n      w1 = b + h / 3.;\n   } else {\n      h = x;\n      w1 = 0.;\n   }\n\n   r = h / (h + 2.);\n   t = r * r;\n   w = ((p2 * t + p1) * t + p0) / ((q2 * t + q1) * t + 1.);\n   return t * 2. * (1. / (1. - r) - r * w) + w1;\n}\n\n/**\n * Evaluation of the function ln(1 + a)\n * @param {Number} a\n * @returns function value\n */\nfunction alnrel(a) {\n\n   if (Math.abs(a) > 0.375) return Math.log(1. + a);\n\n\tconst p1 = -1.29418923021993;\n\tconst p2 = .405303492862024;\n\tconst p3 = -.0178874546012214;\n\tconst q1 = -1.62752256355323;\n\tconst q2 = .747811014037616;\n\tconst q3 = -.0845104217945565;\n\n\tlet t = a / (a + 2.);\n\tlet t2 = t * t;\n\tlet w = (((p3 * t2 + p2) * t2 + p1) * t2 + 1.) / (((q3 * t2 + q2) * t2 + q1) * t2 + 1.);\n\n   return t * 2. * w;\n}\n\n/**\n * Evaluation of the real error function.\n * @param {Number} x\n */\nfunction erf__(x) {\n   const c = .564189583547756;\n   const a = [7.7105849500132e-5, -.00133733772997339, .0323076579225834, .0479137145607681, .128379167095513];\n   const b = [.00301048631703895, .0538971687740286, .375795757275549];\n   const p = [-1.36864857382717e-7,.564195517478974,\n\t    7.21175825088309,43.1622272220567,152.98928504694,\n\t    339.320816734344,451.918953711873,300.459261020162];\n   const q = [1., 12.7827273196294, 77.0001529352295,\n\t    277.585444743988,638.980264465631,931.35409485061,\n\t    790.950925327898,300.459260956983];\n   const r = [2.10144126479064, 26.2370141675169,\n\t    21.3688200555087,4.6580782871847,.282094791773523];\n   const s = [94.153775055546,187.11481179959,\n\t    99.0191814623914,18.0124575948747];\n\n   let t, x2, ax, bot, top;\n\n   ax = Math.abs(x);\n   if (ax <= 0.5) {\n      t = x * x;\n      top = (((a[0] * t + a[1]) * t + a[2]) * t + a[3]) * t + a[4] + 1.;\n      bot = ((b[0] * t + b[1]) * t + b[2]) * t + 1.;\n   \treturn x * (top / bot);\n   }\n\n   if (ax <= 4.) {\n   \ttop = ((((((p[0] * ax + p[1]) * ax + p[2]) * ax + p[3]) * ax + p[4]) * ax\n\t   \t+ p[5]) * ax + p[6]) * ax + p[7];\n\t   bot = ((((((q[0] * ax + q[1]) * ax + q[2]) * ax + q[3]) * ax + q[4]) * ax\n\t\t   + q[5]) * ax + q[6]) * ax + q[7];\n\t   let R = 0.5 - Math.exp(-x * x) * top / bot + 0.5;\n\t   return (x < 0) ? -R : R;\n   }\n\n   if (ax >= 5.8) {\n   \treturn x > 0 ? 1 : -1;\n   }\n\n   x2 = x * x;\n   t = 1. / x2;\n   top = (((r[0] * t + r[1]) * t + r[2]) * t + r[3]) * t + r[4];\n   bot = (((s[0] * t + s[1]) * t + s[2]) * t + s[3]) * t + 1.;\n   t = (c - top / (x2 * bot)) / ax;\n   let R = 0.5 - Math.exp(-x2) * t + 0.5;\n   return (x < 0) ? -R : R;\n}\n\n\n/**\n * Evaluation of the function exp(x) - 1\n * @param {Number} x\n * @returns function value\n */\nfunction rexpm1(x) {\n   const p1 = 9.14041914819518e-10;\n   const p2 = .0238082361044469;\n   const q1 = -.499999999085958;\n   const q2 = .107141568980644;\n   const q3 = -.0119041179760821;\n   const q4 = 5.95130811860248e-4;\n\n   if (Math.abs(x) <= 0.15) {\n      return x * (((p2 * x + p1) * x + 1.) / ((((q4 * x + q3) * x + q2) * x + q1) * x + 1.));\n   } else {\n   \tlet w = Math.exp(x);\n\t   return x > 0. ? w * (0.5 - 1. / w + 0.5) : w - 0.5 - 0.5;\n   }\n}\n\nfunction esum(mu, x) {\n\n   let w;\n   if (x > 0.) {\n\t   if (mu > 0) return Math.exp(mu) * Math.exp(x);\n\t   w = mu + x;\n\t   if (w < 0.) return Math.exp(mu) * Math.exp(x);\n   } else {\n\t   if (mu < 0) return Math.exp(mu) * Math.exp(x);\n\t   w = mu + x;\n\t   if (w > 0.) return Math.exp(mu) * Math.exp(x);\n   }\n\n   return Math.exp(w);\n}\n\nfunction psi(x) {\n\n   const piov4 = .785398163397448;\n   const dx0 = 1.461632144968362341262659542325721325;\n\n   const p1 = [.0089538502298197,4.77762828042627,\n\t    142.441585084029,1186.45200713425,3633.51846806499,\n\t    4138.10161269013,1305.60269827897];\n   const q1 = [44.8452573429826, 520.752771467162,\n\t    2210.0079924783, 3641.27349079381, 1908.310765963,\n\t    6.91091682714533e-6];\n   const p2 = [-2.12940445131011,-7.01677227766759,\n\t    -4.48616543918019,-.648157123766197 ];\n   const q2 = [32.2703493791143, 89.2920700481861,\n\t    54.6117738103215, 7.77788548522962];\n\n   let i, m, n, nq;\n   let d2;\n   let w, z;\n   let den, aug, sgn, xmx0, xmax1, upper, xsmall;\n\n   xmax1 = Number.MAX_SAFE_INTEGER;\n   d2 = 0.5 / (0.5 * Number.EPSILON);\n   if(xmax1 > d2) xmax1 = d2;\n   xsmall = 1e-9;\n\n   aug = 0.;\n   if (x < 0.5) {\n   \tif (fabs(x) <= xsmall) {\n\t      if (x == 0.) return 0;\n         aug = -1. / x;\n\t   } else {\n         w = -x;\n         sgn = piov4;\n\n         if (w <= 0.) {\n\t\t      w = -w;\n\t\t      sgn = -sgn;\n\t      }\n\n         if (w >= xmax1) return 0;\n\n\t      nq = Math.round(w);\n\t      w -= nq;\n\t      nq = Math.round(w * 4.);\n\t      w = (w - nq * 0.25) * 4.;\n\n   \t   n = nq / 2;\n\t      if (n + n != nq) {\n\t\t      w = 1. - w;\n\t      }\n\n         z = piov4 * w;\n\t      m = n / 2;\n\t      if (m + m != n) {\n\t\t      sgn = -sgn;\n\t      }\n\n         n = (nq + 1) / 2;\n\t      m = n / 2;\n\t      m += m;\n\t      if (m == n) {\n      \t\tif (z == 0.) return 0;\n   \t\t   aug = sgn * (cos(z) / sin(z) * 4.);\n\t      } else {\n\t\t      aug = sgn * (sin(z) / cos(z) * 4.);\n\t      }\n\t   }\n\n\t   x = 1. - x;\n   }\n\n\n   if (x <= 3.) {\n\t   den = x;\n\t   upper = p1[0] * x;\n\n\t   for (let i = 1; i <= 5; ++i) {\n\t      den = (den + q1[i - 1]) * x;\n\t      upper = (upper + p1[i]) * x;\n\t   }\n\n\t   den = (upper + p1[6]) / (den + q1[5]);\n\t   xmx0 = x - dx0;\n\t   return den * xmx0 + aug;\n   }\n\n   if (x < xmax1) {\n\t   w = 1. / (x * x);\n\t   den = w;\n\t   upper = p2[0] * w;\n\n\t   for (let i = 1; i <= 3; ++i) {\n\t      den = (den + q2[i - 1]) * w;\n\t      upper = (upper + p2[i]) * w;\n\t   }\n\n\t   aug = upper / (den + q2[3]) - 0.5 / x + aug;\n   }\n\n   return aug + log(x);\n}\n\nfunction fsper(a, b, x, eps) {\n\n   let ans, c, s, t, an, tol;\n\n   if (a > eps * 0.001) {\n\t   t = a * Math.log(x);\n\t   if (t < Math.exparg(1)) {\n\t      return 0.;\n\t   }\n\t   ans = Math.exp(t);\n   } else {\n\t   ans = 1.;\n   }\n\n\tans *= b / a;\n   tol = eps / a;\n   an = a + 1.;\n   t = x;\n   s = t / an;\n\n\n   // first iteration for do while\n   an += 1.;\n   t = x * t;\n   c = t / an;\n   s += c;\n\n   while (Math.abs(x) > tol) {\n      an += 1.;\n      t = x * t;\n      c = t / an;\n      s += c;\n   }\n\n\tans *= a * s + 1.;\n   return ans;\n}\n\nfunction apser(a, b, x, eps) {\n\n   const g = .577215664901533;\n\n   let tol, c, j, s, t, aj;\n   let bx = b * x;\n\n   t = x - bx;\n   c = b * eps <= 0.02 ? Math.log(x) + psi(b) + g + t : Math.log(bx) + g + t;\n   tol = eps * 5. * Math.abs(c);\n   j = 1.;\n   s = 0.;\n\n   // first iteration of do while\n   j += 1.;\n   t *= x - bx / j;\n   aj = t / j;\n   s += aj;\n   while (Math.abs(aj) > tol) {\n   \tj += 1.;\n\t   t *= x - bx / j;\n\t   aj = t / j;\n\t   s += aj;\n   }\n\n   return -a * (c + s);\n}\n\nfunction bpser(a, b, x, eps) {\n   let m;\n   let ans, c, t, u, z, a0, b0, apb;\n\n   if (x == 0.) return 0.0;\n\n   a0 = Math.min(a, b);\n   if (a0 >= 1.) {\n\t   z = a * Math.log(x) - betaln(a, b);\n\t   ans = Math.exp(z) / a;\n   } else {\n\t   b0 = Math.max(a, b);\n\n   \tif (b0 < 8.) {\n\n\t      if (b0 <= 1.) {\n\n            ans = Math.pow(x, a);\n            if (ans == 0.) return ans;\n\n\n            apb = a + b;\n            if (apb > 1.) {\n               u = a + b - 1.;\n               z = (gam1(u) + 1.) / apb;\n            } else {\n               z = gam1(apb) + 1.;\n            }\n\n            c = (gam1(a) + 1.) * (gam1(b) + 1.) / z;\n            ans *=  c * (b / apb);\n\n         } else {\n            u = gamln1(a0);\n            m = Math.round(b0 - 1.);\n            if (m >= 1) {\n               c = 1.;\n               for (let i = 1; i <= m; ++i) {\n                  b0 += -1.;\n                  c *= b0 / (a0 + b0);\n               }\n               u += Math.log(c);\n            }\n\n            z = a * Math.log(x) - u;\n            b0 += -1.;\n            apb = a0 + b0;\n            if (apb > 1.) {\n               u = a0 + b0 - 1.;\n               t = (gam1(u) + 1.) / apb;\n            } else {\n               t = gam1(apb) + 1.;\n            }\n\n            ans = Math.exp(z) * (a0 / a) * (gam1(b0) + 1.) / t;\n         }\n      } else {\n\t      u = gamln1(a0) + algdiv(a0, b0);\n\t      z = a * Math.log(x) - u;\n\t\t   ans = a0 / a * Math.exp(z);\n\t   }\n   }\n\n   if (ans == 0 || a <= eps * 0.1) return ans;\n\n   let tol = eps / a;\n   let n = 0.;\n   let sum = 0.\n   let w;\n   c = 1.;\n\n   // first iteration of do while\n   n += 1.;\n   c *= (0.5 - b / n + 0.5) * x;\n   w = c / (a + n);\n   sum += w;\n\n   while (n < 1e7 && Math.abs(w) > tol) {\n\t   n += 1.;\n\t   c *= (0.5 - b / n + 0.5) * x;\n\t   w = c / (a + n);\n\t   sum += w;\n   }\n   if (a * sum > -1.) {\n\t   ans *= (a * sum + 1.);\n   } else {\n\t   ans = 0.;\n   }\n\n   return ans;\n}\n\nfunction bup(a, b, x, y, n, eps) {\n\n   let ret_val;\n   let k, mu;\n   let d, l;\n\n   let apb = a + b,\n\tap1 = a + 1.;\n\n   if (n > 1 && a >= 1. && apb >= ap1 * 1.1) {\n\t   mu = Math.round(Math.abs(exparg(1)));\n\t   k = Math.round(exparg(0));\n\t   if (mu > k) mu = k;\n \t   d = Math.exp(-mu);\n   }  else {\n\t   mu = 0;\n\t   d = 1.;\n   }\n\n    ret_val = brcmp1(mu, a, b, x, y) / a;\n    if (n == 1 || ret_val == 0.0) return ret_val;\n\n   let nm1 = n - 1;\n   let w = d;\n\n   k = 0;\n   if (b > 1.) {\n\t   if (y > 1e-4) {\n\t      let r = (b - 1.) * x / y - a;\n\t      if (r >= 1.) k = (r < nm1) ? Math.round(r) : nm1;\n      } else {\n\t      k = nm1;\n      }\n\n      for (let i = 0; i < k; ++i) {\n\t      l = i;\n\t      d *= (apb + l) / (ap1 + l) * x;\n\t      w += d;\n\t   }\n   }\n\n\n   for (let i = k; i < nm1; ++i) {\n\t   l = i;\n\t   d *= (apb + l) / (ap1 + l) * x;\n\t   w += d;\n\t   if (d <= eps * w) break;\n   }\n\n   ret_val *= w;\n   return ret_val;\n}\n\nfunction bfrac(a, b, x, y, lambda, eps) {\n   let c, e, n, p, r, s, t, w, c0, c1, r0, an, bn, yp1, anp1, bnp1, beta, alpha, brc;\n   if (!Number.isFinite(lambda)) return Number.NaN;\n\n   brc = brcomp(a, b, x, y);\n   if (Number.isNaN(brc)) return Number.NaN;\n   if (brc == 0.) return 0.;\n\n   c = lambda + 1.;\n   c0 = b / a;\n   c1 = 1. / a + 1.;\n   yp1 = y + 1.;\n\n   n = 0.;\n   p = 1.;\n   s = a + 1.;\n   an = 0.;\n   bn = 1.;\n   anp1 = 1.;\n   bnp1 = c / c1;\n   r = c1 / c;\n\n   // first iteration\n   n += 1.;\n   t = n / a;\n   w = n * (b - n) * x;\n   e = a / s;\n   alpha = p * (p + c0) * e * e * (w * x);\n   e = (t + 1.) / (c1 + t + t);\n   beta = n + w / s + e * (c + n * yp1);\n   p = t + 1.;\n   s += 2.;\n\n   t = alpha * an + beta * anp1;\tan = anp1;\tanp1 = t;\n   t = alpha * bn + beta * bnp1;\tbn = bnp1;\tbnp1 = t;\n\n   r0 = r;\n   r = anp1 / bnp1;\n\n   an /= bnp1;\n   bn /= bnp1;\n   anp1 = r;\n   bnp1 = 1.;\n\n   while (n < 10000) {\n      n += 1.;\n      t = n / a;\n      w = n * (b - n) * x;\n      e = a / s;\n      alpha = p * (p + c0) * e * e * (w * x);\n      e = (t + 1.) / (c1 + t + t);\n      beta = n + w / s + e * (c + n * yp1);\n      p = t + 1.;\n      s += 2.;\n\n      t = alpha * an + beta * anp1;\tan = anp1;\tanp1 = t;\n      t = alpha * bn + beta * bnp1;\tbn = bnp1;\tbnp1 = t;\n\n\t   r0 = r;\n\t   r = anp1 / bnp1;\n   \tif (Math.abs(r - r0) <= eps * r) break;\n\n\t   an /= bnp1;\n\t   bn /= bnp1;\n\t   anp1 = r;\n\t   bnp1 = 1.;\n   }\n\n   return brc * r;\n}\n\nfunction brcomp(a, b, x, y) {\n\n   const const__ = .398942280401433;\n   let n, c, e, u, v, z, a0, b0, apb;\n\n   if (x == 0. || y == 0.) return 0.0;\n\n   a0 = Math.min(a, b);\n\n   if (a0 < 8.) {\n\n      let lnx, lny;\n\t   if (x <= .375) {\n\t      lnx = Math.log(x);\n\t      lny = alnrel(-x);\n\t   } else {\n\t      if (y > .375) {\n\t\t      lnx = Math.log(x);\n\t\t      lny = Math.log(y);\n\t      } else {\n\t\t      lnx = alnrel(-y);\n\t\t      lny = Math.log(y);\n\t      }\n\t   }\n\n   \tz = a * lnx + b * lny;\n\t   if (a0 >= 1.) {\n\t      z -= betaln(a, b);\n\t      return Math.exp(z);\n\t   }\n\n\t   b0 = Math.max(a, b);\n\t   if (b0 >= 8.) {\n\t      u = gamln1(a0) + algdiv(a0, b0);\n\t      return a0 * Math.exp(z - u);\n\t   }\n\n\t   if (b0 <= 1.) {\n\n\t      let e_z = Math.exp(z);\n\t      if (e_z == 0.) return 0.;\n\n\t      apb = a + b;\n\t      if (apb > 1.) {\n\t\t      u = a + b - 1.;\n\t\t      z = (gam1(u) + 1.) / apb;\n\t      } else {\n\t\t      z = gam1(apb) + 1.;\n\t      }\n\n\t      c = (gam1(a) + 1.) * (gam1(b) + 1.) / z;\n\t      return e_z * (a0 * c) / (a0 / b0 + 1.);\n   \t}\n\n\t   u = gamln1(a0);\n\t   n = Math.round(b0 - 1.);\n\t   if (n >= 1) {\n\t      c = 1.;\n\t      for (let i = 1; i <= n; ++i) {\n\t\t      b0 += -1.;\n\t\t      c *= b0 / (a0 + b0);\n\t      }\n\t      u = Math.log(c) + u;\n\t   }\n\n\t   z -= u;\n\t   b0 += -1.;\n\t   apb = a0 + b0;\n\t   let t;\n\t   if (apb > 1.) {\n\t      u = a0 + b0 - 1.;\n\t      t = (gam1(u) + 1.) / apb;\n\t   } else {\n\t      t = gam1(apb) + 1.;\n\t   }\n\n   \treturn a0 * Math.exp(z) * (gam1(b0) + 1.) / t;\n   } else {\n\n      let h, x0, y0, lambda;\n\t   if (a <= b) {\n         h = a / b;\n         x0 = h / (h + 1.);\n         y0 = 1. / (h + 1.);\n         lambda = a - (a + b) * x;\n\t   } else {\n         h = b / a;\n         x0 = 1. / (h + 1.);\n         y0 = h / (h + 1.);\n         lambda = (a + b) * y - b;\n\t   }\n\n\t   e = -lambda / a;\n\t   u = Math.abs(e) > .6 ? e - Math.log(x / x0) : rlog1(e);\n   \te = lambda / b;\n      v = Math.abs(e) <= .6 ? rlog1(e) : e - Math.log(y / y0);\n\t   z = Math.exp(-(a * u + b * v));\n\n\t   return const__ * Math.sqrt(b * x0) * z * Math.exp(-bcorr(a, b));\n   }\n}\n\nfunction brcmp1(mu, a, b, x, y) {\n   const const__ = .398942280401433; /* == 1/sqrt(2*pi); */\n   let c, t, u, v, z, a0, b0, apb;\n\n   a0 = Math.min(a, b);\n   if (a0 < 8.) {\n      let lnx, lny;\n      if (x <= .375) {\n         lnx = Math.log(x);\n         lny = alnrel(-x);\n      } else if (y > .375) {\n         lnx = Math.log(x);\n         lny = Math.log(y);\n      } else {\n         lnx = alnrel(-y);\n         lny = Math.log(y);\n      }\n\n   \tz = a * lnx + b * lny;\n\t   if (a0 >= 1.) {\n\t       z -= betaln(a, b);\n\t      return esum(mu, z);\n\t   }\n\n   \tb0 = Math.max(a, b);\n\t   if (b0 >= 8.) {\n\t      u = gamln1(a0) + algdiv(a0, b0);\n\t      return a0  * esum(mu, z - u);\n\t   } else if (b0 <= 1.) {\n\t      let ans = esum(mu, z);\n\t      if (ans == 0.) return ans;\n\t      apb = a + b;\n\t      if (apb > 1.) {\n   \t\t   u = a + b - 1.;\n\t   \t   z = (gam1(u) + 1.) / apb;\n         } else {\n\t\t      z = gam1(apb) + 1.;\n\t      }\n\t      c = (gam1(a) + 1.) * (gam1(b) + 1.) / z;\n   \t    return ans * (a0 * c) / (a0 / b0 + 1.);\n\t   }\n\n      u = gamln1(a0);\n\t   let n = Math.round(b0 - 1.);\n\t   if (n >= 1) {\n\t      c = 1.;\n\t      for (let i = 1; i <= n; ++i) {\n\t\t      b0 += -1.;\n\t\t      c *= b0 / (a0 + b0);\n         }\n\t       u += Math.log(c);\n   \t}\n\n   \tz -= u;\n\t   b0 += -1.;\n\t   apb = a0 + b0;\n\t   t = apb > 1. ? (gam1(apb - 1.) + 1.) / apb : gam1(apb) + 1.;\n   \treturn a0 * esum(mu, z) * (gam1(b0) + 1.) / t;\n\n   } else {\n\t   let h, x0, y0, lambda;\n\t   if (a > b) {\n         h = b / a;\n         x0 = 1. / (h + 1.);\n         y0 = h / (h + 1.);\n         lambda = (a + b) * y - b;\n\t   } else {\n         h = a / b;\n         x0 = h / (h + 1.);\n         y0 = 1. / (h + 1.);\n         lambda = a - (a + b) * x;\n\t   }\n\t   let lx0 = -log1p(b/a);\n\t   let e = -lambda / a;\n\t   u = Math.abs(e) > 0.6 ? e - Math.log(x / x0) : rlog1(e);\n\t   e = lambda / b;\n\t   v = Math.abs(e) > 0.6 ? e - Math.log(y / y0) : rlog1(e);\n\n   \tz = esum(mu, -(a * u + b * v));\n\t   return const__ * Math.sqrt(b * x0)      * z * Math.exp(-bcorr(a, b));\n   }\n}\n\n\n/**\n * Asymptotic expansion for regularized incomplete beta function when a is larger than b.\n * It is assumed a >= 15 and b <= 1\n * @param {Number} a\n * @param {Number} b\n * @param {Number} x\n * @param {Number} y\n * @param {Number} w\n * @param {Number} eps\n * @returns\n */\nfunction bgrat(a, b, x, y, w, eps) {\n   const  n_terms_bgrat = 30;\n   let c = Array(n_terms_bgrat);\n   let d = Array(n_terms_bgrat);\n   let bm1 = b - 0.5 - 0.5;\n\tlet nu = a + bm1 * 0.5;\n\tlet lnx = (y > 0.375) ? Math.log(x) : alnrel(-y);\n\tlet z = -nu * lnx;\n\n   if (b * z == 0.) {\n      throw new Error('bgrat: expansion can not be computed.');\n   }\n\n   let log_r = Math.log(b) + log1p(gam1(b)) + b * Math.log(z) + nu * lnx;\n\tlet log_u = log_r - (algdiv(b, a) + b * Math.log(nu))\n\tlet u = Math.exp(log_u);\n   if (log_u == Number.NEGATIVE_INFINITY) {\n      throw new Error('bgrat: expansion can not be computed.');\n   }\n\n   let u_0 = (u == 0.);\n   let l = (w == 0.0 ? 0. : Math.exp(Math.log(w) - log_u));\n   let q_r = grat_r(b, z, log_r, eps);\n\tlet v = 0.25 / (nu * nu);\n\tlet t2 = lnx * 0.25 * lnx;\n\tlet j = q_r;\n\tlet sum = j;\n\tlet t = 1., cn = 1., n2 = 0.;\n   for (let n = 1; n <= n_terms_bgrat; ++n) {\n\t   let bp2n = b + n2;\n\t   j = (bp2n * (bp2n + 1.) * j + (z + bp2n + 1.) * t) * v;\n\t   n2 += 2.;\n\t   t *= t2;\n\t   cn /= n2 * (n2 + 1.);\n\t   let nm1 = n - 1;\n\t   c[nm1] = cn;\n\n      let s = 0.;\n\t   if (n > 1) {\n\t      let coef = b - n;\n\t      for (let i = 1; i <= nm1; ++i) {\n\t\t      s += coef * c[i - 1] * d[nm1 - i];\n\t\t      coef += b;\n\t      }\n\t   }\n\n   \td[nm1] = bm1 * cn + s / n;\n\t   let dj = d[nm1] * j;\n\t   sum += dj;\n   \tif (sum <= 0.) {\n         throw new Error('bgrat: expansion can not be computed.');\n      }\n\n      if (Math.abs(dj) <= eps * (sum + l)) {\n\t      break;\n\t   }\n   }\n\n\tw += u_0 ? Math.exp(log_u + Math.log(sum)) : u * sum;\n   return w;\n}\n\n/**\n * Scaled complement of incomplete gamma ratio function\n * @param {*} a\n * @param {*} x\n * @param {*} log_r\n * @param {*} eps\n * @returns function value.\n */\nfunction grat_r(a, x, log_r, eps) {\n   const M_SQRT_PI = 1.772453850905516;\n   if (a * x == 0.) {\n   \tif (x <= a) {\n\t      return Math.exp(-log_r);\n\t   } else {\n\t      return 0.;\n\t   }\n   } else if (a == 0.5) {\n   \tif (x < 0.25) {\n\t      let p = erf__(Math.sqrt(x));\n\t      return (0.5 - p + 0.5) * Math.exp(-log_r);\n      } else {\n\t      let sx = Math.sqrt(x)\n\t\t   return erfc1(1, sx)/sx * M_SQRT_PI;\n\t   }\n   } else if (x < 1.1) {\n\t   let an = 3.;\n\t   let c = x;\n\t   let sum = x / (a + 3.);\n\t   let tol = eps * 0.1 / (a + 1.), t;\n\n      // first iteration\n      an += 1.;\n      c *= -(x / an);\n      t = c / (a + an);\n      sum += t;\n      while (Math.abs(t) > tol) {\n         an += 1.;\n         c *= -(x / an);\n         t = c / (a + an);\n         sum += t;\n      }\n\n\t   let j = a * x * ((sum/6. - 0.5/(a + 2.)) * x + 1./(a + 1.));\n\t   let z = a * Math.log(x);\n\t   let h = gam1(a);\n\t   let g = h + 1.;\n\n   \tif ((x >= 0.25 && (a < x / 2.59)) || (z > -0.13394)) {\n\t      let l = rexpm1(z);\n\t\t   let q = ((l + 0.5 + 0.5) * j - l) * g - h;\n         return q <= 0.0 ? 0.0 : q * Math.exp(-log_r);\n\t   } else {\n   \t   let p = Math.exp(z) * g * (0.5 - j + 0.5);\n\t      return (0.5 - p + 0.5) * Math.exp(-log_r);\n\t   }\n   } else {\n\n\t   let a2n_1 = 1.;\n\t   let a2n = 1.;\n\t   let b2n_1 = x;\n\t   let b2n = x + (1. - a);\n\t   let c = 1., am0, an0;\n\n      // this is needed because in JS there is no do-while, only while-do\n      a2n_1 = x * a2n + c * a2n_1;\n      b2n_1 = x * b2n + c * b2n_1;\n      am0 = a2n_1 / b2n_1;\n      c += 1.;\n      let c_a = c - a;\n      a2n = a2n_1 + c_a * a2n;\n      b2n = b2n_1 + c_a * b2n;\n      an0 = a2n / b2n;\n\n      while (Math.abs(an0 - am0) >= eps * an0) {\n         a2n_1 = x * a2n + c * a2n_1;\n         b2n_1 = x * b2n + c * b2n_1;\n         am0 = a2n_1 / b2n_1;\n         c += 1.;\n         c_a = c - a;\n         a2n = a2n_1 + c_a * a2n;\n         b2n = b2n_1 + c_a * b2n;\n         an0 = a2n / b2n;\n   \t}\n\n\t   return  an0;\n   }\n}\n\n/**\n * Asymptotic expansion for regularized incomplete beta function when a and b are large.\n * @param {*} a\n * @param {*} b\n * @param {*} lambda\n * @param {*} eps\n * @returns function value.\n */\nfunction basym(a, b, lambda, eps) {\n   const num_it = 20;\n\n   const e0 = 1.12837916709551;\n   const e1 = .353553390593274;\n   const ln_e0 = 0.120782237635245;\n\n   const a0 = Array(num_it + 1);\n   const b0 = Array(num_it + 1);\n   const c = Array(num_it + 1);\n   const d = Array(num_it + 1);\n\n   let f = a * rlog1(-lambda/a) + b * rlog1(lambda/b), t;\n\tt = Math.exp(-f);\n\tif (t == 0.) return 0;\n\n   let z0 = Math.sqrt(f);\n\tlet z = z0 / e1 * 0.5;\n\tlet z2 = f + f;\n\tlet h, r0, r1, w0;\n\n   if (a < b) {\n\t   h = a / b;\n\t   r0 = 1. / (h + 1.);\n\t   r1 = (b - a) / b;\n\t   w0 = 1. / Math.sqrt(a * (h + 1.));\n   } else {\n      h = b / a;\n      r0 = 1. / (h + 1.);\n      r1 = (b - a) / a;\n      w0 = 1. / Math.sqrt(b * (h + 1.));\n   }\n\n   a0[0] = r1 * .66666666666666663;\n   c[0] = a0[0] * -0.5;\n   d[0] = -c[0];\n   let j0 = 0.5 / e0 * erfc1(1, z0);\n\tlet j1 = e1;\n\tlet sum = j0 + d[0] * w0 * j1;\n\n   let s = 1.0;\n\tlet h2 = h * h;\n\tlet hn = 1.;\n\tlet w = w0;\n\tlet znm1 = z;\n\tlet zn = z2;\n\n   for (let n = 2; n <= num_it; n += 2) {\n\t   hn *= h2;\n\t   a0[n - 1] = r0 * 2. * (h * hn + 1.) / (n + 2.);\n\t   let np1 = n + 1;\n\t   s += hn;\n\t   a0[np1 - 1] = r1 * 2. * s / (n + 3.);\n\n      for (let i = n; i <= np1; ++i) {\n         let r = (i + 1.) * -0.5;\n         b0[0] = r * a0[0];\n         for (let m = 2; m <= i; ++m) {\n            let bsum = 0.;\n            for (let j = 1; j <= m-1; ++j) {\n               let mmj = m - j;\n               bsum += (j * r - mmj) * a0[j - 1] * b0[mmj - 1];\n            }\n\t\t      b0[m - 1] = r * a0[m - 1] + bsum / m;\n\t      }\n\t      c[i - 1] = b0[i - 1] / (i + 1.);\n\n\t      let dsum = 0.;\n\t      for (let j = 1; j <= i-1; ++j) {\n\t\t      dsum += d[i - j - 1] * c[j - 1];\n\t      }\n\t      d[i - 1] = -(dsum + c[i - 1]);\n\t   }\n\n      j0 = e1 * znm1 + (n - 1.) * j0;\n      j1 = e1 * zn + n * j1;\n      znm1 = z2 * znm1;\n      zn = z2 * zn;\n      w *= w0;\n\t   let t0 = d[n - 1] * w * j0;\n\t   w *= w0;\n\t   let t1 = d[np1 - 1] * w * j1;\n\t   sum += t0 + t1;\n\t   if (Math.abs(t0) + Math.abs(t1) <= eps * sum) {\n\t      break;\n\t   }\n   }\n\n\tlet u = Math.exp(-bcorr(a, b));\n\treturn e0 * t * u * sum;\n}\n\n/**\n * Evaluation of the Incomplete Beta function I_x(a,b) for non-negative a and b and x ≤ 1.\n * @param {Number} a\n * @param {Number} b\n * @param {Number} x\n * @param {Number} y - y = 1 - x\n * @returns function value.\n */\nfunction bratio(a, b, x, y) {\n\n   const eps = 1e-15;\n   let w = 0, w1 = 0;\n\n   // helper functions\n   function lwbsper(a0, b0, x0, do_swap) {\n      const w = bpser(a0, b0, x0, eps);\n      return do_swap ? 0.5 - w + 0.5 : w;\n   }\n\n   function lw1bsper(a0, b0, y0, do_swap) {\n      const w1 = bpser(b0, a0, y0, eps);\n      return do_swap ? w1 : 0.5 - w1 + 0.5;\n   }\n\n   function lbfrac(a0, b0, x0, y0, lambda, do_swap) {\n      const w = bfrac(a0, b0, x0, y0, lambda, eps * 15);\n      return do_swap ? 0.5 - w + 0.5 : w;\n   }\n\n   function l140(a0, b0, x0, y0, do_swap) {\n      let n = Math.round(b0);\n      b0 = b0 - n;\n      if (b0 === 0) {\n         n = n - 1;\n         b0 = 1.0;\n      }\n\n      let w = bup(b0, a0, y0, x0, n, eps);\n      if (x0 <= 0.7) {\n         w = w + bpser(a0, b0, x0, eps);\n         return do_swap ? 0.5 - w + 0.5 : w;\n      }\n\n      if (a0 <= 15.0) {\n         n = 20;\n         w = w + bup(a0, b0, x0, y0, n, eps);\n         a0 = a0 + n;\n      }\n\n      w = bgrat(a0, b0, x0, y0, w, 15 * eps);\n      return do_swap ? 0.5 - w + 0.5 : w;\n   }\n\n   if (a < eps * .001 && b < eps * .001) {\n      // if a and b are too small — use simple ratios\n      return b / (a + b);\n   }\n\n   let a0, b0, x0, y0, do_swap;\n   if (a <= 1 || b <= 1) {\n      if (x > 0.5) {\n         do_swap = true;\n         a0 = b; x0 = y; b0 = a; y0 = x;\n      } else {\n         do_swap = false;\n         a0 = a; x0 = x; b0 = b; y0 = y;\n      }\n\n      if (b0 < Math.min(eps, eps * a0)) {\n         w = fsper(a0, b0, x0, eps);\n         return do_swap ? 0.5 - w + 0.5 : w;\n      }\n\n      if (a0 < Math.min(eps, eps * b0) && b0 * x0 <= 1.) {\n         w1 = apser(a0, b0, x0, eps);\n         return do_swap ? w1 : 0.5 - w1 + 0.5;\n      }\n\n      if (Math.max(a0, b0) > 1.) {\n         if (b0 <= 1.) return lwbsper(a0, b0, x0, do_swap);\n         if (x0 >= 0.29) return lw1bsper(a0, b0, y0, do_swap);\n         if (x0 < 0.1 && Math.pow(x0 * b0, a0) <= 0.7) return lwbsper(a0, b0, x0, do_swap);\n      } else {\n         if (a0 >= Math.min(0.2, b0)) return lwbsper(a0, b0, x0, do_swap);\n         if (Math.pow(x0, a0) <= 0.9) return lwbsper(a0, b0, x0, do_swap);\n         if (x0 >= 0.3)\treturn lw1bsper(a0, b0, y0, do_swap);\n      }\n\n      let did_bup = false;\n      if (Math.max(a0, b0) > 1. && b0 > 15.0) {\n         w1 = 0.0;\n      } else {\n         const n = 20;\n         did_bup = true;\n         w1 = bup(b0, a0, y0, x0, n, eps, false);\n         b0 += n;\n      }\n\n      w1 = bgrat(b0, a0, y0, x0, w1, 15 * eps, false);\n      if (w1 == 0 || (0 < w1 && w1 < Number.MIN_VALUE)) {\n         if (did_bup) {\n            w1 = bup(b0 - n, a0, y0, x0, n, eps, true);\n         } else {\n            w1 = Number.NEGATIVE_INFINITY;\n         }\n         w1 = bgrat(b0, a0, y0, x0, w1, 15 * eps, true)\n         w  = -expm1(w1);\n         return do_swap ? 0.5 - w + 0.5 : w;\n      }\n\n      w = 0.5 - w1 + 0.5;\n      return do_swap ? 0.5 - w + 0.5 : w;\n   } else {\n      // a > 1 and b > 1 (as well as a0 and b0)\n      let lambda = Number.isFinite(a + b) ? (a > b ? (a + b) * y - b : a - (a + b) * x) : a * y - b * x;\n      const do_swap = lambda < 0;\n      let a0, b0, x0, y0;\n      if (do_swap) {\n         lambda = -lambda;\n         a0 = b; x0 = y; b0 = a; y0 = x;\n      } else {\n         a0 = a; x0 = x; b0 = b; y0 = y;\n      }\n      if (b0 < 40.0) {\n         if (b0 * x0 <= 0.7) return lwbsper(a0, b0, x0, do_swap);\n         else return l140(a0, b0, x0, y0, do_swap);\n      } else if (a0 > b0) {\n         if (b0 <= 100.0 || lambda > b0 * 0.03) return lbfrac(a0, b0, x0, y0, lambda, do_swap);\n      } else if (a0 <= 100.0) {\n         return lbfrac(a0, b0, x0, y0, lambda, do_swap)\n      } else if (lambda > a0 * 0.03) {\n         return lbfrac(a0, b0, x0, y0, lambda, do_swap)\n      }\n\n      w = basym(a0, b0, lambda, eps * 100);\n      return do_swap ? 0.5 - w + 0.5 : w;\n   }\n}\n\n\n","/************************************************************/\n/*    Methods for computing matrix decompositions           */\n/************************************************************/\n\nimport { ssq } from '../stat/index.js';\nimport { crossprod, Vector, Matrix, Index } from '../arrays/index.js';\n\n\n/**\n * Randomized SVD decomposition.\n *\n * @param {Matrix} X - matrix to decompose.\n * @param {number} [ncomp] - number of components.\n * @param {number} [pa=1] - oversampling factor (ncomp * pa + pb).\n * @param {number} [pb=10] - oversampling increment (ncomp * pa + pb).\n * @param {number} [its=3] - number of iterations\n *\n * @returns {JSON} JSON with three fields, 's' - vector with singular values,\n * 'U', 'V' - matrices with left and right singular vectors.\n *\n */\nexport function rsvd(X, ncomp, pa, pb, its) {\n\n   const m = X.nrows;\n   const n = X.ncols;\n\n   if (its === undefined) {\n      its = 3;\n   }\n\n   if (pb === undefined) {\n      pb = 5;\n   }\n\n   if (pa === undefined) {\n      pa = 1;\n   }\n\n   if (its < 1 || its > 10) {\n      throw new Error('rsvd: wrong value for parameter \"its\" (must be between 1 and 10).');\n   }\n\n   if (pa < 1 || pa > 5) {\n      throw new Error('rsvd: wrong value for parameter \"pa\" (must be between 1 and 5).');\n   }\n\n   if (pb < 1 || pb > 100) {\n      throw new Error('rsvd: wrong value for parameter \"pb\" (must be between 1 and 100).');\n   }\n\n\n   if (ncomp === undefined) {\n      ncomp = Math.round(Math.min(m - 1, n) / 1.5);\n   }\n\n   if (m < n) {\n      const res = rsvd(X.t(), ncomp, pa, pb, its);\n      return {s: res.s, V: res.U, U: res.V}\n   }\n\n   // the more the better but slower\n   const l = Math.round(pa * ncomp + pb);\n   let Q = X.dot(Matrix.rand(n, l, -1, 1));\n\n   for (let it = 1; it <= its; it++) {\n      Q = lu(crossprod(X, Q)).L;\n      Q = it < its ? lu(X.dot(Q)).L : qr(X.dot(Q)).Q;\n   }\n\n   const B = crossprod(Q, X);\n   const res = svd(B, ncomp);\n   return {s: res.s, V: res.V, U: Q.dot(res.U)};\n}\n\n/**\n * QR decomposition\n *\n * @param {Matrix} X - matrix to decompose.\n *\n * @returns {JSON} JSON with two matrices, Q and R, so X = QR.\n *\n */\nexport function qr(X) {\n\n   const m = X.nrows;\n   const n = X.ncols;\n\n   if (m < n) {\n      const res = qr(X.subset([], Index.seq(1, m)));\n      return {Q:res.Q, R:crossprod(res.Q, X)}\n   }\n\n   let Q = Matrix.eye(m);\n   let Rt = X.t();\n\n   for (let j = 1; j <= n; j++) {\n      for (let i = m; i >= (j + 1); i--) {\n\n         const r = Rt.v.subarray((i - 2) * n, i * n);\n         const q =  Q.v.subarray((i - 2) * m, i * m);\n         const rc = r.slice();\n         const qc = q.slice();\n\n         const [c, s, temp] = rot(rc[j - 1], rc[j - 1 + n]);\n\n         // apply transformation to columns i and i - 1 of matrix Rt\n         for (let k = 0; k < n; k++) {\n\n            r[k]     = rc[k] *  c + rc[k + n] * s;\n            r[k + n] = rc[k] * -s + rc[k + n] * c;\n\n            q[k]     = qc[k] *  c + qc[k + m] * s;\n            q[k + m] = qc[k] * -s + qc[k + m] * c;\n         }\n\n         for (let k = n; k < m; k++) {\n            q[k]     = qc[k] *  c + qc[k + m] * s;\n            q[k + m] = qc[k] * -s + qc[k + m] * c;\n         }\n      }\n   }\n\n   const ind = Index.seq(1, n);\n   return {\n      Q: m === n ? Q : Q.subset([], ind),\n      R: m === n ? Rt.t() : Rt.subset([], ind).t()\n   }\n}\n\n/**\n * LU decomposition.\n *\n * @param {Matrix} X - matrix to decompose.\n *\n * @returns {JSON} JSON with two matrices, L and U, so X = LU.\n *\n */\nexport function lu(X) {\n\n   const nr = X.nrows;\n   const nc = X.ncols\n   const n = Math.min(nr, nc)\n\n   const Lv = new Float64Array(nr * nc);\n   const Uv = new Float64Array(nc * nc);\n   const Xv = X.v.slice();\n\n   const s = Math.round(Math.pow(n, 0.5285425));\n   let z = 1;\n\n   for (let c = 1; c <= n; c++) {\n\n      if (c == z + s) {\n         const nro = nr - c + 1;\n         const nco = nc - c + 1;\n         const ni = c - z;\n         const Sv = new Float64Array(nro * nco);\n\n         for (let i = 0; i < nro; i++) {\n            for (let j = 0; j < nco; j++) {\n               let s = 0;\n               for (let k = 0; k < ni; k++) {\n                  s += Lv[(z - 1 + k) * nr + (c - 1) + i] * Uv[(c - 1 + j) * nc + (z - 1 + k)];\n               }\n               Sv[j * nro + i] = s;\n            }\n         }\n\n         for (let i = c; i <= nr; i++) {\n            for (let j = c; j <= nc; j++) {\n               Xv[(j - 1) * nr + (i - 1)] = Xv[(j - 1) * nr + (i - 1)] - Sv[(j - c) * nro + (i - c)];\n            }\n         }\n\n         z = c;\n      }\n\n      for (let i = c; i <= nr; i++) {\n         let acc = Xv[(c - 1) * nr + (i - 1)];\n         for (let k = z; k <= c - 1; k++) {\n            acc = acc - Lv[(k - 1) * nr + (i - 1)] * Uv[(c - 1) * nc + (k - 1)];\n         }\n         Lv[(c - 1) * nr + (i - 1)] = acc;\n      }\n\n      for (let i = c; i <= nc; i++) {\n         let acc = Xv[(i - 1) * nr + (c - 1)];\n         for (let k = z; k <= c - 1; k++) {\n            acc = acc - Lv[(k - 1) * nr + (c - 1)] * Uv[(i - 1) * nc + (k - 1)];\n         }\n         const l = Lv[(c - 1) * nr + (c - 1)];\n         Uv[(i - 1) * nc + (c - 1)] = (l == 0 ? acc : acc / l);\n      }\n   }\n\n   return {L: new Matrix(Lv, nr, nc), U: new Matrix(Uv, nc, nc)}\n}\n\n\n/**\n * Singular value decomposition\n *\n * @param {Matrix} X - matrix to decompose.\n * @param {number} [ncomp] - number of components.\n *\n * @returns {JSON} JSON with three fields, 's' - vector with singular values,\n * 'U', 'V' - matrices with left and right singular vectors.\n *\n */\nexport function svd(X, ncomp) {\n\n   let d, e, bV, bU, m, n, transposed;\n\n   if (X.nrows < X.ncols) {\n      [d, e, bV, bU] = bidiag(X.t());\n      m = X.ncols;\n      n = X.nrows;\n      transposed = true;\n   } else {\n      [d, e, bV, bU] = bidiag(X);\n      m = X.nrows;\n      n = X.ncols;\n      transposed = false;\n   }\n\n   if (!ncomp) {\n      ncomp = Math.min(m, n);\n   }\n\n   const maxit = 500 * n * n;\n   const thresh = Math.pow(10, -64);\n   let Gt = Matrix.eye(n);\n   let P = Matrix.eye(n);\n\n   for (let it = 0; it < maxit; it++) {\n\n      // find first nonzero element in e from bottom\n      let iU = 0;\n      for (let i = n - 1; i >= 1; i--) {\n         if (Math.abs(e.v[i - 1]) > thresh) {\n            iU = i\n            break;\n         }\n      }\n\n      // find first nonzero element in e from top\n      let iL = iU + 1;\n      for (let i = 1; i <= n - 1; i++) {\n         if (Math.abs(e.v[i - 1]) > thresh) {\n            iL = i;\n            break;\n         }\n      }\n\n      // check the convergence and return result\n      if ((iU == iL && Math.abs(e[iU - 1]) <= thresh) || (iU < iL)) {\n\n         // compute final results:\n         // V = bU * P\n         // U = bV * Gt\n         // and correct sign of singular values and columns of V\n\n         const s = Vector.zeros(ncomp);\n         const U = Matrix.zeros(X.nrows, ncomp);\n         const V = Matrix.zeros(X.ncols, ncomp);\n\n         for (let k = 1; k <= ncomp; k++) {\n            const sign = Math.sign(d.v[k - 1]);\n            s.v[k - 1] = Math.abs(d.v[k - 1]);\n\n            let uk, vk;\n            if (transposed) {\n               uk = V.getcolref(k);\n               vk = U.getcolref(k);\n            } else {\n               uk = U.getcolref(k);\n               vk = V.getcolref(k);\n            }\n\n            const pk = P.getcolref(k);\n            const gtk = Gt.getcolref(k);\n\n            for (let i = 0; i < n; i++) {\n               const pki = pk[i];\n               const gtki = gtk[i] * sign;\n\n               const bur = bU.getcolref(i + 1);\n               const vur = bV.getcolref(i + 1);\n\n               for (let r = 0; r < n; r++) {\n                  uk[r] += bur[r] * pki;\n                  vk[r] += vur[r] * gtki;\n               }\n               for (let r = n; r < m; r++) {\n                  uk[r] += bur[r] * pki;\n               }\n            }\n         }\n\n         return {s: s, U: U, V: V};\n      }\n\n      // re-sweep\n      const cstart = iL - 1;\n      const cend = iU + 1;\n      const clen = iU - iL + 2;\n      const [rd, re, rG, rPt] = vsweep(d.v.subarray(cstart, cend), e.v.subarray(cstart, cend - 1));\n\n      // replace elements of d and e\n      d.v.set(rd, cstart);\n      e.v.set(re, cstart);\n\n      // now we need to compute:\n      // G = rG' * G = (G' * rG)' -> this should be done only fo selected columns in G\n      // P =            P  * rP'  -> only for selected columns in P\n\n      // get local copy of the \"clen\" columns from G' and P starting from column \"cstart\"\n      const lgt = Gt.v.slice(cstart * n, cstart * n + clen * n);\n      const lp = P.v.slice(cstart * n, cstart * n + clen * n);\n\n      // compute dot(lG', rG) and save back to G'\n      // compute dot(P, rP') and save back to P\n      for (let c = 0; c < clen; c++) {\n\n         // get pointers to column \"c\" (c from \"cstart\" to \"cend\") of Gt and P - to save the results\n         const gtc = Gt.getcolref(c + cstart + 1);  // nc x 1\n         const pc = P.getcolref(c + cstart + 1);    // nc x 1\n\n         // get pointers to the columns of rG and rPt\n         const rgc = rG.getcolref(c + 1);           // clen x 1\n         const rptc = rPt.getcolref(c + 1);          // clen x 1\n\n         // copmpute and save the dot products\n         for (let r = 0; r < n; r++) {\n            // row \"r\" of lGt (nc x clen) times column \"c\" of rG (clen x 1)\n            // row of lP times column of rPt\n            let gtcr = 0;\n            let pcr = 0;\n            for (let i = 0; i < clen; i++) {\n               gtcr += lgt[i * n + r] * rgc[i];\n               pcr += lp[i * n + r] * rptc[i];\n            }\n            gtc[r] = gtcr;\n            pc[r] = pcr;\n         }\n      }\n\n\n      // get local copy of selected columns from G' and P\n      /*\n      const lGt = Matrix.zeros(n, l);\n      const lP = Matrix.zeros(n, l)\n      for (let c = iL; c <= iU + 1; c++) {\n         lGt.v.set(Gt.v.subarray((c - 1) * n, c * n), (c - iL) * n);\n         lP.v.set(P.v.subarray((c - 1) * n, c * n), (c - iL) * n);\n      }\n\n      // compute dot(lG', rG) and save back to G\n      // compute dot(P, rP') and save back to P\n      for (let c = 1; c <= l; c++) {\n         const newgc = lGt.dot(new Vector(rG.getcolref(c)));\n         const newpc = lP.dot(new Vector(rPt.getcolref(c)));\n         Gt.v.set(newgc.v, (c - 1 + iL - 1) * n);\n         P.v.set(newpc.v, (c - 1 + iL - 1) * n);\n      }\n      */\n   }\n\n   throw Error(\"svd: can not converge.\")\n}\n\n\n/**\n * Applies givens rotations to diagonal elements of bidiagonalized matrix.\n *\n * @param {Float64Array} d - vector with main diagonal elements.\n * @param {Float64Array} e - vector with diagonal elements on top of main diagonal.\n *\n * @returns {Array} array with vectors 'd' and 'e' after rotation as well as right\n * transformation matrices G and P'.\n *\n */\nexport function vsweep(d, e) {\n\n   const n = d.length;\n\n   let cold = 1;\n   let sold = 1;\n\n   let c = 1;\n   let s = 0;\n   let r = 0;\n\n   let G = Matrix.eye(n);\n   let Pt = Matrix.eye(n);\n\n   for (let k = 1; k <= (n - 1); k++) {\n\n      [c, s, r] = rot(c * d[k - 1], e[k - 1]);\n\n      // get two columns from G and rotate their values\n      const gk = G.v.subarray((k - 1) * n, (k + 1) * n);\n      const gkc = gk.slice();\n\n      for (let i = 0; i < n; i++) {\n         gk[i]     =  gkc[i] * c + gkc[i + n] * s;\n         gk[i + n] = -gkc[i] * s + gkc[i + n] * c;\n      }\n\n      if (k != 1) {\n         e[k - 2] = r * sold;\n      }\n\n      [cold, sold, r] = rot(cold * r, d[k] * s);\n      d[k - 1] = r;\n\n      // get two columns from Pt and rotate their values\n      const ptk = Pt.v.subarray((k - 1) * n, (k + 1) * n);\n      const ptkc = ptk.slice();\n\n      for (let i = 0; i < n; i++) {\n         ptk[i]     =  ptkc[i] * cold + ptkc[i + n] * sold;\n         ptk[i + n] = -ptkc[i] * sold + ptkc[i + n] * cold;\n      }\n\n   }\n\n   const h = c * d[n - 1];\n   e[n - 2] = h * sold;\n   d[n - 1] = h * cold;\n\n   return [d, e, G, Pt];\n}\n\n\n/**\n * Generate c, s, r values for Givens rotations, so [c s; -s c][f; g] = [r; 0].\n *\n * @param {number} f - first element of vector.\n * @param {number} g - second element of vector.\n *\n * @return array with values [c, s, r].\n *\n */\nexport function rot(f, g) {\n\n   if (f == 0) {\n      return [0, 1, g];\n   }\n\n   if (Math.abs(f) > Math.abs(g)) {\n      const t = g / f;\n      const t1 = Math.sqrt(1 + t * t);\n      const c = 1 / t1\n      return [c, t * c, f * t1];\n   }\n\n   const t = f / g;\n   const t1 = Math.sqrt(1 + t * t)\n   const s = 1 / t1\n   return [t * s, s, g * t1];\n}\n\n\n/**\n * Golub-Reinsch bidiagonalization of matrix A\n *\n * @param {Matrix} A - matrix with values.\n *\n * @returns {Array} array with three matrices [B, V, U].\n *\n */\nexport function bidiag(A) {\n\n   const m = A.nrows;\n   const n = A.ncols;\n\n   if (m < n) {\n      throw Error(\"bidiag: number of rows in A must not be smaller number of columns.\");\n   }\n\n   let Ut = Matrix.eye(m);\n   let V = Matrix.eye(n);\n   let B = A.copy();\n\n  for (let k = 1; k <= (m > n ? n : n - 1); k++) {\n   // for (let k = 1; k <= 1; k++) {\n      const mk = m - k + 1;\n\n      // compute:\n      // B  = H * B\n      // U' = H' * U';\n      const H1 = householder(B.getcolref(k), k);\n\n      for (let c = 1; c <= n; c++) {\n\n         // get c-th column of B (starting from (k-1) row) and make a copy\n         const bc = B.v.subarray((c - 1) * m + k - 1, c * m)\n         const bcc = bc.slice();\n\n         // get c-th column of U' (starting from (k-1) row) and make a copy\n         const utc = Ut.v.subarray((c - 1) * m + k - 1, c * m)\n         const utcc = utc.slice();\n\n         for (let r = k; r <= m; r++) {\n            // because H is symmetric we take column instead of row\n            const hr = H1.getcolref(r - k + 1);\n            let sb = 0;\n            let sut = 0;\n            for (let i = 0; i < mk; i++) {\n               sb += hr[i] * bcc[i];\n               sut += hr[i] * utcc[i]\n            }\n            bc[r - k] = sb;\n            utc[r - k] = sut;\n         }\n      }\n\n\n      for (let c = n + 1; c <= m; c++) {\n\n         // get c-th column of U' and make a copy\n         const utc = Ut.v.subarray((c - 1) * m + k - 1, c * m)\n         const utcc = utc.slice();\n\n         for (let r = k; r <= m; r++) {\n            const hr = H1.getcolref(r - k + 1);\n            let sut = 0;\n            for (let i = 0; i < mk; i++) {\n               sut += hr[i] * utcc[i];\n            }\n            utc[r - k] = sut;\n         }\n      }\n\n      if (k < n - 1) {\n\n         // compute:\n         // B = B * H'\n         // V = V * H\n         const H2 = householder(B.getrow(k).v, k + 1);\n\n         // we need to process columns from k + 1, so make a subset from the start\n         const Bvk = B.v.subarray(k * m);\n         const Vvk = V.v.subarray(k * n);\n\n         let br = new Float64Array(n - k)\n         let vr = new Float64Array(n - k)\n\n         // process first n rows for both B and V\n         for (let r = 1; r <= n; r++) {\n\n            // get elements from r-th row\n            for (let i = 0; i < n - k; i++) {\n               br[i] = Bvk[i * m + r - 1];\n               vr[i] = Vvk[i * n + r - 1];\n            }\n\n            for (let c = k + 1; c <= n; c++) {\n               const hc = H2.getcolref(c - k);\n               let sb = 0;\n               let sv = 0;\n               for (let i = 0; i < H2.nrows; i++) {\n                  sb += br[i] * hc[i];\n                  sv += vr[i] * hc[i];\n               }\n               Bvk[(c - k - 1) * m + (r - 1)] = sb;\n               Vvk[(c - k - 1) * n + (r - 1)] = sv\n            }\n         }\n\n         // process rows from (n+1) to m for B only\n         for (let r = n + 1; r <= m; r++) {\n\n            // get elements from r-th row\n            for (let i = 0; i < n - k; i++) {\n               br[i] = Bvk[i * m + r - 1];\n            }\n\n            for (let c = k + 1; c <= n; c++) {\n               const hc = H2.getcolref(c - k);\n               let sb = 0;\n               for (let i = 0; i < H2.nrows; i++) {\n                  sb += br[i] * hc[i];\n               }\n               Bvk[(c - k - 1) * m + (r - 1)] = sb;\n            }\n         }\n      }\n   }\n\n   const d = Vector.zeros(n);\n   const e = Vector.zeros(n - 1);\n   for (let i = 0; i < n - 1; i++) {\n      d.v[i] = B.v[i * m + i];\n      e.v[i] = B.v[(i + 1) * m + i];\n   }\n   d.v[n - 1] = B.v[(n - 1) * m + (n - 1)];\n\n   return [d, e, V, Ut.t()];\n}\n\n\n/**\n * Compute elements of Householder transformation as a matrix.\n *\n * @param {Float64Array} b - array with diagonal values.\n * @param {number} k - position to start with.\n *\n * @returns {Matrix} matrix with transformation values.\n *\n */\nexport function householder(b, k) {\n\n   // get vector with values\n   const h = householderv(b, k);\n   const n = h.length;\n   // compute matrix as outer product of the vector\n   const H = Matrix.zeros(n);\n   for (let c = 0; c < n; c++) {\n      const hc = H.getcolref(c + 1);\n      for (let r = 0; r < n; r++) {\n         hc[r] = 1 * (r == c) - 2 * h[r] * h[c];\n      }\n   }\n\n   return H;\n}\n\n\n/**\n * Compute elements of Householder transformation as a vector.\n *\n * @param {Float64Array} b - array with diagonal values.\n * @param {number} k - position to start with.\n *\n * @returns {Float64Array} vector with transformation values.\n *\n */\nexport function householderv(b, k) {\n\n   const n = b.length;\n\n   if (k >= n) {\n      throw Error(\"householder: parameter 'k' must be smaller than length of vector 'b'.\")\n   }\n\n   const hlen = n - k + 1;\n   const h = b.slice(k - 1);\n   // to avoid computing norm2 twice we will\n   // compute it based on the first norm\n   const hssq = ssq(h);\n   const hn2 = Math.sqrt(hssq);\n   const s = Math.sign(h[0]);\n   const a = h[0];\n\n   // change first value in the vector\n   h[0] = a - s * hn2;\n\n   // recompute the norm\n   const hn2a = Math.sqrt(2 * hssq - 2 * s * a * hn2);\n\n   // if norm is zero return vector as is\n   if (hn2a < Number.EPSILON) return h\n\n   // normalize vector and return\n   for (let i = 0; i < hlen; i++) {\n      h[i] /=  hn2a;\n   }\n   return h;\n}\n\n\n\n\n\n","/* =================================================================== */\n/*    Methods for Arrays (vectors, matrices, indices and factors, )    */\n/* =================================================================== */\n\nimport { min, max, prod } from '../stat/index.js';\nimport { rnorm, runif } from '../distributions/index.js';\nimport { qr } from '../decomp/index.js';\n\nexport function isnumber(x) {\n   return typeof(x) === 'number';\n}\n\n\n/**************************************************/\n/*    Non-class methods for Vectors and Matrix    */\n/**************************************************/\n\n/**\n * Compute XY' product of two matrices.\n *\n * @param {Matrix} X - a matrix.\n * @param {Matrix} Y - a matrix.\n *\n * @returns {Matrix} result of the product.\n *\n */\nexport function tcrossprod(X, Y) {\n\n   if (Y === undefined) {\n      Y = X;\n   }\n\n   const nrx = X.nrows;\n   const ncx = X.ncols;\n\n   const nry = Y.nrows;\n   const ncy = Y.ncols;\n\n   // create vector for the product\n   const nrows = nrx;\n   const ncols = nry;\n   const ninner = ncx;\n   const out = new Float64Array(nrows * ncols);\n\n   for (let i = 0; i < ninner; i++) {\n      const xr = X.v.subarray(i * nrx, (i + 1) * nrx);\n      const yc = Y.v.subarray(i * nry, (i + 1) * nry);\n\n      for (let c = 0; c < ncols; c++) {\n         const outc = out.subarray(c * nrows, (c + 1) * nrows);\n         for (let r = 0; r < nrows; r++) {\n            outc[r] += xr[r] * yc[c];\n         }\n      }\n   }\n\n   return new Matrix(out, nrows, ncols);\n\n}\n\n\n/**\n * Compute X'Y product of two matrices or a vector and a matrix.\n *\n * @param {Matrix|Vector} X - a matrix or a vector.\n * @param {Matrix} Y - a matrix.\n *\n * @returns {Matrix} result of the product.\n *\n */\nexport function crossprod(X, Y) {\n\n   if (Y === undefined) {\n      Y = X;\n   }\n\n   if (!ismatrix(X) || !ismatrix(Y)) {\n      throw Error('crossprod: both X and Y must be instance of Matrix class.');\n   }\n\n   const nrx = X.nrows;\n   const ncx = X.ncols;\n\n   const nry = Y.nrows;\n   const ncy = Y.ncols;\n\n   // create vector for the product\n   const nrows = ncx;\n   const ncols = ncy;\n   const ninner = nrx;\n   const out = new Float64Array(nrows * ncols);\n\n   for (let c = 0; c < ncols; c++) {\n      // column c of Y\n      const yc = Y.v.subarray(c * nry, (c + 1) * nry);\n\n      // column c of out\n      const outc = out.subarray(c * nrows, (c + 1) * nrows);\n\n      for (let r = 0; r < nrows; r++) {\n\n         // column r of X (row r of X')\n         const xr = X.v.subarray(r * nrx, (r + 1) * nrx);\n\n         let s = 0;\n         for (let i = 0; i < ninner; i++) {\n            s += xr[i] * yc[i];\n         }\n         outc[r] = s;\n      }\n   }\n\n   return new Matrix(out, nrows, ncols);\n}\n\n\n/**\n * Bind several matrices or vectors into a single matrix row wise.\n *\n * @param  {...any} args - matrices or vectors separated by comma.\n *\n * @returns {Matrix} concatenated matrix.\n *\n */\nexport function rbind(...args) {\n\n   if (args.length === 1) return args[0];\n\n   // check that all matrices have the same number of rows\n   const ncols = ismatrix(args[0]) ? args[0].ncols : args[0].length;\n   const check = args.reduce( (acc, cur) => acc & ismatrix(cur) ? cur.ncols === ncols : cur.length === ncols, true);\n\n   if (!check) {\n      throw Error('rbind: all matrices must the same number of columns.');\n   }\n\n   // compute number of columns in outside matrix\n   const nrows = args.reduce( (acc, cur) => acc + (ismatrix(cur) ? cur.nrows : 1), 0);\n   const l = nrows * ncols;\n   const out = new Matrix.valuesConstructor(l);\n\n   let start = 0;\n   for (const a of args) {\n      out.set((ismatrix(a) ? a.t().v : a.v), start);\n      start += a.v.length;\n   }\n\n   return new Matrix(out, ncols, nrows).t();\n\n}\n\n\n/**\n * Bind several matrices or vectors into a single matrix column wise.\n *\n * @param  {...any} args - matrices or vectors separated by comma.\n *\n * @returns {Matrix} concatenated matrix.\n *\n */\nexport function cbind(...args) {\n\n   if (args.length === 1) return args[0];\n\n   // check that all matrices have the same number of rows\n   const nrows = ismatrix(args[0]) ? args[0].nrows : args[0].length;\n   const check = args.reduce( (acc, cur) => acc & (ismatrix(cur) ? cur.nrows === nrows : cur.length === nrows), true);\n\n   if (!check) {\n      throw Error('cbind: all matrices must the same number of rows.');\n   }\n\n   // compute number of columns in outside matrix\n   const ncols = args.reduce( (acc, cur) => acc + (ismatrix(cur) ? cur.ncols : 1), 0);\n   const l = nrows * ncols;\n   const out = new Matrix.valuesConstructor(l);\n\n   let start = 0;\n   for (const a of args) {\n      out.set(a.v, start);\n      start += a.v.length;\n   }\n\n   return new Matrix(out, nrows, ncols);\n\n}\n\n\n/**\n * Concatenate several vectors into one vector.\n *\n * @param {...Vector | ...Index} args - vectors separated by comma.\n *\n * @returns {Vector|Index} vector with concatenated values.\n *\n */\nexport function c(...args) {\n\n   if (args.length === 1) return args[0];\n\n   const l = args.reduce( (acc, cur) => acc + cur.length, 0);\n   const out = new args[0].constructor.valuesConstructor(l);\n\n   let start = 0;\n   for (const a of args) {\n      out.set(a.v, start);\n      start += a.length;\n   }\n\n   return new args[0].constructor(out);\n}\n\n\n/**\n * Change dimension of matrices and vectors.\n * @param {Matrix|Vector} obj - a matrix or a vector.\n * @param {number} nrow - number of rows in the reshaped object.\n * @param {number} ncol - number of columns in the reshaped object, if undefined, a vector will be returned.\n *\n * @returns {Matrix|Vector} the reshaped object.\n *\n */\nexport function reshape(obj, nrow, ncol) {\n\n   if (ncol === undefined) {\n      if (nrow !== obj.v.length) {\n         throw Error(\"reshape: provided dimension does not match number of values in the object.\");\n      }\n      return new Vector(obj.v);\n   }\n\n   if (obj.v.length !== nrow * ncol) {\n      throw Error(\"reshape: provided dimension does not match number of values in the object.\");\n   }\n\n   return new Matrix(obj.v, nrow, ncol);\n}\n\n\n\n/*************************************************/\n/*         Classes and type checkers             */\n/*************************************************/\n\n\n/**\n * Return 'true' of 'X' is a Matrix object, 'false' otherwise.\n *\n * @param {any} X - any object or variable.\n *\n * @returns {boolean}\n *\n */\nexport function ismatrix(X) {\n   return X && X.constructor === Matrix;\n}\n\n\n/**\n * Create a Matrix object from array of values.\n *\n * @param {number[]} values - array with values.\n * @param {number} nrows - number of rows in matrix.\n * @param {number} ncols - number of columns in matrix.\n *\n * @returns {Matrix} the matrix.\n *\n */\nexport function matrix(values, nrows, ncols) {\n   return new Matrix(new Float64Array(values), nrows, ncols);\n}\n\n\n/** Class representing a matrix */\nexport class Matrix {\n\n   static valuesConstructor = Float64Array;\n   static TOLERANCE = Math.pow(10, -9);\n\n   /**\n    * Constructor for a Matrix object.\n    *\n    * @param {Float64Array} values - typed array with values.\n    * @param {number} nrows - number of rows in the matrix.\n    * @param {number} ncols - number of columns in the matrix.\n    *\n    * @returns {Matrix} a Matrix object (see description).\n    *\n    * @description  Create a matrix from vector of values. Matrix is represented by an object with two\n    * fields. Field 'v' is a typed Float64Array with all values, unfolded column by column. The second\n    * field, 'dim', is an array with 2 values: number of rows and number of columns.\n    *\n    */\n   constructor (values, nrows, ncols) {\n      if (!ArrayBuffer.isView(values) || values.constructor !== Matrix.valuesConstructor) {\n         throw Error('Matrix: parameter \"values\" must be Float64Array.')\n      }\n\n      if (nrows === 0 || ncols === 0) {\n         throw Error('Matrix: can not create matrix with zero rows or columns.')\n      }\n\n      if (values.length !== nrows * ncols) {\n         throw Error('Matrix: number elements in \"values\" is not equal to \"nrows\" x \"ncols\".')\n      }\n\n      this.v = values;\n      this.nrows = nrows\n      this.ncols = ncols;\n   }\n\n\n   /**\n    * Compute inverse of the matrix.\n    *\n    * @returns inverse matrix.\n    *\n    */\n   inv() {\n\n      if (this.nrows !== this.ncols) {\n         throw Error('inv: only squared matrices can be inverted.');\n      }\n\n      const n = this.ncols;\n\n      if (this.isuppertriangular()) {\n\n         if (this.islowertriangular()) {\n            // it means diagonal\n            return Matrix.diagm(this.diag().apply(v => Math.abs(v) > Number.EPSILON ? 1 / v : x));\n         }\n\n         // prepare matrices - we will transpose X to work with columns instead of rows\n         const I = Matrix.eye(n);\n         const Yt = Matrix.eye(n);\n         const Xt = this.t();\n\n         // solve for the last column\n         const s = Xt.v[(n - 1) * n + (n - 1)];\n         const c = n - 1;\n         for (let r = 0; r < n; r++) {\n            Yt.v[c * n + r] = I.v[c * n + r] / s;\n         }\n\n         // do backward substitution\n         for (let c = n - 2; c >= 0; c--) {\n            let s = I.getcolumn(c + 1);\n            const xc = Xt.getcolref(c + 1);\n            for (let r = c + 1; r < n; r++ ) {\n               const yc = Yt.getcolumn(r + 1);\n               s = s.subtract(yc.mult(xc[r]));\n            }\n            Yt.v.set(s.divide(xc[c]).v, c * n);\n         }\n\n         return Yt.t()\n      }\n\n\n      if (this.islowertriangular()) {\n\n         // check if diagonal elements are not zeros\n         const d = this.diag();\n         if (prod(d) < Number.EPSILON) {\n            throw Error('inv: the matrix is not invertible.');\n         }\n\n         // prepare matrices - we will transpose X to work with columns instead of rows\n         const I = Matrix.eye(n);\n         const Yt = Matrix.eye(n);\n         const Xt = this.t();\n\n         // solve for the first column\n         const c = 0;\n         const s = Xt.v[0];\n         for (let r = 0; r < n; r++) {\n            Yt.v[c * n + r] = I.v[c * n + r] / s;\n         }\n\n         // do forward substitution\n         for (let c = 1; c < n; c++) {\n            let s = I.getcolumn(c + 1);\n            const xc = Xt.getcolref(c + 1);\n            for (let r = 0; r < c; r++ ) {\n               const yc = Yt.getcolumn(r + 1);\n               s = s.subtract(yc.mult(xc[r]));\n            }\n            Yt.v.set(s.divide(xc[c]).v, c * n);\n         }\n\n         return Yt.t()\n      }\n\n      // invert matrix using QR transformation\n      const r = qr(this);\n      if (!r.R.isuppertriangular()) {\n         throw Error('inv: QR decomposition of the matrix returned incorrect result.');\n      }\n\n      return r.R.inv().dot(r.Q.t());\n   }\n\n\n   /**\n    * Check if matrix is lower triangular.\n    *\n    * @returns {boolean} true if matrix is lower triangular, false otherwise.\n    */\n   islowertriangular() {\n\n      if (this.nrows !== this.ncols) return false;\n      for (let j = 1; j < this.ncols; j++) {\n         for (let i = 0; i < j; i++) {\n            if (Math.abs(this.v[j * this.nrows + i]) > Matrix.TOLERANCE) return false;\n         }\n      }\n\n      return true;\n   }\n\n\n   /**\n    * Check if matrix is upper triangular.\n    *\n    * @returns {boolean} true if matrix is upper triangular, false otherwise.\n    */\n   isuppertriangular() {\n\n      if (this.nrows !== this.ncols) return false;\n\n      for (let j = 0; j < this.ncols; j++) {\n         for (let i = j + 1; i < this.nrows; i++) {\n            if (Math.abs(this.v[j * this.nrows + i]) > Matrix.TOLERANCE) return false;\n         }\n      }\n\n      return true;\n   }\n\n\n   /**\n    * Return vector with diagonal elements of matrix.\n    *\n    * @returns {Vector} vector with diagonal elements.\n    *\n    */\n   diag() {\n\n      const n = Math.min(this.nrows, this.ncols);\n      const out = new Float64Array(n);\n      for (let rc = 0; rc < n; rc++) {\n         out[rc] = this.getcolref(rc + 1)[rc];\n      }\n\n      return new Vector(out);\n   }\n\n\n   /**\n    * Transpose the matrix.\n    *\n    * @returns {Matrix} transposed matrix.\n    *\n    */\n   t() {\n\n      const ncols_out = this.nrows;\n      const nrows_out = this.ncols;\n      const out = new Matrix.valuesConstructor(this.v.length);\n\n      if (this.ncols < this.nrows) {\n         for(let i = 0; i < this.ncols; i++) {\n            const x = this.v.subarray(i * this.nrows, (i + 1) * this.nrows)\n            for(let j = 0; j < this.nrows; j++) {\n               out[j * nrows_out + i] = x[j];\n            }\n         }\n\n         return new Matrix(out, nrows_out, ncols_out);\n      }\n\n      for(let j = 0; j < this.nrows; j++) {\n         const outx = out.subarray(j * nrows_out, (j + 1) * nrows_out)\n         for(let i = 0; i < this.ncols; i++) {\n            outx[i] = this.v[i * this.nrows + j];\n         }\n      }\n\n      return new Matrix(out, nrows_out, ncols_out);\n   }\n\n\n   /**\n    * Compute a dot product of the matrix with vector or another matrix.\n    *\n    * @param {Vector|Matrix} X - a vector or a matrix to compute a dot product with.\n    *\n    * @returns {Matrix} result of the dot product.\n    *\n    */\n   dot(X) {\n\n      if (isvector(X)) {\n         return new Matrix(_dot(this.v, X.v, this.nrows, this.ncols, X.length, 1), this.nrows, 1);\n      }\n\n      if (ismatrix(X)) {\n         return new Matrix(_dot(this.v, X.v, this.nrows, this.ncols, X.nrows, X.ncols), this.nrows, X.ncols);\n      }\n\n      throw Error(\"dot: argument 'X' must be a matrix or a vector.\");\n   }\n\n   /**\n    * Does mathematical operation between the matrix and another matrix, a vector or a number.\n    *\n    * @param {number|Vector|Matrix} x - a vector or a number to operate with.\n    * @param {function} fun - function to apply.\n    * @param {number} dims - if 'x' is a vector which dimension applies it to.\n    *\n    * @returns {Matrix} result of operation.\n    *\n    */\n   op(X, fun, dims) {\n\n      if (ismatrix(X)) {\n         return new Matrix(_opvv(this.v, X.v, fun), this.nrows, this.ncols);\n      }\n\n      if (isnumber(X)) {\n         return new Matrix(_opvn(this.v, X, fun), this.nrows, this.ncols);\n      }\n\n      if (!isvector(X)) {\n         throw new Error('op: argument \"x\" must be a matrix, a vector or a number.');\n      }\n\n      if (dims === undefined) {\n         dims = X.length === this.ncols ? 2 : 1;\n      }\n\n      if (dims === 2 && X.length === this.ncols) {\n\n         const out = new Matrix.valuesConstructor(this.v.length);\n         for (let c = 0; c < this.ncols; c++) {\n            out.set(_opvn(this.getcolref(c + 1), X.v[c], fun), c * this.nrows);\n         }\n\n         return new Matrix(out, this.nrows, this.ncols);\n      }\n\n      if (dims === 1 && X.length === this.nrows) {\n\n         const out = new Matrix.valuesConstructor(this.v.length);\n         for (let c = 0; c < this.ncols; c++) {\n            out.set(_opvv(this.getcolref(c + 1), X.v, fun), c * this.nrows);\n         }\n\n         return new Matrix(out, this.nrows, this.ncols);\n      }\n\n      throw new Error('op: length of vector \"X\" does not match number of rows nor number of columns of the maytrix.');\n\n   }\n\n\n   /**\n    * Add a number or values from another matrix or vector.\n    *\n    * @param {number|Vector|Matrix} X - a matrix, a vector or a number to sum the values with.\n    *\n    * @returns {Matrix} result of operation.\n    *\n    */\n   add(X) {\n      return this.op(X, (a, b) => a + b);\n   }\n\n   /**\n    * Subtract a number or values from another matrix or vector.\n    *\n    * @param {number|Vector|Matrix} X - a matrix, a vector or a number to subtract the values of.\n    *\n    * @returns {Matrix} result of operation.\n    *\n    */\n   subtract(X) {\n      return this.op(X, (a, b) => a - b);\n   }\n\n\n   /**\n    * Multiply to a number or to values from another matrix or vector.\n    *\n    * @param {number|Vector|Matrix} X - a matrix, a vector or a number to multiply the values to.\n    *\n    * @returns {Matrix} result of operation.\n    *\n    */\n   mult(X) {\n      return this.op(X, (a, b) => a * b);\n   }\n\n\n   /**\n    * Divide to a number or to values from another matrix or vector.\n    *\n    * @param {number|Vector|Matrix} X - a matrix, a vector or a number to divide the values to.\n    *\n    * @returns {Matrix} result of operation.\n    *\n    */\n   divide(X) {\n      return this.op(X, (a, b) => a / b);\n   }\n\n\n   /**\n    * Applies a function to elements of the matrix.\n    * @param {function} fun - function to apply (should return single value).\n    * @param {number} dims - which elements to apply the function to (0 - every, 1 - rows, 2 - columns).\n    *\n    * @returns {Vector|Matrix} - result of applying the function (either array with one value for each\n    * row/column or another Matrix with transformed values).\n    */\n   apply(fun, dims) {\n\n      // by default function is applied to columns\n      if (dims === undefined) {\n         dims = 2;\n      }\n\n      // columns\n      if (dims == 2) {\n         const n = this.ncols;\n         const out = new Matrix.valuesConstructor(n);\n         for (let i = 0; i < n; i++) {\n            out[i] = fun(this.getcolref(i + 1));\n         }\n         return new Vector(out);\n      }\n\n      // rows\n      if (dims == 1) {\n         return this.t().apply(fun, 2);\n      }\n\n      // individual values\n      if (dims == 0) {\n         const n = this.v.length;\n         const out = new Matrix.valuesConstructor(n);\n         for (let i = 0; i < n; i++) {\n            out[i] = fun(this.v[i]);\n         }\n         return new Matrix(out, this.nrows, this.ncols);\n      }\n   }\n\n\n   /**\n    * Replace values of matrix specified by 'rind' and 'cind' with values from another matrix.\n    *\n    * @param {Matrix} - matrix with values to use as replacement.\n    * @param {number | Array | Index} rind - row indices (as number or vector of indices).\n    * @param {number | Array | Index} cind - column indices (as number or vector of indices).\n    *\n    * @description Row and column indices must start from 1. Empty array ([]) tells function to use\n    * all elements (e.g. all rows or all columns). Size of matrix 'X' should correspond to the\n    * number of indices.\n    *\n    * Function does not create a new matrix but changes the current one.\n    *\n    * @returns {Matrix} the matrix with replaced values.\n    *\n    */\n   replace (X, rind, cind) {\n\n      if (typeof(rind) === 'number') {\n         rind = [rind];\n      }\n\n      if (rind.length === 0) {\n         rind = Index.seq(1, this.nrows);\n      }\n\n      if (!isindex(rind)) {\n         rind = index(rind);\n      }\n\n      if (typeof(cind) === 'number') {\n         cind = [cind];\n      }\n\n      if (cind.length === 0) {\n         cind = Index.seq(1, this.ncols);\n      }\n\n      if (!isindex(cind)) {\n         cind = index(cind);\n      }\n\n      const nrows = rind.length;\n      const ncols = cind.length;\n\n      if (min(rind) < 1 || max(rind) > this.nrows) {\n         throw Error('Matrix.replace: row indices do not match the dimension of matrix.');\n      }\n\n      if (min(cind) < 1 || max(cind) > this.ncols) {\n         throw Error('Matrix.replace: column indices do not match the dimension of matrix.');\n      }\n\n      if (X.nrows !== nrows || X.ncols !== ncols) {\n         throw Error('Matrix.replace: dimension of \"X\" does not match the indices.');\n      }\n\n      for (let ic = 0; ic < cind.length; ic++) {\n         const xc = X.getcolref(ic + 1);\n         const cv = (cind.v[ic] - 1) * this.nrows;\n         for (let ir = 0; ir < rind.length; ir++) {\n            const r = rind.v[ir];\n            this.v[cv + r - 1] = xc[ir];\n         }\n      }\n\n      return this;\n   }\n\n\n   /**\n    * Create a deep copy of the matrix.\n    *\n    * @returns {Matrix}\n    *\n    */\n   copy() {\n      return new Matrix(this.v.slice(), this.nrows, this.ncols);\n   }\n\n   /**\n    * Return values from a particular matrix row as vector.\n    *\n    * @param {number} ir - row index (starting from 1).\n    *\n    * @returns {Vector} vector with column values.\n    *\n    */\n   getrow(ir) {\n\n      if (ir < 1 || ir > this.nrows) {\n         throw Error('getrow: wrong row index.');\n      }\n\n      const v = new Vector.valuesConstructor(this.ncols);\n      for (let c = 0; c < this.ncols; c++) {\n         v[c] = this.getcolref(c + 1)[ir - 1];\n      }\n      return new Vector(v);\n   }\n\n\n   /**\n    * Return values from a particular matrix column as vector.\n    *\n    * @param {number} ic - column index (starting from 1).\n    *\n    * @returns {Vector} vector with column values.\n    *\n    */\n   getcolumn(ic) {\n\n      if (ic < 1 || ic > this.ncols) {\n         throw Error('getcolumn: wrong column index.');\n      }\n\n      return new Vector(this.v.slice((ic - 1) * this.nrows, ic * this.nrows));\n   }\n\n\n   /**\n    * Return a reference (not copy) to values of a particular matrix column.\n    *\n    * @param {number} ic - index of column (starting from 1).\n    *\n    * @returns {Float64Array} - reference to the column values as typed array.\n    *\n    */\n   getcolref(ic) {\n      return this.v.subarray((ic - 1) * this.nrows, ic * this.nrows);\n   }\n\n\n   /**\n    * Create a subset of a matrix using row and column indices.\n    *\n    * @param {number|Index} rind - row indices to select (as Index or a single number).\n    * @param {number|Index} cind - column indices to select (as Index or a single number).\n    *\n    * @description Row and column indices must start from 1. If 'rind' or 'cind' are null,\n    * all items from this direction will be taken.\n    *\n    * @returns {Matrix} the subset of the matrix.\n    *\n    */\n   subset(rind, cind) {\n\n      if (typeof(rind) === 'number') {\n         rind = index([rind]);\n      }\n\n      if (typeof(cind) === 'number') {\n         cind = index([cind]);\n      }\n\n      if (Array.isArray(rind)) {\n         rind = rind.length === 0 ? null : index(rind);\n      }\n\n      if (Array.isArray(cind)) {\n         cind = cind.length === 0 ? null : index(cind);\n      }\n\n      if (rind !== null && !isindex(rind)) {\n         throw Error('subset: parameter \"rind\" can be a number, null or instance of Index.');\n      }\n\n      if (cind !== null && !isindex(cind)) {\n         throw Error('subset: parameter \"cind\" can be a number, null or instance of Index.');\n      }\n\n      if (rind !== null && (min(rind) < 1 || max(rind) > this.nrows)) {\n         throw Error('subset: parameter \"rind\" does not match size of the matrix.');\n      }\n\n      if (cind !== null && (min(cind) < 1 || max(cind) > this.ncols)) {\n         throw Error('subset: parameter \"cind\" does not match size of the matrix.');\n      }\n\n      // select all rows and a subset of columns\n      if (rind === null) {\n\n         const ncols_out = cind.length;\n         const nrows_out = this.nrows;\n         const out = new Matrix.valuesConstructor(nrows_out * ncols_out);\n         for (let ic = 0; ic < cind.length; ic++) {\n            out.set(this.v.slice((cind.v[ic] - 1) * this.nrows, cind.v[ic] * this.nrows), ic * this.nrows);\n         }\n\n         return new Matrix(out, nrows_out, ncols_out);\n      }\n\n      // select all columns and a subset of rows\n      if (cind === null || cind === undefined) {\n         return this.t().subset(cind, rind).t();\n      }\n\n      // select specific columns and rows\n      const nrows_out = rind.length;\n      const ncols_out = cind.length;\n      const out = new Matrix.valuesConstructor(nrows_out * ncols_out);\n      let xc_out = new Matrix.valuesConstructor(nrows_out)\n      for (let ic = 0; ic < ncols_out; ic++) {\n\n         // take the a whole column from matrix and pick row values from it\n         const xc = this.v.subarray((cind.v[ic] - 1) * this.nrows, (cind.v[ic]) * this.nrows);\n         for (let ir = 0; ir < nrows_out; ir++) {\n            xc_out[ir] = xc[rind.v[ir] - 1];\n         }\n         out.set(xc_out, ic * nrows_out);\n      }\n\n      return new Matrix(out, nrows_out, ncols_out);\n   }\n\n\n   /**\n    * Convert matrix to a text representation for showing the values in nice way.\n    *\n    * @param {number} ndec - number of decimals to round the values to.\n    *\n    * @returns {string} the string with matrix representation.\n    *\n    * TODO: 1) add workaround for large matrices (...)\n    *\n    */\n   toString (ndec) {\n\n      function leftpad(x, n) {\n         return  \" \".repeat(n - x.length) + x;\n      }\n\n      if (ndec === undefined) {\n         ndec = 2;\n      }\n\n      const nvar = this.ncols;\n      const ndigits = Math.round(Math.abs(Math.log10(max(this.v)))) + ndec + 3;\n\n      let str = \"\";\n      const Xt = this.t();\n      for (let c = 1; c <= Xt.ncols; c++) {\n         str += Array.from(Xt.getcolref(c)).map(v => leftpad(v.toFixed(ndec), ndigits)).join(\" \") + \"\\n\"\n      }\n\n      return str;\n   }\n\n   /**\n    * Convert matrix values to a string which can be downloaded as CSV file.\n    *\n    * @param {string} sep - symbol to use for separation of values (by default \",\").\n    * @param {string} dec - symbold to use for separation of decimals (by default \".\").\n    * @param {Array} header - optional array of header elements (column names).\n    * @param {Array} labels - optional array of labels (row names).\n    *\n    * @returns {string} - string with CSV data.\n    */\n   toCSV(sep, dec, header, labels) {\n\n      // set default separator symbol\n      if (sep === undefined) {\n         sep = \",\";\n      }\n\n      // set default decimals separator symbol\n      if (dec === undefined) {\n         dec = sep === \";\" ? \",\" : \".\"\n      }\n\n      const hasLabels = labels !== undefined && labels !== null && labels.length > 0;\n      const hasHeader = header !== undefined && header !== null && header.length > 0;\n\n      if (hasLabels && labels.length !== this.nrows) {\n         throw Error (\"Matrix.toCSV: number of elements in labels array must match number of rows in the matrix.\");\n      }\n\n      if (hasHeader && header.length !== this.ncols + (hasLabels ? 1 : 0)) {\n         throw Error (\"Matrix.toCSV: number of elements in header must match number of columns in the matrix.\");\n      }\n\n      // transpose to make it faster\n      const m = this.t();\n      let rows = hasHeader ? header.join(sep) + \"\\n\" : \"\";\n      for (let c = 1; c <= m.ncols; c++) {\n         rows = rows + (hasLabels ? labels[c - 1] + sep : \"\") + m.getcolref(c).join(sep) + \"\\n\";\n      }\n\n      // change decimal separator if it is not a dot\n      rows = rows.replace(/\\./g, dec);\n\n      return rows;\n   }\n\n   // Static methods //\n\n   /**\n    * Create a matrix with random values from normal distribution.\n    *\n    * @param {number} nrows - number of rows.\n    * @param {number} ncols - number of columns.\n    * @param {number} [mu=0] - mean (expected) value.\n    * @param {number} [sigma=1] - standard deviation.\n    *\n    * @returns {Vector} matrix with values.\n    *\n    */\n   static randn(nrows, ncols, mu, sigma) {\n      return reshape(rnorm(nrows * ncols, mu, sigma), nrows, ncols);\n   }\n\n\n   /**\n    * Create a matrix with random values from uniform distribution [a, b].\n    *\n    * @param {number} nrows - number of rows.\n    * @param {number} ncols - number of columns.\n    * @param {number} [a=0] - smallest possible value.\n    * @param {number} [b=1] - largest possible value.\n    *\n    * @returns {Vector} matrix with values.\n    *\n    */\n   static rand(nrows, ncols, a, b) {\n      return reshape(runif(nrows * ncols, a, b), nrows, ncols);\n   }\n\n\n   /**\n    * Create an identity matrix.\n    *\n    * @param {number} nrows - number of rows.\n    * @param {number} ncols - number of columns (if undefined, will be same as 'nrows').\n    *\n    * @returns {Matrix} the matrix.\n    *\n    */\n   static eye(nrows, ncols) {\n\n      if (ncols === undefined) {\n         ncols = nrows;\n      }\n\n      const out = new Float64Array(nrows * ncols);\n      for (let rc = 0; rc < Math.min(nrows, ncols); rc++) {\n         out[rc * nrows + rc] = 1;\n      }\n\n      return new Matrix(out, nrows, ncols);\n   }\n\n\n   /**\n    * Create a diagonal matrix based on vector with values.\n    *\n    * @param {Vector} x - vector with values.\n    *\n    * @returns {Matrix} the matrix.\n    *\n    */\n   static diagm(x) {\n\n      if (!isvector(x)) {\n         throw Error('diagm: the argument \"x\" must be a Vector.');\n      }\n\n      const n = x.length;\n      const out = new Float64Array(n * n);\n      for (let rc = 0; rc < n; rc++) {\n         out[rc * n + rc] = x.v[rc];\n      }\n\n      return new Matrix(out, n, n);\n   }\n\n\n   /**\n    * Create a Matrix object filled with zeros.\n    *\n    * @param {number} nrows - number of rows.\n    * @param {number} ncols - number of columns.\n    *\n    * @returns {Matrix} the generated matrix.\n    *\n    */\n   static zeros(nrows, ncols) {\n\n      if (ncols === undefined) {\n         ncols = nrows;\n      }\n\n      return new Matrix(new Float64Array(nrows * ncols), nrows, ncols);\n   }\n\n\n   /**\n    * Create a Matrix object filled with ones.\n    *\n    * @param {number} nrows - number of rows.\n    * @param {number} ncols - number of columns.\n    *\n    * @returns {Matrix} the generated matrix.\n    *\n    */\n   static ones(nrows, ncols) {\n      return Matrix.fill(1, nrows, ncols);\n   }\n\n   /**\n    * Create a Matrix object filled with a manual value.\n    *\n    * @param {number} v - value to fill the matrix with.\n    * @param {number} nrows - number of rows.\n    * @param {number} ncols - number of columns.\n    *\n    * @returns {Matrix} the generated matrix.\n    *\n    */\n   static fill(v, nrows, ncols) {\n\n      if (ncols === undefined) {\n         ncols = nrows;\n      }\n\n      const out = new Float64Array(nrows * ncols);\n      for (let i = 0; i < out.length; i++) {\n         out[i] = v;\n      }\n\n      return new Matrix(out, nrows, ncols);\n   }\n\n\n   /**\n    * Create a matrix by applying function to all possible pairs of values from two vectors.\n    *\n    * @param {Array|Vector} x - vector with values.\n    * @param {Array|Vector} y - vector with values.\n    * @param {function} fun - function of two arguments which returns a single value.\n    *\n    * @returns {Matrix}\n    */\n   static outer(x, y, fun) {\n\n      if (Array.isArray(x)) {\n         x = vector(x);\n      }\n\n      if (Array.isArray(y)) {\n         y = vector(y);\n      }\n\n      if (!isvector(x)) {\n         throw Error('Matrix.outer: parameter \"x\" must be a vector or an array with numbers.');\n      }\n\n      if (!isvector(y)) {\n         throw Error('Matrix.outer: parameter \"y\" must be a vector or an array with numbers.');\n      }\n\n      const out = Matrix.zeros(x.length, y.length);\n      for (let c = 0; c < y.length; c++) {\n         const yv = y.v[c]\n         const outc = out.getcolref(c + 1);\n         for (let r = 0; r < x.length; r++) {\n            outc[r] = fun(x.v[r], yv);\n         }\n      }\n\n      return out;\n   }\n\n\n   /**\n    * Parse string with data from a CSV file and create a matrix with values.\n    *\n    * @param {string} strData - string with all data from the CSV file.\n    * @param {string} sep - symbols used for separation of values (by default \",\").\n    * @param {boolean} hasHeader - logical, if first row must be treated as header or not.\n    * @param {boolean} hasLabels - logical, if first column must be treated as object labels or not.\n    *\n    *\n    * @returns {Object} JSON containing matrix with parsed values, header, values and decimal separators.\n    */\n   static parseCSV(strData, sep, hasHeader, hasLabels) {\n\n\n      // function which returns true if at least one value in array can not be parsed to float\n      function hasNaN(vec) {\n         return vec.some(v => Number.isNaN(Number.parseFloat(v.trim())));\n      }\n\n      // set default separator symbol\n      if (sep === undefined) {\n         sep = \",\";\n      }\n\n      // setup decimal separator\n      const dec = sep === \";\" ? \",\" : \".\";\n\n      // remove BOM symbol if any\n      strData = strData.replace(/^\\uFEFF/gm, \"\").replace(/^\\u00EF?\\u00BB\\u00BF/gm,\"\");\n\n      // remove \\r symbols\n      strData = strData.replace(/\\r/gm, \"\");\n\n      // split string with data values into array of rows\n      let rows = strData.split(/\\n/);\n\n      // check if the first row contains header\n      let header = [];\n      let startRow = 0;\n      const firstRow = rows[0].split(sep);\n      if (hasHeader || (hasHeader === undefined && hasNaN(firstRow))) {\n         header = firstRow;\n         startRow = 1;\n      }\n\n      // filter empty rows out\n      rows = rows.filter(v => v.trim().length > 1);\n\n      // check if first column contains labels\n      let labels = [];\n      let startColumn = 0;\n      if (hasLabels) {\n         startColumn = 1;\n      }\n\n      // number of rows and columns in future matrix\n      const nrows = rows.length - startRow;\n      const ncols = firstRow.length - startColumn;\n\n\n      if (nrows < 1) {\n         throw Error(\"Data file should contain at least 1 row with values.\");\n      }\n\n      if (ncols < 1) {\n         throw Error(\"Data file should contain at least 1 column with values.\");\n      }\n\n      // set rows of data as columns of matrix - it is faster\n      const data = Matrix.zeros(ncols, nrows);\n\n      // find symbol used for decimals separator\n      for (let r = startRow; r < nrows + startRow; r++) {\n\n         // parsing: trim spaces and replace non-numbers with dot (.)\n         const rowValuesAll = rows[r].split(sep)\n\n         let rowValues;\n         if (hasLabels) {\n            labels[r - startRow] = rowValuesAll[0];\n            rowValues = rowValuesAll.slice(1).map(v => Number.parseFloat(v.trim().replace(dec, \".\")));\n         } else {\n            rowValues = rowValuesAll.map(v => Number.parseFloat(v.trim().replace(dec, \".\")));\n         }\n\n         if (rowValues.some(v => Number.isNaN(v))) {\n            throw Error(\"Some of the values can not be converted to numbers, check your CSV file and try again.\");\n         }\n\n         if (rowValues.length != ncols) {\n            throw Error(\"Wrong number of values in row #\" + r);\n         }\n\n         data.v.set(new Float64Array(rowValues), (r - startRow) * ncols);\n      }\n\n      return {values: data.t(), header: header, labels: labels, sep:sep, dec:dec};\n   }\n\n}\n\n\n/**\n * Return 'true' of 'x' is a Vector object, 'false' otherwise.\n *\n * @param {any} x - any object or variable.\n *\n * @returns {boolean}\n *\n */\nexport function isvector(x) {\n   return x && x.constructor === Vector;\n}\n\n\n/**\n * Create a Vector object from array of values.\n *\n * @param {number[]} values - array with values.\n *\n * @returns {Vector} the vector.\n *\n */\nexport function vector(values) {\n   return new Vector(new Float64Array(values));\n}\n\n\n/** Class representing a vector */\nexport class Vector {\n\n   static valuesConstructor = Float64Array;\n\n   /**\n    * Constructor for a Vector object.\n    *\n    * @param {Float64Array} values - typed array with values.\n    *\n    * @returns {Vector} a Vector object (see description).\n    * @constructor\n    *\n    * @description  Create a vector of values. Vector is represented by an object with two\n    * fields. Field 'v' is a typed Float64Array with values. The second field, 'length', is\n    * the length of the vector.\n    *\n    */\n   constructor(values) {\n\n      if (!ArrayBuffer.isView(values) || values.constructor !== Float64Array) {\n         throw Error('Vector: parameter \"values\" must be Float64Array.')\n      }\n\n      this.v = values;\n      this.length = values.length;\n   }\n\n   /**\n    * Returns a vector of indices for values for which function ´fun´ returns true.\n    *\n    * @param {function} fun - function with two arguments (value and its index).\n    *\n    * @returns {Index} a vector of indices.\n    */\n   which(fun) {\n      const out = new Index.valuesConstructor(this.length);\n      let n = 0;\n      for (let i = 0; i < this.length; i++) {\n         if (fun(this.v[i], i)) {\n            out[n] = i + 1;\n            n = n + 1;\n         }\n      }\n\n      return new Index(out.subarray(0, n));\n   }\n\n\n   /**\n    * Returns a subset of values for which function ´fun´ returns true.\n    *\n    * @param {function} fun - function with two arguments (value and its index).\n    *\n    * @returns {Vector} a subset.\n    */\n   filter(fun) {\n      const out = new Vector.valuesConstructor(this.length);\n      let n = 0;\n      for (let i = 0; i < this.length; i++) {\n         if (fun(this.v[i], i)) {\n            out[n] = this.v[i];\n            n = n + 1;\n         }\n      }\n\n      return new Vector(out.subarray(0, n));\n   }\n\n\n   /**\n    * Shuffles values in vector using Fisher–Yates algorithm.\n    *\n    * @returns {Vector} vector with shuffled values.\n    */\n   shuffle() {\n      return new Vector(_shuffle(this.v));\n   }\n\n\n   /**\n    * Sorts values in a vector.\n    *\n    * @param {boolean} decreasing - if true, values will be sorted in decreasing order, otherwise in increasing.\n    *\n    * @returns {Vector} vector with sorted values\n    *\n    */\n   sort(decreasing) {\n      return new Vector(_sort(this.v, decreasing));\n   }\n\n   /**\n    * Sorts values in a vector and return indices of sorted values.\n    *\n    * @param {boolean} decreasing - if true, values will be sorted in decreasing order, otherwise in increasing.\n    *\n    * @returns {Index} vector with sorted values\n    *\n    */\n   sortind(decreasing) {\n      return new Index(_sortind(this.v, decreasing));\n   }\n\n\n   /**\n    * Replicate a vector 'n' times.\n    *\n    * @param {number} n - how many times the vector must be replicated.\n    *\n    * @returns {Vector} a vector with replicated values.\n    *\n    */\n   rep(n) {\n      return _rep(this, n);\n   }\n\n\n   /**\n    * Replicate each value in the vector 'n' times.\n    *\n    * @param {number} n - how many times every value must be replicated.\n    *\n    * @returns {Vector} a vector with replicated values.\n    *\n    */\n   repeach(n) {\n      return _repeach(this, n);\n   }\n\n\n   /**\n    * Replace values of vectors specified by 'ind' with values from another vector.\n    *\n    * @param {Vector} - vector with values to use as replacement.\n    * @param {number | Array | Index} ind - indices (as number or vector of indices).\n    *\n    * @description Indices must start from 1. Empty array ([]) tells function to use\n    * all elements. Length of vector 'x' should correspond to the\n    * number of indices.\n    *\n    * Function does not create a new vector but changes the current one.\n    *\n    * @returns {Vector} the vector with replaced values.\n    *\n    */\n   replace (x, ind) {\n\n      if (typeof(ind) === 'number') {\n         ind = [ind];\n      }\n\n      if (ind.length === 0) {\n         ind = Index.seq(1, this.length);\n      }\n\n      if (!isindex(ind)) {\n         ind = index(ind);\n      }\n\n      const n = ind.length;\n\n      if (min(ind) < 1 || max(ind) > this.length) {\n         throw Error('Vector.replace: indices do not match the lenght of the vector.');\n      }\n\n      if (x.length !== n) {\n         throw Error('Vector.replace: length of \"x\" does not match the indices.');\n      }\n\n      for (let i = 0; i < ind.length; i++) {\n         const r = ind.v[i];\n         this.v[r - 1] = x.v[i];\n      }\n\n      return this;\n   }\n\n\n   /**\n    * Create a subset of a vector using vector with indices.\n    *\n    * @param {number|Array|Index} ind - single index or vector with indices (must start from 1, not 0).\n    *\n    * @returns {Vector} a subset.\n    */\n   subset(ind) {\n\n      if (typeof(ind) === 'number') {\n         ind = index([ind]);\n      }\n\n      if (Array.isArray(ind)) {\n         ind = typeof(ind[0]) === 'boolean' ? Index.bool2ind(ind) : index(ind);\n      }\n\n      if (!isindex(ind)) {\n         throw Error('subset: parameter \"ind\" must be number, array of instance of class Index.');\n      }\n\n      const n = ind.length;\n      const out = Vector.zeros(n);\n\n      for (let i = 0; i < n; i++) {\n\n         if (ind.v[i] < 1) {\n            throw Error('subset: indices must start with 1 (not 0).');\n         }\n\n         if (ind.v[i] > this.length) {\n            throw Error('subset: index exceeds the length of the vector.');\n         }\n\n         out.v[i] = this.v[ind.v[i] - 1];\n      }\n\n      return out;\n   }\n\n\n   /**\n    * Create a subset of a vector values which are located between positions 'start' and 'end' (both included).\n    *\n    * @param {number} start - index of value to start (must start from 1, not 0).\n    * @param {number} end - index of value to end.\n    *\n    * @returns {Vector} a subset.\n    */\n   slice(start, end) {\n\n      if (start === null) {\n         start = 1;\n      }\n\n      if (end === null || end === undefined) {\n         end = this.length;\n      }\n\n      if (start < 1) {\n         throw Error('slice: indices must start with 1 (not 0).');\n      }\n\n      if (end > this.length) {\n         throw Error('slice: index exceeds the length of the vector.');\n      }\n\n      if (end < start) {\n         throw Error('slice: \"end\" must not be smaller than \"start\".');\n      }\n\n      return new Vector(this.v.slice(start - 1, end));\n   }\n\n\n   /**\n    * Make a deep copy of the vector.\n    */\n   copy() {\n      return new Vector(this.v.slice());\n   }\n\n\n   /**\n    * Compute a dot product with another vector.\n    *\n    * @param {Vector} x - a vector.\n    *\n    * @returns {number} result of the product.\n    *\n    */\n   dot(x) {\n\n      if (x === undefined) {\n         x = this;\n      }\n\n      return _dot(this.v, x.v, 1, this.length, x.length, 1)[0];\n   }\n\n\n   /**\n    * Does mathematical operation between vector values and either values from another vector or a number.\n    *\n    * @param {number|Vector} x - a vector or a number to operate with.\n    * @param {function} fun - function to apply.\n    *\n    * @returns {Vector} result of operation.\n    *\n    */\n   op(x, fun) {\n      if (isvector(x)) {\n         return new Vector(_opvv(this.v, x.v, fun));\n      }\n\n      if (isnumber(x)) {\n         return new Vector(_opvn(this.v, x, fun));\n      }\n\n      throw new Error('op: argument \"x\" must be a vector or a number.');\n   }\n\n\n   /**\n    * Add a number or values from another vector.\n    *\n    * @param {number|Vector} x - a vector or a number to sum the values with.\n    *\n    * @returns {Vector} result of operation.\n    *\n    */\n   add(x) {\n      return this.op(x, (a, b) => a + b);\n   }\n\n\n   /**\n    * Subtract a number or values from another vector.\n    *\n    * @param {number|Vector} x - a vector or a number to subtract the values of.\n    *\n    * @returns {Vector} result of operation.\n    *\n    */\n   subtract(x) {\n      return this.op(x, (a, b) => a - b);\n   }\n\n\n   /**\n    * Multiply to a number or to values from another vector.\n    *\n    * @param {number|Vector} x - a vector or a number to multiply the values to.\n    *\n    * @returns {Vector} result of operation.\n    *\n    */\n   mult(x) {\n      return this.op(x, (a, b) => a * b);\n   }\n\n\n   /**\n    * Divide to a number or to values from another vector.\n    *\n    * @param {number|Vector} x - a vector or a number to divide the values to.\n    *\n    * @returns {Vector} result of operation.\n    *\n    */\n   divide(x) {\n      return this.op(x, (a, b) => a / b);\n   }\n\n\n   /**\n    * Apply a function to each value of the vector.\n    *\n    * @param {function} fun - function to apply (should take one value and return one value).\n    *\n    * @returns {Vector} the transformed vector.\n    */\n   apply(fun) {\n\n      const n = this.v.length;\n      const out = Vector.zeros(n);\n      for (let i = 0; i < n; i++) {\n         out.v[i] = fun(this.v[i]);\n      }\n\n      return out;\n   }\n\n\n   // Static methods //\n\n\n   /**\n    * Concatenates numbers, arrays and vectors into a single vector.\n    *\n    * @param  {...any} args - numbers, arrays or/and vectors.\n    *\n    * @returns {Vector}\n    *\n    */\n   static c(...args) {\n\n      if (args.length === 1) return args[0];\n\n      const l = args.reduce( (acc, cur) => acc + (typeof(cur) === 'number' ? 1 : cur.length), 0);\n      const out = new Vector.valuesConstructor(l);\n\n      let start = 0;\n      for (const a of args) {\n\n         if (typeof(a) === 'number') {\n            out[start] = a;\n            start += 1;\n         } else {\n            out.set(isvector(a) ? a.v : new Vector.valuesConstructor(a), start);\n            start += typeof(a) === 'number' ? 1 : a.length;\n         }\n      }\n\n      return new Vector(out);\n   }\n\n\n   /**\n    * Generate sequence of values.\n    *\n    * @param {number} start - first value.\n    * @param {number} end - last value.\n    * @param {number} [by=1] - increment between values.\n    *\n    * @returns {Vector} vector with sequence values.\n    *\n    */\n   static seq(start, end, by) {\n      return _seq(start, end, by, Vector)\n   }\n\n\n   /**\n    * Create a vector with random values from normal distribution.\n    *\n    * @param {number} length - number of values.\n    * @param {number} [mu=0] - mean (expected) value.\n    * @param {number} [sigma=1] - standard deviation.\n    *\n    * @returns {Vector} vector with values.\n    *\n    */\n   static randn(length, mu, sigma) {\n      return rnorm(length, mu, sigma);\n   }\n\n\n   /**\n    * Create a vector with random values from uniform distribution [a, b].\n    *\n    * @param {number} length - number of values.\n    * @param {number} [a=0] - smallest possible value.\n    * @param {number} [b=1] - largest possible value.\n    *\n    * @returns {Vector} vector with values.\n    *\n    */\n   static rand(length, a, b) {\n      return runif(length, a, b);\n   }\n\n\n   /**\n    * Create a Vector object filled with zeros.\n    *\n    * @param {number} n - length of the vector\n    *\n    * @returns {Vector} the generated vector.\n    *\n    */\n   static zeros(n) {\n      return new Vector(new Vector.valuesConstructor(n));\n   }\n\n\n   /**\n    * Create a Vector object filled with ones.\n    *\n    * @param {number} n - length of the vector.\n    *\n    * @returns {Vector} the generated vector.\n    *\n    */\n   static ones(n) {\n      return Vector.fill(1, n);\n   }\n\n\n  /**\n    * Create a Vector object filled with a repeated value.\n    *\n    * @param {number} v - value to fill the vector with.\n    * @param {number} n - length of the vector.\n    *\n    * @returns {Vector} the generated vector.\n    *\n    */\n   static fill(v, n) {\n\n      const out = new Vector.valuesConstructor(n);\n      for (let i = 0; i < out.length; i++) {\n         out[i] = v;\n      }\n\n      return new Vector(out);\n   }\n\n}\n\n\n/**\n * Return 'true' of 'x' is an Index object, 'false' otherwise.\n *\n * @param {any} x - any object or variable.\n *\n * @returns {boolean}\n *\n */\nexport function isindex(x) {\n   return x.constructor === Index;\n}\n\n\n/**\n * Create an Index object from array of values.\n *\n * @param {number[]} values - array with values.\n *\n * @returns {Index} the vector.\n *\n */\nexport function index(values) {\n   return new Index(new Int32Array(values));\n}\n\n\n/** Class representing a vector with indices */\nexport class Index {\n\n   static valuesConstructor = Int32Array;\n\n   /**\n    * Constructor for an Index object.\n    *\n    * @param {Int32Array} values - typed array with index values.\n    *\n    * @returns {Index} an Index object (see description).\n    * @constructor\n    *\n    * @description  Create a vector of values to be used as indices (e.g. for subsetting,\n    * counting, etc.). Index is represented by an object with two fields. Field 'v' is a typed\n    * Int32Array with index values. The second field, 'length', is the length of the vector.\n    *\n    */\n   constructor(values) {\n\n      if (!ArrayBuffer.isView(values) || values.constructor !== Int32Array) {\n         throw Error('Index: parameter \"values\" must be Int32Array.')\n      }\n\n      this.v = values;\n      this.length = values.length;\n   }\n\n\n   /**\n    * Returns a vector of indices for values for which function ´fun´ returns true.\n    *\n    * @param {function} fun - function with two arguments (value and its index).\n    *\n    * @returns {Index} a vector of indices.\n    */\n   which(fun) {\n      const out = new Index.valuesConstructor(this.length);\n      let n = 0;\n      for (let i = 0; i < this.length; i++) {\n         if (fun(this.v[i], i)) {\n            out[n] = i + 1;\n            n = n + 1;\n         }\n      }\n\n      return new Index(out.subarray(0, n));\n   }\n\n\n   /**\n    * Returns a subset of indices for which function ´fun´ returns true.\n    *\n    * @param {function} fun - function with two arguments (value and its index).\n    *\n    * @returns {Index} a subset.\n    */\n   filter(fun) {\n      const out = new Index.valuesConstructor(this.length);\n      let n = 0;\n      for (let i = 0; i < this.length; i++) {\n         if (fun(this.v[i], i)) {\n            out[n] = this.v[i];\n            n = n + 1;\n         }\n      }\n\n      return new Index(out.subarray(0, n));\n   }\n\n\n   /**\n    * Shuffle indices.\n    *\n    * @returns {Index} vector with shuffled indices.\n    */\n   shuffle() {\n      return new Index(_shuffle(this.v));\n   }\n\n\n   /**\n    * Sorts indices.\n    *\n    * @param {boolean} decreasing - if true, values will be sorted in decreasing order, otherwise in increasing.\n    *\n    * @returns {Index} vector with sorted indices.\n    *\n    */\n   sort(decreasing) {\n      return new Index(_sort(this.v, decreasing));\n   }\n\n   /**\n    * Sorts indices and return indices of sorted values.\n    *\n    * @param {boolean} decreasing - if true, values will be sorted in decreasing order, otherwise in increasing.\n    *\n    * @returns {Index} vector with sorted indices.\n    *\n    */\n   sortind(decreasing) {\n      return new Index(_sortind(this.v, decreasing));\n   }\n\n   /**\n    * Replicate the index object 'n' times.\n    *\n    * @param {number} n - how many times the index must be replicated.\n    *\n    * @returns {Index} index with replicated values.\n    *\n    */\n   rep(n) {\n      return _rep(this, n);\n   }\n\n\n   /**\n    * Replicate each index in the index 'n' times.\n    *\n    * @param {number} n - how many times every value must be replicated.\n    *\n    * @returns {Index} an index object with replicated values.\n    *\n    */\n   repeach(n) {\n      return _repeach(this, n);\n   }\n\n   /**\n    * Create a subset of a index using another vector with indices.\n    *\n    * @param {number|Array|Index} ind - single index or vector with indices (must start from 1, not 0).\n    *\n    * @returns {Index} a subset.\n    */\n   subset(ind) {\n\n     if (typeof(ind) === 'number') {\n         ind = index([ind]);\n      }\n\n      if (Array.isArray(ind)) {\n         ind = index(ind);\n      }\n\n      if (!isindex(ind)) {\n         throw Error('subset: parameter \"ind\" must be number, array of instance of class Index.');\n      }\n\n      const n = ind.length;\n      const out = new Index.valuesConstructor(n);\n\n      for (let i = 0; i < n; i++) {\n\n         if (ind.v[i] < 1) {\n            throw Error('subset: indices must start with 1 (not 0).');\n         }\n\n         if (ind.v[i] > this.length) {\n            throw Error('subset: index exceeds the length of the vector.');\n         }\n\n         out[i] = this.v[ind.v[i] - 1];\n      }\n\n      return new Index(out);\n   }\n\n\n   /**\n    * Create a subset of a vector of indices which are located between positions 'start' and 'end' (both included).\n    *\n    * @param {number} start - index of value to start (must start from 1, not 0).\n    * @param {number} end - index of value to end.\n    *\n    * @returns {Index} a subset.\n    */\n   slice(start, end) {\n\n      if (start === null) {\n         start = 1;\n      }\n\n      if (end === null || end === undefined) {\n         end = this.length;\n      }\n\n      if (start < 1) {\n         throw Error('slice: indices must start with 1 (not 0).');\n      }\n\n      if (end > this.length) {\n         throw Error('slice: index exceeds the length of the vector.');\n      }\n\n      if (end < start) {\n         throw Error('slice: \"end\" must not be smaller than \"start\".');\n      }\n\n      return new Index(this.v.slice(start - 1, end));\n   }\n\n\n   // Static methods //\n\n   /**\n    * Generate sequence of indices.\n    *\n    * @param {number} start - first value.\n    * @param {number} end - last value.\n    * @param {number} [by=1] - increment between values.\n    *\n    * @returns {Index} object with sequence values.\n    *\n    */\n   static seq(start, end, by) {\n      return _seq(start, end, by, Index);\n   }\n\n\n   /**\n    * Create an Index object filled with ones.\n    *\n    * @param {number} n - length of the vector.\n    *\n    * @returns {Index} the generated vector of indices.\n    *\n    */\n   static ones(n) {\n      return Index.fill(1, n);\n   }\n\n\n  /**\n    * Create an Index object filled with a repeated value.\n    *\n    * @param {number} v - value to fill the index vector with (must be integer).\n    * @param {number} n - length of the vector.\n    *\n    * @returns {Vector} the generated vector of indices.\n    *\n    */\n   static fill(v, n) {\n\n      const out = new Index.valuesConstructor(n);\n      for (let i = 0; i < out.length; i++) {\n         out[i] = v;\n      }\n\n      return new Index(out);\n   }\n\n\n   /**\n    * Convert array of logical values to vector of indices.\n    *\n    * @param {Array} x - array of logical values.\n    *\n    * @returns {Index} vector of indices where x is true.\n    *\n    */\n   static bool2ind(x) {\n\n      let n = 0;\n      const out = new Index.valuesConstructor(x.length);\n\n      for (let i = 0; i < x.length; i++) {\n         if (x[i]) {\n            out[n] = i + 1;\n            n = n + 1;\n         }\n      }\n\n      return new Index(out.subarray(0, n));\n   }\n}\n\n/**\n * Return 'true' of 'x' is an Factor object, 'false' otherwise.\n *\n * @param {any} x - any object or variable.\n *\n * @returns {boolean}\n *\n */\nexport function isfactor(x) {\n   return x.constructor === Factor;\n}\n\n/**\n * Create a factor object from Array with values.\n *\n * @param {Array} x - array with values.\n *\n * @return {Factor} returns instance of Factor object.\n *\n */\nexport function factor(x) {\n   const n = x.length;\n   const values = new Factor.valuesConstructor(n);\n   const labels = [];\n\n   for (let i = 0; i < n; i++) {\n      const j = labels.findIndex(v => v === x[i]);\n      if (j < 0) {\n         // value is new\n         labels.push(x[i])\n         values[i] = labels.length - 1;\n      } else {\n         // value already present\n         values[i] = j;\n      }\n   }\n\n   return new Factor(values, labels)\n}\n\n\n/** Class representing a factor — vector with categorical variables */\nexport class Factor {\n\n   static valuesConstructor = Uint8Array;\n\n   /**\n    * Constructor for a Factor object.\n    *\n    * @param {Uint8Array} values - vector with indices for each category item.\n    * @param {Array} labels - array with labels for each category.\n    *\n    * @returns {Factor} class object (see description).\n    * @constructor\n    *\n    */\n   constructor(values, labels) {\n\n      if (values.constructor !== Factor.valuesConstructor) {\n         throw Error('Factor: wrong class for parameter \"values\".')\n      }\n\n      if (values.nrows < 1 || values.ncols < 1) {\n         throw Error('Factor: parameter \"values\" must have at least one row and one column.')\n      }\n\n      if (!labels || !Array.isArray(labels)) {\n         throw Error('Factor: parameter \"labels\" must be an array.')\n      }\n\n      this.v = values;\n      this.length = values.length;\n      this.labels = labels.map(v => v.toString());\n      this.nlevels = this.labels.length;\n   }\n\n   /**\n    * Return vector of indices corresponding to location of a particular category.\n    *\n    * @param {string} value - name (label) of the category to find.\n    *\n    * @returns {Index} vector with indices (starts from 1).\n    */\n   which(value) {\n      const ind = this.labels.findIndex((v, i) => v === value);\n      const out = new Index.valuesConstructor(this.length);\n      let k = 0;\n      for (let i = 0; i < this.length; i++) {\n         if (this.v[i] === ind) {\n            out[k] = i + 1;\n            k += 1;\n         }\n      }\n\n      return new Index(out.slice(0, k))\n   }\n}\n\n\n\n/***********************************************/\n/*    Generic methods                          */\n/***********************************************/\n\n/**\n * Generate sequence of values for vector or index.\n *\n * @param {number} start - first value.\n * @param {number} end - last value.\n * @param {number} [by=1] - increment between values.\n * @param {class} classRef - class reference\n *\n * @returns {Object} object with sequence values.\n *\n */\nfunction _seq(start, end, by, classRef) {\n\n   // by default increment is unit\n   if (by === undefined) by = (start <= end) ? 1 : -1;\n\n   // compute length of sequence\n   const length = Math.floor((end - start) / by) + 1;\n\n   if (length < 1) {\n      throw Error('seq: wrong combination of parameters.');\n   }\n\n   const x = new classRef.valuesConstructor(length);\n   for (let i = 0; i < length; i++) {\n      x[i] = start + i * by;\n   }\n\n   return new classRef(x);\n}\n\n\n/**\n * Replicate object 'n' times.\n *\n * @param {Object} obj - object to replicate (Vector or Index).\n * @param {number} n - how many times the vector must be replicated.\n *\n * @returns {Object} an object with replicated values.\n *\n */\nfunction _rep(obj, n) {\n\n   const l = obj.length * n;\n   const out = new obj.constructor.valuesConstructor(l);\n   for (let i = 1; i <= n; i++) {\n      for (let j = 0; j < obj.length; j++) {\n         out[(i - 1) * obj.length + j] = obj.v[j];\n      }\n   }\n\n   return new obj.constructor(out);\n}\n\n\n/**\n * Replicate each value in the object 'n' times.\n *\n * @param {Object} obj - object to replicate (Vector or Index).\n * @param {number} n - how many times every value must be replicated.\n *\n * @returns {Object} an object with replicated values.\n *\n */\nfunction _repeach(obj, n) {\n\n   if (n < 1 || Math.round(n) !== n) {\n      throw Error('rep: parameter \"n\" must be an integer number > 1.');\n   }\n\n   const l = obj.length * n;\n   const out = new obj.constructor.valuesConstructor(l);\n   for (let j = 0; j < obj.length; j++) {\n      for (let i = 0; i < n; i++) {\n         out[j * n + i] = obj.v[j];\n      }\n   }\n\n   return new obj.constructor(out);\n}\n\n\n/**\n * Does an arithmetic operation for individual values from two arrays.\n *\n * @param {Array|Float64Array} v1 - the first array.\n * @param {Array|Float64Array} v2 - the second array.\n * @param {function} fun - function to use.\n *\n * @description the function must take two numbers and return one.\n *\n * @returns array of the same type as v1 and v2.\n */\nfunction _opvv(v1, v2, fun) {\n\n   if (v1.length !== v2.length) {\n      throw new Error(\"_opvv: arrays sizes do not match.\");\n   }\n\n   if (v1.constructor !== v2.constructor) {\n      throw new Error(\"_opvv: array types do not match.\");\n   }\n\n   const out = new v1.constructor(v1.length);\n   for (let i = 0; i < v1.length; i++) {\n      out[i] = fun(v1[i], v2[i]);\n   }\n\n   return out;\n}\n\n\n\n/**\n * Does an arithmetic operation for individual value from an array and a number.\n *\n * @param {Array|Float64Array} v1 - an array.\n * @param {number} v2 - a number.\n * @param {function} fun - function to use.\n *\n * @description the function must take two numbers and return one.\n *\n * @returns array of the same type as v1.\n */\nfunction _opvn(v1, v2, fun) {\n\n   const out = new v1.constructor(v1.length);\n   for (let i = 0; i < v1.length; i++) {\n      out[i] = fun(v1[i], v2);\n   }\n\n   return out;\n}\n\n\n/**\n * Generic function for taking a dot product of two matrices, X and Y, represented as vectors\n * @param {TypedArray} xv - vector with values from X\n * @param {TypedArray} yv - vector with values from Y\n * @param {number} nrx - number of rows in X\n * @param {number} ncx - number of columns in X\n * @param {number} nry - number of rows in Y\n * @param {number} ncy - number of columns in Y\n *\n * @returns {TypedArray} - vector with result of the product\n */\nexport function _dot(xv, yv, nrx, ncx, nry, ncy) {\n\n   if (ncx !== nry) {\n      throw Error('_dot: matrix dimensions do not much.');\n   }\n\n   // create vector for the product\n   const nrows = nrx;\n   const ncols = ncy;\n   const ninner = ncx;\n   const out = new xv.constructor(nrows * ncols);\n\n   for (let c = 0; c < ncols; c++) {\n      const yc = yv.subarray(c * nry, (c + 1) * nry)\n      const outc = out.subarray(c * nrows, (c + 1) * nrows);\n\n      for (let i = 0; i < ninner; i++) {\n         const yci = yc[i];\n         const xr = xv.subarray(i * nrx, (i + 1) * nrx)\n         for (let r = 0; r < nrows; r++) {\n            outc[r] += xr[r] * yci;\n         }\n      }\n   }\n\n   return out;\n}\n\n\n/**\n * Shuffles values in vector x using Fisher–Yates algorithm.\n *\n * @param {Arrat|TypedArray} x - a vector with values.\n *\n * @returns {Array|TypedArray} ector with shuffled values.\n *\n */\nexport function _shuffle(x) {\n\n  let y = x.slice();\n  let n = y.length;\n  let t, i;\n\n  while (n) {\n    i = Math.floor(Math.random() * n--);\n    t = y[n];\n    y[n] = y[i];\n    y[i] = t;\n  }\n\n  return y;\n}\n\n\n/**\n * Sorts values in a vector.\n *\n * @param {Array|TypedArray} x - vector with values.\n * @param {boolean} decreasing - should order be decreasing (true) or increasing (false).\n *\n * @returns {Array} array with two vectors: sorted values and indices of the sorted values.\n *\n */\nexport function _sort(x, decreasing = false) {\n   return decreasing ? x.slice().sort((a, b) => b - a) : x.slice().sort((a, b) => a - b);\n}\n\n\n/**\n * Sorts values in a vector.\n *\n * @param {Array|TypedArray} x - vector with values.\n * @param {boolean} decreasing - should order be decreasing (true) or increasing (false).\n *\n * @returns {Array} array with two vectors: sorted values and indices of the sorted values.\n *\n */\nexport function _sortind(x, decreasing = false) {\n   const ind = Index.seq(1, x.length).v;\n   return decreasing ? ind.sort((a, b) => x[b - 1] - x[a - 1]) : ind.sort((a, b) => x[a - 1] - x[b - 1]);\n}\n","/**************************************************/\n/* Methods for PCA and PCVPCA based on wasm code  */\n/**************************************************/\n\nimport { ismatrix, Matrix } from 'mdatools/arrays';\n\n\n/**\n * Returns length of array with PCA results.\n *\n * @param {number} nrows number of rows in a dataset (without outliers).\n * @param {number} ncomp number of components in the model.\n * @param {number} ncols number of columns in a dataset (without excluded variables).\n *\n * @returns {number} the length of the results array.\n */\nexport function pca_getreslength(nrows, ncomp, ncols) {\n\n   // Structure of PCA results:\n   // - T: nr x ncomp\n   // - H: nr x ncomp\n   // - Q: nr x ncomp\n   // - expvar: 1 x ncomp\n   // - Fc: nr x ncomp\n   // - Fr: nr x ncomp\n\n   // - G: nc x ncomp\n   // - R: nc x ncomp\n   // - Ic: nc x ncomp\n   // - Ir: nc x ncomp\n\n   return (5 * nrows * ncomp) + ncomp + (4 * ncols * ncomp);\n}\n\n\n/**\n * Returns length of array with PCA model.\n *\n * @param {number} ncols number of columns in calibration set (without excluded).\n * @param {number} ncomp number of components\n *\n * @returns {number} the length of the model array.\n */\nexport function pca_getmodellength(ncols, ncomp) {\n\n   // Structure of PCA model:\n   // - nc and ncomp: 2\n   // - mX: 1 x ncols\n   // - sX: 1 x ncols\n   // - P: ncols x ncomp\n   // - eigenvals: 1 x ncomp\n   // - cq0: 1 x ncomp\n   // - cNq: 1 x ncomp\n   // - rq0: 1 x ncomp\n   // - rNq: 1 x ncomp\n   // - ch0: 1 x ncomp\n   // - cNh: 1 x ncomp\n   // - rh0: 1 x ncomp\n   // - rNh: 1 x ncomp\n\n   // - cr0: 1 x ncomp\n   // - cNr: 1 x ncomp\n   // - rr0: 1 x ncomp\n   // - rNr: 1 x ncomp\n   // - cg0: 1 x ncomp\n   // - cNg: 1 x ncomp\n   // - rg0: 1 x ncomp\n   // - rNg: 1 x ncomp\n\n   return 2 + 2 * ncols + ncols * ncomp + 17 * ncomp;\n}\n\n\n/**\n * Returns part of PCA model array for given outcome.\n *\n * @param {TypedArray} m array with PCA model.\n * @param {string} name name of the outcome (e.g. 'mX', 'sX', 'loadings', etc.).\n * @param {number} a component number (for loadings).\n *\n * @returns {TypedArray} array with outcomes (by reference).\n */\nexport function pcamodel_get(m, name, a) {\n\n   if (!m || !m.class || !m.class.includes('pcamodel')) {\n      throw new Error('pcamodel_get: parameter \"m\" must be JSON with PCA model.');\n   }\n\n   const ncols = m.ncols;\n   const ncomp = m.ncomp;\n   let offset, length;\n\n   switch(name) {\n      case 'mX':\n         offset = 2;\n         length = ncols;\n         break;\n      case 'sX':\n         offset = 2 + ncols;\n         length = ncols;\n         break;\n      case 'loadings':\n      case 'xloadings':\n         offset = 2 + 2 * ncols + (a - 1) * ncols;\n         length = ncols;\n         break;\n      case 'P':\n         offset = 2 + 2 * ncols;\n         length = a * ncols;\n         break;\n      case 'eigenvals':\n      case 'xeigenvals':\n         offset = 2 + 2 * ncols + ncols * ncomp;\n         length = ncomp;\n         break;\n      case 'cq0':\n         offset = 2 + 2 * ncols + ncols * ncomp + ncomp;\n         length = ncomp;\n         break;\n      case 'cNq':\n         offset = 2 + 2 * ncols + ncols * ncomp + 2 * ncomp;\n         length = ncomp;\n         break;\n      case 'rq0':\n         offset = 2 + 2 * ncols + ncols * ncomp + 3 * ncomp;\n         length = ncomp;\n         break;\n      case 'rNq':\n         offset = 2 + 2 * ncols + ncols * ncomp + 4 * ncomp;\n         length = ncomp;\n         break;\n      case 'ch0':\n         offset = 2 + 2 * ncols + ncols * ncomp + 5 * ncomp;\n         length = ncomp;\n         break;\n      case 'cNh':\n         offset = 2 + 2 * ncols + ncols * ncomp + 6 * ncomp;\n         length = ncomp;\n         break;\n      case 'rh0':\n         offset = 2 + 2 * ncols + ncols * ncomp + 7 * ncomp;\n         length = ncomp;\n         break;\n      case 'rNh':\n         offset = 2 + 2 * ncols + ncols * ncomp + 8 * ncomp;\n         length = ncomp;\n         break;\n      case 'cr0':\n         offset = 2 + 2 * ncols + ncols * ncomp + 9 * ncomp;\n         length = ncomp;\n         break;\n      case 'cNr':\n         offset = 2 + 2 * ncols + ncols * ncomp + 10 * ncomp;\n         length = ncomp;\n         break;\n      case 'rr0':\n         offset = 2 + 2 * ncols + ncols * ncomp + 11 * ncomp;\n         length = ncomp;\n         break;\n      case 'rNr':\n         offset = 2 + 2 * ncols + ncols * ncomp + 12 * ncomp;\n         length = ncomp;\n         break;\n      case 'cg0':\n         offset = 2 + 2 * ncols + ncols * ncomp + 13 * ncomp;\n         length = ncomp;\n         break;\n      case 'cNg':\n         offset = 2 + 2 * ncols + ncols * ncomp + 14 * ncomp;\n         length = ncomp;\n         break;\n      case 'rg0':\n         offset = 2 + 2 * ncols + ncols * ncomp + 15 * ncomp;\n         length = ncomp;\n         break;\n      case 'rNg':\n         offset = 2 + 2 * ncols + ncols * ncomp + 16 * ncomp;\n         length = ncomp;\n         break;\n\n      default:\n         throw Error('pcamodel_get: wrong outcome name.');\n   }\n\n   return m.v.subarray(offset, offset + length);\n}\n\n\n/**\n * Returns part of PCA result array for given outcome.\n *\n * @param {TypedArray} r array with PCA results.\n * @param {string} name name of the outcome (e.g. 'scores', 'hdist', 'qdist', 'expvar').\n * @param {number} a component number (for scores and distances).\n *\n * @returns {TypedArray} array with outcomes (by reference).\n */\nexport function pcares_get(r, name, a) {\n\n   if (!r || !r.class || !r.class.includes('pcares')) {\n      throw new Error('pcares_get: parameter \"r\" must be JSON with PCA results.');\n   }\n\n   const ncols = r.ncols;\n   const nrows = r.nrows;\n   const ncomp = r.ncomp;\n   let offset, length;\n\n   switch(name) {\n      case 'scores':\n      case 'xscores':\n         offset = (a - 1) * nrows;\n         length = nrows;\n         break;\n      case 'hdist':\n         offset = nrows * ncomp + (a - 1) * nrows;\n         length = nrows;\n         break;\n      case 'qdist':\n         offset = 2 * nrows * ncomp + (a - 1) * nrows;\n         length = nrows;\n         break;\n      case 'xcumexpvar':\n      case 'cumexpvar':\n         offset = 3 * nrows * ncomp;\n         length = ncomp;\n         break;\n      case 'fdistc':\n         offset = 3 * nrows * ncomp + ncomp + (a - 1) * nrows;\n         length = nrows;\n         break;\n      case 'fdistr':\n         offset = 4 * nrows * ncomp + ncomp + (a - 1) * nrows;\n         length = nrows;\n         break;\n\n      case 'gdist':\n         offset = 5 * nrows * ncomp + ncomp + (a - 1) * ncols;\n         length = ncols;\n         break;\n      case 'rdist':\n         offset = (5 * nrows * ncomp) + ncomp + (ncols * ncomp) + (a - 1) * ncols;\n         length = ncols;\n         break;\n      case 'idistc':\n         offset = (5 * nrows * ncomp) + ncomp + (2 * ncols * ncomp) + (a - 1) * ncols;\n         length = ncols;\n         break;\n      case 'idistr':\n         offset = (5 * nrows * ncomp) + ncomp + (3 * ncols * ncomp) + (a - 1) * ncols;\n         length = ncols;\n         break;\n\n      default:\n         throw new Error('pcares_get: wrong outcome name.');\n   }\n\n   return r.v.subarray(offset, offset + length);\n}\n\nfunction isArrCorrect(arr, minVal, maxVal) {\n   if (!Array.isArray(arr)) return false;\n   if (arr.length === 0) return true;\n\n   for (let i = 0; i < arr.length; i++) {\n      const v = arr[i];\n      if (v < minVal || v > maxVal) return false;\n   };\n\n   return true;\n}\n\n/**\n * Creates a PCA model using wasm implementation.\n *\n * @param {Object} Module object with wasm module for PCVPCA.\n * @param {Matrix} X matrix with calibration set.\n * @param {number} ncomp number of components.\n * @param {boolean} center mean center the data columns or not.\n * @param {boolean} scale standardize the data columns or not.\n * @param {Array} outliers array with indices of outliers.\n * @param {Array} exclvars array with indices of excluded variables.\n *\n * @returns {Object} JSON with PCA model.\n */\nexport function pca_fit(Module, X, ncomp, center, scale, outliers, exclvars) {\n\n   // check the dataset\n   if (!ismatrix(X)) {\n      throw new Error('pca_fit: X must be a matrix.');\n   }\n\n   // process outliers\n   if (!outliers) outliers = [];\n   const nout = outliers && Array.isArray(outliers) ? outliers.length : 0;\n   if (!isArrCorrect(outliers, 0, X.nrows - 1)) {\n      throw new Error('pca_fit: some indices in \"outliers\" array are outside the expected range.');\n   }\n\n   // process excluded variables\n   if (!exclvars) exclvars = [];\n   const nexv = exclvars && Array.isArray(exclvars) ? exclvars.length : 0;\n   if (!isArrCorrect(exclvars, 0, X.ncols - 1)) {\n      throw new Error('pca_fit: some indices in \"exclvars\" array are outside the expected range.');\n   }\n\n   const nrows = X.nrows - nout;\n   const ncols = X.ncols - nexv;\n\n   if (nrows < 3 || ncols < 2) {\n      throw new Error('pca_fit: X must have at least 3 rows and 2 columns.');\n   }\n\n\n   // set the default values\n   if (center === undefined) {\n      center = true;\n   }\n\n   if (scale === undefined) {\n      scale = false;\n   }\n\n   if (ncomp === undefined) {\n      ncomp = Math.min(X.nrows - nout - 1, X.ncols - nexv);\n   }\n\n   if (ncomp < 1 || ncomp > Math.min(nrows - 1, ncols)) {\n      throw new Error('pca_fit: the value of \"ncomp\" does not match the dimension of X.');\n   }\n\n\n   // allocate memory in WASM heap space and copy dataset values\n   const x_ptr = Module._malloc(X.v.length * X.v.BYTES_PER_ELEMENT);\n   Module.HEAPF64.set(X.v, x_ptr / X.v.BYTES_PER_ELEMENT);\n\n   // allocate memory in WASM heap space and copy outliers values\n   let o_ptr = null;\n   if (nout > 0) {\n      const o = new Int32Array(outliers);\n      o_ptr = Module._malloc(o.length * o.BYTES_PER_ELEMENT);\n      Module.HEAP32.set(o, o_ptr / o.BYTES_PER_ELEMENT);\n   }\n\n   // allocate memory in WASM heap space and copy excluded variables values\n   let ev_ptr = null;\n   if (nexv > 0) {\n      const ev = new Int32Array(exclvars);\n      ev_ptr = Module._malloc(ev.length * ev.BYTES_PER_ELEMENT);\n      Module.HEAP32.set(ev, ev_ptr / ev.BYTES_PER_ELEMENT);\n   }\n\n   // allocate memory in WASM heap space for model and calibration set results outcomes\n   const m_length = pca_getmodellength(ncols, ncomp);\n   const m_constructor = Float64Array;\n   const m_ptr = Module._malloc(m_length * m_constructor.BYTES_PER_ELEMENT);\n\n   // call WASM function for PCA\n   const res = Module.ccall('pcafit_wasm',\n               ['number'], // return type\n               ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number'], // argument types\n               [x_ptr, X.nrows, X.ncols, ncomp, center, scale, m_ptr, o_ptr, nout, ev_ptr, nexv]); // arguments\n\n   if (res !== 1) {\n      throw new Error('pca_fit: PCA failed.');\n   }\n\n   // copy part of HEAP memory with model outcomes\n   const model = Module.HEAPF64.slice(\n      m_ptr/m_constructor.BYTES_PER_ELEMENT,\n      m_ptr/m_constructor.BYTES_PER_ELEMENT + m_length\n   );\n\n   // free the memory\n   Module._free(x_ptr);\n   Module._free(m_ptr);\n   if (o_ptr) Module._free(o_ptr);\n   if (ev_ptr) Module._free(ev_ptr);\n\n   // return PCA model and result objects\n   return {\n      class: ['pcamodel'],\n      v: model,\n      ncomp: ncomp,\n      nrows: nrows,\n      ncols: ncols,\n      exclvars: exclvars,\n      center: center,\n      scale: scale\n   };\n}\n\n\n/**\n * Projects dataset to a PCA model.\n *\n * @param {Object} Module object with wasm module for PCVPCA.\n * @param {Object} m JSON with PCA model created by `pca_fit()`.\n * @param {Matrix} X matrix with dataset.\n * @param {Array} outliers array with indices of outliers.\n *\n * @returns {Object} JSON with PCA results.\n */\nexport function pca_predict(Module, m, X, outliers) {\n\n\n   if (!m || !m.class || !m.class.includes('pcamodel')) {\n      throw new Error('pca_predict: parameter \"m\" must be JSON with PCA model.');\n   }\n\n   if (!ismatrix(X)) {\n      throw new Error('pca_predict: X must be a matrix.');\n   }\n\n   // process outliers\n   if (!outliers) outliers = [];\n   const nout = outliers && Array.isArray(outliers) ? outliers.length : 0;\n   if (!isArrCorrect(outliers, 0, X.nrows - 1)) {\n      throw new Error('pca_predict: some indices in \"outliers\" array are outside the expected range.');\n   }\n\n   // excluded variables are taken from the model\n   let nexv = m.exclvars.length;\n   let exclvars = m.exclvars;\n\n   // compute numbers of rows and columns without excluded ones\n   const nrows = X.nrows - nout;\n\n   // check if dataset alread excluded variables the ecluded variables array will be emptied\n   if (X.ncols === m.ncols) {\n      exclvars = [];\n      nexv = 0;\n   }\n\n   // compute new number of columns\n   const ncols = X.ncols - nexv;\n\n   if (nrows < 1) {\n      throw new Error('pca_predict: X must have at least 1 row.');\n   }\n\n   if (ncols !== m.ncols) {\n      throw new Error('pca_predict: X must have the same number of columns (without excluded ones) as the training set.');\n   }\n\n   // allocate memory in WASM heap space and copy dataset values\n   // here we send the full dataset including outliers and excluded variables\n   const x_ptr = Module._malloc(X.v.length * X.v.BYTES_PER_ELEMENT);\n   Module.HEAPF64.set(X.v, x_ptr / X.v.BYTES_PER_ELEMENT);\n\n   // allocate memory in WASM heap space and copy outliers values\n   let o_ptr = null;\n   if (nout > 0) {\n      const o = new Int32Array(outliers);\n      o_ptr = Module._malloc(o.length * o.BYTES_PER_ELEMENT);\n      Module.HEAP32.set(o, o_ptr / o.BYTES_PER_ELEMENT);\n   }\n\n   // allocate memory in WASM heap space and copy excluded variables values\n   let ev_ptr = null;\n   if (nexv > 0) {\n      const ev = new Int32Array(m.exclvars);\n      ev_ptr = Module._malloc(ev.length * ev.BYTES_PER_ELEMENT);\n      Module.HEAP32.set(ev, ev_ptr / ev.BYTES_PER_ELEMENT);\n   }\n\n   // allocate memory in WASM heap space and copy model values\n   const m_ptr = Module._malloc(m.v.length * m.v.BYTES_PER_ELEMENT);\n   Module.HEAPF64.set(m.v, m_ptr / m.v.BYTES_PER_ELEMENT);\n\n   // allocate memory in WASM heap space for result values\n   const r_length = pca_getreslength(X.nrows - nout, m.ncomp, X.ncols - nexv);\n   const r_constructor = Float64Array;\n   const r_ptr = Module._malloc(r_length * r_constructor.BYTES_PER_ELEMENT);\n\n   // call WASM function for PCA prediction\n   const res = Module.ccall('pcapredict_wasm',\n               ['number'], // return type\n               ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number'], // argument types\n               [x_ptr, X.nrows, X.ncols, m_ptr, r_ptr, o_ptr, nout, ev_ptr, nexv]); // arguments\n\n   if (res !== 1) {\n      throw new Error('pca_predict: PCA prediction failed.');\n   }\n\n   // copy part of HEAP memory with result values\n   const res_values = Module.HEAPF64.slice(\n      r_ptr/r_constructor.BYTES_PER_ELEMENT,\n      r_ptr/r_constructor.BYTES_PER_ELEMENT + r_length\n   );\n\n   // free the memory\n   Module._free(x_ptr);\n   Module._free(m_ptr);\n   Module._free(r_ptr);\n   if (o_ptr) Module._free(o_ptr);\n   if (ev_ptr) Module._free(ev_ptr);\n\n   // create object for PCA results\n   const resobj = {\n      class: ['pcares'],\n      v: res_values,\n      ncomp: m.ncomp,\n      nrows: nrows,\n      ncols: ncols,\n      outliers: outliers,\n      exclvars: m.exclvars,\n      center: m.center,\n      scale: m.scale\n   };\n\n   // compute object with statistics\n   const expvar = new Array(m.ncomp);\n   const resvar = new Array(m.ncomp);\n   const cumresvar = new Array(m.ncomp);\n   const cumexpvar = new Array(m.ncomp);\n   const components = new Array(m.ncomp);\n\n   const v = pcares_get(resobj, \"xcumexpvar\");\n   components[0] = 1;\n   cumexpvar[0] = v[0];\n   cumresvar[0] = 1 - v[0];\n   expvar[0] = v[0];\n   resvar[0] = 1 - v[0];\n   for (let i = 1; i < m.ncomp; i++) {\n      components[i] = i + 1;\n      cumexpvar[i] = v[i];\n      cumresvar[i] = 1 - v[i];\n      expvar[i] = v[i] - v[i - 1];\n      resvar[i] = 1 - expvar[i];\n   }\n\n   // add statistics and return\n   resobj.stat = {components, resvar, expvar, cumexpvar, cumresvar };\n   return resobj;\n}\n\n\n/**\n * Create a PV-set based on PCA decomposition.\n *\n * @param {Object} Module object with wasm module for PCVPCA.\n * @param {Object} m JSON with PCA model created by `pca_fit()`.\n * @param {Matrix} X matrix with dataset.\n * @param {number} ncomp number of components for PV-set generation.\n * @param {number} cv_nseg number of segments for cross-validation.\n * @param {number} cv_type type of cross-validation (0: loo, 1: ven, 2: rand).\n * @param {number} cv_scope scope of cross-validation (0: global, 1: local).\n * @param {Array} outliers array with indices of outliers.\n *\n * @returns {Matrix} the generated PV-set.\n */\nexport function pcvpca(Module, m, X, ncomp, cv_nseg, cv_type, cv_scope, outliers) {\n\n   if (!m || !m.class || !m.class.includes('pcamodel')) {\n      throw new Error('pcapcv: parameter \"m\" must be JSON with PCA results.');\n   }\n\n   if (!ismatrix(X)) {\n      throw new Error('pcapcv: X must be a matrix.');\n   }\n\n   // process outliers\n   if (!outliers) outliers = [];\n   const nout = outliers && Array.isArray(outliers) ? outliers.length : 0;\n   if (!isArrCorrect(outliers, 0, X.nrows - 1)) {\n      throw new Error('pca_predict: some indices in \"outliers\" array are outside the expected range.');\n   }\n\n   // excluded variables are taken from the model\n   const nexv = m.exclvars.length;\n\n   // compute numbers of rows and columns without excluded ones\n   const nrows = X.nrows - nout;\n   const ncols = X.ncols - nexv;\n\n\n   if (nrows < 3) {\n      throw new Error('pcapcv: X must have at least 3 rows.');\n   }\n\n   if (ncols !== m.ncols) {\n      throw new Error('pcapcv: X must have the same number of columns as the training set.');\n   }\n\n   if (!Number.isInteger(cv_type) || ![0, 1, 2].includes(cv_type)) {\n      throw new Error('pcapcv: parameter \"cv_type\" must be one of 0 (\"loo\"), 1 (\"ven\"), 2 (\"rand).');\n   }\n\n   if (!Number.isInteger(cv_scope) || ![0, 1].includes(cv_scope)) {\n      throw new Error('pcapcv: parameter \"cv_scope\" must be 0 (\"global\") or 1 (\"local\").');\n   }\n\n   if (cv_type > 0 && (!Number.isInteger(cv_nseg) || cv_nseg < 2)) {\n      throw new Error('pcapcv: parameter \"cv_nseg\" must be a number ≥ 2.');\n   }\n\n   if (cv_type > 0 && cv_nseg > nrows) {\n      throw new Error('pcapcv: the value of \"cv_nseg\" is too large for the given X.');\n   }\n\n   if (!Number.isInteger(ncomp) || ncomp < 1) {\n      throw new Error('pcapcv: the value of \"ncomp\" must be a number >= 1.');\n   }\n\n   const max_ncomp = cv_type === 0 ?\n      Math.min(nrows - 2, ncols, m.ncomp) :\n      Math.min(nrows - Math.ceil(nrows / cv_nseg) - 1, ncols, m.ncomp);\n\n   if (ncomp > max_ncomp) {\n      throw new Error('pcapcv: the value of \"ncomp\" is too large.');\n   }\n\n\n   // allocate memory in WASM heap space and copy dataset values\n   const x_ptr = Module._malloc(X.v.length * X.v.BYTES_PER_ELEMENT);\n   Module.HEAPF64.set(X.v, x_ptr / X.v.BYTES_PER_ELEMENT);\n\n   // allocate memory in WASM heap space and copy outliers values\n   let o_ptr = null;\n   if (nout > 0) {\n      const o = new Int32Array(outliers);\n      o_ptr = Module._malloc(o.length * o.BYTES_PER_ELEMENT);\n      Module.HEAP32.set(o, o_ptr / o.BYTES_PER_ELEMENT);\n   }\n\n   // allocate memory in WASM heap space and copy excluded variables values\n   let ev_ptr = null;\n   if (nexv > 0) {\n      const ev = new Int32Array(m.exclvars);\n      ev_ptr = Module._malloc(ev.length * ev.BYTES_PER_ELEMENT);\n      Module.HEAP32.set(ev, ev_ptr / ev.BYTES_PER_ELEMENT);\n   }\n\n   // allocate memory in WASM heap space and copy model values\n   const m_ptr = Module._malloc(m.v.length * m.v.BYTES_PER_ELEMENT);\n   Module.HEAPF64.set(m.v, m_ptr / m.v.BYTES_PER_ELEMENT);\n\n   // allocate memory in WASM heap space for Xpv values\n   const xpv_length = nrows * ncols;\n   const xpv_constructor = X.v.constructor;\n   const xpv_ptr = Module._malloc(xpv_length * xpv_constructor.BYTES_PER_ELEMENT);\n\n   // call WASM function for PCAPCV\n   const res = Module.ccall('pcvpca_wasm',\n               ['number'], // return type\n               ['number', 'number', 'number', 'number', 'number', 'number',\n               'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number'], // argument types\n               [x_ptr, X.nrows, X.ncols, ncomp, m.center, m.scale,\n               cv_type, cv_nseg, cv_scope, m_ptr, xpv_ptr, o_ptr, nout, ev_ptr, nexv]); // arguments\n\n   if (res !== 1) {\n      throw new Error('pcapcv: PCVPCA failed.');\n   }\n\n   // copy part of HEAP memory with Xpv values\n   const xpv = Module.HEAPF64.slice(\n      xpv_ptr/xpv_constructor.BYTES_PER_ELEMENT,\n      xpv_ptr/xpv_constructor.BYTES_PER_ELEMENT + xpv_length\n   );\n\n   // free the memory\n   Module._free(x_ptr);\n   Module._free(m_ptr);\n   Module._free(xpv_ptr);\n   if (o_ptr) Module._free(o_ptr);\n   if (ev_ptr) Module._free(ev_ptr);\n\n   // return Xpv\n   return new Matrix(xpv, nrows, ncols);\n}\n","import { Matrix } from 'mdatools/arrays';\nimport { mean, sd } from 'mdatools/stat';\nimport { qf } from 'mdatools/distributions';\nimport { pca_predict, pcamodel_get } from './wasm/dist/pca.js';\n\n\n// constant values (colors, etc)\nexport const LINE_COLORS = {'cal': '#2679B2', 'pv': '#D22C2F', 'target': '#2679B2', 'alt': '#2679B2'};\nexport const FACE_COLORS = {'cal': '#f0f8ff', 'pv': '#fff8f0', 'target': '#f0f8ff', 'alt': '#f0f8ff'};\nexport const LABELS_COLOR = '#a0a0a0';\nexport const LABELS_COLOR_SELECTED = '#909090';\n\n\n/**\n * Creates array with a sequence of values from `start` to `end`.\n * @param {number} start first value of sequence\n * @param {number} end last value of sequence\n * @param {number} by increment\n * @returns {Array} array with sequence.\n */\nexport function seq(start, end, by = 1) {\n   const length = Math.round((end - start + 1) / by);\n   const out = Array(length);\n   for (let i = 0; i < length; i++) {\n      out[i] = start + i * by;\n   }\n   return out;\n}\n\n\n/**\n * Creates arrays with object indices, labels and classes without outliers\n * @param {Object} dataset — JSON with dataset object.\n * @param {Array} outliers — array with object indices removed as outliers.\n * @returns {Array} array with three arrays — object indices, classes and labels\n */\nfunction handle_outliers(dataset, outliers) {\n   let indices, classes, labels;\n   if (outliers.length > 0) {\n      // filter the outlier out\n      const nAll = dataset.values.nrows;\n      const sampleIndices = dataset.objindices;\n      const n = nAll - outliers.length;\n      indices = Array(n);\n      classes = Array(n);\n      labels = Array(n);\n      let j = 0;\n      for (let i = 0; i < nAll; i++) {\n         if (outliers.includes(i)) continue;\n         indices[j] = sampleIndices[i];\n         classes[j] = dataset.classes[i];\n         labels[j] = dataset.objlabels[i]\n         j = j + 1;\n      }\n   } else {\n      indices = dataset.objindices;\n      labels = dataset.objlabels;\n      classes = dataset.classes;\n   }\n\n   return [indices, labels, classes];\n}\n\n\n/**\n * Generates unique pseudo-hash number based on current time and date.\n * @returns  string with the hash\n */\nexport function genhash() {\n    const now = new Date();\n    const uniqueId = `${now.getFullYear()}${(now.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}${now.getDate().toString().padStart(2, '0')}${now\n        .getHours()\n        .toString()\n        .padStart(2, '0')}${now.getMinutes().toString().padStart(2, '0')}${now\n        .getSeconds()\n        .toString()\n        .padStart(2, '0')}${now\n        .getMilliseconds()\n        .toString()\n        .padStart(3, '0')}`;\n    return uniqueId;\n}\n\n\n/**\n * Applies PCA model to a new dataset and adds additional attributes.\n *\n * @param {Promise} Module - WASM module (from Promise).\n * @param {Object} model - object with PCA model.\n * @param {Matrix} dataset - object with original dataset.\n * @param {Array} outliers - array with outliers.\n *\n * @returns {Object} object with PCA results\n */\nexport function app_pca_predict(Module, model, dataset, outliers) {\n\n   // get arrays with sample indices, classeas and object labels without outliers\n   const [objindices, objlabels, classes] = handle_outliers(dataset, outliers);\n\n   // make predictions and add labels and indices\n   const r = pca_predict(Module, model, dataset.values, outliers);\n   r['hash'] = genhash();\n   r['objindices'] = objindices;\n   r['objlabels'] = objlabels;\n   r['classes'] = classes;\n   r['classNames'] = dataset.classNames;\n   r['varlabels'] = dataset.varlabels;\n\n   // model outcomes required for plots\n   r['eigenvals'] = pcamodel_get(model, 'eigenvals');\n   r['cNh'] = pcamodel_get(model, \"cNh\");\n   r['cNq'] = pcamodel_get(model, \"cNq\");\n   r['ch0'] = pcamodel_get(model, \"ch0\");\n   r['cq0'] = pcamodel_get(model, \"cq0\");\n   r['rNh'] = pcamodel_get(model, \"rNh\");\n   r['rNq'] = pcamodel_get(model, \"rNq\");\n   r['rh0'] = pcamodel_get(model, \"rh0\");\n   r['rq0'] = pcamodel_get(model, \"rq0\");\n\n   const n = model.nrows;\n   r['T2lim'] =  (2 * (n - 1) / (n - 2)) * qf(0.95, 2, (n - 2));\n   return r;\n}\n\n\n/**\n * Reverse columns of dataset and corresponding variable values.\n *\n * @param {Matrix} values - matrix with dataset values.\n * @returns {Matrix} matrix with reversed columns.\n */\nexport function reverseColumns(values) {\n\n   const values_out = Matrix.zeros(values.nrows, values.ncols);\n   for (let i = 0; i < values.ncols; i++) {\n      const offset_in = values.nrows * i;\n      const offset_out = values.nrows * (values.ncols - 1 - i);\n      values_out.v.set(values.v.slice(offset_in, offset_in + values.nrows), offset_out);\n   }\n\n   return values_out;\n}\n\n\n/**\n * Converts string or array of strings to number(s).\n *\n * @param {Array|string} str - string or array of strings to convert to numbers.\n * @param {string} dec - character for decimal delimeter.\n *\n * @returns {Array|Number} number or array of numbers.\n */\nfunction str2num(str, dec = '.') {\n\n   if (Array.isArray(str) && str.length > 0) {\n      return dec === '.' ? str.map(v => Number.parseFloat(v.trim())) :\n         str.map(v => Number.parseFloat(v.trim().replace(dec, \".\")));\n   }\n\n   return dec === '.' ? Number.parseFloat(str.trim()) :\n      Number.parseFloat(str.trim().replace(dec, \".\"));\n}\n\n\n/**\n * Returns true if at least one value in array is NaN.\n * @param {Array} arr - array with values.\n * @returns logical value.\n */\nfunction hasNaN(arr) {\n   return arr.some(v => Number.isNaN(v));\n}\n\n\n/**\n * Removes white spaces and double quotes in a string (e.g. '\" or \"\"\")\n * @param {String} s - string value\n * @returns {String}\n */\nfunction clearLabels(s) {\n   return s.replace('\\t', '').trim().replace(/^(['\"])(.*)\\1$/, '$2');\n}\n\n/**\n * Takes CSV content as a string, cleans it and splits to separate rows\n * @param {String} csvString — string with CSV content.\n * @returns {Array} array of strings.\n */\nfunction getCSVRows(csvString) {\n   // remove BOM symbol if any\n   let dataStr = csvString.replace(/^\\uFEFF/gm, \"\").replace(/^\\u00EF?\\u00BB\\u00BF/gm,\"\");\n\n   // remove \\r symbols\n   dataStr = dataStr.replace(/\\r/gm, \"\");\n\n   // split string with data values into array of rows and filter empty rows\n   return dataStr.split(/\\n/).filter(v => v.trim().length > 1);\n}\n\n\n/**\n * Parse string with data from a CSV file and create a matrix with values.\n *\n * @param {string} strData - string with all data from the CSV file.\n * @param {string} sep - symbols used for separation of values (by default ',').\n * @param {string} header - type of header (first row in the data).\n * @param {boolean} hasLabels - logical, if first column must be treated as object labels or not.\n * @param {boolean} hasClasses - logical, if column next to labels must be treated as class names or not.\n * @param {string} varvaluesName - name for variable values (e.g. Wavelength).\n * @param {string} varvaluesUnits - units for variable values (e.g. nm).\n * @param {number} nresp - number of resoinse columns (reserved for future use).\n *\n * @returns {Object} JSON containing matrix with parsed values, header, values and decimal separators.\n */\nexport function parseCSV(strData, sep, header, hasLabels, hasClassNames, varvaluesName, varvaluesUnits, nresp = 0) {\n\n   // TODO: reserved for response values in future\n   const responses = null;\n\n   // set default separator symbol\n   if (sep === undefined) {\n      sep = \",\";\n   }\n\n   if (!(sep === ',' || sep === ';')) {\n      throw new Error('Values separator can be either comma or semicolon.')\n   }\n\n   // setup decimal separator\n   const dec = sep === \";\" ? \",\" : \".\";\n\n   // split string with data values into array of rows and filter empty rows\n   let rows = getCSVRows(strData);\n\n   if (rows.length < 1) {\n      throw new Error('Could not find non-empty rows with values, check your CSV file and try again.');\n   }\n\n   // get array with values from the first row\n   const firstRowValues = rows[0].split(sep);\n\n   // check if the first row contains header\n   let startRow = 0;\n   let headerLabels;\n   const hasHeader = header !== 'no';\n   if (hasHeader || (hasHeader === undefined && hasNaN(firstRow))) {\n      headerLabels = firstRowValues;\n      startRow = 1;\n   }\n\n\n   // number of rows and columns in future matrix\n   const nrows = rows.length - startRow;\n   if (nrows < 1) {\n      throw new Error(\"Data file should contain at least 1 row with values.\");\n   }\n\n\n   // check if first column contains row labels\n   let labelsVarname;\n   let startColumn;\n   let objlabels;\n   let objindices = Array(nrows);\n   if (hasLabels) {\n      labelsVarname = hasHeader ? clearLabels(headerLabels[0]) : '';\n      objlabels = Array(nrows);\n      startColumn = 1;\n   } else{\n      labelsVarname = '';\n      objlabels = [];\n      startColumn = 0;\n   }\n\n   // check if next column contains class names\n   let classLabelsVarname;\n   let classNames = [];\n   let classes;\n   if (hasClassNames) {\n      classLabelsVarname = hasHeader ? clearLabels(headerLabels[startColumn]) : '';\n      classes = Array(nrows);\n      startColumn = startColumn + 1;\n   } else {\n      classLabelsVarname = '';\n      classes = [];\n   }\n\n   // compute number of columns\n   const ncols = firstRowValues.length - startColumn;\n   if (ncols < 1) {\n      throw new Error(\"Data file should contain at least 1 column with values.\");\n   }\n\n   // set rows of data as columns of matrix - it is faster\n   const data = Matrix.zeros(ncols, nrows);\n\n   // find symbol used for decimals separator\n   for (let r = startRow; r < nrows + startRow; r++) {\n\n      // add row/object index\n      const rind = r - startRow;\n      objindices[rind] = rind;\n\n      // split the row string into array of values\n      let rowValuesAll = rows[r].split(sep)\n\n      // if the first element is row label add it to labels array and increase the offset\n      if (hasLabels) {\n         objlabels[rind] = rowValuesAll[0];\n         rowValuesAll.shift()\n      }\n\n      // if the next element is class/group label add it to classes array and increase the offset\n      if (hasClassNames) {\n         const className = rowValuesAll[0];\n         classes[rind] = className;\n         rowValuesAll.shift()\n\n         // also add it to array of unique class names\n         if (classNames.length === 0 || classNames.indexOf(className) < 0) {\n            classNames.push(className);\n         }\n      }\n\n      // for the rest of values, trim spaces, replace separator symbol with dot (.) and convert to numbers\n      const rowValues = dec === '.' ?\n         rowValuesAll.map(v => Number.parseFloat(v.trim())) :\n         rowValuesAll.map(v => Number.parseFloat(v.trim().replace(dec, \".\")));\n\n      if (rowValues.some(v => Number.isNaN(v))) {\n         throw new Error(\"Some of the values can not be converted to numbers, check your CSV file and try again.\");\n      }\n\n      if (rowValues.length != ncols) {\n         throw new Error(\"Wrong number of values in row #\" + r);\n      }\n\n      data.v.set(new Float64Array(rowValues), (r - startRow) * ncols);\n   }\n\n   // generate row labels if they are not provided\n   if (!hasLabels || objlabels.length !== nrows) {\n      objlabels = Array(nrows);\n      for (let i = 0; i < nrows; i++) {\n         objlabels[i] = 'O' + (i + 1);\n      }\n   }\n\n   // remove possible extra quotes around the labels and classes\n   objlabels = objlabels.map(v => clearLabels(v));\n   classes = classes.map(v => clearLabels(v));\n   classNames = classNames.map(v => clearLabels(v));\n\n   // handle variable labels, indices and values\n   let varlabels;\n   let varindices = Array(ncols);\n   let varvaluesTemp = Array(ncols);\n   if (headerLabels && headerLabels.length === ncols + startColumn) {\n      varlabels = headerLabels.map(v => clearLabels(v)).slice(startColumn);\n      for (let i = 0; i < ncols; i++) {\n         varindices[i] = i;\n         varvaluesTemp[i] = i + 1;\n      }\n   } else {\n      varlabels = Array(ncols);\n      for (let i = 0; i < ncols; i++) {\n         varindices[i] = i;\n         varlabels[i] = 'V' + (i + 1);\n         varvaluesTemp[i] = i + 1;\n      }\n   }\n\n   // parse variable labels as numeric values if it is expected\n   let varvalues;\n   if (header === 'values') {\n      varvalues = dec === '.' ?\n         varlabels.map(v => Number.parseFloat(v.trim())) :\n         varlabels.map(v => Number.parseFloat(v.trim().replace(dec, \".\")));\n      if (varvalues.some(v => Number.isNaN(v))) {\n         throw new Error(\"Some of the header values can not be converted to numbers, check your CSV file and try again.\");\n      }\n   } else {\n      varvalues = varvaluesTemp;\n   }\n\n   if (!Array.isArray(varvalues)) varvalues = [];\n   if (!varvaluesName) varvaluesName = '';\n   if (!varvaluesUnits) varvaluesUnits = '';\n\n   varvaluesName = varvalues.length > 0 && varvaluesName.length > 0 ? varvaluesName : 'Variables';\n   varvaluesUnits = varvalues.length > 0 && varvaluesUnits.length > 0 ? varvaluesUnits : '';\n   const varAxisTitle = varvaluesName + (varvaluesUnits.length > 0 ? ', ' + varvaluesUnits : '');\n\n   const varrev = varvalues[1] < varvalues[0];\n   const out = {\n      values: varrev ? reverseColumns(data.t()) : data.t(),\n      header,\n      hasLabels,\n      hasClassNames,\n      labelsVarname,\n      classLabelsVarname,\n      objlabels,\n      objindices,\n      varlabels : varrev ? varlabels.reverse() : varlabels,\n      varvalues : varrev ? varvalues.reverse() : varvalues,\n      varindices,\n      varrev,\n      classes,\n      responses,\n      classNames,\n      sep,\n      dec,\n      varvaluesName,\n      varvaluesUnits,\n      varAxisTitle\n   };\n\n   return out;\n}\n\n\n/**\n * Tries to detect if first row of CSV file contains header.\n *\n * @param {Array} rows_num_values - arrat of CSV rows, split to separate values and converted to numbers.\n *\n * @returns {boolean} true if header is detected.\n */\nfunction detectHeader(rows_num_values) {\n\n   // simple guesser based on presence of non-text values in the first row (check values 3 and 4)\n   if (hasNaN(rows_num_values[0].slice(2))) {\n      return true;\n   }\n\n   // if the values are numeric check\n   // how different the values in the first row from the other ones\n   // for columns starting fom 3\n   const max_ncols = rows_num_values[0].length;\n   const z_arr = [];\n   for (let c = 2; c < max_ncols; c++) {\n\n      // get values from the column and rows 2...4 (or less)\n      let cv = [];\n      for (let i = 1; i < rows_num_values.length; i++) {\n         cv.push(rows_num_values[i][c]);\n      }\n\n      // compute absolute z-score and compare with 5\n      const v1 = rows_num_values[0][c]\n      const m = mean(cv);\n      const s = sd(cv);\n      const z = Math.abs((v1 - m) / s);\n      z_arr.push(z);\n   }\n\n   // if all of them above 5 then most likely the first row is header\n   return z_arr.every(v => v > 5);\n}\n\n/**\n * Detects symbol used to separate values in CSV file.\n *\n * @param {Array} rows - array with rows (each row is a string).\n *\n * @returns {Array} array with three values, symbols for values and decimals separators and number of columns.\n */\nfunction detectSeparators(rows) {\n\n   // guess values separator\n   const sep1 = ',';\n   const v11 = rows[0].split(sep1);\n   const v12 = rows[1].split(sep1);\n   const l11 = v11.length;\n   const l12 = v12.length;\n\n   const sep2 = ';';\n   const v21 = rows[0].split(sep2);\n   const v22 = rows[1].split(sep2);\n   const l21 = v21.length;\n   const l22 = v22.length;\n\n   // check which of the two separators give longer and more consistent\n   // arrays with values\n   let ncols, v1, v2, sep;\n   if (l11 > 1 && l12 > 1 && l11 === l12 && l11 > l21) {\n      sep = sep1;\n      ncols = l11;\n      v1 = v11;\n      v2 = v12;\n   } else if (l21 > 1 && l22 > 1 && l21 === l22) {\n      sep = sep2;\n      ncols = l12;\n      v1 = v21;\n      v2 = v22;\n   } else {\n      throw new Error('Values in the CSV file should be separated by coma or by semicolon.');\n   }\n\n   // decimal separator\n   const dec = sep === ',' ? '.' : ',';\n   return [sep, dec, ncols];\n}\n\n/**\n * Parses CSV file string to detect main parameters (separators, header, presence of row and class labels).\n *\n * @param {String} csvString - string with CSV file content.\n *\n * @returns {Array} array with parameters.\n */\nexport function parseCSVParams(csvString) {\n\n   // split string with CSV content to separate rows and check size\n   const rows = getCSVRows(csvString);\n   const nrows = rows.length;\n   if (nrows < 3) {\n      throw new Error('It looks like the dataset has less then three rows, minimum three is needed, check your CSV file and try again.');\n   }\n\n   // detect values and decimal separators\n   const [sep, dec, ncols] = detectSeparators(rows);\n   const max_ncols = Math.min(ncols, 5);\n\n   // split first several rows to values and keep maximum 5 values in each\n   const max_nrows = Math.min(nrows, 5);\n   let rows_values = rows.slice(0, max_nrows).map(v => v.split(sep).slice(0, max_ncols));\n\n   // additionally clear the values\n   rows_values = rows_values.map(v => v.map(v => clearLabels(v)));\n\n   // turn values to numeric and check that values starting from row 2 and column 3 are numeric\n   const rows_num_values = rows_values.map(v => str2num(v.slice(), dec));\n   for (let i = 1; i < max_nrows; i++) {\n      if (hasNaN(rows_num_values[i].slice(2))) {\n         throw new Error('Some of the data values expected to be numeric are not, check your CSV file.');\n      }\n   }\n\n   // detect if the data has header\n   const hasHeader = detectHeader(rows_num_values);\n   let headerShift = 0;\n\n   const r1 = hasHeader ? 1 : 0;\n   const r2 = r1 + 1;\n\n   // values from first column of rows 2 and 3 starting from header\n   const v21 = rows_values[r1][0];\n   const v31 = rows_values[r2][0];\n\n   // numeric values from first column of rows 2 and 3\n   const nv21 = rows_num_values[r1][0];\n   const nv31 = rows_num_values[r2][0];\n\n   // numeric values from second column of rows 2 and 3\n   const nv22 = rows_num_values[r1][1];\n   const nv32 = rows_num_values[r2][1];\n\n   // detect columns with row and class labels\n   let hasLabels = false;\n   let hasClassLabels = false;\n   if (Number.isNaN(nv21) && Number.isNaN(nv31) && v21 !== v31) {\n      // guess if row labels present: if first value of rows 2 and 3 are not numbers\n      // and are not equal to each other than they are possible row labels\n      hasLabels = true;\n      headerShift = headerShift + 1;\n   } else if (Number.isNaN(nv22) && Number.isNaN(nv32) && v21 !== v31) {\n      // now check if values from the second column are non numeric,\n      // and at the same time values from the first column are not equal, if so\n      // the second column possible contains class names and hence the first column\n      // consist of row labels\n      hasLabels = true;\n      hasClassLabels = true;\n      headerShift = headerShift + 2;\n   }\n\n\n   // guess class labels - we check next column and if both values of rows 2 and 3\n   // are not numeric, we assume they are class labels\n   if (!hasClassLabels) {\n      const ncol = hasLabels ? 1 : 0;\n\n      // numeric values from first column of rows 2 and 3\n      const nv21 = rows_num_values[r1][ncol];\n      const nv31 = rows_num_values[r2][ncol];\n\n      hasClassLabels = hasNaN([nv21, nv31]);\n      headerShift = headerShift + hasClassLabels;\n   }\n\n   // gues if header contains text labels of numeric values\n   let header = 'no';\n   if (hasHeader) {\n      const v1 = headerShift > 0 ? rows_values[0].slice(headerShift) : rows_values[0];\n      const nv1 = headerShift > 0 ? rows_num_values[0].slice(headerShift) : rows_num_values[0];\n      header = hasNaN(nv1) ? 'labels' : 'values';\n   }\n\n   return [sep, hasLabels, hasClassLabels, header];\n}\n\nexport function toCSV(dataset) {\n\n   // get values, reverse columns if needed and then transpose\n   const values = dataset.varrev ? reverseColumns(dataset.values).t() : dataset.values.t();\n   const sep = dataset.sep;\n   const dec = dataset.dec;\n\n   let header_values = null;\n   if (dataset.header !== 'no') {\n      header_values = dataset.header === 'values' ? dataset.varvalues.slice() : dataset.varlabels.slice();\n   }\n\n   if (header_values && dataset.varrev) {\n      header_values = header_values.reverse()\n   }\n\n   if (header_values && dataset.hasClassNames) {\n      header_values = [dataset.classLabelsVarname, ...header_values];\n   }\n\n   if (header_values && dataset.hasLabels) {\n      header_values = [dataset.labelsVarname, ...header_values];\n   }\n\n\n   let csvString = header_values ? header_values.join(sep) : '\\n';\n   for (let i = 0; i < values.ncols; i++) {\n      let rowStr = values.getcolref(i + 1).join(sep);\n\n      if (dec !== '.') {\n         rowStr = rowStr.replace('.', dec);\n      }\n\n      if (dataset.hasClassNames) {\n         rowStr = dataset.classes[i] + dataset.sep + rowStr;\n      }\n\n      if (dataset.hasLabels) {\n         rowStr = dataset.objlabels[i] + dataset.sep + rowStr;\n      }\n\n      csvString = csvString + '\\n' + rowStr;\n   }\n   csvString = csvString + '\\n';\n\n   if (dec !== '.') {\n      csvString = csvString.replace(/\\./g, dec);\n   }\n\n   return csvString;\n}\n\nexport function downloadData(dataset, filename) {\n   const csvString = toCSV(dataset);\n   const blob = new Blob([csvString], { type: 'text/csv' });\n   const url = window.URL.createObjectURL(blob)\n   const a = document.createElement('a')\n   a.setAttribute('href', url)\n   a.setAttribute('download', `${filename}.csv`);\n   a.click()\n}\n\n/**\n * Create a new matrix which contains values from X except the excluded variables.\n *\n * @param {Matrix} X - matrix with original values.\n * @param {Array} varlist - list of variables to exclude.\n * @returns {Matrix}\n */\nexport function excludeVars(dataset, varlist) {\n\n   const values = dataset.values;\n   const varvalues = dataset.varvalues;\n   const varlabels = dataset.varlabels;\n   const varindices = dataset.varindices;\n\n   const nrows = values.nrows;\n   const ncols = values.ncols;\n   const ncolsNew = ncols - varlist.length\n   const valuesNew = Matrix.zeros(nrows, ncolsNew);\n   const varvaluesNew = Array(ncolsNew);\n   const varlabelsNew = Array(ncolsNew);\n   const varindicesNew = Array(ncolsNew);\n\n   let c = 0;\n   for (let i = 0; i < ncols; i++) {\n      if (varlist.includes(i)) continue;\n      const offset_0 = nrows * i;\n      const offset_1 = nrows * c;\n      valuesNew.v.set(values.v.slice(offset_0, offset_0 + nrows), offset_1);\n      varvaluesNew[c] = varvalues[i];\n      varlabelsNew[c] = varlabels[i];\n      varindicesNew[c] = varindices[i];\n      c = c + 1;\n   }\n\n   return {\n      values: valuesNew,\n      header: dataset.header,\n      hasLabels: dataset.hasLabels,\n      hasClassNames: dataset.classNames,\n      labelsVarname: dataset.labelsVarname,\n      classLabelsVarname: dataset.classLabelsVarname,\n      objlabels: dataset.objlabels,\n      objindices: dataset.objindices,\n      varlabels : varlabelsNew,\n      varvalues : varvaluesNew,\n      varindices: varindicesNew,\n      varrev: dataset.varrev,\n      classes: dataset.classes,\n      responses: dataset.responses,\n      classNames: dataset.classNames,\n      sep: dataset.sep,\n      dec: dataset.dec,\n      varvaluesName: dataset.varvaluesName,\n      varvaluesUnits: dataset.varvaluesUnits,\n      varAxisTitle: dataset.varAxisTitle,\n      fileName: dataset.fileName\n   };\n}\n\n\n/**\n * Converts array of numbers to intervals.\n * @param {Array} arr - array of numbers.\n * @returns {String}\n */\nexport function convertToIntervals(arr) {\n  if (!arr.length) return '';\n\n  // Sort the array in ascending order\n  arr.sort((a, b) => a - b);\n\n  let result = [];\n  let start = arr[0];\n  let end = start;\n\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] === end + 1) {\n      // continue the sequence\n      end = arr[i];\n    } else {\n      // sequence broken, push current range to result\n      if (start === end) {\n        result.push(`${start}`);\n      } else {\n        result.push(`${start}-${end}`);\n      }\n      // reset start and end for the next sequence\n      start = arr[i];\n      end = start;\n    }\n  }\n\n  // push the last range or number\n  if (start === end) {\n    result.push(`${start}`);\n  } else {\n    result.push(`${start}-${end}`);\n  }\n\n  return result.join(\" \");\n}\n","<script>\n   /***************************************************************\n    * Select                                                      *\n    * --------------------                                        *\n    * control element for selecting among a few options           *\n    ***************************************************************/\n\n   export let id;                         // text ID of the input element\n   export let options;                    // array with all options\n   export let value = options[0];         // initial selected value\n   export let className = '';             // extra class name\n\n   /**\n    * Handler of event when changes are made by pressing left and right arrows\n    * @param e\n    */\n   const changeOption = (e) => {\n      if (e.key === 'ArrowLeft') {\n         const ind = options.findIndex(v => v === value);\n         if (ind > 0) {\n            value = options[ind - 1];\n         }\n         return\n      }\n\n      if (e.key === 'ArrowRight') {\n         const ind = options.findIndex(v => v === value);\n         if (ind < options.length - 1) {\n            value = options[ind + 1];\n         }\n         return\n      }\n   }\n\n</script>\n\n<div on:keydown={changeOption} role=\"radiogroup\" tabindex=\"0\" class=\"selector {className}\">\n   {#each options as option (option)}\n   <button on:click={() => value = option} class=\"option option_{option}\" class:selected={option==value}>\n   {@html option}\n   </button>\n   {/each}\n</div>\n<input name={id} bind:value={value}>\n\n<style>\n   input {\n      display: none;\n   }\n\n   .selector {\n      position: relative;\n      box-sizing: border-box;\n      flex: 1 1 auto;\n      font-size: 1em;\n      line-height: 1.5em;\n      margin: 0;\n      padding: 0.15em 0;\n      width: auto;\n      border-radius: 2px;\n      user-select: none;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      display: flex;\n   }\n\n   .option {\n      cursor: default;\n      padding: 0.25em 0.5em;\n      margin: 0 0.2em 0 0;\n      color: #606060;\n      background-color: #f0f0f0;\n      border: 1px solid transparent;\n      border-radius: 0.3em;\n   }\n\n   .option.selected {\n      background-color: #6EB8FF;\n      color: #fefefe;\n   }\n\n   .option:not(.selected):hover {\n      border: 1px solid #66abec;\n      background-color: #6eb8ff20;\n      color: #4777a4;\n   }\n</style>","<script>\n   /***************************************************************\n    * Container                                                   *\n    * --------------------                                        *\n    * a container for any control element                         *\n    ***************************************************************/\n\n   export let label = null;   // text label (optional)\n   export let status = '';    // class name for status (e.g. 'hidden' or 'error')\n</script>\n\n<div class=\"control-element {status}\">\n   {#if label}\n   <span class=\"label\">{label}</span>\n   {/if}\n   <slot></slot>\n</div>\n\n<style>\n   .control-element {\n      font-size: 0.85em;\n      background: #fff;\n      padding: 0.35em 0.75em;\n      border-radius: 0;\n      display: flex;\n      justify-items: center;\n      justify-content: center;\n      align-items: center;\n      margin-bottom: 0.5px;\n   }\n\n   .control-element:first-of-type {\n      margin-top: 0.25rem;\n      border-top-left-radius: 0.25rem;\n      border-top-right-radius: 0.25rem;\n      margin-bottom: 1px;\n   }\n\n   .control-element:last-of-type {\n      margin-bottom: 0.25rem;\n      border-bottom-left-radius: 0.25rem;\n      border-bottom-right-radius: 0.25rem;\n   }\n\n   .hidden {\n      display: none;\n   }\n\n   .control-element.error {\n      background: crimson;\n      color: #fefefe;\n   }\n\n   :global(.control-element.error a) {\n      color: yellow;\n   }\n\n   .label {\n      padding-right: 1em;\n      flex-basis: 12ch;\n      flex-grow: 0;\n      flex-shrink: 1;\n      color: #606570;\n   }\n\n   .control-element > :global(.wrapper) {\n      flex: 1 1;\n   }\n\n   .control-element > :global(p) {\n      text-align: left;\n      flex-grow: 1;\n      padding: 0 0.25em;\n      margin: 0;\n      font-size: 0.9em;\n   }\n\n   .control-element > :global(.title) {\n      font-size: 1.05em;\n      font-weight: bold;\n      color: #303540;\n      flex-grow: 1;\n      padding: 0.3em 0;\n      margin: 0;\n   }\n</style>","<script>\n   /***************************************************************\n    * Button                                                      *\n    * --------------------                                        *\n    * control element in form of rectangular button with text     *\n    ***************************************************************/\n</script>\n\n<span class=\"wrapper\">\n<button tabindex=\"0\" class=\"button-rect\" on:click><slot></slot></button>\n</span>\n\n<style>\n   button {\n      background: #606060;\n      display: inline-block;\n      color: #fefefe;\n      font-size: 0.9em;\n      padding: 0.2em 0.5em;\n      line-height: 1.5em;\n      border: none;\n      border-radius: 0.25em;\n      box-shadow: none;\n      text-align: center;\n      border: 1px solid transparent;\n   }\n\n   button:hover {\n      border-color: #6eb8ff;\n      background: #6eb8ff20;\n      color: #5086b9;\n   }\n</style>\n","<script>\n   /***************************************************************\n    * Spinner                                                     *\n    * --------------------                                        *\n    * shows an active spinner                                     *\n    ***************************************************************/\n</script>\n\n<div class=\"spinner\"></div>\n\n<style>\n   .spinner {\n      display: inline-block;\n      height: 1.5em;\n      line-height: 1.5em;\n      width: 1.5em;\n      margin: 0 0.5em;\n   }\n\n   .spinner:after {\n   content: \" \";\n   display: block;\n   width: 0.8em;\n   height: 0.8em;\n   margin: 0.1em;\n   border-radius: 50%;\n   border: 0.2em solid #6eb8ff;\n   border-color: #6eb8ff transparent #6eb8ff transparent;\n   animation: spinner 1.2s linear infinite;\n   }\n\n   @keyframes spinner {\n      0% {\n         transform: rotate(0deg);\n      }\n      100% {\n         transform: rotate(360deg);\n      }\n   }\n</style>","<script>\n   /***************************************************************\n    * ButtonCancel                                                *\n    * --------------------                                        *\n    * control element in form of red circle button with cross     *\n    ***************************************************************/\n   export let title = 'Reset';\n</script>\n\n<button tabindex=\"0\" on:click alt={title} title={title} ></button>\n\n<style>\n   button {\n      background: #606060;\n      display: inline-block;\n      color: #fefefe;\n      font-size: 1em;\n      width: 1.3em;\n      height: 1.3em;\n      border: none;\n      border-radius: 50%;\n      box-shadow: none;\n      margin-left: 1.5em;\n      text-align: center;\n      padding: 0;\n      background-size: 40% 40%;\n      background-position: 50%;\n      background-repeat: no-repeat;\n      background-image:\n        url('data:image/svg+xml;utf8,<svg viewBox=\"0 0 100 100\" version=\"1.1\" style=\"stroke:%23fafafa;stroke-width:14;\" xmlns=\"http://www.w3.org/2000/svg\"><line x1=\"0\" y1=\"0\" x2=\"100\" y2=\"100\"/><line x1=\"0\" y1=\"100\" x2=\"100\" y2=\"0\"/></svg>');\n   }\n\n   button:hover {\n      background-color: crimson;\n   }\n</style>\n","<script>\n   /***************************************************************\n    * Range                                                       *\n    * --------------------                                        *\n    * control element for taking a numeric value from a range     *\n    ***************************************************************/\n\n   import { createEventDispatcher } from 'svelte';\n\n   export let id;                                        // text ID for the input element\n   export let value;                                     // initial value\n   export let min;                                       // smallest value of the range\n   export let max;                                       // largest value of the range\n   export let decNum = 1;                                // number of decimals to show the current value\n   export let step = +((max - min) / 100).toFixed(4);    // increment/decrement step\n   export let discrete = false;                          // logical, if selected value must be shown as solo\n\n\n   if (value < min || value > max) {\n      throw new Error('The value is outside of the provided range.');\n   }\n\n   if (min > max) {\n      throw new Error('The min and max values must be distinct.');\n   }\n\n   const dispatch = createEventDispatcher();\n\n   let sliderElement;\n   let sliderContainer;\n   let isDragging = false;\n\n   const computeValue = (p) => {\n      const tmpValue = min + p * (max - min);\n\n      // strange construction below is needed for:\n      // a. make a value fractionated according to step\n      // b. get rid of small decimals added by JS due to loss of precision\n      return(+(Math.round(tmpValue / step) * step).toFixed(4));\n   }\n\n   /**\n    * Returns relative position of the element 'e' inside the slider\n    * @param e\n    */\n   const getRelativePosition = (e) => {\n      const sliderRect = sliderElement.getBoundingClientRect();\n      const parentRect = sliderContainer.getBoundingClientRect();\n      const minX = sliderRect.x;\n      const maxX = parentRect.x + parentRect.width;\n\n      return (e.clientX - minX) / (maxX - minX);\n   }\n\n   /**\n    * Handler of changing start event\n    * @param e\n    */\n   const startChanging = (e) => {\n      const p = getRelativePosition(e);\n      if (p < 0 || p > 1) return;\n      isDragging = p * 100 > width - 5 && p * 100 < width + 5;\n   }\n\n   /**\n    * Handler of changing cancel event\n    * @param e\n    */\n   const cancelChanging = (e) => {\n      isDragging = false;\n   }\n\n   /**\n    * Handler of changing stop event\n    * @param e\n    */\n   const stopChanging = (e) => {\n      isDragging = false;\n      const p = getRelativePosition(e);\n      if (p < 0 || p > 1) return;\n\n      value = computeValue(p);\n   }\n\n   /**\n    * Handler of event when changes are made by mouse wheel\n    * @param e\n    */\n   const changingByWheel = (e) => {\n      let newValue = value + step * e.deltaY * 0.5;\n      if (newValue < min) newValue = min;\n      if (newValue > max) newValue = max;\n\n      value = +(Math.round(newValue / step) * step).toFixed(4);\n   }\n\n   /**\n    * Handler of event when changes are made by dragging an element\n    * @param e\n    */\n   const changing = (e) => {\n      if (!isDragging) return;\n      const p = getRelativePosition(e);\n      if (p < 0 || p > 1) return;\n\n      value = computeValue(p);\n   }\n\n   /**\n    * Handler of event when changes are made by pressing left and right arrows\n    * @param e\n    */\n   const changingByKeys = (e) => {\n      if (e.key === 'ArrowLeft') {\n         value = value - step < min ? min : value - step;\n         return\n      }\n\n      if (e.key === 'ArrowRight') {\n         value = value + step > max ? max : value + step;\n         return\n      }\n   }\n\n   $: width = min === max ? 100 : (value - min) / (max - min) * 100;\n   $: dispatch('change', value);\n</script>\n\n<div\n   id={id}\n   role=\"slider\"\n   tabindex=\"0\"\n   aria-valuenow={value}\n   aria-valuemin={min}\n   aria-valuemax={max}\n   class=\"range-slider-container\"\n   class:discrete={discrete}\n   bind:this={sliderContainer}\n   on:mousewheel|preventDefault={changingByWheel}\n   on:mousemove={changing}\n   on:keydown={changingByKeys}\n   on:mousedown={startChanging}\n   on:mouseleave={cancelChanging}\n   on:mouseup={stopChanging}>\n\n      {#if !discrete}\n         <div class=\"range-slider\" style=\"width:{width}%\" bind:this={sliderElement}>\n         {#if width > 25}\n         <span style=\"padding-right:0.25em;color:#fefefe\" class=\"range-value\">{value.toFixed(decNum)}</span>\n         {/if}\n         </div>\n         {#if width <= 25}\n         <span style=\"padding-left:0.25em;color:#606060\" class=\"range-value\">{value.toFixed(decNum)}</span>\n         {/if}\n      {:else}\n         <div class=\"range-slider\" style=\"width:{width}%\" bind:this={sliderElement}>\n         {#if width >= 75}\n         <span style=\"padding-right:0.25em;color:#606060\" class=\"range-value\">{value.toFixed(decNum)}</span>\n         {/if}\n         </div>\n         {#if width < 75}\n         <span style=\"padding-left:0.25em;color:#606060\" class=\"range-value\">{value.toFixed(decNum)}</span>\n         {/if}\n      {/if}\n</div>\n\n\n<style>\n   .range-slider-container {\n      position: relative;\n      box-sizing: border-box;\n      display: inline-block;\n      flex: 1 1 auto;\n      background: #f0f0f0;\n      height: 1.5em;\n      margin: 0;\n      padding: 1px 0;\n      width: auto;\n      border-radius: 2px;\n      cursor: default;\n\n      display: flex;\n      align-items: center;\n      user-select: none;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n   }\n\n   .range-slider {\n      position: relative;\n      display: flex;\n      justify-content: right;\n      align-items: center;\n      box-sizing: border-box;\n      border-radius: 2px;\n      text-align: right;\n      color: #fafafa;\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      cursor:default;\n      background: #6EB8FF;\n      border-right: 5px solid #528abe;\n      cursor: default;\n      user-select: none;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n   }\n\n   .range-value {\n      display: inline-block;\n      margin: 0;\n      padding: 0;\n      cursor: default;\n      font-size: 0.85em;\n\n\n      user-select: none;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n   }\n\n   .range-slider-container.discrete > .range-slider {\n      background: transparent;\n      border-right: 8px solid #528abe;\n      border-radius: 0;\n   }\n\n\n</style>\n\n","<script>\n   /*************************************************************/\n   /* ModelCalculator                                           */\n   /* -------------------------                                 */\n   /* component for training a PCA model                        */\n   /*************************************************************/\n\n   import { pca_fit } from '../../../shared/wasm/dist/pca';\n   import { app_pca_predict, genhash } from '../../../shared/utils.js';\n\n   import Select from '../../../shared/controls/Select.svelte';\n   import Container from '../../../shared/controls/Container.svelte';\n   import Button from '../../../shared/controls/Button.svelte';\n   import Spinner from '../../../shared/controls/Spinner.svelte';\n   import ButtonCancel from '../../../shared/controls/ButtonCancel.svelte';\n   import Range from '../../../shared/controls/Range.svelte';\n\n\n   /*****************************************/\n   /* Component parameters                  */\n   /*****************************************/\n\n   // inputs\n   export let WASM;               // promise with WASM methods\n   export let dataset;            // object with training set\n   export let outliers;           // vector with dataset row numbers (from 0) marked as outliers\n\n   // outputs\n   export let res;                // object with PCA results\n   export let model;              // object with PCA model\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // error handling parameetrs\n   let status = 'neutral';\n   let errMsg = null;\n\n   // model calculation parameters\n   let ncomp = 1;\n   let center = 'yes';\n   let scale = 'no';\n\n   // promise for model calculation method\n   let promise;\n\n   /**\n    * Fits PCA model and apply it to training set.\n    * @param {Object} dataset - object with training set.\n    * @param {Number} ncomp - number of PCs in the model.\n    * @param {boolean} center - mean center data columns or not.\n    * @param {boolean} scale - standardize data columns or not.\n    *\n    * Method does not return anything but assign values to the global parameters \"model\" and \"res\".\n    */\n   async function computeModel(dataset, ncomp, center, scale) {\n      promise = WASM()\n         .then(Module => {\n            status = 'computing';\n\n            // fit model and add extra parameters\n            const m = pca_fit(Module, dataset.values, ncomp, center, scale, outliers);\n            m['hash'] = genhash();                  // unique hash number to trace model updates\n\n            m['exclvars'] = [];                            // array with indices of excluded variables - reserved for future use\n            m['varlabels'] = dataset.varlabels;            // array with labels for variables\n            m['varindices'] = dataset.varindices;          // variable indices\n            m['varvalues'] = dataset.varvalues;            // variable values if available (wavelength, etc.)\n            m['varvaluesName'] = dataset.varvaluesName;    // title for variable axis\n            m['varvaluesUnits'] = dataset.varvaluesUnits;  // units if variales are represented by numeric values, e.g. nm\n            m['varrev'] = dataset.varrev                   // if variables must be reversed\n            m['exclvars'] = [];                            // array with excluded variables\n\n            m['prep'] = [];                                // array with preprocessing methods — reserved for future use\n\n            // make predictions\n            const r = app_pca_predict(Module, m, dataset, outliers);\n\n            // set global variables and status of the component\n            model = m;\n            res = r;\n            status = 'success';\n         })\n         .catch(e =>{\n            // something went wrong\n            model = null;\n            status = 'error';\n            errMsg = e;\n         });\n   }\n\n   /**\n    * Event handler for computing the model\n    * @param e — event object.\n    */\n   function compute(e) {\n      status = 'neutral';\n      errMsg = null;\n      computeModel(dataset, ncomp, center === 'yes', scale === 'yes');\n   }\n\n   /**\n    * Resets the component status.\n    */\n   function reset() {\n      status = 'neutral';\n      promise = null;\n      model = null;\n      errMsg = null;\n   }\n\n   // if data file is empty reset status and error messages\n   $: if (dataset === null) reset();\n\n   // set initial number of components depending on dataset size and manual limit of A = 20\n   $: maxNComp = dataset ? Math.min(dataset.values.nrows - 2 - outliers.length, dataset.values.ncols - 1) : null;\n   $: ncomp = maxNComp ? Math.min(maxNComp, 20) : null;\n</script>\n\n{#if (dataset && !model) && status !== 'computing'}\n   <!-- settings for global model calculation -->\n   <Container label=\"# of PCs\">\n      <Range id=\"ncomp\" bind:value={ncomp} min={1} max={maxNComp} step={1} decNum={0} />\n   </Container>\n   <Container label=\"Center\">\n      <Select id=\"center\" bind:value={center} options={[\"yes\", \"no\"]} />\n   </Container>\n   <Container label=\"Scale\">\n      <Select id=\"scale\" bind:value={scale} options={[\"yes\", \"no\"]} />\n   </Container>\n   <Container label=\" \">\n      <Button on:click={compute}>Create model</Button>\n   </Container>\n{/if}\n\n\n{#if promise}\n\n   <!-- calculation is in process -->\n   {#await promise}\n      <Container>\n         <Spinner />\n         <p>Computing global model...</p>\n      </Container>\n\n   {:then value}\n      <!-- status if succeed -->\n      {#if model !== null}\n      <Container>\n         <p>Global model is computed: {model.ncomp} PCs</p>\n         <ButtonCancel on:click={reset} />\n      </Container>\n      {/if}\n\n   {:catch error}\n      <!-- error message if failed -->\n      <Container status=\"error\">\n         <p>{error}</p>\n      </Container>\n   {/await}\n\n{/if}\n\n\n<!-- error message -->\n{#if status === 'error' || errMsg}\n<Container status=\"error\">\n   <p>{errMsg}</p>\n</Container>\n{/if}\n","<script>\n   /*************************************************************/\n   /* AppPlots global component for plots routing               */\n   /* -------------------------------                           */\n   /* show list of plots and let user to select one, and        */\n   /* interact with it.                                         */\n   /*************************************************************/\n\n\timport { createEventDispatcher } from 'svelte';\n\n   // import control components\n   import Container from '../../../shared/controls/Container.svelte';\n   import Button from '../../../shared/controls/Button.svelte';\n\n   /*****************************************/\n   /* Component parameters                  */\n   /*****************************************/\n\n   // inputs\n   export let res;\n   export let model;\n   export let options;\n   export let dataset;\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // indices of selected object and variable\n   let selected_object = -1;\n\n   // selected plot number and its parameters\n   let plot_container;\n   let params = null;\n   let selected_plot_index = 0;\n   let selected_plot = options[selected_plot_index];\n\n   // event dispatcher\n   const dispatch = createEventDispatcher();\n\n   /**\n    * Switches between plots\n    * @param {Number} i - plot index to select\n    */\n   function switchPlot(i) {\n      params = null;\n      selected_plot_index = i;\n      selected_plot = options[selected_plot_index]\n   }\n\n   /**\n    * Event handler for selecting an object.\n    * @param el\n    */\n   function markOutlier(el) {\n      dispatch('setoutlier', {id: selected_object});\n   }\n</script>\n\n<div class=\"plot-container\">\n\n   <!-- column with current plot -->\n   <div bind:this={plot_container} class=\"plot-area\">\n      {#if selected_plot.scope === 'scores'}\n         <svelte:component\n            this={selected_plot.plotComponent}\n            bind:selected={selected_object}\n            {res}\n            {dataset}\n            {params}\n         />\n      {:else if selected_plot.scope === 'objects'}\n         <svelte:component\n            this={selected_plot.plotComponent}\n            bind:selected={selected_object}\n            {res}\n            {params}\n         />\n      {:else if selected_plot.scope === 'variables'}\n         <svelte:component\n            this={selected_plot.plotComponent}\n            {model}\n            {params}\n         />\n      {:else if selected_plot.scope === 'both'}\n         <svelte:component\n            this={selected_plot.plotComponent}\n            {res}\n            {model}\n            {params}\n         />\n      {:else}\n         <svelte:component\n            this={selected_plot.plotComponent}\n            {res}\n            {params}\n         />\n      {/if}\n   </div>\n\n   <!-- column with plot selectors and current plot settings -->\n   <div class=\"plot-controls-area\">\n      {#each options as {label, scope, plotComponent, controlsComponent}, i}\n         {#if selected_plot_index === i}\n\n            {#if selected_plot.scope === 'objects'}\n            <svelte:component this={controlsComponent} bind:params={params} {res} />\n            {:else if selected_plot.scope === 'variables'}\n            <svelte:component this={controlsComponent} bind:params={params} {model} />\n            {:else}\n            <svelte:component this={controlsComponent} bind:params={params} {res} />\n            {/if}\n\n            {#if (scope === 'objects' || scope === 'scores') && selected_object >= 0}\n            <Container label=\"Selected\">\n               <div class=\"buttons button-outlier\">\n               <Button on:click={markOutlier}>remove</Button>\n               </div>\n            </Container>\n            {/if}\n\n         {:else}\n         <button\n            class=\"plot-selector\"\n            on:keydown={() => switchPlot(i)}\n            on:click={() => switchPlot(i)}\n         >{label}</button>\n         {/if}\n      {/each}\n\n   </div>\n</div>\n\n\n<style>\n   .plot-controls-area > :global(.control-element:has(.button-outlier)) {\n      background: #fff0e8;\n   }\n\n   .button-outlier  :global(span:last-child > button) {\n      color: white;\n      border-color: crimson;\n      background: crimson;\n   }\n\n   .button-outlier  :global(span:last-child > button:hover) {\n      background: #DC143C20;\n      border-color: #DC143C80;\n      color: crimson;\n   }\n\n   .buttons {\n      position: relative;\n      box-sizing: border-box;\n      display: inline-block;\n      flex: 1 1 auto;\n      margin: 0;\n      padding: 2px 0;\n      width: auto;\n      border-radius: 2px;\n      cursor: default;\n   }\n\n   .plot-container {\n      width: 100%;\n      height: 100%;\n      box-sizing: border-box;\n      padding: 0;\n      display: grid;\n      grid-template-rows: 1fr;\n      grid-template-columns: 1fr minmax(270px, 30%);\n   }\n\n   .plot-area {\n      padding: 1em;\n      margin-top: 0.25rem;\n      border-radius: 0.25em;\n      background: #fefefe;\n   }\n\n   .plot-controls-area {\n      padding: 0 0.25em 0 0.5em;\n   }\n\n   .plot-selector {\n      cursor: pointer;\n      color: #606060;\n      background: #fffef480;\n      box-sizing: border-box;\n      padding: 0.5em 1em;\n      margin: 0.25em 0;\n      border-radius: 0.25rem;\n      box-shadow: none;\n      border: none;\n      width: 100%;\n      text-align: left;\n      font-size: 1rem;\n   }\n\n   .plot-selector:hover {\n      background: #e0e0e0;\n      color: #403020;\n   }\n\n   :global(div.plot-container.off-screen) {\n      position:absolute;\n      top:0;\n      left:50%;\n      width: 650px;\n      height: 600px;\n      background: white;\n      z-index: 999;\n   }\n\n   @media(min-width:1100px) {\n      .plot-container {\n         grid-template-columns: 1fr minmax(285px, 30%);\n      }\n   }\n\n   @media(min-width:1300px) {\n      .plot-container {\n         grid-template-columns: 1fr max(300px, 30%);\n      }\n   }\n\n   @media(min-width:1600px) {\n      .plot-container {\n         grid-template-columns: 1fr 400px;\n      }\n   }\n\n</style>","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","import { cbind, vector, isvector, Vector } from 'mdatools/arrays';\nimport { min, max, diff } from 'mdatools/stat';\n\n\n/**\n * Creates label for a tick factor.\n *\n * @param {Number} tf - tick factor value (negative or positive)\n * @returns\n */\nexport function getTickFactorLabel(tf) {\n   if (tf === 0) return '';\n   return `<tspan>&times;10</tspan><tspan baseline-shift=\"super\">${(tf).toString()}</tspan>`;\n}\n\n\n/**\n * Trim number leaving only significant decimals.\n * @param {number} num\n * @returns trimmed number\n */\nexport function trimNum(num) {\n\n   // check if number is whole — return as is\n   if (num === Math.round(num)) return num;\n\n   // Convert to string with precision to maintain significant digits\n   let str = num.toPrecision(12);\n\n   // Remove trailing zeros\n   str = str.replace(/\\.?0+$/, '');\n\n   // Convert back to number\n   return parseFloat(str);\n}\n\n/**\n * Generate vector with axis tick labels and tick factor based on numeric tick values.\n *\n * @param {Vector} ticks - vector with numeric tick values.\n *\n * @returns {Array} an array with tick factor and array with tick labels.\n */\nexport function getTickLabels(ticks) {\n\n   if (ticks === undefined) return undefined;\n   if (ticks.length === 1) return [0, [ticks[0].toString()]];\n\n   // compute and correct step between ticks\n   let step = trimNum(Math.abs(min(diff(ticks))));\n   let tickFactor = 0;\n\n   // step is large (over 1)\n   if (step >= 1 && ticks.length > 1) {\n      if (step < 100) return [0, Array.from(ticks).map(v => v.toFixed(0))];\n      let digNum = Math.ceil(trimNum(Math.log10(step)));\n      tickFactor = digNum - 2;\n      return [tickFactor, Array.from(ticks).map(v => (v / Math.pow(10, tickFactor)).toFixed(0))];\n   }\n\n   let decNum = Math.ceil(-trimNum(Math.log10(step)));\n   if (decNum <= 2) {\n      return [0, Array.from(ticks).map(v => v.toFixed(decNum))];\n   }\n   tickFactor = decNum - 2;\n   decNum = 2;\n\n   if (trimNum(Math.abs(max(ticks))) <= 10) {\n      return [-tickFactor, Array.from(ticks).map(v => (v * Math.pow(10, tickFactor)).toFixed(decNum))];\n   } else {\n      return [-tickFactor, Array.from(ticks).map(v => (v / Math.pow(10, tickFactor)).toString())];\n   }\n}\n\n\n/**\n * Check coordinates and convert them to vector if necessary.\n *\n * @param {Array|Vector} x - vector or array with coordinates.\n * @param {string} source - name of component which called the method (needed for error message).\n *\n * @returns {Vector}\n *\n */\nexport function checkCoords(x, source) {\n\n   if (Array.isArray(x)) {\n      x = vector(x);\n   }\n\n   if (!isvector(x)) {\n      throw Error(source + \": coordinates must be provided as array or instance of Vector class.\");\n   }\n\n   if (x.length < 1) {\n      throw Error(source + \": vector with coordinates is empty.\");\n   }\n\n   return x;\n}\n\n\n/**\n * Create string with coordinates of SVG polygon in 3D.\n *\n * @param {Array|Vector} x - vector with x-coordinates of polygon points.\n * @param {Array|Vector} y - vector with y-coordinates of polygon points.\n * @param {Array|Vector} z - vector with y-coordinates of polygon points.\n * @param {Array} tM - transformation matrix for 3D->2D (from 'Axes').\n * @param {Object} axes - JSON with Axes context.\n *\n * @returns {string} string with coordinates.\n *\n */\nexport function val2p3d(x, y, z, tM, axes) {\n\n   if (x === undefined || y === undefined) return undefined;\n\n   const [px, py] = axes.transform(cbind(checkCoords(x), checkCoords(y), checkCoords(z)), tM);\n\n   if (px.length !== py.length) {\n      throw Error('PlotSeries: parameters \"xValues\", \"yValues\" and \"zValues\" must be numeric vectors of the same length.');\n   }\n\n   let p = \"\";\n   for (let i = 0; i < px.length; i++) {\n      p += px[i] + \",\" + py[i] + \" \";\n   }\n\n   return p;\n}\n\n\n/**\n * Create string with coordinates of SVG polygon.\n *\n * @param {Array|Vector} x - vector with x-coordinates of polygon points.\n * @param {Array|Vector} y - vector with y-coordinates of polygon points.\n * @param {Array} tX - transformation parameters for x-coordinates (from 'Axes').\n * @param {Array} tY - transformation parameters for y-coordinates (from 'Axes').\n * @param {Object} axes - JSON with Axes context.\n *\n * @returns {string} string with coordinates.\n *\n */\nexport function val2p(x, y, tX, tY, axes) {\n\n   if (x === undefined || y === undefined) return undefined;\n\n   const px = axes.transform(checkCoords(x, 'val2p'), tX.coords);\n   const py = axes.transform(checkCoords(y, 'val2p'), tY.coords);\n\n   if (px.length != py.length) {\n      throw Error('PlotSeries: parameters \"xValues\" and \"yValues\" must be numeric vectors of the same length.');\n   }\n\n   let p = \"\";\n   for (let i = 0; i < px.length; i++) {\n      p += px[i] + \",\" + py[i] + \" \";\n   }\n\n   return p;\n}\n\n/**\n * Computes nice tick values for axis.\n *\n * @param {Array} ticks - vector with ticks if alredy available (if not, new will be computed).\n * @param {Array} lim - vector with axis limits tickets must be computed for.\n * @param {number} maxTickNum - maximum number of ticks to compute.\n * @param {boolean} round - round or not the fractions when computing nice numbers for the ticks.\n * @param {boolean} whole - should the ticks be a whole number.\n * @param {Number} deltaFactor - percent of range to use as internal margins\n *\n * @returns {Array} an array with computed tick positions.\n *\n */\nexport function getAxisTicks(ticks, lim, maxTickNum, round, whole, deltaFactor) {\n\n   if (round === undefined || round === null) {\n      round = true;\n   }\n\n   if (whole === undefined || whole === null) {\n      whole = false;\n   }\n\n   if (deltaFactor === undefined) {\n      deltaFactor = 0.001;\n   }\n\n   // if ticks are already provided do not recompute them\n   if (ticks !== undefined) {\n      if (Array.isArray(ticks)) {\n         ticks = vector(ticks);\n      }\n\n      if (!isvector(ticks)) {\n         throw Error('getAxisTicks: axis ticks must be provided as an array or as a vector.');\n      }\n\n      return ticks.filter(x => x >= lim[0] & x <= lim[1]);\n   }\n\n   // check if limits are ok\n   if (typeof(lim) !== \"object\" || lim[0] === undefined || lim[1] === undefined) return undefined;\n\n   // get range as a nice number and compute min, max and steps for the tick sequence\n   const delta = Math.abs((lim[1] - lim[0])) * deltaFactor;\n   const localRange = lim[1] - lim[0] - 2 * delta;\n   const exponent = Math.floor(Math.log10(localRange));\n   const fraction =  1 / Math.pow(10, exponent - 1);\n   const range = Math.round(localRange * fraction) / fraction;\n\n   let tickSpacing = niceNum(range / maxTickNum, false);\n   if (whole) {\n      if (tickSpacing < 1) tickSpacing = 1;\n      tickSpacing = Math.round(tickSpacing);\n   }\n\n   // compute smallest and largest tick rounded to tickSpacing\n   let tickMin = Math.ceil((lim[0] + delta ) / tickSpacing) * tickSpacing;\n   let tickMax = Math.floor((lim[1] - delta) / tickSpacing) * tickSpacing;\n\n   // adjust largest tick if it is too close to axis limit and tick spacing\n   // is small (so tick factor may appear)\n   if (tickSpacing < 0.1 && (lim[1] - tickMax) < (tickSpacing / 2)) tickMax = tickMax - tickSpacing;\n\n   // recompute maxTickNum\n   maxTickNum = (Math.ceil(trimNum((tickMax - tickMin) / tickSpacing)) + 1);\n\n   // create a sequence of ticks\n   ticks = Vector.zeros(maxTickNum);\n   for (let i = 0; i < maxTickNum; i++) {\n      ticks.v[i] = tickMin + tickSpacing * i;\n   }\n\n   // if step is smaller than 1 round values to remove small decimals accidentially added by JS\n   if (Math.abs(tickSpacing) < 1) {\n      const decNum = Math.round(-Math.log10(tickSpacing));\n      const r = Math.pow(10, 1 + Math.round(-Math.log10(tickSpacing)));\n      ticks = ticks.apply(v => (Math.round((v + Number.EPSILON) * r) / r));\n   }\n\n   // make sure the ticks are not aligned with axes limits\n   return ticks.filter(x => x >= lim[0] & x <= lim[1]);\n}\n\n\n/**\n * Computes a nice spacing value for a given range.\n *\n * @param {Number} localRange - a range (max - min).\n * @param {boolean} round - round or not the fractions when computing the number.\n *\n * @returns {Number} the computed spacing value.\n *\n */\nexport function niceNum(localRange,  round) {\n\n   const exponent = Math.floor(Math.log10(localRange));\n   const fraction = localRange / Math.pow(10, exponent);\n   let niceFraction;\n\n   if (round) {\n      if (fraction < 1.5)\n         niceFraction = 1;\n      else if (fraction < 3)\n         niceFraction = 2;\n      else if (fraction < 7)\n         niceFraction = 5;\n      else\n         niceFraction = 10;\n   } else {\n      if (fraction <= 1)\n         niceFraction = 1;\n      else if (fraction <= 2)\n         niceFraction = 2;\n      else if (fraction <= 5)\n         niceFraction = 5;\n      else\n         niceFraction = 10;\n   }\n\n   return niceFraction * Math.pow(10, exponent);\n}\n\n\n/**\n * Rounds coordinate values to single decimal\n */\nexport function roundCoords(x) {\n   return Math.round(x * 10) / 10\n}\n\n\n/**\n * Computes a scale level.\n *\n * @param {numeric} width - width of plotting area in pixels.\n * @param {numeric} height - height of plotting area in pixels.\n *\n * @returns {text} the scale level (\"small\", \"medium\" or \"large\").\n *\n */\nexport function getScale(width, height) {\n   if (height < 300.2 || width < 400.2) return \"small\";\n   if (height < 400.2 || width < 700.2) return \"medium\";\n   if (height < 650.2 || width < 850.2) return \"large\";\n   return \"xlarge\";\n}\n\n/**\n * Computes a scale level for single axis.\n *\n * @param {numeric} size - width or height of plotting area in pixels.\n * @returns {text} the scale level (\"small\", \"medium\" or \"large\").\n *\n */\nexport function getAxisScale(width, size) {\n   if (width < 400.2) return \"small\";\n   if (width < 700.2) return \"medium\";\n   if (width < 900.2) return \"large\";\n   return \"xlarge\";\n}\n\n/*************************************************************/\n/* Functions needed to adjust DPI of resulting PNG image     */\n/* taken from: https://github.com/shutterstock/changeDPI     */\n/* and modified                                              */\n/*************************************************************/\n\n/**\n * Create table for PNG CRC calculation\n */\nfunction createPngDataTable() {\n   const crcTable = new Int32Array(256);\n   for (let n = 0; n < 256; n++) {\n      let c = n;\n      for (let k = 0; k < 8; k++) {\n         c = (c & 1) ? 0xedb88320 ^ (c >>> 1) : c >>> 1;\n      }\n      crcTable[n] = c;\n   }\n   return crcTable;\n}\n\n/**\n * Calculate CRC for PNG image\n * @param buf image data\n */\nfunction calcCrc(buf) {\n   let c = -1;\n   let pngDataTable = createPngDataTable();\n   for (let n = 0; n < buf.length; n++) {\n      c = pngDataTable[(c ^ buf[n]) & 0xFF] ^ (c >>> 8);\n   }\n   return c ^ -1;\n}\n\n/**\n * Change DPI of PNG image\n * @param dataArray image data\n * @param dpi new DPI\n */\nfunction changeDpiOnArray(dataArray, dpi) {\n\n   const physChunk = new Uint8Array(13);\n   // chunk header pHYs\n   // 9 bytes of data\n   // 4 bytes of crc\n   // this multiplication is because the standard is dpi per meter.\n   dpi *= 39.3701;\n   physChunk[0] = 'p'.charCodeAt(0);\n   physChunk[1] = 'H'.charCodeAt(0);\n   physChunk[2] = 'Y'.charCodeAt(0);\n   physChunk[3] = 's'.charCodeAt(0);\n   physChunk[4] = dpi >>> 24; // dpiX byte 3\n   physChunk[5] = dpi >>> 16; // dpiX byte 2\n   physChunk[6] = dpi >>> 8;  // dpiX byte 1\n   physChunk[7] = dpi & 0xff; // dpiX byte 0\n   physChunk[8] = physChunk[4];  // dpiY byte 3\n   physChunk[9] = physChunk[5];  // dpiY byte 2\n   physChunk[10] = physChunk[6]; // dpiY byte 1\n   physChunk[11] = physChunk[7]; // dpiY byte 0\n   physChunk[12] = 1; // dot per meter....\n\n   // compute and add CRC for physChunk\n   const crc = calcCrc(physChunk);\n   const crcChunk = new Uint8Array(4);\n   crcChunk[0] = crc >>> 24;\n   crcChunk[1] = crc >>> 16;\n   crcChunk[2] = crc >>> 8;\n   crcChunk[3] = crc & 0xff;\n\n   // chunk structur 4 bytes for length is 9\n   const chunkLength = new Uint8Array(4);\n   chunkLength[0] = 0;\n   chunkLength[1] = 0;\n   chunkLength[2] = 0;\n   chunkLength[3] = 9;\n\n   const finalHeader = new Uint8Array(54);\n   finalHeader.set(dataArray, 0);\n   finalHeader.set(chunkLength, 33);\n   finalHeader.set(physChunk, 37);\n   finalHeader.set(crcChunk, 50);\n   return finalHeader;\n}\n\n/**\n * Change DPI of PNG image\n * @param base64Image image data\n * @param dpi new DPI\n */\nfunction changeDPI(base64Image, dpi) {\n\n   const dataSplitted = base64Image.split(',');\n   const format = dataSplitted[0];\n   const body = dataSplitted[1];\n\n   // here we assume there is pHYS chunk in the header\n   const headerLength = 33 / 3 * 4;\n\n   const stringHeader = body.substring(0, headerLength);\n   const restOfData = body.substring(headerLength);\n   const headerBytes = atob(stringHeader);\n   const dataArray = new Uint8Array(headerBytes.length);\n   for (let i = 0; i < dataArray.length; i++) {\n      dataArray[i] = headerBytes.charCodeAt(i);\n   }\n   const finalArray = changeDpiOnArray(dataArray, dpi, 'image/png');\n   const base64Header = btoa(String.fromCharCode(...finalArray));\n   return [format, ',', base64Header, restOfData].join('');\n}\n\n\n/**\n * Downloads plot (or any other SVG image) as a PNG file.\n *\n * @param {SVGElement} svg - root SVG element of a plot\n * @param {string} fileName - filename to save with (without extension)\n * @param {number} width - desired image width in cm\n * @param {number} height - desired image height in cm\n * @param {number} res - resolution (pixels per inch)\n *\n */\nexport function downloadPNG (svg, fileName, width, height, res) {\n\n   if (!width) {\n      width = 10;\n   }\n\n   if (!height) {\n      height = 10;\n   }\n\n   if (!res) {\n      res = 300;\n   }\n\n   if (width < 1 || width > 30) {\n      throw Error('Parameter \"width\" must be between 1 and 30 (cm).');\n   }\n\n   if (height < 1 || height > 30) {\n      throw Error('Parameter \"height\" must be between 1 and 30 (cm).');\n   }\n\n   if (res < 50 || res > 1200) {\n      throw Error('Parameter \"res\" must be between 50 and 1200 (ppi).');\n   }\n\n   if (!svg || !(svg instanceof SVGElement)) {\n      throw Error('Parameter \"svg\" is not an instance of SVGElement.');\n   }\n\n   if (!fileName || fileName.trim() === '') {\n      fileName = 'plot';\n   }\n\n   // recalculate width and height to pixels\n   width = width / 2.54 * res;\n   height = height / 2.54 * res;\n\n   setTimeout(() => {\n\n      // compute canvas size based on SVG size and desired PNG WIDTH in pixels\n      const svgHeight = svg.clientHeight;\n      const svgWidth = svg.clientWidth;\n      const scaleFactor = Math.max(width / svgWidth, height / svgHeight);\n\n      // create a new canvas element\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n\n      // set the canvas size to match the SVG element\n      canvas.width =  svgWidth * scaleFactor;\n      canvas.height = svgHeight * scaleFactor;\n\n   // set corresponding attributes for SVG element\n      svg.setAttribute('width', canvas.width);\n      svg.setAttribute('height', canvas.height);\n\n      // draw a white background\n      context.fillStyle = 'white';\n      context.scale(scaleFactor, scaleFactor)\n      context.fillRect(0, 0, canvas.width, canvas.height);\n\n      // draw the SVG onto the canvas\n      const svgXml = new XMLSerializer().serializeToString(svg);\n      const blob = new Blob([svgXml], { type: 'image/svg+xml;charset=utf-8' });\n      const url = URL.createObjectURL(blob);\n\n      const img = new Image();\n\n      img.onload = function () {\n\n         // draw the image\n         context.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n         // create a data URL for the canvas and adjust its DPI\n         const dataURL = canvas.toDataURL('image/png');\n         const dataURL2 = changeDPI(dataURL, res);\n\n         // create a temporary link and trigger the download\n         const downloadLink = document.createElement('a');\n         downloadLink.href = dataURL2;\n         downloadLink.download = `${fileName}.png`;\n         downloadLink.click();\n      };\n\n      // set the image source\n      img.src = url;\n   }, 20);\n}\n\n\n/**\n * Downloads plot (or any other SVG image) as an SVG file.\n *\n * @param {SVGElement} svg - root SVG element of a plot\n * @param {string} fileName - filename to save with (without extension)\n */\nexport function downloadSVG(svg, fileName) {\n\n   if (!svg || !(svg instanceof SVGElement)) {\n      throw Error('Variable \"svg\" is not an instance of SVGElement.');\n   }\n\n   if (!fileName || fileName.trim() === \"\") {\n      fileName = \"plot\";\n   }\n\n   const svgHeight = svg.clientHeight;\n   const svgWidth = svg.clientWidth;\n   svg.setAttribute('width', svgWidth + 'px');\n   svg.setAttribute('height', svgHeight + 'px');\n   svg.setAttribute('viewBox', `0 0 ${svgWidth} ${svgHeight}`);\n\n   const blob = new Blob([svg.outerHTML], { type: 'image/svg+xml' });\n   const url = window.URL.createObjectURL(blob)\n   const a = document.createElement('a')\n   a.setAttribute('href', url)\n   a.setAttribute('download', `${fileName}.svg`);\n   a.click()\n}\n\n\n/**\n * Returns plot BLOB to copy it to clipboard.\n *\n * @param {SVGElement} svg - root SVG element of a plot\n * @param {number} width - desired image width in pixels\n * @param {number} height - desired image height in pixels\n *\n */\nexport async function createPngBlob(svg, width, height) {\n\n   // compute canvas size based on SVG size and scaling factor\n   // based on desired size in pixels\n   const svgHeight = svg.clientHeight;\n   const svgWidth = svg.clientWidth;\n   const scaleFactor = Math.max(width / svgWidth, height / svgHeight);\n\n   // create a new canvas element and 2D context for it\n   const canvas = document.createElement('canvas');\n   const context = canvas.getContext('2d');\n\n   // set the canvas size to match the size of SVG element\n   canvas.width =  svgWidth * scaleFactor;\n   canvas.height = svgHeight * scaleFactor;\n\n   // scale the context\n   context.scale(scaleFactor, scaleFactor)\n\n   // set corresponding attributes for SVG element\n   svg.setAttribute('width', canvas.width);\n   svg.setAttribute('height', canvas.height);\n\n   // create promise\n   const promise = new Promise((resolve, reject) => {\n\n      // serialzie SVG, create blob and URL for it\n      const svgData = new XMLSerializer().serializeToString(svg);\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml;charset=utf-8' });\n      const DOMURL = window.URL || window.webkitURL || window;\n      const url = DOMURL.createObjectURL(svgBlob);\n\n      // create image an image and add callback\n      const img = new Image();\n      img.onload = function () {\n\n         // draw the image\n         context.drawImage(img, 0, 0, canvas.width, canvas.height);\n         DOMURL.revokeObjectURL(url);\n\n         // convert canvas to blob\n         canvas.toBlob(function (blob) {\n            if (blob) {\n               resolve(blob);\n            } else {\n               reject(new Error('Failed to create blob'));\n            }\n         }, 'image/png');\n      };\n\n      // add error callback\n      img.onerror = function (err) {\n         reject(err);\n      };\n\n      // assign value to run the onload callback\n      img.src = url;\n   });\n\n   // resolve promise and return the result\n   return (await promise);\n}","<script>\n   /****************************************************\n   * Axes                                              *\n   * --------------------                              *\n   * root item for any plot                            *\n   *****************************************************/\n\n\timport { setContext, createEventDispatcher, onMount, onDestroy } from 'svelte';\n\timport { writable } from 'svelte/store';\n   import { isvector, vector, Vector } from 'mdatools/arrays';\n   import { roundCoords, getScale, downloadSVG, downloadPNG, createPngBlob, getAxisScale } from '../Utils.js';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let limX;                                   // array with limits for x-axis (in plot units) [min, max]\n   export let limY;                                   // array with limits for y-axis (in plot units) [min, max]\n   export let title = '';                             // title of the plot\n   export let xLabel = '';                            // label for x-axis\n   export let yLabel = '';                            // label for y-axis\n   export let margins = [1.0, 0.75, 0.5, 0.5];        // margins [bottom, left, top, right] )\n\n\n   /***********************************************/\n   /* Input parameters for downloading and copy   */\n   /***********************************************/\n   export let downloadLinks = 'none';                // how to show download links panel ('none', 'hover', 'fixed')\n   export let fileName = 'plot';                      // file name for download (without extension)\n   export let pngWidth = 8;                           // width of PNG image in cm\n   export let pngHeight = 8;                          // height of PNG image in cm\n   export let pngRes = 300;                           // resolution of PNG image (pixels per inch)\n   export let clipboardWidth = 1200;                  // width of PNG image to copy to clipboard in pixels\n   export let clipboardHeight = 800;                  // height of PNG image to copy to clipboard in pixels\n\n\n   /*****************************************/\n   /* Constants                             */\n   /*****************************************/\n\n   // event dispatcher\n   const dispatch = createEventDispatcher();\n\n   // how big are margins (number of pixels in unit margin value) between axis and plot area if axis are shown\n   const AXES_MARGIN_FACTORS = {\n      'small': 30,\n      'medium': 40,\n      'large': 50,\n      'xlarge': 60\n   }\n\n   // number of x-ticks along each axis\n   const XTICK_NUM = {\n      'small': 5,\n      'medium': 8,\n      'large': 12,\n      'xlarge': 15\n   };\n\n   // number of y-ticks along each axis\n   const YTICK_NUM = {\n      'small': 6,\n      'medium': 10,\n      'large': 14,\n      'xlarge': 18\n   };\n\n   // size of ticks\n   const TICK_SIZE = {\n      'small': 4,\n      'medium': 6,\n      'large': 8,\n      'xlarge': 10\n   };\n\n   // font size for plot element\n   const LEGEND_FONT_SIZE = {\n      \"small\": 11,\n      \"medium\": 14,\n      \"large\": 16,\n      \"xlarge\": 18\n   };\n\n   // font size for legend items in pixels\n   const PLOT_FONT_SIZE = {\n      \"small\": 12,\n      \"medium\": 15,\n      \"large\": 19,\n      \"xlarge\": 21\n   };\n\n   // margin between plot series elements and data labels\n   const LABELS_MARGIN = {\n      'small': 11,\n      'medium': 15,\n      'large': 17,\n      'xlarge': 19\n   };\n\n   // line styles for different scales and types\n   const LINE_STYLES = {\n      small: ['0', '3,3', '1,1', '3,1'],\n      medium: ['0', '5,5', '2,2', '5,2'],\n      large: ['0', '7,7', '3,3', '7,3'],\n      xlarge: ['0', '9,9', '4,4', '9,3'],\n   }\n\n   // marker symbols\n   const MARKER_SYMBOLS = [\"●\", \"◼\", \"▲\", \"▼\", \"⬥\", \"＋\", \"✳\", \"✕\"];\n\n   // constant to make clip path ID unique\n   const clipPathID = 'plottingArea' + Math.round(Math.random() * 10000);\n\n\n   /*****************************************/\n   /* Variable parameters for internal use  */\n   /*****************************************/\n\n   /* parameters for internal use inside the component */\n   let plotElement;\n   let width = 100, height = 100;\n   let left = 0, bottom = 0, top = 0;\n\n\n   /*****************************************/\n   /* Helper functions                      */\n   /*****************************************/\n\n   /**\n    * Dispatcher for click events.\n    * @param {string} eventName - name of the event.\n    * @param {HTMLDOMElement} el - DOM element the click was registered for.\n    *\n    */\n   function dispatchClickEvent(eventName, el) {\n      const id = Array.prototype.indexOf.call(el.parentNode.children, el)\n      dispatch(eventName, {seriesTitle: el.parentNode.getAttribute('title'), elementID: id});\n   }\n\n   /**\n    * Handler (router) for axes or series click events.\n    *\n    * @param {event} e - event object.\n    *\n    * @description\n    * Checks which element the click was made on and dispatch a corresponding event.\n    *\n    */\n   function handleClick(e) {\n\n      // click on scatter plot markers\n      if (e.target.tagName === 'text' && e.target.parentNode.classList.contains('series-points')) {\n         dispatchClickEvent('markerclick', e.target);\n         return;\n      }\n\n      // click on bar plot bars\n      if (e.target.tagName === 'rect' && e.target.parentNode.classList.contains('series-bar')) {\n         dispatchClickEvent('barclick', e.target);\n         return;\n      }\n\n      // click outside any plot element\n      dispatch('axesclick');\n   }\n\n\n   /**\n    * Handler (router) for click event on copy plot button.\n    *\n    * @description\n    * Copy plot to clipboard as PNG image.\n    *\n    */\n   async function handleClickCopy(e) {\n      navigator.clipboard.write([\n         new ClipboardItem({ 'image/png': createPngBlob(plotElement, clipboardWidth, clipboardHeight) })\n      ]).catch(function (error) { console.error(error); });\n\n      const content = e.target.textContent;\n      e.target.classList.add('copied');\n      e.target.textContent = '✓ done';\n\n      // Remove the class after 1 second and revert the text\n      setTimeout(() => {\n        e.target.classList.remove('copied');\n        e.target.textContent = content;\n      }, 500);\n   }\n\n\n   /**\n    * Handler (router) for click event to download SVG image.\n    *\n    * @description\n    * Copy plot to clipboard as SVG image.\n    *\n    */\n   function handleClickSVG() {\n      downloadSVG(plotElement, fileName);\n   }\n\n\n   /**\n    * Handler (router) for click event to download PNG image.\n    *\n    * @description\n    * Copy plot to clipboard as PNG image.\n    *\n    */\n   function handleClickPNG() {\n      downloadPNG(plotElement, fileName, pngWidth, pngHeight, pngRes);\n   }\n\n   /**\n    * Generic function to transform x or y-values from plot coordinates to screen (SVG) coordinates.\n    *\n    * @param {Array|Vector} v - vector with coordinates (or objects size) in original plot coordinates.\n    * @param {Object} tA - array with scaling and translation factors.\n    *\n    * @returns {Vector} vector with rescaled values\n    *\n    */\n   const transform = function(v, tA) {\n\n      if (!$isOk || v === undefined || v === null) return undefined;\n      if (Array.isArray(v)) v = vector(v);\n      if (!isvector(v) || v.length < 1) return undefined;\n\n      return v.apply(a => roundCoords((a - tA[1]) * tA[0] + tA[2])).v;\n   }\n\n\n   /**\n    * Generic function to transform x or y-values from screen (SVG) coordinates to plot coordinates.\n    *\n    * @param {Array|Vector} v - vector with coordinates (or objects size) in screen (SVG) coordinates.\n    * @param {Object} tA - array with scaling and translation factors.\n    *\n    * @returns {Vector} vector plot coordinates.\n    *\n    */\n   const invTransform = function(v, tA) {\n\n      if (!$isOk || v === undefined || v === null) return undefined;\n      if (Array.isArray(v)) v = vector(v);\n      if (!isvector(v) || v.length < 1) return undefined;\n\n      return v.apply(a => (a - tA[2]) / tA[0] + tA[1]).v;\n   }\n\n   /*****************************************/\n   /* Storage to share with children        */\n   /*****************************************/\n\n   const xscale = writable('medium');                                 // scale factor for x-axis (influences number of ticks)\n   const yscale = writable('medium');                                 // scale factor for y-axis (influences number of ticks)\n   const scale = writable('medium');                                  // scale factor (how big the shown plot is)\n   const isOk = writable(false);                                      // are axes ready for drawing\n   const xLim = writable(limX);                                       // validated values for x-axis limits\n   const yLim = writable(limY);                                       // validated values for y-axis limits\n   const tX = writable({'coords': [1, 0, 0], 'objects': [1, 0, 0]});  // scaling and translation factors for x-dimension\n   const tY = writable({'coords': [1, 0, 0], 'objects': [1, 0, 0]});  // scaling and translation factors for y-dimension\n\n\n   /*****************************************/\n   /* Axes context                          */\n   /*****************************************/\n\n   let context = {\n\n      // methods\n      transform: transform,\n      invTransform: invTransform,\n\n      // variables\n      scale: scale,\n      xscale: xscale,\n      yscale: yscale,\n      isOk: isOk,\n      xLim: xLim,\n      yLim: yLim,\n      tX: tX,\n      tY: tY,\n      xLabel: xLabel,\n      yLabel: yLabel,\n\n      // constants\n      LINE_STYLES: LINE_STYLES,\n      LABELS_MARGIN: LABELS_MARGIN,\n      XTICK_NUM: XTICK_NUM,\n      YTICK_NUM: YTICK_NUM,\n      TICK_SIZE: TICK_SIZE,\n      MARKER_SYMBOLS: MARKER_SYMBOLS,\n      LEGEND_FONT_SIZE: LEGEND_FONT_SIZE\n   }\n\n\tsetContext('axes', context);\n\n   /*****************************************/\n   /* Reactive updates of the parameters    */\n   /*****************************************/\n\n   // computes real margins in pixels based on current scale\n   $: pxMargins = margins.map(v => v * AXES_MARGIN_FACTORS[$scale]);\n\n   // update limits if necessary\n   $: xLim.update(v => limX);\n   $: yLim.update(v => limY);\n\n   // computes status which tells that axes limits look fine and it is safe to draw\n   // the status is based on the axis limits validity\n   $: isOk.update(v =>\n      Array.isArray($yLim) &&\n      Array.isArray($xLim) &&\n      $xLim.length === 2 &&\n      $yLim.length === 2 &&\n      !$yLim.some(v => v === undefined) &&\n      !$xLim.some(v => v === undefined) &&\n      !$yLim.some(v => isNaN(v)) &&\n      !$xLim.some(v => isNaN(v)) &&\n      $xLim[1] !== $xLim[0] &&\n      $yLim[1] !== $yLim[0] &&\n      width > (pxMargins[1] + pxMargins[3]) &&\n      height > (pxMargins[0] + pxMargins[2])\n   )\n\n   // update transformation array for x-coordinates\n   $: {\n      if ($isOk) {\n         tX.update(v => ({\n            'coords':  [ (width - pxMargins[1] - pxMargins[3]) / ($xLim[1] - $xLim[0]), $xLim[0], pxMargins[1]],\n            'objects': [ (width - pxMargins[1] - pxMargins[3]) / ($xLim[1] - $xLim[0]),       0,             0]\n         }));\n      }\n   };\n\n   // update transformation array for y-coordinates\n   $: {\n      if ($isOk) {\n         tY.update(v => ({\n            'coords':  [-(height - pxMargins[0] - pxMargins[2]) / ($yLim[1] - $yLim[0]), $yLim[1], pxMargins[2]],\n            'objects': [ (height - pxMargins[0] - pxMargins[2]) / ($yLim[1] - $yLim[0]),        0,            0]\n         }));\n      }\n   };\n\n   // computes coordinates for clip path box\n   $: cpx = $isOk ? transform($xLim, $tX.coords) : [0, 1];\n   $: cpy = $isOk ? transform($yLim, $tY.coords) : [1, 0];\n\n\n   /*****************************************/\n   /* Events observers                      */\n   /*****************************************/\n\n   // observer for the plot area size — to update the scale\n   const ro = new ResizeObserver(entries => {\n      for (let entry of entries) {\n         const pcr = plotElement.getBoundingClientRect();\n         const scl = getScale(pcr.width, pcr.height);\n         const xscl = getAxisScale(pcr.width);\n         const yscl = getAxisScale(pcr.height);\n         scale.update(x => scl);\n         xscale.update(x => xscl);\n         yscale.update(x => yscl);\n\n         const m = PLOT_FONT_SIZE[scl] * 1.5;\n         left = xLabel && xLabel !== '' ? m : 0;\n         bottom = yLabel && yLabel !== '' ? m : 0;\n         top = title && title !== '' ? m : 0;\n         width = pcr.width > left ? pcr.width - left : 0;\n         height = pcr.height > (bottom + top) ? pcr.height - bottom - top : 0;\n      }\n   });\n\n   $: fontSize = PLOT_FONT_SIZE[$scale];\n\n   onMount(() => {\n      ro.observe(plotElement);\n   });\n\n   onDestroy(() => {\n      ro.unobserve(plotElement);\n   })\n\n</script>\n\n<div class=\"plot-container show-download-links-{downloadLinks}\" class:plot_error={!$isOk}>\n\n   <svg class=\"plot\" bind:this={plotElement} xmlns=\"http://www.w3.org/2000/svg\"\n      style={`font-size:${fontSize}px`}>\n\n      <style>\n         .plot {\n            font-family: Arial, Helvetica, sans-serif;\n         }\n\n         .plot-labels text {\n            font-weight:bold;\n            text-anchor:middle;\n         }\n\n         .tick-labels text,\n         .tick-labels tspan,\n         .series-text text,\n         .series-text tspan,\n         .series-points text,\n         .series-points tspan {\n            dominant-baseline: middle;\n            cursor: default;\n            user-select: none;\n         }\n\n         .series-text text,\n         .series-text tspan {\n            text-anchor: middle;\n         }\n\n         .tick-labels text,\n         .tick-labels tspan {\n            font-size:1em;\n         }\n      </style>\n\n      <g class=\"plot-labels\">\n         <!-- y-axis label -->\n         {#if yLabel && yLabel !== ''}\n         <text x={0} y={(height + top) /2} dx={0} dy={0} dominant-baseline=\"top\" transform={`rotate(-90, 10, ${height/2})`} style=\"font-size:1.1em;\">{@html yLabel}</text>\n         {/if}\n         <!-- x-axis label -->\n         {#if xLabel && xLabel !== ''}\n         <text x={left + width/2 } y={height + top} dx={0} dy={5} dominant-baseline=\"middle\" style=\"font-size:1.1em;\">{@html xLabel}</text>\n         {/if}\n         <!-- plot title -->\n         {#if title && title !== ''}\n         <text x={left + width/2 } y={0} dx={0} dy={10}  dominant-baseline=\"hanging\" style=\"font-size:1.2em;\">{@html title}</text>\n         {/if}\n      </g>\n\n      <svg x={left} y={top} width={width} height={height} on:click={handleClick}\n         on:keydown={handleClick} preserveAspectRatio=\"none\" class=\"axes\">\n\n         <!-- define clipping path -->\n         <defs>\n            <clipPath id={clipPathID}>\n               <rect style=\"pointer-events:none\" x={cpx[0]} y={cpy[1]} width={cpx[1]-cpx[0]} height={cpy[0]-cpy[1]} />\n            </clipPath>\n         </defs>\n\n         <!-- axis and box -->\n         <slot name=\"xaxis\"></slot>\n         <slot name=\"yaxis\"></slot>\n\n         <!-- main plot content -->\n         <g class=\"axes-content\" clip-path=\"url(#{clipPathID})\">\n            <slot></slot>\n         </g>\n\n         <!-- axis and box -->\n         <slot name=\"box\"></slot>\n      </svg>\n   </svg>\n\n   {#if !$isOk}\n   <p class=\"message_error\">\n      Axes component was not properly initialized. <br />\n      Check that you defined axes limits and margins correctly.\n   </p>\n   {:else}\n   <div class=\"download-links\">\n      <button on:click={handleClickSVG} on:keydown={handleClickSVG}>⇩ svg</button>\n      <button on:click={handleClickPNG} on:keydown={handleClickPNG}>⇩ png</button>\n      <button on:click={handleClickCopy} on:keydown={handleClickCopy}>⧉ copy</button>\n   </div>\n   {/if}\n\n</div>\n\n<style>\n   .show-download-links-none > .download-links{\n      display: none;\n   }\n\n   .show-download-links-hover:hover > .download-links {\n      bottom: 0;\n   }\n\n   .show-download-links-fixed > .download-links{\n      bottom: 0;\n   }\n\n   .download-links {\n      box-sizing: border-box;\n      bottom: right 0.5s ease;\n      position: absolute;\n      font-size: 0.8em;\n      bottom: -50%;\n      right: 0;\n      z-index: 10;\n      padding: 0.5em 1em 0.5em 1em;\n      background: #fefefe;\n      border-radius: 0.5em;\n      transition: bottom 0.35s ease;\n      box-shadow: 0 0 0.75em #00000060;\n      margin: 0.6em;\n      box-sizing: border-box;\n\n      display: flex;\n      align-items: center;\n      justify-content: center;\n   }\n\n   .download-links > button{\n      box-sizing: border-box;\n      color: #606060;\n      border: none;\n      box-shadow: none;\n      background: #fafafa;\n      border-radius: 0.35em;\n      padding: 0.25em 0.5em;\n   }\n\n   .download-links > button:hover{\n      background: #443333;\n      color: #fafafa;\n   }\n\n\n   /* Plot container */\n   .plot-container {\n      font-family: Arial, Helvetica, sans-serif;\n      box-sizing: border-box;\n      position: relative;\n      min-width: 100px;\n      min-height: 50px;\n      width: 100%;\n      height: 100%;\n      padding: 0;\n      margin: 0;\n      overflow: hidden;\n      background: #fff;\n   }\n\n   .plot_error {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n   }\n\n   .message_error {\n      font-size: 1.2em;\n      color: crimson;\n      padding: 1em;\n      box-sizing: border-box;\n      text-align: center;\n   }\n\n   /* Plot and axes (coordinate system) */\n\n   .plot {\n      display: block;\n      box-sizing: border-box;\n      position:absolute;\n      padding: 0;\n      margin: 0;\n      left: 0;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      width: 100%;\n      height: 100%;\n   }\n\n   .axes-content {\n      padding: 0;\n      margin: 0;\n      height: 100%;\n      width: 100%;\n      max-height: 100%;\n      max-width: 100%;\n      min-height: 100%;\n      min-width: 100%;\n   }\n\n</style>","export const Colors = {\n   \"AXIS_LINE\": \"#303030\",\n   \"AXIS_TICK\": \"#606060\",\n   \"WHITE\":     \"#fff\",\n   \"BLACK\":     \"#000\",\n   \"GRAY\":      \"#909090\",\n   \"MIDDLEGRAY\": \"#dadada\",\n   \"LIGHTGRAY\": \"#f0f0f0\",\n   \"DARKGRAY\":  \"#606060\",\n   \"LEGEND\": \"#303030\",\n\n   \"PRIMARY\": \"#2679B2\",\n   \"PRIMARY_LIGHT\": \"#d2ebff\",\n   \"PRIMARY_TEXT\": \"#333\",\n}\n\n\n/**\n * Returns an array with 'n' colors.\n *\n * @param {number} n - number of colors to return.\n *\n * @returns {Array} array with colors as strings (hexadecimal).\n *\n */\nexport function getcolmap(n) {\n   if (n ==  1) return [\"#2679B2\"];\n   if (n ==  2) return [\"#2679B2\", \"#D22C2F\"];\n   if (n ==  3) return [\"#2679B2\", \"#92B42A\", \"#D22C2F\"];\n   if (n ==  4) return [\"#2679B2\", \"#2E9658\", \"#F2B825\", \"#D22C2F\"];\n   if (n ==  5) return [\"#2679B2\", \"#22988A\", \"#92B42A\", \"#F79426\", \"#D22C2F\"];\n   if (n ==  6) return [\"#2679B2\", \"#1C9AA8\", \"#379531\", \"#EED524\", \"#FB7F28\", \"#D22C2F\"];\n   if (n ==  7) return [\"#2679B2\", \"#1D94A9\", \"#2E9658\", \"#92B42A\", \"#F2B825\", \"#F47129\", \"#D22C2F\"];\n   if (n ==  8) return [\"#2679B2\", \"#1E90AA\", \"#279775\", \"#519E2F\", \"#D3CB25\", \"#F5A326\", \"#EF672A\", \"#D22C2F\"];\n   if (n ==  9) return [\"#2679B2\", \"#1F8DAB\", \"#22988A\", \"#33953F\", \"#92B42A\", \"#EFCA24\", \"#F79426\", \"#EB5F2A\", \"#D22C2F\"];\n   if (n == 10) return [\"#2679B2\", \"#208BAC\", \"#1E999A\", \"#2E9658\", \"#5FA32E\", \"#C5C626\", \"#F2B825\", \"#F98827\", \"#E85A2B\", \"#D22C2F\"];\n   if (n == 11) return [\"#2679B2\", \"#2089AD\", \"#1C9AA8\", \"#29976C\", \"#379531\", \"#92B42A\", \"#EED524\", \"#F4AA26\", \"#FB7F28\",\n      \"#E6552B\", \"#D22C2F\"];\n   if (n == 12) return [\"#2679B2\", \"#2188AD\", \"#1C97A8\", \"#25987C\", \"#329546\", \"#68A62D\", \"#BCC327\", \"#F0C524\", \"#F69E26\",\n      \"#F77728\", \"#E4512B\", \"#D22C2F\"];\n   if (n == 13) return [\"#2679B2\", \"#2186AD\", \"#1D94A9\", \"#22988A\", \"#2E9658\", \"#469A2F\", \"#92B42A\", \"#DECF25\", \"#F2B825\",\n      \"#F79426\", \"#F47129\", \"#E34E2C\", \"#D22C2F\"];\n   if (n == 14) return [\"#2679B2\", \"#2285AE\", \"#1E92AA\", \"#209995\", \"#2A9767\", \"#34953A\", \"#6FA82D\", \"#B5C128\", \"#EFCE24\", \"#F3AD25\",\n      \"#F98C27\", \"#F16B29\", \"#E14B2C\", \"#D22C2F\"];\n   if (n == 15) return [\"#2679B2\", \"#2284AE\", \"#1E90AA\", \"#1D999F\", \"#279775\", \"#31964A\", \"#519E2F\", \"#92B42A\", \"#D3CB25\", \"#F0C224\",\n      \"#F5A326\", \"#FA8527\", \"#EF672A\", \"#E0492C\", \"#D22C2F\"];\n\n   // if n > 15 return 16 colors\n   return [\"#2679B2\", \"#2283AE\", \"#1F8FAB\", \"#1C9AA8\", \"#249880\", \"#2E9658\", \"#379531\", \"#73AA2C\", \"#B0BF28\", \"#EDD424\", \"#F2B825\",\n      \"#F69B26\", \"#FB7F28\", \"#ED632A\", \"#DF472C\", \"#D22C2F\"];\n}\n","<script>\n   /****************************************************\n   * Axis lines                                        *\n   * --------------------                              *\n   * generic component for axis lines (main, grid, ...)*\n   * !!! not for users !!!                             *\n   *****************************************************/\n\n   import { getContext } from 'svelte';\n   import { Colors } from '../Colors.js';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let lineCoords = [];               // coordinates of start and end points of the lines\n   export let lineColor = Colors.DARKGRAY;   // line color\n   export let lineType = 1;                  // line type\n   export let lineWidth = 1;                 // lined width (thickness)\n   export let className = '';                // CSS class name for the component\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // get axes context and adjust x margins\n   const axes = getContext('axes');\n   const scale = axes.scale;\n   const tX = axes.tX;\n   const tY = axes.tY;\n\n   // reactive variables for coordinates of axis lines\n   let x1, x2, y1, y2 = undefined;\n   $: if (lineCoords.length == 2) {\n      x1 = axes.transform(lineCoords[0][0], $tX.coords);\n      y1 = axes.transform(lineCoords[0][1], $tY.coords);\n      x2 = axes.transform(lineCoords[1][0], $tX.coords);\n      y2 = axes.transform(lineCoords[1][1], $tY.coords);\n   }\n\n   /* styles for axis and grid lines */\n   $: lineStyleStr = `stroke:${lineColor};stroke-width: ${lineWidth}px;stroke-dasharray:${axes.LINE_STYLES[$scale][lineType-1]}`;\n\n</script>\n\n{#if x1 !== undefined && y1 !== undefined && x2 !== undefined && y2 !== undefined}\n<g class={className}>\n   {#each x1 as v, i}\n   <line vector-effect=\"non-scaling-stroke\" x1={x1[i]} x2={x2[i]} y1={y1[i]} y2={y2[i]} style={lineStyleStr} />\n   {/each}\n</g>\n{/if}\n","<script>\n   /****************************************************\n   * AxisTickLabels                                    *\n   * --------------------                              *\n   * shows a series of tick labels along an axis       *\n   * !!! not for users !!!                             *\n   *****************************************************/\n\n   import { getContext } from 'svelte';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n\texport let tickCoords;  // array with tick coordinates\n   export let textColor;   // color of tick labels\n   export let tickLabels;  // array with tick labels\n   export let pos = 1;     // position of tick labels\n   export let las = 1;     // rotation of tick labels (1 - horizontal, 2 - vertical)\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // get axes context and reactive variables needed to compute coordinates\n   const axes = getContext('axes');\n   const scale = axes.scale;\n   const tX = axes.tX;\n   const tY = axes.tY;\n   const isOk = axes.isOk;\n\n   let el;\n\n   let x, y = undefined;\n   let dx = 0, dy = 0, textAnchor;\n\n   // reactive calculations triggered by changes in coordinates and plot parameters\n   $: if ($isOk) {\n      x = axes.transform(tickCoords[1][0], $tX.coords);\n      y = axes.transform(tickCoords[1][1], $tY.coords);\n   }\n\n   // reactive calculations triggered by changes in scale\n   $: m = axes.LABELS_MARGIN[$scale];\n\n   // reactive calculations triggered by changes in pos\n   $: {\n      textAnchor = (['middle', 'middle', 'start', 'middle', 'end'])[pos];\n      dx = ([0, 0, m,  0, -m])[pos];\n      dy = ([0, m, 0, -m, 0])[pos];\n   }\n\n   // styles for the elements\n   $: textStyleStr = `fill:${textColor};`;\n</script>\n\n{#if x !== undefined && y !== undefined}\n<g class=\"tick-labels\" bind:this={el} style={textStyleStr} >\n   {#if las === 2 && pos === 4}\n   {#each x as v, i}\n      <text data-id={i} x={x[i]} y={y[i]} dx={0} dy={dx*1.25} transform={`rotate(-90, ${x[i]}, ${y[i]})`} text-anchor={\"middle\"}>{@html tickLabels[i]}</text>\n   {/each}\n   {:else if las === 2 && pos === 1}\n   {#each x as v, i}\n      <text data-id={i} x={x[i]} y={y[i]} dx={-dy/2} dy={0} transform={`rotate(-90, ${x[i]}, ${y[i]})`} text-anchor={\"end\"}>{@html tickLabels[i]}</text>\n   {/each}\n   {:else}\n   {#each x as v, i}\n      <text data-id={i} x={x[i]} y={y[i]} dx={dx} dy={dy} text-anchor={textAnchor}>{@html tickLabels[i]}</text>\n   {/each}\n   {/if}\n</g>\n{/if}\n","<script>\n   /****************************************************\n   * Axis                                              *\n   * ---------------------------------                 *\n   * generic element for X- or Y-axis                  *\n   * !!! not for users !!!                             *\n   *****************************************************/\n\n   import { Colors } from '../Colors.js';\n   import { getTickFactorLabel } from '../Utils.js';\n\n   import AxisLines from './AxisLines.svelte';\n   import AxisTickLabels from './AxisTickLabels.svelte';\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let tickLabels = [];               // vector with labels for each tick\n   export let showGrid = false;              // logical, show or not grid lines\n   export let las = 1;                       // rotation of tick labels\n\n   export let pos = 1;                       // position of tick labels\n   export let className = \"\";                // name of CSS class for the axis\n   export let grid = [];                     // array with grid coordinates\n   export let axisLine = [];                 // array with coordinates of main axis line\n   export let tickCoords = [];               // array with axis tick coordinates\n   export let tfCoords = [];                 // array with tick factor coordinates\n   export let tickFactor = 0;                // tick factor (as power of 10)\n\n   export let lineColor = Colors.DARKGRAY;   // color of main axis line\n   export let gridColor = Colors.MIDDLEGRAY; // color of grid lines\n   export let textColor = Colors.DARKGRAY;   // color of tick labels\n\n   // generate text for tick factor label\n</script>\n\n<g class=\"mdaplot__axis {className}\">\n   <!-- grid -->\n   {#if showGrid }\n      <AxisLines lineCoords={grid} lineColor={gridColor} lineType={3} />\n   {/if}\n\n   <!-- main axis line -->\n   <AxisLines lineCoords={axisLine} lineColor={lineColor} lineType={1} />\n\n   <!-- ticks-->\n   <AxisLines lineCoords={tickCoords} lineColor={lineColor} lineType={1} />\n\n   <!-- labels -->\n   {#if tickCoords.length === 2 && tickLabels.length === tickCoords[1][0].length}\n   <AxisTickLabels {las} {pos} {tickCoords} {tickLabels} {textColor} />\n   {/if}\n\n   <!-- tick factor -->\n   {#if tickFactor !== 0}\n   <AxisTickLabels {pos} tickCoords={tfCoords} tickLabels={[getTickFactorLabel(tickFactor)]} {textColor} />\n   {/if}\n</g>\n\n","<script>\n   /*****************************************************/\n   /* X-Axis                                            */\n   /* --------------------                              */\n   /* shows x-axis and its elements (ticks, grid, etc.) */\n   /*****************************************************/\n\n   import { getContext } from 'svelte';\n   import { Vector, vector } from 'mdatools/arrays';\n   import { Colors } from '../Colors.js';\n   import { getAxisTicks, getTickLabels } from '../Utils.js';\n   import Axis from './Axis.svelte';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let slot = 'xaxis';                // slot the component must be placed in (must be \"xaxis\")\n   export let ticks = undefined;             // vector with numeric tick positions (by default is computed automatically)\n   export let tickLabels = undefined;        // vector with labels for each tick (by default tick values will be used)\n   export let showGrid = false;              // logical, show or not grid lines\n   export let las = 1;                       // orientation of tick labels (1 - horizontal, 2 - vertical)\n   export let whole = false;                 // should the ticks be a whole number or not\n\n   export let lineColor = Colors.DARKGRAY;   // color of axis and tick lines\n   export let gridColor = Colors.MIDDLEGRAY; // color og grid lines\n   export let textColor = Colors.DARKGRAY;   // color of text tick labels\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // sanity checks of input parameters\n   if (slot !== 'xaxis') {\n      throw('Component XAxis must have \"slot=\\'xaxis\\'\" attribute.');\n   }\n\n   // get axes context and adjust x margins\n   const axes = getContext('axes');\n\n   // get reactive variables needed to compute coordinates\n   const xLim = axes.xLim;\n   const yLim = axes.yLim;\n   const scale = axes.scale;\n   const xscale = axes.xscale;\n   const isOk = axes.isOk;\n   const tY = axes.tY;\n\n   // prepare variables for coordinates\n   let grid = [];\n   let axisLine = [];\n   let tickCoords = [];\n   let tfCoords = [];\n   let tickFactor = 0;\n\n   // compute coordinates for ticks, grid and axis line\n   $: if ($isOk) {\n\n      // compute x-coordinates of the ticks or take the ones manually specified by user\n      const ticksX = getAxisTicks(ticks, $xLim, axes.XTICK_NUM[$xscale], true, whole);\n      const tickNum = ticksX.length;\n\n      // compute tick y-coordinates (up and bottom)\n      const dY = axes.invTransform([axes.TICK_SIZE[$scale]], $tY.objects)[0];\n      const ticksY1 = Vector.fill($yLim[0], tickNum);\n      const ticksY2 = ticksY1.add(dY);\n\n      // compute coordinates for the ends of grid\n      const gridYEnd = Vector.fill($yLim[1], tickNum);\n\n      // tick labels and tick factor\n      if (ticks === undefined || tickLabels === undefined) {\n         [tickFactor, tickLabels] = getTickLabels(ticksX.v);\n      }\n\n      if (tickLabels.length !== ticksX.length) {\n         throw('XAxis: \"tickLabels\" must be a array of the same size as ticks.')\n      }\n\n      // combine all coordinates together\n      grid = [\n         [ticksX, ticksY1],\n         [ticksX, gridYEnd]\n      ];\n\n      axisLine = [\n         [vector([$xLim[0]]), vector([$yLim[0]])],\n         [vector([$xLim[1]]), vector([$yLim[0]])]\n      ]\n\n      tickCoords = [\n         [ticksX, ticksY2],\n         [ticksX, ticksY1]\n      ];\n\n      tfCoords = [\n         [null, null],\n         [[$xLim[1]], [ticksY1.v[tickNum - 1] - 1.5 * dY]],\n      ];\n   }\n</script>\n\n{#if $isOk && axisLine.length > 0}\n<Axis\n   className=\"mdaplot__xaxis\" pos={1}\n   {lineColor} {gridColor} {textColor} {showGrid} {grid} {axisLine}\n   {tickCoords} {tickLabels} {tfCoords} {tickFactor} {las}\n/>\n{/if}","<script>\n   /****************************************************\n   * Y-Axis                                            *\n   * --------------------                              *\n   * shows y-axis and its elements (ticks, grid, etc.) *\n   *****************************************************/\n\n   import { getContext } from 'svelte';\n   import { Vector, vector } from 'mdatools/arrays';\n   import { Colors } from '../Colors.js';\n   import { getAxisTicks, getTickLabels } from '../Utils.js';\n   import Axis from './Axis.svelte';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let slot = 'yaxis';                // slot the component must be placed in (must be \"yaxis\")\n   export let ticks = undefined;             // vector with numeric tick positions (by default is computed automatically)\n   export let tickLabels = undefined;        // vector with labels for each tick (by default tick values will be used)\n   export let showGrid = false;              // logical, show or not grid lines\n   export let las = 1;                       // orientation of tick labels (1 - horizontal, 2 - vertical)\n   export let whole = false;                 // should the ticks be a whole number or not\n\n   export let lineColor = Colors.DARKGRAY;   // color of axis and tick lines\n   export let gridColor = Colors.MIDDLEGRAY; // color og grid lines\n   export let textColor = Colors.DARKGRAY;   // color of text tick labels\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // sanity checks of input parameters\n   if (slot !== 'yaxis') {\n      throw('Component YAxis must have \"slot=\\'yaxis\\'\" attribute.');\n   }\n\n   // get axes context and adjust x margins\n   const axes = getContext('axes');\n\n   // get reactive variables needed to compute coordinates\n   const xLim = axes.xLim;\n   const yLim = axes.yLim;\n   const scale = axes.scale;\n   const yscale = axes.yscale;\n   const isOk = axes.isOk;\n   const tX = axes.tX;\n\n   // prepare variables for coordinates\n   let grid = [];\n   let axisLine = [];\n   let tickCoords = [];\n   let tfCoords = [];\n   let tickFactor = 0;\n\n   // compute tick x-coordinates\n   $: if ($isOk) {\n\n      // compute x-coordinates of the ticks or take the ones manually specified by user\n      const ticksY = getAxisTicks(ticks, $yLim, axes.YTICK_NUM[$yscale], true, whole);\n      const tickNum = ticksY.length;\n\n      // compute tick y-coordinates (up and bottom)\n      const dX = axes.invTransform([axes.TICK_SIZE[$scale]], $tX.objects)[0];\n      const ticksX1 = Vector.fill($xLim[0], tickNum)\n      const ticksX2 = ticksX1.add(dX)\n\n      // coordinates for the ends of grid\n      const gridXEnd = Vector.fill($xLim[1], tickNum);\n\n      // tick labels and tick factor\n      if (ticks === undefined || tickLabels === undefined) {\n         [tickFactor, tickLabels] = getTickLabels(ticksY.v)\n      }\n\n      if (tickLabels.length !== ticksY.length) {\n         throw('YAxis: \"tickLabels\" must be a array of the same size as ticks.')\n      }\n\n      // combine all coordinates together\n      grid = [\n         [ticksX1, ticksY],\n         [gridXEnd, ticksY]\n      ];\n\n      axisLine = [\n         [vector([$xLim[0]]), vector([$yLim[0]])],\n         [vector([$xLim[0]]), vector([$yLim[1]])]\n      ]\n\n      tickCoords = [\n         [ticksX1, ticksY],\n         [ticksX2, ticksY]\n      ];\n\n      tfCoords = [\n         [[], []],\n         [[ticksX2.v[tickNum - 1] + dX], [$yLim[1]]],\n      ];\n   }\n</script>\n\n{#if $isOk && axisLine.length > 0}\n<Axis\n   className=\"mdaplot__yaxis\" pos={4}\n   {lineColor} {gridColor} {textColor} {showGrid} {grid} {axisLine}\n   {tickCoords} {tickLabels} {tfCoords} {tickFactor} {las}\n/>\n{/if}","<script>\n   /****************************************************\n   * Box                                               *\n   * --------------------                              *\n   * shows border box around axes                      *\n   *****************************************************/\n\n   import { getContext } from 'svelte';\n   import { Colors } from '../Colors';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let slot;  // slot name, must be \"box\"\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // check that the box is located in a correct slot\n   if (slot !== 'box') {\n      throw('Component Box must have \\'slot=\"box\"\\' attribute.')\n   }\n\n\n   // get axes context and reactive variables needed to compute coordinates\n   const axes = getContext('axes');\n   const xLim = axes.xLim;\n   const yLim = axes.yLim;\n   const isOk = axes.isOk;\n   const tX = axes.tX;\n   const tY = axes.tY;\n\n   // reactive variables for coordinates of box points in pixels\n   $: xx = $isOk ? axes.transform($xLim, $tX.coords) : undefined;\n   $: yy = $isOk ? axes.transform($yLim, $tY.coords) : undefined;\n\n</script>\n\n{#if $isOk}\n   <g style=\"pointer-events:none\" class=\"mdaplot__axes-box\">\n   <rect stroke=\"{Colors.DARKGRAY}\" stroke-width=\"0.1em\" fill=\"transparent\" x={xx[0]} y={yy[1]} width={xx[1] - xx[0]} height={yy[0] - yy[1]} />\n   </g>\n{/if}\n\n","<script>\n   /****************************************************\n   * Segments                                          *\n   * --------------------                              *\n   * shows series of line segments                     *\n   *****************************************************/\n\n   import { getContext } from 'svelte';\n   import { Colors } from '../Colors';\n   import { checkCoords } from '../Utils';\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n\texport let xStart;                        // vector or array with x-coordinates of starting points\n   export let xEnd;                          // vector or array with x-coordinates of end points\n   export let yStart;                        // vector or array with y-coordinates of starting points\n   export let yEnd;                          // vector or array with y-coordinates of end points\n   export let lineColor = Colors.PRIMARY;    // color of segment lines\n   export let lineType = 1;                  // type of segment lines (1 - solid, 2 - dashed, 3 - dotted, 4 - dashdot)\n   export let lineWidth = 1;                 // width (thickness) of segment lines\n   export let className = 'series-seg';      // CSS class name of the SVG group\n   export let title = '';                    // title of the segment series (reserved for future use)\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // get axes context and reactive variables needed to compute coordinates\n   const axes = getContext('axes');\n   const scale = axes.scale;\n   const isOk = axes.isOk;\n   const tX = axes.tX;\n   const tY = axes.tY;\n\n   let x1, x2, y1, y2 = undefined;\n   $: {\n      if ($isOk) {\n\n         x1 = axes.transform(checkCoords(xStart, 'Segments'), $tX.coords);\n         y1 = axes.transform(checkCoords(yStart, 'Segments'), $tY.coords);\n         x2 = axes.transform(checkCoords(xEnd, 'Segments'), $tX.coords);\n         y2 = axes.transform(checkCoords(yEnd, 'Segments'), $tY.coords);\n\n         const n = x1.length;\n         if (x2.length !== n || y1.length !== n || y2.length !== n) {\n            throw Error('Segments: parameters \"xStart\", \"yStart\", \"xEnd\" and \"yEnd\" should have the same length.');\n         }\n      }\n   }\n\n   // reactive variables for coordinates of data points in pixels (and line style)\n   $: lineStyleStr = `stroke:${lineColor};stroke-width: ${lineWidth}px;stroke-dasharray:${axes.LINE_STYLES[$scale][lineType-1]}`;\n</script>\n\n{#if $isOk}\n   <g class=\"series {className}\" title={title} style={lineStyleStr}>\n   {#each x1 as v, i}\n      <line x1={x1[i]} x2={x2[i]} y1={y1[i]} y2={y2[i]} />\n   {/each}\n   </g>\n{/if}\n\n","<script>\n   /****************************************************\n   * TextLabels component                              *\n   * --------------------                              *\n   * shows a series of text labels on the plot         *\n   *****************************************************/\n\n   import { getContext } from 'svelte';\n   import { Colors } from '../Colors';\n   import { checkCoords } from '../Utils';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n\texport let xValues;                             // vector or array with x-coordinates for each label\n   export let yValues;                             // vector or array with y-coordinates for each label\n   export let labels;                              // array with labels (strings)\n   export let pos = 0;                             // position of labels related to coordinates (middle, bottom, left, top, right)\n   export let faceColor = Colors.PRIMARY_TEXT;     // face color of label symbols\n   export let borderColor = 'transparent';         // border colors of label symbols\n   export let borderWidth = 0;                     // border width of label symbols\n   export let textSize = 1;                        // size of label symbols\n   export let className = 'series-text';           // CSS class name for the labels group\n   export let title = 'series-text';               // title of the labels SVG group\n   export let rotateAngle = 0;                     // angle to rotate labels\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // get axes context and reactive variables needed to compute coordinates\n   const axes = getContext('axes');\n   const scale = axes.scale;\n   const tX = axes.tX;\n   const tY = axes.tY;\n   const isOk = axes.isOk;\n\n   const textAnchors = ['middle', 'middle', 'start', 'middle', 'end'];\n\n   let x, y = undefined;\n   let dx = 0, dy = 0;\n\n   // reactive calculations triggered by changes in coordinates and plot parameters\n   $: if ($isOk) {\n\n      if (typeof labels === 'string' && typeof pos !== 'number' ) {\n         throw Error('TextLabels: parameter \"labels\" is provided as single string, so \"pos\" must be a single number.');\n      }\n\n      x = axes.transform(checkCoords(xValues, 'TextLabels'), $tX.coords);\n      y = axes.transform(checkCoords(yValues, 'TextLabels'), $tY.coords);\n\n      // sanity check for input parameters\n      if (x.length !== y.length) {\n         throw Error('TextLabels: parameters \"xValues\" and \"yValues\" must be vectors of the same length.');\n      }\n\n      if (Array.isArray(labels) && labels.length !== x.length ) {\n         throw Error('TextLabels: number of elements in \"labels\" does not match number of coordinates.');\n      }\n   }\n\n   // reactive calculations triggered by changes in scale\n   $: {\n      const m = axes.LABELS_MARGIN[$scale];\n      dx = [0, 0, m,  0, -m, m];\n      dy = [0, m, 0, -m, 0, m];\n   }\n\n   // styles for the elements\n   $: textStyleStr = `fill:${faceColor};stroke-width:${borderWidth}px;stroke:${borderColor};font-size:${textSize}em;`;\n</script>\n\n{#if $isOk && x !== undefined && y !== undefined}\n<g class=\"series {className}\" title={title} style={textStyleStr} >\n\n   {#if typeof labels === 'string'}\n   {#each x as v, i}\n      <text data-id={i} x={x[i]} y={y[i]} dx={dx[pos]} dy={dy[pos]}\n         transform={rotateAngle !== undefined ? `rotate(${rotateAngle}, ${x[i] + dx[pos]}, ${y[i] + dy[pos]})` : ''}\n         text-anchor={textAnchors[pos[i]]}>{@html labels}</text>\n   {/each}\n\n   {:else if (Array.isArray(pos) || ArrayBuffer.isView(pos))}\n   {#each x as v, i}\n      <text data-id={i} x={x[i]} y={y[i]} dx={dx[pos[i]]} dy={dy[pos[i]]} text-anchor={textAnchors[pos[i]]}>{@html labels[i]}</text>\n   {/each}\n\n   {:else}\n   {#each x as v, i}\n      <text data-id={i} x={x[i]} y={y[i]} dx={dx[pos]} dy={dy[pos]} text-anchor={textAnchors[pos]}>{@html labels[i]}</text>\n   {/each}\n   {/if}\n</g>\n{/if}\n","<script>\n   /****************************************************\n   * Points                                            *\n   * --------------------                              *\n   * shows series of points/markers on a plot          *\n   *****************************************************/\n\n   import { getContext } from 'svelte';\n   import { Colors } from '../Colors';\n   import { checkCoords } from '../Utils';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n\texport let xValues;                          // array of vector with x-coordinates of points\n   export let yValues;                          // array of vector with y-coordinates of points\n   export let marker = 1                        // index for point symbol (from 1 to 8): \"●\", \"◼\", \"▲\", \"▼\", \"⬥\", \"＋\", \"*\", \"✕\"\n   export let faceColor = 'transparent';        // face (fill) color of the points\n   export let borderColor = Colors.PRIMARY;     // border color of the points\n   export let borderWidth = 1;                  // width (thickness) of the points\n   export let markerSize = 1;                   // size of the marker symbols\n   export let title = '';                       // title of the point series - required for handling mouse click events\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // get axes context and adjust x margins\n   const axes = getContext('axes');\n   const tX = axes.tX;\n   const tY = axes.tY;\n   const isOk = axes.isOk;\n\n   let x, y, markerSymbol;\n\n   // reactive calculations triggered by changes in coordinates and plot parameters\n   $: if ($isOk) {\n\n      if (typeof(marker) !== \"number\" || marker < 1 || marker > axes.MARKER_SYMBOLS.length) {\n         throw Error(`Points: parameter \"marker\" must be a number from 1 to ${axes.MARKER_SYMBOLS.length}.`);\n      }\n\n      markerSymbol = axes.MARKER_SYMBOLS[marker - 1];\n\n      x = axes.transform(checkCoords(xValues, 'Points'), $tX.coords);\n      y = axes.transform(checkCoords(yValues, 'Points'), $tY.coords);\n\n      // sanity check for input parameters\n      if (x.length !== y.length) {\n         throw Error('Points: parameters \"xValues\" and \"yValues\" must be vectors of the same length.')\n      }\n   }\n\n   // styles for the elements\n   $: textStyleStr = ['＋', '✳', '✕'].includes(markerSymbol)  ?\n       `fill:${borderColor && borderColor !== 'transparent' ? borderColor : faceColor};stroke-width:0px;font-size:${markerSize}em;` :\n       `fill:${faceColor};stroke-width:${borderWidth}px;stroke:${borderColor}; font-size:${markerSize}em;`;\n\n</script>\n\n{#if $isOk && x !== undefined && y !== undefined}\n<g class=\"series series-points\" title={title} style={textStyleStr} dominant-baseline=\"middle\" text-anchor=\"middle\">\n   {#each x as v, i}\n      <text x={x[i]} y={y[i]}>{markerSymbol}</text>\n   {/each}\n</g>\n{/if}\n","<script>\n   /****************************************************\n   * Lines                                             *\n   * --------------------                              *\n   * shows lines connected sequence of points          *\n   *****************************************************/\n\n   import { getContext } from 'svelte';\n   import { Colors } from '../Colors';\n   import { val2p } from '../Utils';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n\texport let xValues;                       // vector or array with x-coordinates of the points\n   export let yValues;                       // vector or array with y-coordinates of the points\n   export let lineWidth = 1;                 // width (thickness) of the lines\n   export let lineColor = Colors.PRIMARY;    // color of the lines\n   export let lineType = 1;                  // type of the lines (1 - solid, 2 - dashed, 3 - dotted, 4 - dashdot)\n   export let title = '';                    // title of the bar series (reserved for future use)\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // get axes context\n   const axes = getContext('axes');\n\n   const scale = axes.scale;\n   const isOk = axes.isOk;\n   const tX = axes.tX;\n   const tY = axes.tY;\n\n   // compute polynomial coordinates as string\n   $: p = $isOk ? val2p(xValues, yValues, $tX, $tY, axes) : undefined;\n\n   // reactive variables for coordinates of data points in pixels\n   $: lineStyleStr = `fill:transparent;stroke:${lineColor};stroke-width: ${lineWidth}px; stroke-dasharray:${axes.LINE_STYLES[$scale][lineType-1]}`;\n</script>\n\n{#if $isOk && p !== undefined}\n   <g class=\"series series-line\" style={lineStyleStr} title={title}>\n      <polyline class=\"line\" points={p}/>\n   </g>\n{/if}\n\n","<script>\n   /*********************************************************\n   * ColormapLegend                                         *\n   * --------------------                                   *\n   * shows color map legend on a plot                       *\n   **********************************************************/\n\n   import { getContext } from 'svelte';\n   import { checkCoords, getTickLabels, getTickFactorLabel } from '../Utils';\n   import { Vector, isvector } from 'mdatools/arrays';\n\n\n   /*****************************************/\n   /* Input parameters                      */\n   /*****************************************/\n\n   export let breaks;                  // vector with breaks for color intervals or vector with their indices\n   export let colmap;                  // array with colors for each interval\n   export let decNum = 1;              // number of decimals to show the interval boundaries with\n   export let labels = null;           // optional vector with labels for interval boundaries or elements\n   export let labelColor = '#909090';  // color of labels\n   export let fontSize = 0.85;         // font size for labels in em\n\n   // if number of breaks is the same as number of elements in color map\n   // the corresponding labels will be placed in the middle inder each color element in the legend\n   // if this number is by one larger, the labels will be placed on the boundaries\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // constant parameters\n   const WIDTH_RATIO = 0.80;    // legend will span 80% of plot width\n   const HEIGHT_RATIO = 0.02;   // legend will span 2% of plot height\n   const TOP_MARGIN = 0.25;     // legend top margin is 25% of its height\n\n   // height of the legend elements in pixels\n   const EL_HEIGHTS_PX = {'small': 5, 'medium': 8, 'large': 12, 'xlarge': 15};\n\n   // check breaks values\n   $: if (!breaks || breaks.length < 2) {\n      throw new Error('ColormapLegend: breaks values must be provided.');\n   }\n\n   // check colormap values\n   $: if (!colmap || !(colmap.length === breaks.length - 1 || colmap.length === breaks.length )) {\n      throw new Error('ColormapLegend: number of color values in colormap does not match number of intervals defined by breaks.');\n   }\n\n   // define local variables for breaks and prepare breaks labels\n   $: lBreaks = isvector(breaks) ? breaks.v : breaks;\n\n   let breakFactor, breakLabels;\n   $: if (lBreaks) {\n      [breakFactor, breakLabels] = getTickLabels(lBreaks);\n   } else {\n      breakFactor = null;\n      breakLabels = null;\n   }\n\n   $: lLabels = labels && labels.length === lBreaks.length ? labels : breakLabels;\n\n   // get axes context and reactive variables needed to compute coordinates\n   const axes = getContext('axes');\n   const tX = axes.tX;\n   const tY = axes.tY;\n   const xLim = axes.xLim;\n   const yLim = axes.yLim;\n   const scale = axes.scale;\n   const isOk = axes.isOk;\n\n   // number of elements\n   $: n = colmap.length;\n   $: isCentered = lLabels && lLabels.length === n;\n\n   // compute screen coordinates of the elements\n   let dxl, rx, ry, rw, rh = undefined;\n   $: {\n      if ($isOk) {\n         // compute size of the whole block in plot coordinates\n         const axesWidth = $xLim[1] - $xLim[0];\n         const axesHeight = $yLim[1] - $yLim[0];\n         const width = axesWidth * WIDTH_RATIO;\n         const height = axesHeight * HEIGHT_RATIO;\n\n         // compute elements size and position\n         const elWidth = width / (n + (breakFactor !== 0));\n         const left = $xLim[0] + axesWidth * (1 - WIDTH_RATIO) * 0.5 ;\n         const elTop = $yLim[1] - height * TOP_MARGIN;\n\n         // compute screen coordinates and sized\n         ry = axes.transform(checkCoords([elTop], 'Rectangles'), $tY.coords);\n         rx = axes.transform(Vector.seq(0, n).apply(v => left + v * elWidth), $tX.coords);\n         rw = axes.transform([elWidth], $tX.objects);\n         rh = EL_HEIGHTS_PX[$scale];\n         dxl = isCentered ? rw[0] / 2 : 0\n      }\n   };\n</script>\n\n{#if $isOk && rx.length > 0}\n   <g class=\"series colormap_legend\" style=\"stroke:0;stroke-width:0px;\">\n   {#each colmap as col, i}\n      <rect x={rx[i]} y={ry} width={rw} height={rh} fill=\"{col}\"/>\n      <text x={rx[i]} y={ry} dx={dxl} dy={rh * 1.25} dominant-baseline=\"hanging\" fill={labelColor} font-size=\"{fontSize}em\" text-anchor=\"middle\">{@html lLabels[i]}</text>\n   {/each}\n   {#if !isCentered}\n   <text x={rx[n]} y={ry} dx={0} dy={rh * 1.25} dominant-baseline=\"hanging\" fill={labelColor} font-size=\"{fontSize}em\" text-anchor=\"middle\">{@html lLabels[n]}</text>\n   {/if}\n\n   {#if breakFactor !== 0}\n   <text x={rx[n] + rw[0] * 0.85} y={ry[0] + rh * 2.2} dx={0} dy={0} dominant-baseline=\"hanging\" fill={labelColor} font-size=\"{fontSize}em\" text-anchor=\"middle\">{@html getTickFactorLabel(breakFactor)}</text>\n   {/if}\n\n   </g>\n\n\n{/if}\n\n\n\n","import { getAxisTicks } from 'svelte-plots-basic/utils';\n\n// default plot settings\nexport const MARGINS = [0.85, 1.1, 0.45, 0.4];\n\n// default colors for SIMCA categories\nexport const CAT_COLORS = {\n   'regular': '#2679B2',\n   'extreme': '#F2B825',\n   'outlier': '#D22C2F', 'outliers': '#D22C2F',\n   'alien': '#2679B2', 'aliens': '#2679B2',\n   'external': '#D22C2F'\n};\n\n// default colors for series\nexport const LINE_COLORS = {'cal': '#2679B2', 'pv': '#D22C2F', 'target': '#2679B2', 'alt': '#2679B2'};\nexport const FACE_COLORS = {'cal': '#f0f8ff', 'pv': '#fff8f0', 'target': '#f0f8ff', 'alt': '#f0f8ff'};\nexport const LABELS_COLOR = '#a0a0a0';\nexport const LABELS_COLOR_SELECTED = '#909090';\nexport const AXIS_COLOR = '#909090';\nexport const MAX_LABEL_SYMBOLS = 8;\n\n// default parameters to save plots as PNG file\nexport const PNG_WIDTH = 8;   // cm\nexport const PNG_HEIGHT = 8;  // cm\nexport const PNG_RES = 600;   // pixels per inch\n\n/**\n * Returns array with colors for given number of categories.\n * @param {number} n - number of categories (between 1 nd 16).\n * @returns {Array}\n */\nexport function getColors(n) {\n   if (n ==  1) return [\"#2679B2\"];\n   if (n ==  2) return [\"#2679B2\", \"#D22C2F\"];\n   if (n ==  3) return [\"#2679B2\", \"#92B42A\", \"#D22C2F\"];\n   if (n ==  4) return [\"#2679B2\", \"#2E9658\", \"#F2B825\", \"#D22C2F\"];\n   if (n ==  5) return [\"#2679B2\", \"#22988A\", \"#92B42A\", \"#F79426\", \"#D22C2F\"];\n   if (n ==  6) return [\"#2679B2\", \"#1C9AA8\", \"#379531\", \"#EED524\", \"#FB7F28\", \"#D22C2F\"];\n   if (n ==  7) return [\"#2679B2\", \"#1D94A9\", \"#2E9658\", \"#92B42A\", \"#F2B825\", \"#F47129\", \"#D22C2F\"];\n   if (n ==  8) return [\"#2679B2\", \"#1E90AA\", \"#279775\", \"#519E2F\", \"#D3CB25\", \"#F5A326\", \"#EF672A\", \"#D22C2F\"];\n   if (n ==  9) return [\"#2679B2\", \"#1F8DAB\", \"#22988A\", \"#33953F\", \"#92B42A\", \"#EFCA24\", \"#F79426\", \"#EB5F2A\", \"#D22C2F\"];\n   if (n == 10) return [\"#2679B2\", \"#208BAC\", \"#1E999A\", \"#2E9658\", \"#5FA32E\", \"#C5C626\", \"#F2B825\", \"#F98827\", \"#E85A2B\", \"#D22C2F\"];\n   if (n == 11) return [\"#2679B2\", \"#2089AD\", \"#1C9AA8\", \"#29976C\", \"#379531\", \"#92B42A\", \"#EED524\", \"#F4AA26\", \"#FB7F28\",\n      \"#E6552B\", \"#D22C2F\"];\n   if (n == 12) return [\"#2679B2\", \"#2188AD\", \"#1C97A8\", \"#25987C\", \"#329546\", \"#68A62D\", \"#BCC327\", \"#F0C524\", \"#F69E26\",\n      \"#F77728\", \"#E4512B\", \"#D22C2F\"];\n   if (n == 13) return [\"#2679B2\", \"#2186AD\", \"#1D94A9\", \"#22988A\", \"#2E9658\", \"#469A2F\", \"#92B42A\", \"#DECF25\", \"#F2B825\",\n      \"#F79426\", \"#F47129\", \"#E34E2C\", \"#D22C2F\"];\n   if (n == 14) return [\"#2679B2\", \"#2285AE\", \"#1E92AA\", \"#209995\", \"#2A9767\", \"#34953A\", \"#6FA82D\", \"#B5C128\", \"#EFCE24\", \"#F3AD25\",\n      \"#F98C27\", \"#F16B29\", \"#E14B2C\", \"#D22C2F\"];\n   if (n == 15) return [\"#2679B2\", \"#2284AE\", \"#1E90AA\", \"#1D999F\", \"#279775\", \"#31964A\", \"#519E2F\", \"#92B42A\", \"#D3CB25\", \"#F0C224\",\n      \"#F5A326\", \"#FA8527\", \"#EF672A\", \"#E0492C\", \"#D22C2F\"];\n\n   // if n > 15 return 16 colors\n   return [\"#2679B2\", \"#2283AE\", \"#1F8FAB\", \"#1C9AA8\", \"#249880\", \"#2E9658\", \"#379531\", \"#73AA2C\", \"#B0BF28\", \"#EDD424\", \"#F2B825\",\n      \"#F69B26\", \"#FB7F28\", \"#ED632A\", \"#DF472C\", \"#D22C2F\"];\n}\n\n\n\n/**\n * Generates axis title for given component and result object.\n * @param resobj - result object (single)\n * @param ncomp - component index (from 1)\n */\nexport function getAxisTitle(resobj, ncomp) {\n   return `PC${ncomp} (${(resobj.stat.expvar[ncomp - 1] * 100).toFixed(1)}%)`;\n}\n\n\n\n/**\n * Take a subset of values without outliers.\n * @param {TypedArray} x - vector with selected variable values.\n * @param {Array} samples - row indices of samples without excluded outliers\n */\nexport function subset(x, samples) {\n   if (x.length === samples.length) return x;\n   const n = samples.length;\n   const out = new x.constructor(n);\n   for (let i in samples) {\n      out[i] = x[samples[i]];\n   }\n   return out;\n}\n\n\n/**\n * Splits data values into n intervals and return a vector with interval boundaries.\n * @param {TypedArray} x -\n * @param n\n */\nexport function split(x, n) {\n   let xMax = Number.NEGATIVE_INFINITY;\n   let xMin = Number.POSITIVE_INFINITY;\n\n   // compute min and max\n   for (let i = 0; i < x.length; i++) {\n      xMin = Math.min(xMin, x[i]);\n      xMax = Math.max(xMax, x[i]);\n   }\n\n   // get nice values for colorbar ticks\n   let ticks = getAxisTicks(undefined, [xMin, xMax], n - 1, true, false, 0).v;\n\n   // add extra on left and right if ticks do not cover the whol range\n   const dt = ticks[1] - ticks[0];\n   if (ticks[0] > xMin) {\n      const left = ticks[0] - dt;\n      ticks = [left < xMin ? left : xMin, ...ticks];\n   }\n   if (ticks[ticks.length - 1] < xMax) {\n      const right = ticks[ticks.length - 1] + dt;\n      ticks = [...ticks, right > xMax ? right : xMax];\n   }\n\n   return ticks;\n}\n\n\n/**\n * Returns JSON with color for each class category\n * @param {Array} classNames - array with unique class names\n * @returns {Object}\n */\nexport function getClassColors(classNames) {\n   const n = classNames.length;\n   if (n < 1 || n > 16) {\n      throw Error(\"getClassColors: can not create color map for more than 16 categories.\");\n   }\n\n   const colors = getColors(n);\n   const out = classNames.reduce((acc, curr, index) => {\n      acc[curr] = colors[index];\n      return acc;\n   }, {});\n   return out;\n}\n\n\n/**\n * Generates a vector of colors for each value in vector \"x\" depending on which interval its value falls into.\n * @param {TypedArray} x - vector with variable values (outliers free).\n * @param {Array} breaks - array with boundaries of the intervals.\n * @param {Array} colmap - array with color for each interval.\n *\n * @returns {Array} - same size as x, but with colors.\n */\nexport function getObjColors(x, breaks, colmap) {\n   const n = breaks.length;\n\n   // add a bit extra to right side of the last bin\n   const colors = new Array(x.length);\n   const delta = breaks[1] - breaks[0];\n   // process the values\n   for (let i = 0; i < x.length; i++) {\n      for (let j = 0; j < n - 1; j++) {\n         const left = x[i] >= breaks[j];\n         const right = j === n - 2 ? x[i] < breaks[j + 1] + delta: x[i] < breaks[j + 1];\n         if (left && right) {\n            colors[i] = colmap[j];\n            break;\n         }\n      }\n   }\n\n   return colors;\n}\n\n\nexport function getColorGroups(dataset, res, colorBy, colorByVar, resID = 'cal') {\n\n   if (!res) return [null, null, null, null, null];\n\n   let collabels, colmap, colbreaks, objcolors, colorVarName;\n   if (colorBy === 'groups' && res.classNames) {\n      // color by groups\n      const classColmap = getClassColors(res.classNames);\n      colmap = Object.keys(classColmap).map(v => classColmap[v]);\n      collabels = res.classNames;\n      objcolors = res.classes.map(v => classColmap[v]);\n      colbreaks = collabels.map((v, i) => i);\n   } else if (colorBy === 'variable') {\n      // color by variable\n      const colorVar = subset(dataset.values.getcolref(colorByVar), res.objindices);\n      colorVarName = dataset.varlabels[colorByVar - 1];\n      if (colorVarName.length > 30) {\n         colorVarName = colorVarName.substring(0, 29) + '...'; // limit varname by 30-32 symbols to fit the plot width\n      }\n      colbreaks = split(colorVar, 10);\n      colmap = getColors(colbreaks.length - 1);\n      objcolors = getObjColors(colorVar, colbreaks, colmap);\n   } else {\n      // no color grouping\n      collabels = null;\n      colbreaks = null;\n      colmap = null;\n      objcolors = Array(res.nrows).fill(LINE_COLORS[resID]);\n   }\n\n   return [collabels, colmap, colbreaks, objcolors, colorVarName];\n}\n\n/**\n * Returns JSON with x and y coordinates, legend item, colors and axis limits for a particular\n * statistic (e.g. sensitivity, specificity, etc) of result object.\n *\n * @param {Object} resobj - JSON with one or several result objects (SIMCA, PCA, etc.).\n * @param {string} id - ID of the object to compute the series values for (e.g. \"cal\" or \"pv\").\n * @param {string} statName - name of statistic to extract (e.g. \"sens\").\n * @returns {Object}\n */\nexport function getSeries(resobj, id, statName) {\n\n   if (!resobj || !id) return null;\n\n   if (!Object.keys(resobj).includes(id)) {\n      throw Error('getSeries: the result object has no element with ID: \"' + id + '\"');\n   }\n\n   const res = resobj[id];\n\n   const ncomp = res.v.length;\n   const y = Array(ncomp);\n   const x = Array(ncomp);\n   let yMin = 9999999999;\n   let yMax = -999999999;\n\n   for (let a = 0; a < ncomp; a++) {\n      const ya = res.v[a].stat[statName];\n      x[a] = a + 1;\n      y[a] = ya;\n      yMin = Math.min(yMin, ya);\n      yMax = Math.max(yMax, ya);\n   }\n\n   const legendItem = {label: id, marker: 1, borderColor: LINE_COLORS[id], faceColor: FACE_COLORS[id]};\n   const lineColor = LINE_COLORS[id];\n   const faceColor = FACE_COLORS[id];\n   return {x, y, legendItem, lineColor, faceColor, yMin, yMax};\n}","<script>\n   /**********************************************************************/\n   /* PlotSeries                                                         */\n   /* --------------------                                               */\n   /* shows line-scatter-bar series with selection and color grouping    */\n   /* possibility                                                        */\n   /**********************************************************************/\n\n   import { getContext } from 'svelte';\n   import { val2p } from 'svelte-plots-basic/utils';\n   import { LINE_COLORS, LABELS_COLOR, LABELS_COLOR_SELECTED, MAX_LABEL_SYMBOLS } from './Defaults.js';\n\n\n   /*****************************************/\n   /* Component parameters                  */\n   /*****************************************/\n\n   // inputs\n   export let xValues;                             // vector or array with x-values\n   export let yValues;                             // vector or array with y-values\n   export let seriesTitle;                         // title of the series (e.g. 'scores')\n   export let plotType;                            // type of plot ('p', 'l', 'h', 'b')\n   export let labels;                              // array with labels for plot elements\n   export let showLabels;                          // show or not labels for plot elements\n   export let lineWidth = 1.0;                     // line height\n   export let pch = '●';                           // point character (marker)\n   export let colors = undefined;                  // color for every point or bar\n   export let mainColor = LINE_COLORS['cal'];      // main color if color grouping is not used\n   export let faceColor = 'none';                  // face color for the points\n   export let selected = -1;                       // selected data point\n\n   // outputs\n   export let minYVal;                             // smallest y-value\n   export let maxYVal;                             // largest y-value\n   export let minXVal;                             // smallest x-value\n   export let maxXVal;                             // largest x-value\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // get axes context\n   const axes = getContext('axes');\n   const tX = axes.tX;\n   const tY = axes.tY;\n   const isOk = axes.isOk;\n   const scale = axes.scale;\n\n   // local copy plot type\n   let plotTypeLocal = '';\n\n\n   // reactive statement to track changes in \"plotType\" and \"xValues\" to define \"x\" values and\n   // recompute x-limits\n   let x;\n   $: if (plotType && xValues) {\n      plotTypeLocal = plotType;\n      const xv = xValues;\n\n      if (x !== xv) {\n         let _minXVal = Number.POSITIVE_INFINITY;\n         let _maxXVal = Number.NEGATIVE_INFINITY;\n         for (let i = 0; i < xv.length; i++) {\n            _minXVal = Math.min(_minXVal, xv.v[i]);\n            _maxXVal = Math.max(_maxXVal, xv.v[i]);\n         }\n         x = xv;\n         minXVal = _minXVal;\n         maxXVal = _maxXVal;\n      }\n   }\n\n   // reactive statement to track changes in \"yValues\" to define \"y\" values and\n   // recompute y-limits\n   let y;\n   $: if (yValues) {\n      const yv = yValues;\n\n      if (y !== yv) {\n         let _minYVal = Number.POSITIVE_INFINITY;\n         let _maxYVal = Number.NEGATIVE_INFINITY;\n         for (let i = 0; i < yv.length; i++) {\n            _minYVal = Math.min(_minYVal, yv.v[i]);\n            _maxYVal = Math.max(_maxYVal, yv.v[i]);\n         }\n         y = yv;\n         minYVal = _minYVal;\n         maxYVal = _maxYVal;\n      }\n   }\n\n   // reactive calculations for bar plot parameters\n   let bw, bhw, p0, dy;\n   $: if ($isOk) {\n      const m = axes.LABELS_MARGIN[$scale];\n      p0 = axes.transform([0.0], $tY.coords)[0];\n      bw = axes.transform([0.8], $tX.objects)[0];\n      bhw = bw / 2.0;\n      dy = m;\n   } else {\n      p0 = 0;\n      bw = 0;\n      bhw = 0;\n      dy = 0;\n   }\n\n   // reactive calculations for coordinates\n   let px, py, lp;\n   $: if ($isOk && x && y) {\n      if (plotType === 'l' || plotType === 'b') {\n         lp = val2p(x, y, $tX, $tY, axes);\n      }\n      px = axes.transform(x, $tX.coords);\n      py = axes.transform(y, $tY.coords);\n   } else {\n      px = null;\n      py = null;\n      bw = null;\n      lp = null;\n   }\n\n   // truncate the labels\n   $: labelsShort = labels && Array.isArray(labels) ? labels.map(v => v.slice(0, MAX_LABEL_SYMBOLS)) : null;\n\n   // reactive expression for colors\n   $: pc = x && colors && colors.length === x.length ? colors : Array(x.length).fill(mainColor);\n\n   // styles for points, bars, labels, etc.\n   const ptStyle = `font-size:1em;fill:${faceColor};text-anchor:middle;cursor:default;stroke-width:2px;user-select:none;`;\n   const lbStyle = `font-size:0.85em;fill:${LABELS_COLOR};text-anchor:middle;cursor:default;stroke:${LABELS_COLOR};stroke-width:0.1px;user-select:none;`;\n   const slStyle = `font-size:1.2em;fill:none;text-anchor:middle;cursor:default;stroke-width:3px;user-select:none;`;\n   const lineStyleStr = `fill:transparent;stroke-width: ${lineWidth}px;`;\n   const barsStyleStr = `stroke-width:${lineWidth}px;`;\n</script>\n\n{#if $isOk && px && py}\n\n\n   {#if plotType === 'l' || plotType === 'b'}\n      <!-- line plot -->\n      <g class=\"series series-line\" title=\"{seriesTitle}-lines\" style={lineStyleStr}>\n         <polyline class=\"line\" points={lp} stroke={mainColor}/>\n      </g>\n   {/if}\n\n   {#if plotType === 'h'}\n      <!-- bar plot -->\n      <g class=\"series series-bar\" title=\"{seriesTitle}-bars\" style={barsStyleStr}>\n      {#each px as v, i}\n      <rect x={px[i] - bhw} y={(y.v[i] < 0) ? p0 : py[i]} fill={pc[i]} width={bw} height={y.v[i] < 0 ? py[i] - p0 : p0 - py[i]} />\n      {/each}\n      </g>\n   {/if}\n\n   {#if plotType === 'p' || plotType === 'b'}\n      <!-- scatter/points plot -->\n      <g class=\"series series-points\" title=\"{seriesTitle}-points\" style={ptStyle} >\n      {#each px as v, i}\n      <text x={px[i]} y={py[i]} fill={faceColor} stroke={pc[i]}>{pch}</text>\n      {/each}\n      </g>\n   {/if}\n\n   {#if showLabels === 'show' && labelsShort}\n      <!-- labels plot -->\n      <g class=\"series series-text\" style={lbStyle}>\n      {#each px as v, i}\n      <text x={px[i]} y={py[i]} dy={y.v[i] < 0 ? dy : -dy}>{labelsShort[i]}</text>\n      {/each}\n      </g>\n   {/if}\n\n   {#if selected >= 0}\n      <rect x={0} y={0} width={'100%'} height={'100%'} fill=\"#ffffffa0\" />\n      {#if plotType !== 'h'}\n      <g class=\"series series-points\" title=\"{seriesTitle}-points\" style={slStyle} dominant-baseline=\"middle\" text-anchor=\"middle\">\n      <text x={px[selected]} y={py[selected]} stroke={pc[selected]} >{pch}</text>\n      </g>\n      {:else}\n      <g class=\"series series-bar\" title=\"{seriesTitle}-bars\" style={barsStyleStr}>\n      <rect stroke={pc[selected]} fill={pc[selected]} x={px[selected] - bhw} y={(y.v[selected] < 0) ? p0 : py[selected]} width={bw} height={y.v[selected] < 0 ? py[selected] - p0 : p0 - py[selected]} />\n      </g>\n      {/if}\n\n      {#if showLabels === 'show' && labelsShort && labelsShort.length > 0}\n      <g class=\"series series-text\" style={lbStyle}>\n      <text stroke={LABELS_COLOR_SELECTED} fill={LABELS_COLOR_SELECTED} x={px[selected]} y={py[selected]} dy={y.v[selected] < 0 ? dy : -dy}>{labelsShort[selected]}</text>\n      </g>\n      {/if}\n   {/if}\n{/if}","<script>\n   /*************************************************************/\n   /* VariancePlot                                              */\n   /* --------------------                                      */\n   /* shows plot with variance values vs. number of PCs         */\n   /*************************************************************/\n\n   import { Axes, XAxis, YAxis, Box } from 'svelte-plots-basic/2d';\n   import { Vector, vector } from 'mdatools/arrays';\n\n   import { PNG_WIDTH, PNG_HEIGHT, PNG_RES, MARGINS, FACE_COLORS } from '../../../shared/plots/Defaults.js';\n   import PlotSeries from '../../../shared/plots/PlotSeries.svelte';\n\n   export let params;                     // JSON with main plot parameters\n   export let res;                        // JSON with PCA results\n\n   export let showGrid = true;\n   export let fileName = 'plot-variance';\n   export let pngWidth = PNG_WIDTH;\n   export let pngHeight = PNG_HEIGHT;\n   export let pngRes = PNG_RES;\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // constant plot parameters\n   const xLabel = 'Number of PCs';\n   const yLabel = 'Variance';\n   const titles = {\n      'expvar': 'Explained variance',\n      'resvar': 'Residual variance',\n      'cumexpvar': 'Cumulative explained variance',\n      'cumresvar': 'Cumulative residual variance'\n   };\n\n   let varType = 'exp';\n   let varForm = 'cum';\n   let plotType = 'b';\n   let showLabels = 'hide';\n\n   // reactive expressions to monitor changes in plot parameters\n   $: if (params && params.varType !== varType) varType = params.varType;\n   $: if (params && params.varForm !== varForm) varForm = params.varForm;\n   $: if (params && params.plotType !== plotType) plotType = params.plotType;\n   $: if (params && params.showLabels !== showLabels) showLabels = params.showLabels;\n\n   $: statName = varForm + varType + 'var';\n   $: title = titles[statName];\n\n   // reactive computation of y limits\n   $: limY = [-0.05, 1.1];\n   $: limX = res ? [1 - res.ncomp / 20, res.ncomp + res.ncomp / 20] : [0, 1];\n   $: xValues = res ? Vector.seq(1, res.ncomp) : null;\n   $: yValues = res ? vector(res.stat[statName]) : null;\n   $: labels = yValues ? Array.from(yValues.v).map(v => v.toFixed(v < 0.1 ? 3 : 2)) : null;\n</script>\n\n{#if res && xValues && yValues }\n<Axes {title} {xLabel} {yLabel} {limX} {limY}\n   {fileName} {pngWidth} {pngHeight} {pngRes}\n   downloadLinks=\"hover\"\n   margins={MARGINS}\n>\n   <slot name=\"before\"></slot>\n\n   <!-- data points  -->\n   <PlotSeries\n      {xValues}\n      {yValues}\n      {plotType}\n      {showLabels}\n      {labels}\n      faceColor={FACE_COLORS['cal']}\n      lineWidth={1.5}\n      seriesTitle=\"variance\"\n   />\n\n\n   <XAxis {showGrid} slot=\"xaxis\" whole={true} />\n   <YAxis {showGrid} slot=\"yaxis\" />\n   <Box slot=\"box\" />\n</Axes>{/if}","<script>\n   /*************************************************************/\n   /* DistancePlot for PCA results                              */\n   /* ----------------------------                              */\n   /* shows plot with score and orthogonal distances            */\n   /* and acceptance areas  (both for objects and variables)    */\n   /*************************************************************/\n\n   import { max } from 'mdatools/stat';\n   import { Axes, XAxis, YAxis, Box, Lines, ColormapLegend } from 'svelte-plots-basic/2d';\n   import { Vector } from 'mdatools/arrays';\n   import { qchisq } from 'mdatools/distributions';\n\n   import { getColorGroups, PNG_WIDTH, PNG_HEIGHT, PNG_RES, MARGINS } from '../../../shared/plots/Defaults.js';\n   import { pcares_get } from '../../../shared/wasm/dist/pca.js';\n   import PlotSeries from '../../../shared/plots/PlotSeries.svelte';\n\n\n   /*****************************************/\n   /* Component parameters                  */\n   /*****************************************/\n\n   export let params;                     // JSON with main plot parameters\n   export let res;                        // JSON with PCA results\n   export let selected = undefined;       // selected object or variable\n\n   export let fileName = 'plot-distance';\n   export let pngWidth = PNG_WIDTH;\n   export let pngHeight = PNG_HEIGHT;\n   export let pngRes = PNG_RES;\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // constant plot parameters\n   const showGrid = true;\n   const plotType = 'p';\n   const LINE_COLOR = '#909090';    // color of the limits lines\n\n   // const parameters for computation\n   const NPOINTS = 100;             // number of points in limit lines\n\n   // local copies of user defined plot parameters\n   let limType = 'classic';\n   let transType = 'no';\n   let showLabels = 'no';\n   let colorBy = 'none';\n   let ncomp = 1;\n\n   // function for creating axis titles\n   function get_axis_label(id, transType) {\n      const distNames = {\n         'q': 'Orthogonal distance',\n         'h': 'Score distance',\n      };\n      return distNames[id] + ', ' + (transType === 'log' ? 'log(1 + ' + id + '/' + id + '0)' : id + '/' + id + '0');\n   };\n\n   function get_limit_coordinates(prob, Nh, Nq, transType) {\n      const Nf = Nh + Nq;\n      const crit = qchisq(prob, Nf);\n\n      // show limit for orthogonal and score distance\n      const b0 = crit/Nq;\n      const b1 = -Nh / Nq;\n      const xMax = -b0 / b1;\n      const x = Vector.seq(0, xMax * 1, xMax  / NPOINTS);\n      const y = x.apply(v => v * b1 + b0);\n      return {\n         x:  transType === 'log' ? x.apply(v => Math.log(1 + v)) : x,\n         y:  transType === 'log' ? y.apply(v => Math.log(1 + v)) : y\n      }\n   }\n\n   function select(e) {\n      if (selected === undefined) return; // do not select points if this option is not activated in parent app\n      const id = parseInt(e.detail.elementID)\n      const series_title = e.detail.seriesTitle\n      if (id >= 0 && series_title === 'distance-points') {\n         selected = id;\n      }\n   }\n\n   function resetSelection(e) {\n      selected = -1;\n   }\n\n\n   // reactive expressions to monitor changes in plot parameters\n   $: if (params && params.limType !== limType) limType = params.limType;\n   $: if (params && params.transType !== transType) transType = params.transType;\n   $: if (params && params.showLabels !== showLabels) showLabels = params.showLabels;\n   $: if (params && params.ncomp) ncomp = params.ncomp;\n   $: if (params && params.colorBy) colorBy = params.colorBy;\n\n   // reactive expression to compute x and y coordinates of limits\n   let els, ols;\n   $: if (res && ncomp > 0) {\n      const l = limType === 'classic' ? 'c' : 'r';\n      const Nh = res[l + 'Nh'];\n      const Nq = res[l + 'Nq']\n      els = get_limit_coordinates(0.95, Nh[ncomp - 1], Nq[ncomp - 1], transType);\n      ols = get_limit_coordinates(Math.pow(0.99, 1/res.nrows), Nh[ncomp - 1], Nq[ncomp - 1], transType);\n      yMax = ols.y.v[0];\n   }\n\n   // reactive expression to compute colorby parameters\n   let collabels, colmap, colbreaks, objcolors, colorVarName;\n   $: [collabels, colmap, colbreaks, objcolors, colorVarName] = getColorGroups(null, res, colorBy, null);\n\n   // reactive expression to compute coordinates of points and colors\n   let xValues, yValues, xMax, yMax, xMin, yMin;\n   $: if (res && ncomp > 0) {\n\n      // select distances to show and their scales\n      const res_xd = pcares_get(res, \"hdist\", ncomp);\n      const res_yd = pcares_get(res, \"qdist\", ncomp);\n\n      const l = limType === 'classic' ? 'c' : 'r';\n      const res_xd0 = res[l + 'h0'][ncomp - 1];\n      const res_yd0 = res[l + 'q0'][ncomp - 1];\n\n      // prepare vectors for transformed distances\n      const n = res_xd.length;\n      xValues = Vector.zeros(n);\n      yValues = Vector.zeros(n);\n\n      yMax = Number.NEGATIVE_INFINITY;\n      yMin = Number.POSITIVE_INFINITY;\n      xMax = Number.NEGATIVE_INFINITY;\n      xMin = Number.POSITIVE_INFINITY;\n\n\n      if (transType === 'log') {\n         for (let i = 0; i < n; i++) {\n            const xv = Math.log(1 + res_xd[i]/res_xd0);\n            const yv = Math.log(1 + res_yd[i]/res_yd0);\n            xValues.v[i] = xv;\n            yValues.v[i] = yv\n            xMax = Math.max(xMax, xv);\n            yMax = Math.max(yMax, yv);\n            xMin = Math.min(xMin, xv);\n            yMin = Math.min(yMin, yv);\n         }\n      } else {\n         for (let i = 0; i < n; i++) {\n            const xv = res_xd[i]/res_xd0;\n            const yv = res_yd[i]/res_yd0;\n            xValues.v[i] = xv;\n            yValues.v[i] = yv\n            xMax = Math.max(xMax, xv);\n            yMax = Math.max(yMax, yv);\n            xMin = Math.min(xMin, xv);\n            yMin = Math.min(yMin, yv);\n         }\n      }\n   } else {\n      xValues = null;\n      yValues = null;\n      yMax = 1;\n      yMin = 0;\n      xMax = 1;\n      xMin = 0;\n   }\n\n   // reactive calculations for axis labels and title\n   $: title = 'Distance plot (A = ' + ncomp + ')';\n   $: xLabel = get_axis_label('h', transType);\n   $: yLabel = get_axis_label('q', transType);\n\n   // reactive calculations for axis limits\n   $: xMaxTot = max([xMax, ols.x.v[NPOINTS - 1]]);\n   $: yMaxTot = max([yMax, ols.y.v[0]]);\n   $: limX = [-0.02 * (xMaxTot - xMin), 1.05 * xMaxTot];\n   $: limY = [-0.02 * (yMaxTot - yMin), (1.05 + 0.10 * (colorBy !== 'none')) * yMaxTot];\n</script>\n\n{#if res && params}\n<div class=\"plot-container\">\n<Axes\n   margins={MARGINS}\n   on:markerclick={select}\n   on:axesclick={resetSelection}\n   downloadLinks=\"hover\"\n   {fileName}\n   {xLabel}\n   {yLabel}\n   {limX}\n   {limY}\n   {title}\n   {pngWidth}\n   {pngHeight}\n   {pngRes}\n>\n   <!-- limits  -->\n   {#if els }\n   <Lines xValues={els.x} yValues={els.y} lineColor={LINE_COLOR} lineType={2} />\n   {/if}\n\n   {#if ols}\n   <Lines xValues={ols.x} yValues={ols.y} lineColor={LINE_COLOR} lineType={3} />\n   {/if}\n\n   <!-- data points  -->\n   <PlotSeries\n      {xValues}\n      {yValues}\n      {plotType}\n      {showLabels}\n      {selected}\n      labels={res.objlabels}\n      colors={objcolors}\n      seriesTitle=\"distance\"\n      bind:minYVal={yMin}\n      bind:maxYVal={yMax}\n      bind:minXVal={xMin}\n      bind:maxXVal={xMax}\n   />\n\n\n   <!-- color by legend-->\n   {#if colorBy === 'groups' && colmap }\n   <ColormapLegend {colmap} breaks={colbreaks} labels={collabels}/>\n   {/if}\n\n   <XAxis {showGrid} slot=\"xaxis\" />\n   <YAxis {showGrid} slot=\"yaxis\" />\n   <Box slot=\"box\" />\n</Axes>\n</div>\n{#if selected !== undefined}\n   {#if selected < 0}\n   <div class=\"msg-select\">Click on a point to select...</div>\n   {:else}\n   <div class=\"msg-select\">Click anywhere to remove selection...</div>\n   {/if}\n{/if}\n{/if}\n\n\n<style>\n   .plot-container {\n      width: 100%;\n      height: calc(100% - 15px);\n   }\n   .msg-select {\n      height: 15px;\n      font-size: 12px;\n      color: #aaa;\n      text-align: center;\n   }\n</style>\n\n","<script>\n   /****************************************************************/\n   /* BiPlot                                                       */\n   /* --------------------                                         */\n   /* shows bi-plot with PCA scores and loadings                   */\n   /****************************************************************/\n\n   import { Axes, XAxis, YAxis, Box, Segments, Points, TextLabels } from 'svelte-plots-basic/2d';\n   import { PNG_WIDTH, PNG_HEIGHT, PNG_RES, MARGINS, AXIS_COLOR } from '../../../shared/plots/Defaults.js';\n   import { Vector } from 'mdatools/arrays';\n\n   import { pcares_get, pcamodel_get } from '../../../shared/wasm/dist/pca.js';\n\n\n   /*****************************************/\n   /* Component parameters                  */\n   /*****************************************/\n\n   // inputs\n   export let params;                        // JSON with main plot parameters\n   export let res;                           // JSON with result object\n   export let model;                         // JSON with model object\n\n   // saving parameters\n   export let fileName = 'plot-biplot';\n   export let pngWidth = PNG_WIDTH;\n   export let pngHeight = PNG_HEIGHT;\n   export let pngRes = PNG_RES;\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // constant plot parameters\n   const showGrid = true;\n   const pColor = \"#2679B2\";\n   const tColor = \"#D22C2F\";\n   const pColorText = \"#667892\";\n   const tColorText = \"#927866\";\n\n   /**\n    * Generates axis title for given component and result object.\n    * @param resobj - result object (single)\n    * @param ncomp - component index (from 1)\n    */\n   function getAxisTitle(resobj, ncomp) {\n      return `PC${ncomp} (${(resobj.stat.expvar[ncomp - 1] * 100).toFixed(1)}%)`;\n   }\n\n   // local copies of changeable plot parameters\n   let comp = [1, 1];\n   let plotType = 'p';\n   let showLabels = 'hide';\n   let axesScale = 'normal';\n\n   // reactive expressions to monitor changes in plot parameters\n   $: if (params && params.comp !== comp) comp = params.comp;\n   $: if (params && params.plotType !== plotType) plotType = params.plotType;\n   $: if (params && params.showLabels !== showLabels) showLabels = params.showLabels;\n   $: if (params && params.axesScale !== axesScale) axesScale = params.axesScale;\n\n   $: eigenvals = model ?  pcamodel_get(model, \"eigenvals\") : null;\n   $: xStart = res ? Vector.zeros(res.ncols) : null;\n   $: yStart = res ? Vector.zeros(res.ncols) : null;\n\n   function getValues(a) {\n      const t = pcares_get(res, 'scores', a).slice();\n      const p = pcamodel_get(model, 'loadings', a);\n\n      const nobj = t.length;\n      const nvar = p.length;\n\n      let vMin = Number.POSITIVE_INFINITY;\n      let vMax = Number.NEGATIVE_INFINITY;\n\n      const tpos = new Array(nobj);\n      for (let i = 0; i < nobj; i++ ) {\n         t[i] = t[i] / Math.sqrt(eigenvals[a - 1] * (nobj - 1));\n         if (vMin > t[i]) vMin = t[i];\n         if (vMax < t[i]) vMax = t[i];\n         tpos[i] = t[i] < 0 ? 1 : 3;\n      }\n\n      const ppos = new Array(nobj);\n      for (let i = 0; i < nvar; i++ ) {\n         if (vMin > p[i]) vMin = p[i];\n         if (vMax < p[i]) vMax = p[i];\n         ppos[i] = p[i] < 0 ? 1 : 3;\n      }\n\n      const vValues = new Vector(t);\n      const vEnd = new Vector(p);\n      const vLabel = getAxisTitle(res, a);\n      const dV = (vMax - vMin) / 16;\n      const vLim = [vMin - dV, vMax + dV];\n      return [vValues, vEnd, vLim, vLabel, tpos, ppos];\n   }\n\n   let compX = -1, xValues, xEnd, xLabel, limXc;\n   $: if (res && comp && compX !== comp[0]) {\n      compX = comp[0];\n      let a, b;\n      [xValues, xEnd, limXc, xLabel, a, b] = getValues(compX);\n   }\n\n   let compY = -1, yValues, yEnd, yLabel, limYc, tpos, ppos;\n   $: if (res && comp && compY !== comp[1]) {\n      compY = comp[1];\n      [yValues, yEnd, limYc, yLabel, tpos, ppos] = getValues(compY);\n   }\n\n   let limX, limY;\n   $: if (axesScale === 'equal') {\n      const v = Math.max(Math.abs(limXc[0]), Math.abs(limYc[0]), limXc[1], limYc[1]) * 1.05;\n      limX = [-v, v];\n      limY = [-v, v];\n   } else {\n      limX = limXc;\n      limY = limYc;\n   }\n</script>\n\n{#if xValues && yValues && xEnd && yEnd}\n<div class=\"plot-container\">\n<Axes\n   {xLabel} {yLabel} {limX} {limY}\n   {fileName} {pngWidth} {pngHeight} {pngRes}\n   title=\"Bi-plot (scores and loadings)\"\n   downloadLinks=\"hover\"\n   margins={MARGINS}\n>\n\n   <!-- axis lines (x = 0 and y = 0) -->\n   <Segments xStart={[limX[0]]} xEnd={[limX[1]]} yStart={[0]} yEnd={[0]} lineColor={AXIS_COLOR} />\n   <Segments xStart={[0]} xEnd={[0]} yStart={[limY[0]]} yEnd={[limY[1]]} lineColor={AXIS_COLOR} />\n\n   <!-- scores as points -->\n   <Points {xValues} {yValues} borderColor={tColor} borderWidth={1.5}/>\n\n   <!-- loadings as segments -->\n   <Segments {xStart} {yStart} {xEnd} {yEnd} lineColor={pColor} />\n   <Points xValues={xEnd} yValues={yEnd} marker={1} borderColor={pColor} faceColor={pColor} markerSize={0.4} />\n\n   {#if showLabels === 'obj' || showLabels === 'both'}\n   <TextLabels {xValues} {yValues} labels={res.objlabels} pos={tpos} textSize={0.75} faceColor={tColorText}/>\n   {/if}\n   {#if showLabels === 'var' || showLabels === 'both'}\n   <TextLabels xValues={xEnd} yValues={yEnd} labels={res.varlabels} textSize={0.75} pos={ppos} faceColor={pColorText}/>\n   {/if}\n   <XAxis {showGrid} slot=\"xaxis\" />\n   <YAxis {showGrid} slot=\"yaxis\" />\n   <Box slot=\"box\" />\n</Axes>\n</div>\n\n{/if}\n\n<style>\n   .plot-container {\n      width: 100%;\n      height: calc(100% - 15px);\n   }\n   .msg-select {\n      height: 15px;\n      font-size: 12px;\n      color: #aaa;\n      text-align: center;\n   }\n</style>\n","<script>\n   /*************************************************************/\n   /* EigenvaluesPlot                                           */\n   /* --------------------                                      */\n   /* shows plot with eigenavalues vs. number of PCs            */\n   /*************************************************************/\n\n   import { Axes, XAxis, YAxis, Box } from 'svelte-plots-basic/2d';\n   import { Vector } from 'mdatools/arrays';\n\n   import { PNG_WIDTH, PNG_HEIGHT, PNG_RES, MARGINS, FACE_COLORS } from '../../../shared/plots/Defaults.js';\n   import { pcamodel_get } from '../../../shared/wasm/dist/pca.js';\n   import PlotSeries from '../../../shared/plots/PlotSeries.svelte';\n\n   export let params;                     // JSON with main plot parameters\n   export let model;                      // JSON with model object\n\n   export let showGrid = true;\n   export let fileName = 'plot-eigenvalues';\n   export let pngWidth = PNG_WIDTH;\n   export let pngHeight = PNG_HEIGHT;\n   export let pngRes = PNG_RES;\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // constant plot parameters\n   const xLabel = 'Number of PCs';\n   const title = 'Eigenvalues';\n   const yLabels = {'none': 'λ', 'log':  'log(λ)', 'sqrt': 'sqrt(λ)'};\n   let transform = 'none';\n   let plotType = 'b';\n   let showLabels = 'hide';\n\n\n   function f(values, transform) {\n      if (transform === 'none') return values;\n      if (transform === 'log') return values.apply(v => Math.log(v))\n      if (transform === 'sqrt') return values.apply(v => Math.sqrt(v))\n   }\n\n   // reactive expressions to monitor changes in plot parameters\n   $: if (params && params.transform !== transform) transform = params.transform;\n   $: if (params && params.plotType !== plotType) plotType = params.plotType;\n   $: if (params && params.showLabels !== showLabels) showLabels = params.showLabels;\n\n   // reactive computation of y limits\n\n   $: eigenvalues = model ? new Vector(pcamodel_get(model, 'eigenvals')) : null;\n   $: xValues = model ? Vector.seq(1, model.ncomp) : null;\n   $: yValues = eigenvalues ? f(eigenvalues, transform) : null;\n   $: labels = yValues ? Array.from(yValues.v).map(v => v.toFixed(v < 0.1 ? 3 : 2)) : null;\n   $: limX = model ? [1 - model.ncomp / 15, model.ncomp + model.ncomp / 20] : [0, 1];\n\n   $: minY = yValues ? (transform === 'none' ? 0 : yValues.v[model.ncomp - 1]) : 0;\n   $: maxY = yValues ? yValues.v[0] : 1;\n   $: dY = (maxY - minY) / 18;\n   $: limY = yValues ? [minY - dY, maxY +  dY] : null;\n   $: yLabel = yLabels[transform];\n</script>\n\n{#if model && xValues && yValues }\n<Axes {title} {xLabel} {yLabel} {limX} {limY}\n   {fileName} {pngWidth} {pngHeight} {pngRes}\n   downloadLinks=\"hover\"\n   margins={MARGINS}\n>\n   <slot name=\"before\"></slot>\n\n   <!-- data points  -->\n   <PlotSeries\n      {xValues}\n      {yValues}\n      {plotType}\n      {showLabels}\n      {labels}\n      faceColor={FACE_COLORS['cal']}\n      lineWidth={1.5}\n      seriesTitle=\"variance\"\n   />\n\n\n   <XAxis {showGrid} slot=\"xaxis\" whole={true} />\n   <YAxis {showGrid} slot=\"yaxis\" />\n   <Box slot=\"box\" />\n</Axes>{/if}","<script>\n   /***************************************************************\n    * PlotTypeSelector                                            *\n    * --------------------                                        *\n    * control element for selecting a plot type                   *\n    ***************************************************************/\n\n   import Container from './Container.svelte';\n   import Select from './Select.svelte';\n\n   export let value = 'p';                                     // default plot type\n   export let plotTypeOptions = ['p', 'l', 'b', 'h', 'ml'];    // list of types to show\n</script>\n\n\n<Container label='Plot type'>\n   <Select id='plotType' className=\"file-selector\" bind:value={value} options={plotTypeOptions} />\n</Container>\n\n<style>\n   :global(.file-selector > .option) {\n      width: 36px;\n      height: 22px;\n      background-size: 32px 18px;\n      background-repeat: no-repeat;\n      background-position: 50%;\n      font-size: 0;\n      border-radius: 2px;\n      margin-right: 3px;\n   }\n\n   :global(.file-selector > .option:not(.selected):hover) {\n      border-color: #6eb8ff20;\n   }\n\n   /*\n   colors:\n   %23606060\n   %23fefefe\n   %236EB8FF\n   */\n\n   :global(.file-selector .option_bp) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"20\" viewBox=\"0 0 32 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"8\" y=\"15\" width=\"10\" height=\"16\" transform=\"rotate(-90 8 15)\" stroke=\"%23606060\" stroke-width=\"2\"/><line x1=\"15\" y1=\"14\" x2=\"15\" y2=\"4\" stroke=\"%23606060\" stroke-width=\"2\"/><line x1=\"30\" y1=\"10\" x2=\"25\" y2=\"10\" stroke=\"%23606060\" stroke-width=\"2\"/><line x1=\"8\" y1=\"10\" x2=\"2\" y2=\"10\" stroke=\"%23606060\" stroke-width=\"2\"/></svg>');\n   }\n\n   :global(.file-selector .option_bp.selected:hover, .file-selector .option_bp.selected) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"20\" viewBox=\"0 0 32 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"8\" y=\"15\" width=\"10\" height=\"16\" transform=\"rotate(-90 8 15)\" stroke=\"%23fefefe\" stroke-width=\"2\"/><line x1=\"15\" y1=\"14\" x2=\"15\" y2=\"4\" stroke=\"%23fefefe\" stroke-width=\"2\"/><line x1=\"30\" y1=\"10\" x2=\"25\" y2=\"10\" stroke=\"%23fefefe\" stroke-width=\"2\"/><line x1=\"8\" y1=\"10\" x2=\"2\" y2=\"10\" stroke=\"%23fefefe\" stroke-width=\"2\"/></svg>');\n   }\n\n   :global(.file-selector .option_bp:hover) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"20\" viewBox=\"0 0 32 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"8\" y=\"15\" width=\"10\" height=\"16\" transform=\"rotate(-90 8 15)\" stroke=\"%236EB8FF\" stroke-width=\"2\"/><line x1=\"15\" y1=\"14\" x2=\"15\" y2=\"4\" stroke=\"%236EB8FF\" stroke-width=\"2\"/><line x1=\"30\" y1=\"10\" x2=\"25\" y2=\"10\" stroke=\"%236EB8FF\" stroke-width=\"2\"/><line x1=\"8\" y1=\"10\" x2=\"2\" y2=\"10\" stroke=\"%236EB8FF\" stroke-width=\"2\"/></svg>');\n   }\n\n\n   /* heat map */\n   :global(.file-selector .option_hm) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"20\" viewBox=\"0 0 32 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"5\" y=\"16\" width=\"12\" height=\"23\" transform=\"rotate(-90 5 16)\" stroke=\"%23606060\" stroke-width=\"2\"/><line x1=\"13\" y1=\"16\" x2=\"13\" y2=\"3\" stroke=\"%23606060\" stroke-width=\"2\"/><line x1=\"21\" y1=\"16\" x2=\"21\" y2=\"3\" stroke=\"%23606060\" stroke-width=\"2\"/><line x1=\"28\" y1=\"10\" x2=\"5\" y2=\"10\" stroke=\"%23606060\" stroke-width=\"2\"/></svg>');\n   }\n\n   :global(.file-selector .option_hm.selected:hover),\n   :global(.file-selector .option_hm.selected) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"20\" viewBox=\"0 0 32 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"5\" y=\"16\" width=\"12\" height=\"23\" transform=\"rotate(-90 5 16)\" stroke=\"%23fefefe\" stroke-width=\"2\"/><line x1=\"13\" y1=\"16\" x2=\"13\" y2=\"3\" stroke=\"%23fefefe\" stroke-width=\"2\"/><line x1=\"21\" y1=\"16\" x2=\"21\" y2=\"3\" stroke=\"%23fefefe\" stroke-width=\"2\"/><line x1=\"28\" y1=\"10\" x2=\"5\" y2=\"10\" stroke=\"%23fefefe\" stroke-width=\"2\"/></svg>');\n   }\n\n   :global(.file-selector .option_hm:hover) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"20\" viewBox=\"0 0 32 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"5\" y=\"16\" width=\"12\" height=\"23\" transform=\"rotate(-90 5 16)\" stroke=\"%236EB8FF\" stroke-width=\"2\"/><line x1=\"13\" y1=\"16\" x2=\"13\" y2=\"3\" stroke=\"%236EB8FF\" stroke-width=\"2\"/><line x1=\"21\" y1=\"16\" x2=\"21\" y2=\"3\" stroke=\"%236EB8FF\" stroke-width=\"2\"/><line x1=\"28\" y1=\"10\" x2=\"5\" y2=\"10\" stroke=\"%236EB8FF\" stroke-width=\"2\"/></svg>');\n   }\n\n\n   /* line */\n   :global(.file-selector .option_l) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"18\" viewBox=\"0 0 32 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4.23178 14.3598L15.5 5\" stroke=\"%23606060\" stroke-width=\"2\"/><line x1=\"14.4846\" y1=\"5.17692\" x2=\"26.4846\" y2=\"10.1769\" stroke=\"%23606060\" stroke-width=\"2\"/></svg>');\n   }\n\n   :global(.file-selector .option_l.selected:hover),\n   :global(.file-selector .option_l.selected) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"18\" viewBox=\"0 0 32 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4.23178 14.3598L15.5 5\" stroke=\"%23326a9e\" stroke-width=\"2\"/><line x1=\"14.4846\" y1=\"5.17692\" x2=\"26.4846\" y2=\"10.1769\" stroke=\"%23326a9e\" stroke-width=\"2\"/></svg>');\n   }\n\n   :global(.file-selector .option_l:hover) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"18\" viewBox=\"0 0 32 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4.23178 14.3598L15.5 5\" stroke=\"%236EB8FF\" stroke-width=\"2\"/><line x1=\"14.4846\" y1=\"5.17692\" x2=\"26.4846\" y2=\"10.1769\" stroke=\"%236EB8FF\" stroke-width=\"2\"/></svg>');\n   }\n\n\n   /* scatter */\n   :global(.file-selector .option_p) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"18\" viewBox=\"0 0 32 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"8.5\" cy=\"12.5\" r=\"2.5\" fill=\"%23606060\"/><circle cx=\"15.5\" cy=\"6.5\" r=\"2.5\" fill=\"%23606060\"/><circle cx=\"23.5\" cy=\"10.5\" r=\"2.5\" fill=\"%23606060\"/></svg>');\n   }\n\n   :global(.file-selector .option_p.selected:hover),\n   :global(.file-selector .option_p.selected) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"18\" viewBox=\"0 0 32 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"8.5\" cy=\"12.5\" r=\"2.5\" fill=\"%23326a9e\"/><circle cx=\"15.5\" cy=\"6.5\" r=\"2.5\" fill=\"%23326a9e\"/><circle cx=\"23.5\" cy=\"10.5\" r=\"2.5\" fill=\"%23326a9e\"/></svg>');\n   }\n\n   :global(.file-selector .option_p:hover) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"18\" viewBox=\"0 0 32 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"8.5\" cy=\"12.5\" r=\"2.5\" fill=\"%236EB8FF\"/><circle cx=\"15.5\" cy=\"6.5\" r=\"2.5\" fill=\"%236EB8FF\"/><circle cx=\"23.5\" cy=\"10.5\" r=\"2.5\" fill=\"%236EB8FF\"/></svg>');\n   }\n\n  /* line-scatter */\n   :global(.file-selector .option_b) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"18\" viewBox=\"0 0 32 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4.23178 14.3598L15.5 5\" stroke=\"%23606060\" stroke-width=\"1.5\"/><line x1=\"14.4846\" y1=\"5.17692\" x2=\"26.4846\" y2=\"10.1769\" stroke=\"%23606060\" stroke-width=\"1.5\"/><circle cx=\"6.2\" cy=\"12.8\" r=\"2.5\" fill=\"%23606060\"/><circle cx=\"15.5\" cy=\"6.0\" r=\"2.5\" fill=\"%23606060\"/><circle cx=\"25.8\" cy=\"10.5\" r=\"2.5\" fill=\"%23606060\"/></svg>');\n   }\n\n   :global(.file-selector .option_b.selected:hover),\n   :global(.file-selector .option_b.selected) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"18\" viewBox=\"0 0 32 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4.23178 14.3598L15.5 5\" stroke=\"%23326a9e\" stroke-width=\"2\"/><line x1=\"14.4846\" y1=\"5.17692\" x2=\"26.4846\" y2=\"10.1769\" stroke=\"%23326a9e\" stroke-width=\"2\"/><circle cx=\"6.2\" cy=\"12.8\" r=\"2.5\" fill=\"%23326a9e\"/><circle cx=\"15.5\" cy=\"6.0\" r=\"2.5\" fill=\"%23326a9e\"/><circle cx=\"25.8\" cy=\"10.5\" r=\"2.5\" fill=\"%23326a9e\"/></svg>');\n   }\n\n   :global(.file-selector .option_b:hover) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"18\" viewBox=\"0 0 32 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4.23178 14.3598L15.5 5\" stroke=\"%236EB8FF\" stroke-width=\"2\"/><line x1=\"14.4846\" y1=\"5.17692\" x2=\"26.4846\" y2=\"10.1769\" stroke=\"%236EB8FF\" stroke-width=\"2\"/><circle cx=\"6.2\" cy=\"12.8\" r=\"2.5\" fill=\"%236EB8FF\"/><circle cx=\"15.5\" cy=\"6.0\" r=\"2.5\" fill=\"%236EB8FF\"/><circle cx=\"25.8\" cy=\"10.5\" r=\"2.5\" fill=\"%236EB8FF\"/></svg>');\n   }\n\n   /* bar */\n   :global(.file-selector .option_h) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"18\" viewBox=\"0 0 32 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><line x1=\"9\" y1=\"15\" x2=\"9\" y2=\"9\" stroke=\"%23606060\" stroke-width=\"6\"/><line x1=\"17\" y1=\"15\" x2=\"17\" y2=\"3\" stroke=\"%23606060\" stroke-width=\"6\"/><line x1=\"25\" y1=\"15\" x2=\"25\" y2=\"7\" stroke=\"%23606060\" stroke-width=\"6\"/></svg>');\n   }\n\n   :global(.file-selector .option_h.selected:hover),\n   :global(.file-selector .option_h.selected) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"18\" viewBox=\"0 0 32 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><line x1=\"9\" y1=\"15\" x2=\"9\" y2=\"9\" stroke=\"%23326a9e\" stroke-width=\"6\"/><line x1=\"17\" y1=\"15\" x2=\"17\" y2=\"3\" stroke=\"%23326a9e\" stroke-width=\"6\"/><line x1=\"25\" y1=\"15\" x2=\"25\" y2=\"7\" stroke=\"%23326a9e\" stroke-width=\"6\"/></svg>');\n   }\n\n   :global(.file-selector .option_h:hover) {\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"32\" height=\"18\" viewBox=\"0 0 32 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><line x1=\"9\" y1=\"15\" x2=\"9\" y2=\"9\" stroke=\"%236EB8FF\" stroke-width=\"6\"/><line x1=\"17\" y1=\"15\" x2=\"17\" y2=\"3\" stroke=\"%236EB8FF\" stroke-width=\"6\"/><line x1=\"25\" y1=\"15\" x2=\"25\" y2=\"7\" stroke=\"%236EB8FF\" stroke-width=\"6\"/></svg>');\n   }\n\n</style>","<script>\n   /**************************************************************/\n   /* Svelte component for EigenvaluesPlot settings              */\n   /**************************************************************/\n\n   import Container from '../../../shared/controls/Container.svelte';\n   import Select from '../../../shared/controls/Select.svelte';\n   import PlotTypeSelector from '../../../shared/controls/PlotTypeSelector.svelte';\n\n   export let params;\n   export let model;\n\n   let plotType = 'b';\n   let showLabels = 'hide';\n   let transform = 'none';\n\n   $: params = {\n      plotType,\n      showLabels,\n      transform\n   }\n</script>\n\n{#if model  }\n<Container label=\"\">\n   <p class=\"title\">Eigenvalues plot</p>\n</Container>\n<PlotTypeSelector bind:value={plotType} plotTypeOptions={['b', 'h']} />\n<Container label='Transform:'>\n   <Select id='transform' bind:value={transform} options={['none', 'sqrt', 'log']} />\n</Container>\n<Container label='Labels:'>\n   <Select id='showLabels' bind:value={showLabels} options={['hide', 'show']} />\n</Container>\n{/if}\n","<script>\n   /**************************************************************/\n   /* Svelte component for VariancePlot settings                 */\n   /**************************************************************/\n\n   import Container from '../../../shared/controls/Container.svelte';\n   import Select from '../../../shared/controls/Select.svelte';\n   import PlotTypeSelector from '../../../shared/controls/PlotTypeSelector.svelte';\n\n   export let params;\n   export let res;\n\n   let zoom = 'off';\n   let varType = 'explained';\n   let varForm = 'cumulative'\n   let plotType = 'b';\n   let showLabels = 'hide';\n\n   $: params = {\n      zoom,\n      plotType,\n      varType: (varType === 'explained' ? 'exp' : 'res'),\n      varForm: (varForm === 'cumulative' ? 'cum' : ''),\n      showLabels\n   }\n</script>\n\n{#if res  }\n<Container label=\"\">\n   <p class=\"title\">Variance plot</p>\n</Container>\n<PlotTypeSelector bind:value={plotType} plotTypeOptions={['b', 'h']} />\n<Container label='Type:'>\n   <Select id='varType' bind:value={varType} options={['explained', 'residual']} />\n</Container>\n<Container label='Form:'>\n   <Select id='varForm' bind:value={varForm} options={['individual', 'cumulative']} />\n</Container>\n<Container label='Labels:'>\n   <Select id='showLabels' bind:value={showLabels} options={['hide', 'show']} />\n</Container>\n{/if}\n","<script>\n   /**************************************************************/\n   /* Svelte component for DistancePlot settings                 */\n   /**************************************************************/\n\n   import Container from '../../../shared/controls/Container.svelte';\n   import Select from '../../../shared/controls/Select.svelte';\n   import Range from '../../../shared/controls/Range.svelte';\n\n   export let params;\n   export let res;\n\n   let ncomp = 1;\n   let showLabels = 'hide';\n   let transType = 'no';\n   let limType = 'classic';\n   let colorBy = 'none';\n\n   $: colorByOptions = res.classNames && res.classNames.length > 1 ? ['none', 'groups'] : null;\n\n\n   $: params = {\n      ncomp,\n      showLabels,\n      transType,\n      limType,\n      colorBy\n   }\n</script>\n\n{#if res  }\n<Container label=\"\">\n   <p class=\"title\">Distance plot</p>\n</Container>\n\n<Container label='# PCs:'>\n   <Range id='ncomp' bind:value={ncomp} min={1} max={res.ncomp} step={1} decNum={0} />\n</Container>\n<Container label='Transform:'>\n   <Select id='transType' bind:value={transType} options={['no', 'log']} />\n</Container>\n<Container label='Limits:'>\n   <Select id='limType' bind:value={limType} options={['classic', 'robust']} />\n</Container>\n<Container label='Labels:'>\n   <Select id='showLabels' bind:value={showLabels} options={['hide', 'show']} />\n</Container>\n{#if colorByOptions}\n<Container label='Color by:'>\n   <Select id='colorBy' bind:value={colorBy} options={colorByOptions} />\n</Container>\n{/if}\n{/if}\n\n","<script>\n   /**************************************************************/\n   /* Svelte component for BiPlot settings                       */\n   /**************************************************************/\n\n   import Container from '../../../shared/controls/Container.svelte';\n   import Select from '../../../shared/controls/Select.svelte';\n   import Range from '../../../shared/controls/Range.svelte';\n\n   export let params;\n   export let res;\n\n   let comp1 = 1;\n   let comp2 = res && res.ncomp > 1 ? 2 : 1;\n   let showLabels = 'hide';\n   let axesScale = 'normal';\n\n\n   $: params = {\n      comp: [comp1, comp2],\n      showLabels,\n      axesScale,\n   }\n</script>\n\n{#if res  }\n<Container label=\"\">\n   <p class=\"title\">Biplot</p>\n</Container>\n\n<Container label='PC (y-axis):'>\n   <Range id='comp2' bind:value={comp2} min={1} max={res.ncomp} step={1} decNum={0} discrete={true} />\n</Container>\n<Container label='PC (x-axis):'>\n   <Range id='comp1' bind:value={comp1} min={1} max={res.ncomp} step={1} decNum={0} discrete={true} />\n</Container>\n<Container label='Labels:'>\n   <Select id='showLabels' bind:value={showLabels} options={['hide', 'obj', 'var', 'both']} />\n</Container>\n<Container label='Axes:'>\n   <Select id='axesScale' bind:value={axesScale} options={['normal', 'equal']} />\n</Container>\n{/if}\n\n","<script>\n   /*********************************************************************/\n   /* HotellingEllipse                                                  */\n   /* --------------------                                              */\n   /* shows Hottelling T2 ellipse on top of the scores plot             */\n   /*********************************************************************/\n\n   import { Vector } from 'mdatools/arrays';\n   import { Lines } from 'svelte-plots-basic/2d';\n   import { qchisq } from 'mdatools/distributions';\n\n   // component parameters\n   export let resobj;                              // JSON with PCA result object\n   export let comp;                                // selected components\n   export let minYVal;                             // smallest value of the statistic\n   export let maxYVal;                             // largest value of the statistic\n   export let minXVal;                             // smallest value of the statistic\n   export let maxXVal;                             // largest value of the statistic\n   export let lineColor = '#606060';               // color for the ellipse\n   export let lineType = 2;                        // line type for the ellipse\n   export let alpha = 0.05;                        // confidence level\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   const angles = Vector.seq(0, 2 * Math.PI, 0.05);\n\n   function getCoordinates(res, comp, fun, angles) {\n      const lambda = res.eigenvals[comp - 1];\n      const c = qchisq(1 - alpha, 2);\n      const a = Math.sqrt(c * lambda);\n      const x = Vector.zeros(angles.length);\n      for (let i = 0; i < angles.length; i++) {\n         x.v[i] = a * fun(angles.v[i]);\n      }\n      return [x, -a, a];\n   }\n\n\n   // reactive statement to track chenges in \"reobj\" and \"comp[0]\" (x-axis)\n   let compX = 0, compXVal = null;\n   $: if (resobj && comp && comp[0] !== compX) {\n      compX = comp[0];\n      [compXVal, minXVal, maxXVal] = getCoordinates(resobj, compX, Math.cos, angles);\n   }\n\n   // reactive statement to track chenges in \"reobj\" and \"comp[1]\" (y-axis)\n   let compY = 0, compYVal = null;\n   $: if (resobj && comp && comp[1] !== compY) {\n      compY = comp[1];\n      [compYVal, minYVal, maxYVal] = getCoordinates(resobj, compY, Math.sin, angles);\n   }\n</script>\n\n\n<Lines xValues={compXVal} yValues={compYVal} {lineColor} {lineType}/>","<script>\n   /****************************************************************/\n   /* ConfidenceEllipses                                           */\n   /* --------------------                                         */\n   /* shows confidence ellipses around each group of points        */\n   /****************************************************************/\n\n   import { Lines } from 'svelte-plots-basic/2d';\n   import { Vector } from 'mdatools/arrays';\n   import { qchisq } from 'mdatools/distributions';\n\n\n\n   /*****************************************/\n   /* Component parameters                  */\n   /*****************************************/\n\n   // inputs\n   export let xValues;                       // vector or array with x-values\n   export let yValues;                       // vector or array with y-values\n   export let groups;                        // Array with group label for each value\n   export let groupNames;                    // Array with unique label groups\n   export let groupColors;\n   export let confLevel = 0.95;              // Confidence level\n\n   // outputs\n   export let minYVal;                       // smallest y-value\n   export let maxYVal;                       // largest y-value\n   export let minXVal;                       // smallest x-value\n   export let maxXVal;                       // largest x-value\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n\n   /**\n    * Computes coordinates of ellipse.\n    *\n    * @param {Array} covMat - variance-covariance matrix for coordinates (xx, xy, yy).\n    * @param {Array} center - coordinates of the center (x, y).\n    * @param {Number} confLim - confidence limit.\n    *\n    * @returns {Arrat} array with two Vector instances — coordinates of the confidence ellipse points.\n    */\n   function getEllipse(covMat, center, confLevel = 0.95) {\n\n      // compute eigenvalues\n      const [a, b, d] = covMat;\n      const D = Math.sqrt((a + d)**2 - 4 * (a * d - b * b));\n      let l1 = 0.5 * (a + d - D);\n      let l2 = 0.5 * (a + d + D);\n      // swap eignevalues if needed so l1 ≥ l2\n      if (l1 < l2) {\n         let l = l1;\n         l1 = l2;\n         l2 = l;\n      }\n\n      // compute radii of the future ellipse\n      const chisq = qchisq(confLevel, 2);\n      const r1 = Math.sqrt(chisq * l1);\n      const r2 = Math.sqrt(chisq * l2);\n\n      let v1x, v1y, phi;\n      if (Math.abs(b) < 10e-8) {\n         v1x = 1;\n         v1y = 0;\n         phi = 0;\n      } else {\n         // compute largest eigenvactor and normalized it\n         let v1x = -b / (a - l1);\n         let v1y = 1;\n         const n1 = Math.sqrt(v1x * v1x + v1y * v1y);\n         v1x = v1x / n1;\n         v1y = v1y / n1;\n         phi = Math.atan2(v1y, v1x);\n         if (phi < 0) phi = phi + 2 * Math.PI;\n      }\n\n      // get angle between the x-axis and the largest eigenvector\n\n      // pre-compute cos and sin of the angle\n      const cosphi = Math.cos(phi);\n      const sinphi = Math.sin(phi);\n\n      // define number of ellipse points and angle increments\n      const nTheta = 100;\n      const dTheta = 2 * Math.PI / (nTheta - 1);\n\n      // prepare vectors for coordinates of the ellipse points\n      const xVec = Vector.zeros(nTheta);\n      const yVec = Vector.zeros(nTheta);\n\n      // reset min/max values\n      let xMin = Number.POSITIVE_INFINITY;\n      let xMax = Number.NEGATIVE_INFINITY;\n      let yMin = Number.POSITIVE_INFINITY;\n      let yMax = Number.NEGATIVE_INFINITY;\n\n      // compute and save coordinates of the ellipse points\n      for (let i = 0; i < nTheta; i++) {\n         const theta = i * dTheta;\n         const x = r1 * Math.cos(theta);\n         const y = r2 * Math.sin(theta);\n         const xv = x * cosphi - y * sinphi + center[0];\n         const yv = x * sinphi + y * cosphi + center[1];\n         xVec.v[i] = xv;\n         yVec.v[i] = yv;\n         xMin = Math.min(xMin, xv);\n         xMax = Math.max(xMax, xv);\n         yMin = Math.min(yMin, yv);\n         yMax = Math.max(yMax, yv);\n      }\n\n      return [xVec, yVec, xMin, xMax, yMin, yMax];\n   }\n\n   /**\n    * Computes coordinates of ellipses for each group of points.\n    *\n    * @param {Vector} xValues - x-coordinates of points (on scatter plot).\n    * @param {Vector} yValues - y-coordinates of the points.\n    * @param {Array} groups - array with group label for each point.\n    * @param {Array} groupNames - array with unique group labels.\n    * @param {Array} groupColors - array with color for each group (same as used for the points).\n    *\n    * @returns {Array} array with JSON contining coordinates and colors.\n    */\n   function getEllipses(xValues, yValues, groups, groupNames, confLevel) {\n\n      if (!xValues || !yValues || !groups || !groupNames) return null;\n      const n = xValues.length;\n      const nGroups = groupNames.length;\n\n      // for each group compute sum of coordinates and number of points\n      const numPoints = new Array(nGroups).fill(0);   // number of point in each group\n      const centers = new Array(nGroups * 2).fill(0); // 2 x nGroups - each column is a group\n      for (let i = 0; i < n; i++) {\n\n         // index of group the value belongs to\n         const ind = groupNames.indexOf(groups[i])\n\n         // number of points in and sum of coordinates in this group\n         numPoints[ind] += 1;\n         centers[ind * 2] += xValues.v[i];\n         centers[ind * 2 + 1] += yValues.v[i];\n      }\n\n      // divide sum of coordinates to the number of groups to get centers\n      for (let i = 0; i < nGroups; i++) {\n         centers[i * 2] = centers[i * 2] / numPoints[i];\n         centers[i * 2 + 1] = centers[i * 2 + 1] / numPoints[i];\n      }\n      // compute elements of variance-coveriance matrix\n      const covMat = new Array(nGroups * 3).fill(0); // 3 x nGroups - each column is a group\n      for (let i = 0; i < n; i++) {\n\n         // index of group the value belongs to\n         const ind = groupNames.indexOf(groups[i])\n\n         // elements of variance/covariance matrix (xx, xy, yy)\n\n         const x = (xValues.v[i] - centers[ind * 2]);\n         const y = (yValues.v[i] - centers[ind * 2 + 1]);\n         covMat[ind * 3]     += x * x;\n         covMat[ind * 3 + 1] += x * y;\n         covMat[ind * 3 + 2] += y * y;\n      }\n\n      // reset min/max values\n      let minXVal = Number.POSITIVE_INFINITY;\n      let maxXVal = Number.NEGATIVE_INFINITY;\n      let minYVal = Number.POSITIVE_INFINITY;\n      let maxYVal = Number.NEGATIVE_INFINITY;\n\n      // divide sum of coordinates to the number of groups to get centers and compute coordinates of ellipses\n      ellipses = Array(nGroups);\n      for (let i = 0; i < nGroups; i++) {\n         const [xE, yE, xMin, xMax, yMin, yMax] = getEllipse(\n            [covMat[i * 3] / (numPoints[i] - 1), covMat[i * 3 + 1] / (numPoints[i] - 1), covMat[i * 3 + 2] / (numPoints[i] - 1)],\n            [centers[i * 2], centers[i * 2 + 1]],\n            confLevel\n         )\n         ellipses[i] = {x: xE, y: yE, c: groupColors[i]};\n         minXVal = Math.min(minXVal, xMin);\n         maxXVal = Math.max(maxXVal, xMax);\n         minYVal = Math.min(minYVal, yMin);\n         maxYVal = Math.max(maxYVal, yMax);\n      }\n\n      return [ellipses, minXVal, maxXVal, minYVal, maxYVal];\n   }\n\n   $: [ellipses, minXVal, maxXVal, minYVal, maxYVal] = getEllipses(xValues, yValues, groups, groupNames, confLevel);\n</script>\n\n{#if ellipses }\n\n   {#if ellipses}\n   {#each ellipses as e, i}\n   <Lines xValues={e.x} yValues={e.y} lineColor={groupColors[i]}/>\n   {/each}\n   {/if}\n\n{/if}\n\n","<script>\n   /****************************************************************/\n   /* ScoresPlot                                                   */\n   /* --------------------                                         */\n   /* shows plot with PCA scores                                   */\n   /****************************************************************/\n\n   import { Axes, XAxis, YAxis, Box, ColormapLegend, Segments } from 'svelte-plots-basic/2d';\n   import { Vector, vector } from 'mdatools/arrays';\n\n   import { PNG_WIDTH, PNG_HEIGHT, PNG_RES, MARGINS, AXIS_COLOR, MAX_LABEL_SYMBOLS } from './Defaults.js';\n   import { getAxisTitle, getColorGroups } from './Defaults.js';\n\n   import PlotSeries from './PlotSeries.svelte';\n   import HotellingEllipse from './HotellingEllipse.svelte';\n   import ConfidenseEllipses from './ConfidenseEllipses.svelte';\n   import { pcares_get } from '../wasm/dist/pca.js';\n\n\n   /*****************************************/\n   /* Component parameters                  */\n   /*****************************************/\n\n   // inputs\n   export let params;                        // JSON with main plot parameters\n   export let res;                           // JSON with result objects (PCA, PLS, etc)\n   export let dataset;                       // current dataset\n   export let resID = 'cal';                 // ID of results ('cal', 'pv', 'test')\n   export let alpha = 0.05;                  // confidence level for Hotelling ellipse\n\n   // saving parameters\n   export let fileName = 'plot-scores';\n   export let pngWidth = PNG_WIDTH;\n   export let pngHeight = PNG_HEIGHT;\n   export let pngRes = PNG_RES;\n\n   // outputs\n   export let selected = undefined;          // selected object or variable\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // constant plot parameters\n   const showGrid = true;\n\n\n   /**\n    * Event handler to select a data point.\n    * @param e - event object.\n    */\n   function select(e) {\n      if (selected === undefined) return; // do not select points if this option is not activated in parent app\n      const id = parseInt(e.detail.elementID)\n      const series_title = e.detail.seriesTitle\n      if (id >= 0 && (series_title === 'scores-points' || series_title === 'scores-bars')) {\n         selected = id;\n      }\n   }\n\n   /**\n    * Event handler to remove selection.\n    * @param e - event object.\n    */\n   function resetSelection(e) {\n      selected = -1;\n   }\n\n   // ranges of values to define axis limits\n   let xMinS, yMinS, xMaxS, yMaxS;\n   let xMinE, yMinE, xMaxE, yMaxE;\n   let xMinCE, yMinCE, xMaxCE, yMaxCE;\n\n   // local copies of changeable plot parameters\n   let comp = [1, 1];\n   let plotType = 'p';\n   let showLabels = 'hide';\n   let showEllipse = 'hide';\n   let colorBy = 'none';\n   let colorByVar = 1;\n   let confEllipse = 'none';\n\n   // reactive expressions to monitor changes in plot parameters\n   $: if (params && params.comp !== comp) comp = params.comp;\n   $: if (params && params.plotType !== plotType) plotType = params.plotType;\n   $: if (params && params.showLabels !== showLabels) showLabels = params.showLabels;\n   $: if (params && params.showEllipse !== showEllipse) showEllipse = params.showEllipse;\n   $: if (params && params.colorBy !== colorBy) colorBy = params.colorBy;\n   $: if (params && params.colorByVar !== colorByVar) colorByVar = params.colorByVar;\n   $: if (params && params.confEllipse !== confEllipse) confEllipse = params.confEllipse;\n\n\n   /**\n    * Gets vector with values for particular outcome and component from the result object\n    * @param {Object} r - result object.\n    * @param {Number} a - component index (from 1);\n    */\n   function getValues(r, a) {\n      return new Vector(pcares_get(r, 'scores', a))\n   }\n\n   // reactive expression to generate x-indices for line and bar plots\n   let rowIndices, labels\n   $: if (res && res.nrows > 0) {\n      rowIndices = vector(res.objindices);\n      labels = res.objlabels.map(v => v.slice(0, MAX_LABEL_SYMBOLS));\n   }\n\n   // reactive expression to track chenges in \"res\" and \"comp[0]\" (x-axis)\n   let compX = 1, compXValues = null;\n   $: if (comp[0] !== compX) compX = comp[0];\n   $: compXValues = res ? getValues(res, compX) : null;\n\n   // reactive expression to track chenges in \"reobj\" and \"comp[1]\" (y-axis)\n   let compY = 1, yValues = null;\n   $: if (comp[1] !== compY) compY = comp[1];\n   $: yValues = res ? getValues(res, compY) : null;\n\n   // switch between scores and indices for x-axis\n   $: xValues = plotType === 'p' ? compXValues : rowIndices;\n\n   // reactive expression to get colors of the elements\n   let collabels, colmap, colbreaks, objcolors, colorVarName;\n   $: [collabels, colmap, colbreaks, objcolors, colorVarName] = getColorGroups(dataset, res, colorBy, colorByVar, resID);\n\n   // reactive expression to generate axis labels\n   let xLabel, yLabel;\n   $: if (res && comp) {\n      xLabel = plotType === 'p' ? getAxisTitle(res, comp[0]) : 'Objects';\n      yLabel = getAxisTitle(res, comp[1]);\n   } else {\n      xLabel = '';\n      yLabel = '';\n   }\n   // reactive expression to compute y-axis limits\n   let limY, limX;\n   $: if (xMinS !== undefined && typeof xMaxS !== undefined && typeof yMinS !== undefined && typeof yMaxS !== undefined) {\n\n      // compute ranges for score values\n      let yMin = yMinS;\n      let yMax = yMaxS;\n      let xMin = xMinS;\n      let xMax = xMaxS;\n\n      // adjust ranges if T2 ellipse is shown\n      if (showEllipse === 'show' && xMinE && xMaxE && yMinE && yMaxE) {\n         yMin = Math.min(yMin, yMinE);\n         yMax = Math.max(yMax, yMaxE);\n         xMin = Math.min(xMin, xMinE);\n         xMax = Math.max(xMax, xMaxE);\n      }\n\n      // adjust ranges if confidence ellipses are shown\n      if (confEllipse !== 'none' && xMinCE && xMaxCE && yMinCE && yMaxCE) {\n         yMin = Math.min(yMin, yMinCE);\n         yMax = Math.max(yMax, yMaxCE);\n         xMin = Math.min(xMin, xMinCE);\n         xMax = Math.max(xMax, xMaxCE);\n      }\n      // compute limits based on the ranges\n      const dX = (xMax - xMin) * 0.10;\n      const dY = (yMax - yMin) * 0.10;\n      limX = [xMin - dX, xMax + dX];\n      limY = [yMin - dY, yMax + dY * (1 + (colorBy !== 'none'))];\n   } else {\n      limX = [0, 1];\n      limY = [0, 1];\n   }\n\n   // reactive expression to generate plot title\n   let title = 'Scores';\n   $: if (plotType !== 'l' && colorBy !== 'none') {\n      const colorVarLabel = colorVarName + (dataset.varvaluesUnits ? ' ' + dataset.varvaluesUnits : '');\n      title = colorBy ==='groups' ? 'Scores (colored by groups)' : 'Scores (colored by ' + colorVarLabel + ')';\n   } else {\n      title = 'Scores';\n   }\n</script>\n\n{#if res }\n<div class=\"plot-container\">\n<Axes\n   {title} {xLabel} {yLabel} {limX} {limY}\n   {fileName} {pngWidth} {pngHeight} {pngRes}\n   on:markerclick={select}\n   on:barclick={select}\n   on:axesclick={resetSelection}\n   downloadLinks=\"hover\"\n   margins={MARGINS}\n>\n\n   <!-- axis lines (x = 0 and y = 0) -->\n   <Segments xStart={[limX[0]]} xEnd={[limX[1]]} yStart={[0]} yEnd={[0]} lineColor={AXIS_COLOR} />\n   {#if plotType === 'p'}\n   <Segments xStart={[0]} xEnd={[0]} yStart={[limY[0]]} yEnd={[limY[1]]} lineColor={AXIS_COLOR} />\n   {/if}\n\n   <!-- T2 ellipse -->\n   {#if showEllipse === 'show' && plotType === 'p'}\n   <HotellingEllipse\n      {alpha}\n      {comp}\n      resobj={res}\n      bind:minYVal={yMinE}\n      bind:maxYVal={yMaxE}\n      bind:minXVal={xMinE}\n      bind:maxXVal={xMaxE}\n   />\n   {/if}\n\n   <!-- data points  -->\n   <PlotSeries\n      {xValues}\n      {yValues}\n      {plotType}\n      {showLabels}\n      {labels}\n      {selected}\n      seriesTitle=\"scores\"\n      colors={objcolors}\n      bind:minYVal={yMinS}\n      bind:maxYVal={yMaxS}\n      bind:minXVal={xMinS}\n      bind:maxXVal={xMaxS}\n   />\n\n\n   {#if colorBy === 'groups' && confEllipse !== 'none' && colmap}\n   <ConfidenseEllipses\n      {xValues}\n      {yValues}\n      confLevel={Number.parseInt(confEllipse)/100}\n      groups={res.classes}\n      groupNames={res.classNames}\n      groupColors={colmap}\n      bind:minYVal={yMinCE}\n      bind:maxYVal={yMaxCE}\n      bind:minXVal={xMinCE}\n      bind:maxXVal={xMaxCE}\n   />\n   {/if}\n\n   <!-- color by legend-->\n   {#if colorBy !== 'none' && plotType !== 'l' && colbreaks}\n   <ColormapLegend {colmap} breaks={colbreaks} labels={collabels}/>\n   {/if}\n\n   <XAxis {showGrid} slot=\"xaxis\" />\n   <YAxis {showGrid} slot=\"yaxis\" />\n   <Box slot=\"box\" />\n</Axes>\n</div>\n{#if selected !== undefined && plotType !== 'l'}\n   {#if selected < 0}\n   <div class=\"msg-select\">Click on a point to select...</div>\n   {:else}\n   <div class=\"msg-select\">Click anywhere to remove selection...</div>\n   {/if}\n{/if}\n{/if}\n\n<style>\n   .plot-container {\n      width: 100%;\n      height: calc(100% - 15px);\n   }\n   .msg-select {\n      height: 15px;\n      font-size: 12px;\n      color: #aaa;\n      text-align: center;\n   }\n</style>","<script>\n   /****************************************************************/\n   /* LoadingsPlot                                                 */\n   /* --------------------                                         */\n   /* shows plot with PCA loadings                                 */\n   /****************************************************************/\n\n   import { Axes, XAxis, YAxis, Box, Segments } from 'svelte-plots-basic/2d';\n   import { PNG_WIDTH, PNG_HEIGHT, PNG_RES, MARGINS, AXIS_COLOR } from './Defaults.js';\n   import { Vector, vector } from 'mdatools/arrays';\n\n   import PlotSeries from './PlotSeries.svelte';\n   import { pcamodel_get } from '../wasm/dist/pca.js';\n\n\n   /*****************************************/\n   /* Component parameters                  */\n   /*****************************************/\n\n   // inputs\n   export let params;                        // JSON with user defined plot parameters\n   export let model;                         // JSON with PCA model object\n\n   // saving parameters\n   export let fileName = 'plot-loadings';\n   export let pngWidth = PNG_WIDTH;\n   export let pngHeight = PNG_HEIGHT;\n   export let pngRes = PNG_RES;\n\n   // outputs\n   export let selected = undefined;          // selected variable (for future implementations)\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // constant plot parameters\n   const showGrid = true;\n\n   /**\n    * Gets vector with values for particular outcome and component from the model object\n    * @param {Object} m - model object.\n    * @param {Number} a - component index (from 1);\n    */\n   function getValues(m, a) {\n      return new Vector(pcamodel_get(m, 'loadings', a))\n   }\n\n   // reactive expression to generate x-indices for line and bar plots\n   let varIndices, varValues, varLabels, varvaluesUnits, varvaluesName, varlabels\n   $: if (model) {\n      varvaluesName = model.varvaluesName;\n      varvaluesUnits = model.varvaluesUnits;\n      varValues = model.varvalues;\n      varIndices = vector(model.varindices);\n      varLabels = model.varlabels;\n   }\n\n   /**\n    * Event handler to select a data point.\n    * @param e - event object.\n    */\n   function select(e) {\n      // TODO the selection of variables is off for now, to be implemented later\n      return;\n      if (selected === undefined) return; // do not select points if this option is not activated in parent app\n      const id = parseInt(e.detail.elementID)\n      const series_title = e.detail.seriesTitle\n      if (id >= 0 && (series_title === 'loadings-points' || series_title === 'loadings-bars')) {\n         selected = id;\n      }\n   }\n\n   /**\n    * Event handler to remove selection.\n    * @param e - event object.\n    */\n   function resetSelection(e) {\n      selected = -1;\n   }\n\n\n   // ranges of values to define axis limits\n   let yMax = Number.NEGATIVE_INFINITY;\n   let yMin = Number.POSITIVE_INFINITY;\n   let xMax = Number.NEGATIVE_INFINITY;\n   let xMin = Number.POSITIVE_INFINITY;\n\n   // local copies of changeable plot parameters\n   let comp = [1, 1];\n   let plotType = 'p';\n   let showLabels = 'hide';\n   let axesScale = 'normal';\n\n   // reactive expressions to monitor changes in plot parameters\n   $: if (params && params.comp !== comp) comp = params.comp;\n   $: if (params && params.plotType !== plotType) plotType = params.plotType;\n   $: if (params && params.showLabels !== showLabels) showLabels = params.showLabels;\n   $: if (params && params.axesScale !== axesScale) axesScale = params.axesScale;\n\n\n   // reactive expression to track chenges in \"res\" and \"comp[0]\" (x-axis)\n   let compX = 0, compXValues = null;\n   $: if (model && comp && comp[0] !== compX) {\n      compX = comp[0];\n      compXValues = getValues(model, compX);\n   }\n\n   // reactive expression to track chenges in \"reobj\" and \"comp[1]\" (y-axis)\n   let compY = 0, yValues = null;\n   $: if (model && comp && comp[1] !== compY) {\n      compY = comp[1];\n      yValues = getValues(model, compY);\n   }\n\n   // switch between scores and indices for x-axis\n   let xValues, xLabel, yLabel;\n   $: if (plotType === 'p') {\n      xValues = compXValues;\n      xLabel = `PC${compX}`;\n      yLabel = `PC${compY}`;\n   } else if (plotType === 'l' && varValues.length > 0) {\n      xValues = vector(varValues);\n      xLabel = varvaluesName + (varvaluesUnits ? ', ' + varvaluesUnits : '');\n      yLabel = `PC${compY}`;\n   } else {\n      xValues = varIndices;\n      xLabel = 'Variables';\n      yLabel = `PC${compY}`;\n   }\n\n   // reactive expression to compute y-axis limits\n   let limYc;\n   $: if (yMin < Number.POSITIVE_INFINITY && yMax > Number.NEGATIVE_INFINITY) {\n      const dY = (yMax - yMin) * 0.10;\n      limYc = [yMin - dY, yMax + dY];\n   } else {\n      limYc = [0, 1];\n   }\n\n   // reactive expression to compute x-axis limits\n   let limXc;\n   $: if (xMin < Number.POSITIVE_INFINITY && xMax > Number.NEGATIVE_INFINITY) {\n      const dX = (xMax - xMin) * 0.10;\n      limXc = [xMin - dX, xMax + dX];\n   } else {\n      limXc = [0, 1];\n   }\n\n   let limX, limY;\n   $: if (axesScale === 'equal') {\n      if (plotType === 'p') {\n         const v = Math.max(Math.abs(limXc[0]), Math.abs(limYc[0]), limXc[1], limYc[1]) * 1.05;\n         limX = [-v, v];\n         limY = [-v, v];\n      } else {\n         const v = Math.max(Math.abs(limYc[0]), limYc[1]) * 1.05;\n         limX = limXc;\n         limY = [-v, v];\n      }\n   } else {\n      limX = limXc;\n      limY = limYc;\n   }\n</script>\n\n{#if model }\n<Axes\n   {xLabel} {yLabel} {limX} {limY}\n   {fileName} {pngWidth} {pngHeight} {pngRes}\n   on:markerclick={select}\n   on:barclick={select}\n   on:axesclick={resetSelection}\n   title=\"Loadings\"\n   downloadLinks=\"hover\"\n   margins={MARGINS}\n>\n\n   <!-- axis lines (x = 0 and y = 0) -->\n   <Segments xStart={[limX[0]]} xEnd={[limX[1]]} yStart={[0]} yEnd={[0]} lineColor={AXIS_COLOR} />\n   {#if plotType === 'p'}\n   <Segments xStart={[0]} xEnd={[0]} yStart={[limY[0]]} yEnd={[limY[1]]} lineColor={AXIS_COLOR} />\n   {/if}\n\n   <!-- data points  -->\n   <PlotSeries\n      {xValues}\n      {yValues}\n      {plotType}\n      {showLabels}\n      {selected}\n      seriesTitle=\"loadings\"\n      labels={varLabels}\n      bind:minYVal={yMin}\n      bind:maxYVal={yMax}\n      bind:minXVal={xMin}\n      bind:maxXVal={xMax}\n   />\n\n   <XAxis {showGrid} slot=\"xaxis\" />\n   <YAxis {showGrid} slot=\"yaxis\" />\n   <Box slot=\"box\" />\n</Axes>\n{/if}\n","<script>\n   /**************************************************************/\n   /* Svelte component for ScoresPlot settings                   */\n   /**************************************************************/\n\n   import Container from '../controls/Container.svelte';\n   import Select from '../controls/Select.svelte';\n   import Range from '../controls/Range.svelte';\n   import PlotTypeSelector from '../controls/PlotTypeSelector.svelte';\n\n   export let params;\n   export let res;\n\n   let comp1 = 1;\n   let comp2 = res && res.ncomp > 1 ? 2 : 1;\n   let plotType = 'p';\n   let colorBy = 'none';\n   let colorByVar = 1;\n   let showLabels = 'hide';\n   let showEllipse = 'hide';\n   let confEllipse = 'none';\n\n   $: colorByOptions = res.classNames && res.classNames.length > 1 ? ['none', 'groups', 'variable'] : ['none', 'variable'];\n\n   $: params = {\n      comp: [comp1, comp2],\n      plotType,\n      showLabels,\n      colorBy,\n      colorByVar,\n      showEllipse,\n      confEllipse\n   }\n\n   $: if (plotType !== 'p' || (colorBy === 'groups' && confEllipse !== 'none')) showEllipse = 'hide';\n   $: if (plotType !== 'p' || colorBy !== 'groups') confEllipse = 'none';\n</script>\n\n{#if res }\n<Container label=\"\">\n   <p class=\"title\">Scores plot</p>\n</Container>\n<PlotTypeSelector bind:value={plotType} plotTypeOptions={['p', 'l', 'h']} />\n\n<Container label='PC (y-axis):'>\n   <Range id='comp2' bind:value={comp2} min={1} max={res.ncomp} step={1} decNum={0} discrete={true}  />\n</Container>\n{#if plotType === 'p'}\n<Container label='PC (x-axis):'>\n   <Range id='comp1' bind:value={comp1} min={1} max={res.ncomp} step={1} decNum={0} discrete={true} />\n</Container>\n{/if}\n<Container label='Labels:'>\n   <Select id='showLabels' bind:value={showLabels} options={['hide', 'show']} />\n</Container>\n\n{#if plotType === 'p'}\n<Container label='T2 ellipse:'>\n   <Select id='showEllipse' bind:value={showEllipse} options={['hide', 'show']} />\n</Container>\n{/if}\n\n{#if plotType !== 'l'}\n<Container label='Color by:'>\n   <Select id='colorBy' bind:value={colorBy} options={colorByOptions} />\n</Container>\n{#if colorBy === 'variable'}\n<Container label='Variable:'>\n   <Range id='colorByVar' bind:value={colorByVar} min={1} max={res.ncols} step={1} decNum={0} discrete={true} />\n</Container>\n{/if}\n{/if}\n\n{#if plotType === 'p' && colorBy === 'groups'}\n<Container label='Conf ellipse:'>\n   <Select id='confEllipse' bind:value={confEllipse} options={['none', '90', '95', '99']} />\n</Container>\n{/if}\n\n{/if}\n","<script>\n   /**************************************************************/\n   /* Svelte component for LoadingsPlot settings                 */\n   /**************************************************************/\n\n   import Container from '../controls/Container.svelte';\n   import Select from '../controls/Select.svelte';\n   import Range from '../controls/Range.svelte';\n   import PlotTypeSelector from '../controls/PlotTypeSelector.svelte';\n\n   export let params;\n   export let model;\n\n   let comp1 = 1;\n   let comp2 = model && model.ncomp > 1 ? 2 : 1;\n   let plotType = 'p';\n   let showLabels = 'hide';\n   let axesScale = 'normal';\n\n\n   $: params = {\n      comp: [comp1, comp2],\n      plotType,\n      showLabels,\n      axesScale,\n   }\n</script>\n\n{#if model  }\n<Container label=\"\">\n   <p class=\"title\">Loadings plot</p>\n</Container>\n<PlotTypeSelector bind:value={plotType} plotTypeOptions={['p', 'l', 'h']} />\n\n<Container label='PC (y-axis):'>\n   <Range id='comp2' bind:value={comp2} min={1} max={model.ncomp} step={1} decNum={0} discrete={true} />\n</Container>\n{#if plotType === 'p'}\n<Container label='PC (x-axis):'>\n   <Range id='comp1' bind:value={comp1} min={1} max={model.ncomp} step={1} decNum={0} discrete={true} />\n</Container>\n{/if}\n<Container label='Labels:'>\n   <Select id='showLabels' bind:value={showLabels} options={['hide', 'show']} />\n</Container>\n<Container label='Axes:'>\n   <Select id='axesScale' bind:value={axesScale} options={['normal', 'equal']} />\n</Container>\n{/if}\n\n","<script>\n   /*************************************************************/\n   /* AppPlots component for training app                       */\n   /* -------------------------------                           */\n   /* show selection of plot for training of PCA model          */\n   /*************************************************************/\n\n\n   // import locally shared plot and plot controls components\n   import AppPlots from '../shared/AppPlots.svelte';\n   import VariancePlot from '../shared/VariancePlot.svelte';\n   import DistancePlot from '../shared/DistancePlot.svelte';\n   import BiPlot from '../shared/BiPlot.svelte';\n   import EigenvaluesPlot from '../shared/EigenvaluesPlot.svelte';\n\n   import EigenvaluesPlotControls from '../shared/EigenvaluesPlotControls.svelte';\n   import VariancePlotControls from '../shared/VariancePlotControls.svelte';\n   import DistancePlotControls from '../shared/DistancePlotControls.svelte';\n   import BiPlotControls from '../shared/BiPlotControls.svelte';\n\n   import ScoresPlot from '../../../shared/plots/ScoresPlot.svelte';\n   import LoadingsPlot from '../../../shared/plots/LoadingsPlot.svelte';\n   import ScoresPlotControls from '../../../shared/plots/ScoresPlotControls.svelte';\n   import LoadingsPlotControls from '../../../shared/plots/LoadingsPlotControls.svelte';\n\n   // input parameters\n   export let res;\n   export let model;\n   export let dataset;\n\n   // array with list of plots and their components\n   // parameter \"scope\" tells parent AppPlots component whether click events must be handled:\n   // - for \"objects\" - it triggers click events on plots as selection of objects and mark them as outliers\n   // - for \"variables\" - it triggers click events on plots as selection of variables (no more actions so far)\n   // - for \"none\" - the click events will be ignored\n   const options = [\n      {label: 'Scores', scope: 'scores', plotComponent: ScoresPlot, controlsComponent: ScoresPlotControls},\n      {label: 'Loadings', scope: 'variables', plotComponent: LoadingsPlot, controlsComponent: LoadingsPlotControls},\n      {label: 'Biplot', scope: 'both', plotComponent: BiPlot, controlsComponent: BiPlotControls},\n      {label: 'Variance', scope: 'none', plotComponent: VariancePlot, controlsComponent: VariancePlotControls},\n      {label: 'Eigenvalues', scope: 'variables', plotComponent: EigenvaluesPlot, controlsComponent: EigenvaluesPlotControls},\n      {label: 'Distances', scope: 'objects', plotComponent: DistancePlot, controlsComponent: DistancePlotControls},\n   ]\n</script>\n\n\n<AppPlots on:setoutlier on:plotoutlier {res} {model} {options} {dataset} />","<script>\n   /*************************************************************/\n   /* DatasetWidget                                             */\n   /* -------------------------                                 */\n   /* widget to show information about loaded dataset           */\n   /*************************************************************/\n\n   import Container from '../controls/Container.svelte';\n   import ButtonCancel from '../controls/ButtonCancel.svelte';\n\n   // calibration set\n   export let dataset;\n\n</script>\n\n{#if dataset }\n   <!-- dataset is loaded - show info and cancel button -->\n   <Container>\n      <p class=\"dataset-info\">\n         <span>Data file:</span> <span title=\"{dataset.fileName}\" class=\"file-name\">{dataset.fileName}</span><br>\n         <span>Size:</span> <span class=\"file-size\">{dataset.values.nrows} &times; {dataset.values.ncols}</span>\n      </p>\n      <ButtonCancel on:click />\n   </Container>\n{/if}\n\n<style>\n\n   .dataset-info {\n      line-height: 1.5em;\n   }\n   .dataset-info > :global(span) {\n      vertical-align: middle;\n      color: #a0a0a0;\n   }\n\n   .dataset-info > .file-name,\n   .dataset-info > .file-size {\n      display: inline-block;\n      padding: 0;\n      margin: 0;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 25ch;\n      color: #222;\n   }\n</style>","<script>\n   /***************************************************************\n    * File                                                        *\n    * --------------------                                        *\n    * control element for uploading files                         *\n    ***************************************************************/\n\n   export let id;                                        // text ID for file input\n   export let file;                                      // container to get return the uploaded file\n   export let message = 'Select CSV file with dataset';  // message to show when no file is selected\n   export let acceptType = '.csv';                       // file type to accept\n\n   let fileInput;\n   function changeStatus(e) {\n      if (fileInput.files.length > 0) {\n         file = fileInput.files[0];\n      }\n   }\n</script>\n\n<label class:selected={file !== null}>\n   { file ? file.name : message }\n   <input on:change={changeStatus} bind:this={fileInput} name={id} type=\"file\" accept={acceptType}>\n</label>\n\n<style>\n   input {\n      display: none;\n   }\n\n   label {\n      display: inline-block;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      overflow: hidden;\n      flex: 1 1;\n      min-width: 0;\n   }\n\n   label::before {\n      display: inline-block;\n      content: '\\21ea';\n      font-size: 1.2em;\n      margin: 0 0.5em 0 0em;\n   }\n\n   label.selected {\n      color: #909090;\n   }\n\n   label.selected::before {\n      content: '\\28FF\\28FF';\n      letter-spacing: -.25em;\n      color: #6EB8FF;\n      font-weight: bold;\n   }\n</style>","<script>\n   /***************************************************************/\n   /* Select                                                      */\n   /* --------------------                                        */\n   /* control element for selecting among a few options           */\n   /***************************************************************/\n\n   export let id;                         // text ID of the input element\n   export let value = '';                 // initial selected value\n   export let className = '';             // extra class name\n   export let placeholder = '';           // placeholder (hint)\n   export let maxLength = 25;             // maximum number of characters\n\n</script>\n\n<div class=\"textinput {className}\">\n<input type=\"text\" name={id} {placeholder} maxlength={maxLength} bind:value={value}>\n</div>\n\n<style>\n\n   .textinput {\n      position: relative;\n      box-sizing: border-box;\n      flex: 1 1 auto;\n      font-size: 1em;\n      line-height: 1.5em;\n      margin: 0;\n      padding: 0.15em 0;\n      width: auto;\n      border-radius: 2px;\n      user-select: none;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      display: flex;\n   }\n\n   .textinput > input {\n      cursor: default;\n      padding: 0.25em 0.5em;\n      margin: 0 0.2em 0 0;\n      color: #606060;\n      background-color: #f0f0f0;\n      border: 1px solid #a0a0a0;\n      border-radius: 0.3em;\n      outline: none;\n   }\n\n   .textinput > input:focus,\n   .textinput > input:active {\n      border: 1px solid #66abec;\n      background-color: #6eb8ff20;\n      color: #4777a4;\n   }\n</style>","<script>\n   /**************************************************************/\n   /* DataLoader for PCA/SIMCA app                               */\n   /* -------------------------                                  */\n   /* Loads test set from CSV file and returns is main output.   */\n   /* If PCA model is provided it also applied the model and     */\n   /* returns object with PCA results. In this case it will      */\n   /* also recalculate the result object if array with outliers  */\n   /* has been changed                                           */\n   /**************************************************************/\n\n\n   import { parseCSV, app_pca_predict, reverseColumns, parseCSVParams } from '../utils.js';\n\n   import DatasetWidget from '../widgets/DatasetWidget.svelte';\n\n   import FileSelector from '../controls/FileSelector.svelte';\n   import Spinner from '../controls/Spinner.svelte';\n   import Select from '../controls/Select.svelte';\n   import Container from '../controls/Container.svelte';\n   import Button from '../controls/Button.svelte';\n   import TextInput from '../controls/TextInput.svelte';\n\n\n   /*****************************************/\n   /* Component parameters                  */\n   /*****************************************/\n\n   // inputs\n   export let WASM = null;                      // WASM object to make predictions if model is available (optional)\n   export let model = null;                     // object with PCA model (optional)\n   export let outliers = [];                    // array with outlier indices (optional)\n\n   export let className = \"Class\";              // name of class related fields in the widget (e.g. 'Class' or 'Group')\n   export let classMandatory = false;           // logical, if class column is mandatory in the data file\n   export let classUnique = false;              // logical, if class labels must be all the same\n\n   // output\n   export let dataset;                          // JSON with datasets\n   export let res = null;                       // JSON with PCA results (if model is provided)\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   let dataFile;                                         // CSV file\n   let varvaluesName = '';                               // name of the variable values to be used as header\n   let varvaluesUnits = '';                              // units of the variable values\n   let outliersOld = outliers;                           // array to track changes in outliers\n   let promise;                                          // variables for WASM promise\n\n   // app status for handling and showing errors\n   let status = 'neutral';\n   let errMsg = '';\n\n   // possible delimeters and header options\n   const sepOptions = [',', ';'];\n   let headerOptions = model ? ['no', 'yes'] : ['no', 'labels', 'values'];\n\n   // these parameters will be autodetected from CSV file\n   let sep;              // seperator between values\n   let header;           // first row contains header (labels or values)\n   let hasLabels;        // first column contains row labels\n   let hasClassLabels;   // if data file contains class labels\n\n   // method to apply PCA model\n   function predict(model, dataset, outliers) {\n      promise = WASM()\n         .then(Module => {\n            res = app_pca_predict(Module, model, dataset, outliers);\n         })\n         .catch(e =>{\n            console.error(e);\n            res = null;\n            status = 'error';\n            errMsg = e;\n         });\n   };\n\n\n   function guessParams(dataFile, model) {\n      const hasModel = model !== null && model !== undefined;\n      if (!dataFile || dataFile.size < 10) return;\n      const chunkSize = 100000;\n      const first100KB = dataFile.slice(0, chunkSize);\n\n      const reader = new FileReader();\n      reader.onload = () => {\n         const csvString = reader.result;\n         if (!csvString || csvString.length < 0) return;\n         let hasLabelsBool, hasClassLabelsBool;\n         [sep, hasLabelsBool, hasClassLabelsBool, header] = parseCSVParams(csvString);\n         hasLabels = hasLabelsBool ? 'yes' : 'no';\n         hasClassLabels = (classMandatory || hasClassLabelsBool) ? 'yes' : 'no';\n         if (hasModel && header !== 'no') header = 'yes';\n      };\n\n      reader.onerror = function(e) {\n         csvString = null;\n         status = 'error';\n         errMsg = e;\n         console.error('Error reading CSV file.', e);\n      };\n\n      reader.readAsText(first100KB);\n\n   }\n\n   // method for parsing CSV content provided as one large string to dataset object.\n   function setData(strData) {\n      try{\n         const d = parseCSV(\n            strData,\n            sep,\n            header === 'yes' ? 'labels' : header, // when load data for prediction simpler interface is used\n            hasLabels === 'yes',\n            hasClassLabels === 'yes',\n            varvaluesName,\n            varvaluesUnits\n         );\n\n         if (d.values.nrows < 1 ) {\n            throw new Error('Dataset must have at least 1 row.');\n         }\n\n         if (model && d.values.ncols !== (model.ncols + model.exclvars.length)) {\n            throw new Error('Dataset has different number of columns than the training set.');\n         }\n\n         if (d.classNames.length > d.values.nrows / 2) {\n            throw new Error('Dataset has too many unique ' + className.toLowerCase() + ' labels (' + d.classNames.length + '), check your CSV file.');\n         }\n\n         if (classMandatory && d.classNames.length === 0) {\n            throw new Error('Dataset set must have a column filled with class names.');\n         }\n\n         if (classUnique && d.classNames.length > 1) {\n            throw new Error('Dataset set must have a column filled with only single (target) class name.');\n         }\n\n         d['fileName'] = dataFile.name.replace(/\\.[^/.]+$/, \"\");\n\n         // if model is available inherit variable properties from the model\n         if (model) {\n            // if data values in the training set were in reverse order it is expected\n            // that they are in the reverse order in this dataset as well\n            if (model.varrev) d.values = reverseColumns(d.values),\n            d.varlabels = model.varlabels;\n            d.varvalues = model.varvalues;\n            d.varvaluesName = model.varvaluesName;\n            d.varvaluesUnits = model.varvaluesUnits;\n         }\n\n         dataset = d;\n         if (model) {\n            // since the dataset is just loaded we do not expect any outliers\n            predict(model, dataset, []);\n         }\n\n         outliersOld = [];\n         errMsg = ''\n         status = 'success';\n      } catch (e) {\n         dataset = null;\n         outliersOld = [];\n         status = 'error';\n         errMsg = e;\n      }\n   }\n\n   // promise for reading the CSV file\n   function readFile (e) {\n      const reader = new FileReader();\n      reader.onload = () => { setData(reader.result) };\n      reader.readAsText(dataFile);\n   }\n\n   // reset whole component to initial state\n   function reset () {\n      dataFile = null;\n   }\n\n   // reactive expression for tracking changes of 'dataFile'\n   $: if (dataFile === null) {\n      // if data file is empty reset status and error messages\n      dataset = null;\n   } else {\n      // if not just remove error messages if any\n      guessParams(dataFile, model)\n      status = 'neutral';\n      errMsg = '';\n   }\n\n   // reactive expression for tracking changes of 'sep'\n   $: if (sep) {\n      // if separator was changed remove error message\n      status = 'neutral';\n      errMsg = '';\n   }\n\n   // if array with outliers has been changed, make new predictions\n   $: if (dataset && model && outliers !== outliersOld) {\n      try{\n         res = predict(model, dataset, outliers);\n         outliersOld = outliers;\n         errMsg = ''\n         status = 'success';\n      } catch (e) {\n         dataset = null;\n         status = 'error';\n         errMsg = e;\n      }\n   }\n</script>\n\n{#if !dataset }\n\n   <!-- show if data is not loaded -->\n   <!-- reset component if dataFile is changed inside -->\n   {#key dataFile === undefined}\n   <Container>\n      <FileSelector\n         id=\"dataFile\"\n         message=\"Select CSV file with dataset\"\n         bind:file={dataFile}\n      />\n   </Container>\n   {/key}\n\n   <!-- show if file is selected but data is not loaded -->\n   {#if dataFile}\n   <Container label=\"Delimiter:\">\n      <Select id=\"sep\" bind:value={sep} options={sepOptions} />\n   </Container>\n   <Container label=\"Row labels:\">\n      <Select id=\"hasLabels\" bind:value={hasLabels} options={['no', 'yes']} />\n   </Container>\n   {#if !classMandatory}\n   <Container label=\"{className} labels:\">\n      <Select id=\"hasLabels\" bind:value={hasClassLabels} options={['no', 'yes']} />\n   </Container>\n   {/if}\n   <Container label=\"Header:\">\n      <Select id=\"header\" bind:value={header} options={headerOptions} />\n   </Container>\n   {#if header==='values'}\n   <Container label=\"Header name:\">\n      <TextInput id=\"varvaluesName\" bind:value={varvaluesName} placeholder=\"e.g. Wavelength\" />\n   </Container>\n   <Container label=\"Header units:\">\n      <TextInput id=\"varvaluesUnits\" bind:value={varvaluesUnits} maxLength={10} placeholder=\"e.g. nm\" />\n   </Container>\n   {/if}\n   <Container label=\"&nbsp;\">\n      <Button on:click={readFile}>Load</Button>\n   </Container>\n   {/if}\n\n{:else}\n\n\n{#if promise}\n\n   <!-- calculation is in process -->\n   {#await promise}\n      <Container>\n         <Spinner />\n         <p>{model ? 'Loading data and apply model...' : 'Loading data...'}</p>\n      </Container>\n\n   {:then value}\n      <!-- status if succeed -->\n      {#if dataset !== null}\n      <!-- dataset is loaded - show info and cancel button -->\n      <DatasetWidget {dataset} on:click={reset} />\n      {/if}\n\n   {:catch error}\n      <!-- error message if failed -->\n      <Container status=\"error\">\n         <p>{error}</p>\n      </Container>\n   {/await}\n\n{:else}\n   {#if dataset !== null}\n   <!-- dataset is loaded - show info and cancel button -->\n   <DatasetWidget {dataset} on:click={reset} />\n   {/if}\n{/if}\n\n\n\n{/if}\n\n<!-- error message -->\n{#if status === 'error' || errMsg}\n<Container status=\"error\">\n   <p>{errMsg}</p>\n</Container>\n{/if}\n\n","<script>\n   /*************************************************************/\n   /* ModelTable                                                */\n   /* -------------------------                                 */\n   /* shows table with PCA outcomes for training set            */\n   /*************************************************************/\n\n   // main properties of the whole app\n   export let res;\n\n   const NCOMPMAX = 16;\n   let expvar, cumexpvar, eigenvals;\n   $: if (res) {\n      cumexpvar = res.stat.cumexpvar;\n      expvar = res.stat.expvar;\n      eigenvals = res.eigenvals;\n   }\n</script>\n\n\n{#if res}\n<table>\n   <tr>\n      <th>PC</th>\n      <th>Expvar</th>\n      <th>Cumexpvar</th>\n      <th>Eigenvals</th>\n   </tr>\n   {#each res.stat.components.filter(v => v < NCOMPMAX) as a}\n   <tr>\n      <td>{a}</td>\n      <td>{(expvar[a - 1] * 100).toFixed(2)}</td>\n      <td>{(cumexpvar[a - 1] * 100).toFixed(2)}</td>\n      <td>{(eigenvals[a - 1]).toFixed(2)}</td>\n   </tr>\n   {/each}\n\n   {#if res.ncomp > NCOMPMAX}\n   <tr>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n   </tr>\n   {/if}\n\n   {#if res.ncomp >= NCOMPMAX}\n   <tr>\n      <td>{res.ncomp}</td>\n      <td>{((cumexpvar[res.ncomp - 1] - cumexpvar[res.ncomp - 2]) * 100).toFixed(2)}</td>\n      <td>{(cumexpvar[res.ncomp - 1] * 100).toFixed(2)}</td>\n      <td>{(eigenvals[res.ncomp - 1]).toFixed(2)}</td>\n   </tr>\n   {/if}\n   </table>\n{/if}\n\n<style>\n   table {\n      width: 100%;\n      border-collapse: collapse;\n   }\n\n   tr {\n      width: 100%;\n   }\n\n   th {\n      border-bottom: 1px solid #a0a0a0;\n   }\n\n   th, td {\n      text-align: right;\n      padding: 0.2em 0.5em 0.2em 0.1em;\n      color: #404040;\n      margin: 0;\n   }\n</style>","<script>\n   /**************************************************************/\n   /* Outliers pane for training set                             */\n   /* -------------------------                                  */\n   /* loads training set from CSV file                           */\n   /**************************************************************/\n\n\timport { createEventDispatcher } from 'svelte';\n   import Container from '../controls/Container.svelte';\n   import ButtonCancel from '../controls/ButtonCancel.svelte';\n\n   // event dispatcher\n   const dispatch = createEventDispatcher();\n\n   // calibration set\n   export let outliers;\n   export let dataset;\n\n   // function to dispatch event when outliers are reset\n   function resetOutliers(el) {\n      dispatch(\"resetoutliers\", {});\n   }\n</script>\n\n{#if outliers.length > 0 }\n   <!-- dataset is loaded - show info and cancel button -->\n   <Container>\n      <p class=\"outliers\">\n         Removed: {@html outliers.map(v => '<span class=\"out\">' + dataset.objlabels[v] + '</span>').join(' ')}\n      </p>\n      <ButtonCancel on:click={resetOutliers} />\n   </Container>\n{/if}\n\n\n<style>\n   .outliers{\n      line-height: 1.5em;\n      text-align: left;\n      padding: 0.5em 0;\n      flex: 0 0 80%;\n   }\n\n   .outliers > :global(.out) {\n      color: #DC143C;\n      background: #DC143C20;\n\n      display: inline-block;\n      white-space: nowrap;\n      vertical-align: middle;\n      max-width: 10ch;\n      overflow: hidden;\n      text-overflow: ellipsis;\n\n      padding: 0.1em 0.5em;\n      margin: 0.2em 0.1em;\n      border-radius: 0.2em;\n   }\n</style>","<script>\n   /*************************************************************/\n   /* AppContainer for training                                 */\n   /* -------------------------                                 */\n   /* app container for training of PCA model                   */\n   /*************************************************************/\n\n   import { downloadResults, downloadModel } from '../utils';\n\n   import ModelCalculator from './ModelCalculator.svelte';\n   import AppPlots from './AppPlots.svelte';\n\n   import DataLoader from '../../../shared/components/PCADataLoader.svelte';\n   import ResultTable from '../shared/ModelTable.svelte';\n\n   import Outliers from '../../../shared/widgets/Outliers.svelte';\n   import Container from '../../../shared/controls/Container.svelte';\n   import Button from '../../../shared/controls/Button.svelte';\n\n\n   /*****************************************/\n   /* Component parameters                  */\n   /*****************************************/\n\n   // inputs\n   export let WASM;              // WASM promis method from parent app\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // main properties of the training app\n   // all set to undefined to avoid triggering\n   // reset conditions on first render\n\n   let dataset;               // calibration set\n   let model;                 // object with PCA model\n   let res;                   // object with PCA results for calibration set\n\n   // parameters to check if model object has been updated\n   let modelHash = 0;\n\n   // array with outliers\n   let outliers = [];         // vector with dataset row numbers (from 0) marked as outliers\n\n   /**\n    * Set the selected point as outlier and reset the model and results\n    * @param e - event dispatched by AppPlots component with id of the selected point\n    */\n   function setOutlier(e) {\n\n      // get position (index) of the sample to be removed\n      const pos = parseInt(e.detail.id);\n      if (Number.isNaN(pos) || pos < 0 || pos >= res.objindices.length ) return;\n\n      // find sample ID corresponding to the position\n      const id = res.objindices[pos];\n\n      // filter the outlier out\n      if (id >= 0 && !outliers.includes(id)) {\n         outliers = [...outliers, id];\n         model = null;\n      }\n   }\n\n\n   /**\n    * Reset outliers and model\n    */\n   function resetOutliers() {\n      outliers = [];\n      model = null;\n   }\n\n\n   $: if (dataset === null) {\n      // if training set is set null - reset model and all related parameters\n      model = null;\n      outliers = [];\n   }\n\n   // if model object is set to null - reset dependent objects\n   $: if (model === null) {\n      res = null;\n      modelHash = 0;\n   }\n\n   // check hashes and initiate updates if outcomes changed\n   $: if (model && model.hash !== modelHash) {\n      modelHash = model.hash;\n   }\n</script>\n\n<div class=\"app-container\">\n\n   <!-- left column with main app controls -->\n   <div class=\"app-controls\">\n      <div class=\"data-loader\">\n         <DataLoader bind:dataset={dataset} className=\"Group\"/>\n      </div>\n      {#if outliers.length > 0 }\n      <div class=\"outliers-pane\">\n         <Outliers {dataset} on:resetoutliers={resetOutliers} bind:outliers={outliers} />\n      </div>\n      {/if}\n      {#if dataset }\n      <div class=\"model-calculator\">\n         <ModelCalculator {WASM} {dataset} {outliers} bind:model={model} bind:res={res} />\n         {#if res}\n         <Container label='Download'>\n            <div class=\"buttons\">\n            <Button on:click={() => downloadResults(res, dataset, \"train\", outliers, model)}>Results</Button>\n            <Button on:click={() => downloadModel(model)}>Model</Button>\n            </div>\n         </Container>\n         {/if}\n      </div>\n      {/if}\n      <div class=\"pca-settings\">\n      </div>\n      {#if res}\n      <div class=\"result-stats\">\n         <ResultTable {res} />\n      </div>\n      {/if}\n   </div>\n\n   <!-- right column with help text or with plots and plot controls -->\n   <div class=\"app-content\">\n      {#if !res || !model}\n         <div class=\"help-text\">\n         {#if !dataset}\n            <p>\n               In this tab you can train a PCA model and explore how well it describes the training set. After creating the model you can save it to a file and apply it to another, new set of samples, and see how well this new set is explained by the model (tab <strong>Project</strong>).\n            </p>\n            <p><strong>Step 1.</strong></p>\n            <p>Load your training set from a CSV file. The file should contain data as numeric values delimited\n               by comma (with dot as decimal separator) or by semicolon (with comma as decimal separator). Rows correspond to observations or objects, columns — to variables.\n            </p>\n            <p>\n               First row in the CSV file can contain variable labels or values (<strong>header</strong>). It is assumed that variable lables are text (or have text parts), e.g. <em>\"Na\"</em>, <em>\"OD260\"</em>, etc. If variables are part of signals, e.g. spectra, the header can content numeric values, e.g. wavelength or wavenumbers. If this is the case, select <em>values</em> option for the header. In this case you will also be able to specify name of the values (e.g. <em>Wavelength</em>) and units (e.g. <em>nm</em>) if necessary.\n            </p>\n            <p>\n               First column in the file can contain labels for the objects/observations (<strong>row labels</strong>) — just set the corresponding options after selecting the file. It is also possible to have group labels, which you can use, for example, to color group samples on the score plot. Here is an example how data structure may look like (note, that column with group, row labels and header are optional):\n            </p>\n            <div>\n               <table>\n               <tr>\n                  <td>Name</td>\n                  <td>Group</td>\n                  <td>x1</td>\n                  <td>x2</td>\n                  <td>x3</td>\n               </tr>\n               <tr>\n                  <td>O1</td>\n                  <td>A</td>\n                  <td>3.8</td>\n                  <td>1.3</td>\n                  <td>13.6</td>\n               </tr>\n               <tr>\n                  <td>O2</td>\n                  <td>A</td>\n                  <td>11.1</td>\n                  <td>12.3</td>\n                  <td>3.3</td>\n               </tr>\n               <tr>\n                  <td>O3</td>\n                  <td>A</td>\n                  <td>1.2</td>\n                  <td>2.3</td>\n                  <td>4.2</td>\n               </tr>\n               </table>\n            </div>\n            <p></p>\n         {:else}\n            {#if !model}\n            <p><strong>Step 2</strong></p>\n            <p>\n               Next step is to create a global PCA model for the training set. Use more components/latent variables (PCs) than you expect to be optimal. You will have possibility to select number of components for every plot.\n            </p>\n            {/if}\n         {/if}\n         </div>\n      {:else}\n         {#key res }\n         <AppPlots on:setoutlier={setOutlier} {dataset} {res} {model} />\n         {/key}\n      {/if}\n   </div>\n</div>\n\n<style>\n\n   .app-container {\n      font-family: Helvetica, Arial, sans-serif;\n      font-size: 1rem;\n      color: #404040;\n      box-sizing: border-box;\n      margin: 0 auto;\n      padding: 0.35em 0.25em;\n      width: 100%;\n      height: 100%;\n      display: grid;\n      grid-template-areas: \"controls content\";\n      grid-template-rows: 100%;\n      grid-template-columns: min(310px, 30%) 1fr;\n   }\n\n   .app-controls {\n      box-sizing: border-box;\n      padding: 0.25em 0.5em;\n   }\n\n   .app-content {\n      box-sizing: border-box;\n      padding: 0 1em 0 0.5em;\n      padding: 0.25em 0.25em;\n      height: 100%;\n   }\n\n   .app-controls > div {\n      background: #e8e8e8;\n      border-radius: 0.25rem;\n   }\n\n   .help-text {\n      margin-top: 0.25rem;\n   }\n\n   .help-text > p, .help-text > div {\n      background: #fafafa;\n      padding: 0em 1.5em 0.5em 1.5em;\n      color: #606060;\n      line-height: 1.5em;\n      margin: 0 1em 0 0;\n   }\n\n   .help-text table {\n      border-collapse: collapse;\n   }\n\n   .help-text table td{\n      padding: 0.25em 0.5em;\n      background: #e0f0fa;\n      text-align: right;\n      border: 1px solid white;\n   }\n\n   .help-text table tr:first-child td{\n      font-weight: bold;\n      background: #f8f4e0;\n   }\n\n   .help-text table td:first-child {\n      font-weight: bold;\n      background: #f8f4e0;\n      padding-right: 1em;\n   }\n\n   .help-text table td:nth-child(2) {\n      background: #e0e8f0;\n      padding-right: 1em;\n   }\n\n   .help-text > p:first-child {\n      border-top-left-radius: 0.25rem;\n      border-top-right-radius: 0.25rem;\n      padding-top: 1.5em;\n   }\n\n   .help-text > p:last-child {\n      border-bottom-left-radius: 0.25rem;\n      border-bottom-right-radius: 0.25rem;\n      padding-bottom: 1.5em;\n   }\n\n   .result-stats {\n      padding: 0.5rem 1rem;\n      margin-top: 0.25rem;\n      font-size: 0.85em;\n   }\n\n   .buttons {\n      position: relative;\n      box-sizing: border-box;\n      display: inline-block;\n      flex: 1 1 auto;\n      margin: 0;\n      padding: 2px 0;\n      width: auto;\n      border-radius: 2px;\n      cursor: default;\n      white-space: nowrap;\n   }\n\n   @media(min-width:1300px) {\n      .app-container {\n         grid-template-columns: min(340px, 30%) 1fr;\n      }\n   }\n\n   @media(min-width:1100px) {\n      .app-container {\n         grid-template-columns: min(320px, 30%) 1fr;\n      }\n   }\n\n</style>","<script>\n   /*************************************************************/\n   /* ModelLoader                                               */\n   /* -------------------------                                 */\n   /* loads PCA model from file                                 */\n   /*************************************************************/\n\n   import FileSelector from '../../../shared/controls/FileSelector.svelte';\n   import Container from '../../../shared/controls/Container.svelte';\n   import Button from '../../../shared/controls/Button.svelte';\n   import ButtonCancel from '../../../shared/controls/ButtonCancel.svelte';\n\n\n   /*****************************************/\n   /* Component parameters                  */\n   /*****************************************/\n\n   // outputs\n   export let model;    // object with model\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // string with model file name\n   let modelFile = undefined;\n\n   // app status for handling and showing errors\n   let status = 'neutral';\n   let errMsg = '';\n\n   // gets model content as one large string, parse it into matrix\n   function setModel(strData) {\n      try{\n         const m = JSON.parse(strData);\n         m.v = new Float64Array(m.v);\n         if (!Object.keys(m).includes('class') || m.class[0] !== 'pcamodel') {\n            throw Error('The JSON file you selected does not contain PCA mdel.');\n         }\n         model = m;\n         status = 'success';\n         errMsg = ''\n      } catch (e) {\n         model = null;\n         status = 'error';\n         errMsg = e;\n      }\n   }\n\n   // promise for reading the CSV file\n   function readFile (e) {\n      const reader = new FileReader();\n      reader.onload = () => { setModel(reader.result) };\n      reader.readAsText(modelFile);\n   }\n\n   function reset() {\n      modelFile = null\n   }\n\n   // reactive expression for tracking changes of 'modelFile'\n   $: if (modelFile === null) {\n      // if model file is empty reset status and error messages\n      model = null;\n   } else {\n      // if not just remove error messages if any\n      status = 'neutral';\n      errMsg = '';\n   }\n\n   // file name with model without extension\n   $: modelFileName = modelFile ? modelFile.name.replace(/\\.[^/.]+$/, \"\") : '';\n</script>\n\n{#if !model }\n\n   <!-- show if data is not loaded -->\n   <!-- reset component if dataFile is changed inside -->\n   {#key modelFile === undefined}\n   <Container>\n      <FileSelector id=\"modelFile\" bind:file={modelFile} acceptType=\".json\" message=\"Select file with model\"/>\n   </Container>\n   {/key}\n\n   {#if modelFile}\n   <Container label=\"&nbsp;\">\n      <Button on:click={readFile}>Load</Button>\n   </Container>\n   {/if}\n\n{:else}\n\n   <!-- dataset is loaded - show info and cancel button -->\n   <Container>\n      <p class=\"model-info\">\n         <span>Model file:</span> <span title=\"{modelFileName}\" class=\"file-name\">{modelFileName}</span><br>\n      </p>\n      <ButtonCancel on:click={reset} />\n   </Container>\n\n{/if}\n\n<!-- error message -->\n{#if status === 'error' || errMsg}\n<Container status=\"error\">\n   <p>{@html errMsg}</p>\n</Container>\n{/if}\n\n\n<style>\n\n   .model-info {\n      line-height: 1.5em;\n   }\n   .model-info > :global(span) {\n      vertical-align:top;\n      color: #a0a0a0;\n   }\n\n   .model-info > .file-name {\n      display: inline-block;\n      padding: 0;\n      margin: 0;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 25ch;\n      color: #222;\n   }\n\n</style>","<script>\n   /*************************************************************/\n   /* AppPlots component for prediction app                     */\n   /* -------------------------------                           */\n   /* show selection of plot for training of PCA model          */\n   /*************************************************************/\n\n\n   // import locally shared plot and plot controls components\n   import AppPlots from '../shared/AppPlots.svelte';\n   import VariancePlot from '../shared/VariancePlot.svelte';\n   import DistancePlot from '../shared/DistancePlot.svelte';\n   import BiPlot from '../shared/BiPlot.svelte';\n\n   import VariancePlotControls from '../shared/VariancePlotControls.svelte';\n   import DistancePlotControls from '../shared/DistancePlotControls.svelte';\n   import BiPlotControls from '../shared/BiPlotControls.svelte';\n\n   import ScoresPlot from '../../../shared/plots/ScoresPlot.svelte';\n   import ScoresPlotControls from '../../../shared/plots/ScoresPlotControls.svelte';\n\n   // input parameters\n   export let res;\n   export let model;\n   export let dataset;\n\n   // array with list of plots and their components\n   // parameter \"scope\" tells parent AppPlots component whether click events must be handled:\n   // - for \"objects\" - it triggers click events on plots as selection of objects and mark them as outliers\n   // - for \"variables\" - it triggers click events on plots as selection of variables (no more actions so far)\n   // - for \"none\" - the click events will be ignored\n   const options = [\n      {label: 'Scores', scope: 'scores', plotComponent: ScoresPlot, controlsComponent: ScoresPlotControls},\n      {label: 'Biplot', scope: 'both', plotComponent: BiPlot, controlsComponent: BiPlotControls},\n      {label: 'Variance', scope: 'none', plotComponent: VariancePlot, controlsComponent: VariancePlotControls},\n      {label: 'Distances', scope: 'objects', plotComponent: DistancePlot, controlsComponent: DistancePlotControls},\n   ]\n</script>\n\n\n<AppPlots on:setoutlier on:plotoutlier {res} {model} {options} {dataset} />","<script>\n\n   /*************************************************************/\n   /* ResultsTable                                              */\n   /* -------------------------                                 */\n   /* shows table with PCA results for new datset               */\n   /*************************************************************/\n\n   // main properties of the whole app\n   export let res;\n\n   const NCOMPMAX = 16;\n   let expvar, cumexpvar;\n   $: if (res) {\n      cumexpvar = res.stat.cumexpvar;\n      expvar = res.stat.expvar;\n   }\n</script>\n\n\n{#if res}\n<table>\n   <tr>\n      <th>PC</th>\n      <th>Expvar</th>\n      <th>Cumexpvar</th>\n   </tr>\n   {#each res.stat.components.filter(v => v < NCOMPMAX) as a}\n   <tr>\n      <td>{a}</td>\n      <td>{(expvar[a - 1] * 100).toFixed(2)}</td>\n      <td>{(cumexpvar[a - 1] * 100).toFixed(2)}</td>\n   </tr>\n   {/each}\n\n   {#if res.ncomp > NCOMPMAX}\n   <tr>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n   </tr>\n   {/if}\n\n   {#if res.ncomp >= NCOMPMAX}\n   <tr>\n      <td>{res.ncomp}</td>\n      <td>{((cumexpvar[res.ncomp - 1] - cumexpvar[res.ncomp - 2]) * 100).toFixed(2)}</td>\n      <td>{(cumexpvar[res.ncomp - 1] * 100).toFixed(2)}</td>\n   </tr>\n   {/if}\n   </table>\n{/if}\n\n<style>\n   table {\n      width: 100%;\n      border-collapse: collapse;\n   }\n\n   tr {\n      width: 100%;\n   }\n\n   th {\n      border-bottom: 1px solid #a0a0a0;\n   }\n\n   th, td {\n      text-align: right;\n      padding: 0.2em 0.5em 0.2em 0.1em;\n      color: #404040;\n      margin: 0;\n   }\n</style>","<script>\n   /*************************************************************/\n   /* AppContainer for prediction                               */\n   /* -------------------------                                 */\n   /* app container for applying PCA model                      */\n   /*************************************************************/\n\n   import { downloadResults } from '../utils';\n\n   import ModelLoader from './ModelLoader.svelte';\n   import AppPlots from './AppPlots.svelte';\n\n   import DataLoader from '../../../shared/components/PCADataLoader.svelte';\n   import ResultTable from '../shared/ResultTable.svelte';\n\n   import Outliers from '../../../shared/widgets/Outliers.svelte';\n   import Container from '../../../shared/controls/Container.svelte';\n   import Button from '../../../shared/controls/Button.svelte';\n\n\n   /*****************************************/\n   /* Component parameters                  */\n   /*****************************************/\n\n   // inputs\n   export let WASM;              // WASM promis method from parent app\n\n\n   /*****************************************/\n   /* Component code                        */\n   /*****************************************/\n\n   // main properties of the training app\n   // all set to undefined to avoid triggering\n   // reset conditions on first render\n\n   let dataset;               // new set\n   let model;                 // object with PCA model\n   let res;                   // object with PCA results for calibration set\n\n   // parameters to check if model object has been updated\n   let modelHash = 0;\n\n   // array with outliers\n   let outliers = [];         // vector with dataset row numbers (from 0) marked as outliers\n\n\n   /**\n    * Set the selected point as outlier and reset the model and results\n    * @param e - event dispatched by AppPlots component with id of the selected point\n    */\n   function setOutlier(e) {\n\n      // get position (index) of the sample to be removed\n      const pos = parseInt(e.detail.id);\n      if (Number.isNaN(pos) || pos < 0 || pos >= res.objindices.length ) return;\n\n      // find sample ID corresponding to the position\n      const id = res.objindices[pos];\n\n      // filter the outlier out\n      if (id >= 0 && !outliers.includes(id)) {\n         outliers = [...outliers, id];\n      }\n   }\n\n\n   /**\n    * Reset outliers and model object\n    */\n   function resetOutliers() {\n      outliers = [];\n   }\n\n   // if model is null - reset dataset\n   $: if (model === null) {\n      dataset = null;\n      modelHash = 0;\n   }\n\n\n   // if dataset is null - reset all dependent objects (results, labels, outliers, etc.)\n   $: if (dataset === null) {\n      res = null;\n      outliers = [];\n   }\n\n   // check hashes and initiate updates if outcomes changed\n   $: if (model && model.hash !== modelHash) {\n      modelHash = model.hash;\n   }\n</script>\n\n<div class=\"app-container\">\n\n   <!-- left column with main app controls -->\n   <div class=\"app-controls\">\n      <div class=\"model-loader\">\n         <ModelLoader bind:model={model} />\n      </div>\n\n      {#if model}\n      <div class=\"data-loader\">\n         <DataLoader bind:dataset={dataset} bind:res={res} {WASM} {model} {outliers} className=\"Group\" />\n      </div>\n      {/if}\n\n      {#if outliers.length > 0 }\n      <div class=\"outliers-pane\">\n         <Outliers {dataset} on:resetoutliers={resetOutliers} bind:outliers={outliers} />\n      </div>\n      {/if}\n\n      {#if res }\n      <div class=\"model-dowloader\">\n         <Container label='Download'>\n            <div class=\"buttons\">\n            <Button on:click={() => downloadResults(res, dataset, \"new\", outliers)}>Results</Button>\n            </div>\n         </Container>\n      </div>\n      <div class=\"result-stats\">\n         <ResultTable {res} />\n      </div>\n      {/if}\n   </div>\n\n   <!-- right column with help text or with plots and plot controls -->\n   <div class=\"app-content\">\n      {#if !res}\n         <div class=\"help-text\">\n            <p>\n               In this tab you can project new data points to a previosly trained PCA model and explore main outcomes: scores, distances and variances.\n            </p>\n            {#if !model}\n            <p><strong>Step 1.</strong></p>\n            <p>Load file with PCA model you created earlier in tab <strong>Train</strong></p>\n            {:else}\n            <p><strong>Step 2.</strong></p>\n            <p>Load your dataset set from a CSV file. The interface and selection steps are similar to the ones you used in <em>Train</em> tab. However, in this case you do not need to specify all details for header, just select if the new dataset has header as a first row or not. All values will be inherited from the model object.\n            </p>\n            <p><strong>It is important that the new dataset has same variables as the training set used to create the model.</strong></p>\n            {/if}\n            <p></p>\n         </div>\n      {:else}\n         {#key res }\n         <AppPlots on:setoutlier={setOutlier} {dataset} {res} {model} />\n         {/key}\n      {/if}\n   </div>\n</div>\n\n<style>\n\n   .app-container {\n      font-family: Helvetica, Arial, sans-serif;\n      font-size: 1rem;\n      color: #404040;\n      box-sizing: border-box;\n      margin: 0 auto;\n      padding: 0.35em 0.25em;\n      width: 100%;\n      height: 100%;\n      display: grid;\n      grid-template-areas: \"controls content\";\n      grid-template-rows: 100%;\n      grid-template-columns: min(310px, 30%) 1fr;\n   }\n\n   .app-controls {\n      box-sizing: border-box;\n      padding: 0.25em 0.5em;\n   }\n\n   .app-content {\n      box-sizing: border-box;\n      padding: 0 1em 0 0.5em;\n      padding: 0.25em 0.25em;\n      height: 100%;\n   }\n\n   .app-controls > div {\n      background: #e8e8e8;\n      border-radius: 0.25rem;\n   }\n\n   .help-text {\n      margin-top: 0.25rem;\n   }\n\n   .help-text > p, .help-text > div {\n      background: #fafafa;\n      padding: 0em 1.5em 0.5em 1.5em;\n      color: #606060;\n      line-height: 1.5em;\n      margin: 0 1em 0 0;\n   }\n\n   .help-text table {\n      border-collapse: collapse;\n   }\n\n   .help-text table td{\n      padding: 0.25em 0.5em;\n      background: #e0f0fa;\n      text-align: right;\n      border: 1px solid white;\n   }\n\n   .help-text table tr:first-child td{\n      font-weight: bold;\n      background: #f8f4e0;\n   }\n\n   .help-text table td:first-child {\n      font-weight: bold;\n      background: #f8f4e0;\n      padding-right: 1em;\n   }\n\n   .help-text table td:nth-child(2) {\n      background: #e0e8f0;\n      padding-right: 1em;\n   }\n\n   .help-text > p:first-child {\n      border-top-left-radius: 0.25rem;\n      border-top-right-radius: 0.25rem;\n      padding-top: 1.5em;\n   }\n\n   .help-text > p:last-child {\n      border-bottom-left-radius: 0.25rem;\n      border-bottom-right-radius: 0.25rem;\n      padding-bottom: 1.5em;\n   }\n\n   .result-stats {\n      padding: 0.5rem 1rem;\n      margin-top: 0.25rem;\n      font-size: 0.85em;\n   }\n\n   .buttons {\n      position: relative;\n      box-sizing: border-box;\n      display: inline-block;\n      flex: 1 1 auto;\n      margin: 0;\n      padding: 2px 0;\n      width: auto;\n      border-radius: 2px;\n      cursor: default;\n      white-space: nowrap;\n   }\n\n   @media(min-width:1300px) {\n      .app-container {\n         grid-template-columns: min(340px, 30%) 1fr;\n      }\n   }\n\n   @media(min-width:1100px) {\n      .app-container {\n         grid-template-columns: min(320px, 30%) 1fr;\n      }\n   }\n\n</style>","\nvar PCA = (() => {\n  var _scriptName = import.meta.url;\n  \n  return (\nasync function(moduleArg = {}) {\n  var moduleRtn;\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;var readyPromise=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof WorkerGlobalScope!=\"undefined\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\"&&process.type!=\"renderer\";if(ENVIRONMENT_IS_NODE){const{createRequire}=await import(\"module\");let dirname=import.meta.url;if(dirname.startsWith(\"data:\")){dirname=\"/\"}var require=createRequire(dirname)}var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var readAsync,readBinary;if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var nodePath=require(\"path\");if(!import.meta.url.startsWith(\"data:\")){scriptDirectory=nodePath.dirname(require(\"url\").fileURLToPath(import.meta.url))+\"/\"}readBinary=filename=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);var ret=fs.readFileSync(filename);return ret};readAsync=(filename,binary=true)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return new Promise((resolve,reject)=>{fs.readFile(filename,binary?undefined:\"utf8\",(err,data)=>{if(err)reject(err);else resolve(binary?data.buffer:data)})})};if(!Module[\"thisProgram\"]&&process.argv.length>1){thisProgram=process.argv[1].replace(/\\\\/g,\"/\")}arguments_=process.argv.slice(2);quit_=(status,toThrow)=>{process.exitCode=status;throw toThrow}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptName){scriptDirectory=_scriptName}if(scriptDirectory.startsWith(\"blob:\")){scriptDirectory=\"\"}else{scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}{if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=url=>{if(isFileURI(url)){return new Promise((resolve,reject)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){resolve(xhr.response);return}reject(xhr.status)};xhr.onerror=reject;xhr.send(null)})}return fetch(url,{credentials:\"same-origin\"}).then(response=>{if(response.ok){return response.arrayBuffer()}return Promise.reject(new Error(response.status+\" : \"+response.url))})}}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];var wasmBinary=Module[\"wasmBinary\"];var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module[\"monitorRunDependencies\"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module[\"monitorRunDependencies\"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\"onAbort\"]?.(what);what=\"Aborted(\"+what+\")\";err(what);ABORT=true;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var isFileURI=filename=>filename.startsWith(\"file://\");function findWasmBinary(){if(Module[\"locateFile\"]){var f=\"pca_wasm.wasm\";if(!isDataURI(f)){return locateFile(f)}return f}return new URL(\"pca_wasm.wasm\",import.meta.url).href}var wasmBinaryFile;function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){if(!wasmBinary){return readAsync(binaryFile).then(response=>new Uint8Array(response),()=>getBinarySync(binaryFile))}return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(binaryFile)&&!isFileURI(binaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(`wasm streaming compile failed: ${reason}`);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(binaryFile,imports,callback)})})}return instantiateArrayBuffer(binaryFile,imports,callback)}function getWasmImports(){return{a:wasmImports}}function createWasm(){var info=getWasmImports();function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"h\"];updateMemoryViews();addOnInit(wasmExports[\"i\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}wasmBinaryFile??=findWasmBinary();instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}class ExitStatus{name=\"ExitStatus\";constructor(status){this.message=`Program terminated with exit(${status})`;this.status=status}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module[\"noExitRuntime\"]||true;var stackRestore=val=>__emscripten_stack_restore(val);var stackSave=()=>_emscripten_stack_get_current();var __abort_js=()=>{abort(\"\")};var __emscripten_memcpy_js=(dest,src,num)=>HEAPU8.copyWithin(dest,src,src+num);var runtimeKeepaliveCounter=0;var __emscripten_runtime_keepalive_clear=()=>{noExitRuntime=false;runtimeKeepaliveCounter=0};var timers={};var handleException=e=>{if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)};var keepRuntimeAlive=()=>noExitRuntime||runtimeKeepaliveCounter>0;var _proc_exit=code=>{EXITSTATUS=code;if(!keepRuntimeAlive()){Module[\"onExit\"]?.(code);ABORT=true}quit_(code,new ExitStatus(code))};var exitJS=(status,implicit)=>{EXITSTATUS=status;_proc_exit(status)};var _exit=exitJS;var maybeExit=()=>{if(!keepRuntimeAlive()){try{_exit(EXITSTATUS)}catch(e){handleException(e)}}};var callUserCallback=func=>{if(ABORT){return}try{func();maybeExit()}catch(e){handleException(e)}};var _emscripten_get_now=()=>performance.now();var __setitimer_js=(which,timeout_ms)=>{if(timers[which]){clearTimeout(timers[which].id);delete timers[which]}if(!timeout_ms)return 0;var id=setTimeout(()=>{delete timers[which];callUserCallback(()=>__emscripten_timeout(which,_emscripten_get_now()))},timeout_ms);timers[which]={id,timeout_ms};return 0};var _emscripten_date_now=()=>Date.now();var getHeapMax=()=>2147483648;var alignMemory=(size,alignment)=>Math.ceil(size/alignment)*alignment;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536|0;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignMemory(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};var getCFunc=ident=>{var func=Module[\"_\"+ident];return func};var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer)};var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var stackAlloc=sz=>__emscripten_stack_alloc(sz);var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder:undefined;var UTF8ArrayToString=(heapOrArray,idx=0,maxBytesToRead=NaN)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var ccall=(ident,returnType,argTypes,args,opts)=>{var toC={string:str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},array:arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func(...cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};var wasmImports={c:__abort_js,f:__emscripten_memcpy_js,b:__emscripten_runtime_keepalive_clear,d:__setitimer_js,g:_emscripten_date_now,e:_emscripten_resize_heap,a:_proc_exit};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"i\"])();var _pcafit_wasm=Module[\"_pcafit_wasm\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(_pcafit_wasm=Module[\"_pcafit_wasm\"]=wasmExports[\"j\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"k\"])(a0);var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"l\"])(a0);var _pcapredict_wasm=Module[\"_pcapredict_wasm\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(_pcapredict_wasm=Module[\"_pcapredict_wasm\"]=wasmExports[\"m\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var _pcvpca_wasm=Module[\"_pcvpca_wasm\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14)=>(_pcvpca_wasm=Module[\"_pcvpca_wasm\"]=wasmExports[\"n\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14);var __emscripten_timeout=(a0,a1)=>(__emscripten_timeout=wasmExports[\"p\"])(a0,a1);var __emscripten_stack_restore=a0=>(__emscripten_stack_restore=wasmExports[\"q\"])(a0);var __emscripten_stack_alloc=a0=>(__emscripten_stack_alloc=wasmExports[\"r\"])(a0);var _emscripten_stack_get_current=()=>(_emscripten_stack_get_current=wasmExports[\"s\"])();Module[\"ccall\"]=ccall;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);Module[\"onRuntimeInitialized\"]?.();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(()=>{setTimeout(()=>Module[\"setStatus\"](\"\"),1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();moduleRtn=readyPromise;\n\n\n  return moduleRtn;\n}\n);\n})();\nexport default PCA;\n","<script>\n   /*************************************************************/\n   /* Root component for the application                        */\n   /*************************************************************/\n\n   import App from '../../shared/components/MainApp.svelte';\n   import TrainAppContainer from './tab_train/AppContainer.svelte';\n   import PredictAppContainer from './tab_new/AppContainer.svelte';\n   import WASM from '../../shared/wasm/dist/pca_wasm.js';\n\n   const containers = [\n      {name: 'Train', container: TrainAppContainer},\n      {name: 'Project', container: PredictAppContainer},\n   ]\n</script>\n\n<App appTitle=\"PCA\" appShortTitle=\"PCA\" isBeta={false} appSlogan=\"Principal component analysis\" {WASM} {containers}>\n   <div slot=\"footer\">\n      <p>Current release: <span>1.0.1</span>\n      Feedback: <a class=\"paper-link\" href=\"mailto:help@mda.tools?subject=PCA app\">help@mda.tools</a>\n      Tutorial:\n      <a class=\"paper-link\" href=\"Wines.zip\" download>dataset</a>\n      | <a href=\"https://www.youtube.com/playlist?list=PLep7KM9cEyFnCpcLEwI63Zj1YJZrVL0WH\">video lessons</a>\n      </p>\n   </div>\n\n   <h2>Principal Component Analysis</h2>\n   <p>Authors: <em>Sergey Kucheryavskiy, Oxana Rodionova, Alexey Pomerantsev</em></p>\n   <p>\n      Interactive web-application for creating and using PCA models for data exploration\n      directly in your browser. The app does not send any information to the server,\n      all calculations are done locally on your device.\n   </p>\n   <p>Check out YouTube <a href=\"https://www.youtube.com/playlist?list=PLep7KM9cEyFnCpcLEwI63Zj1YJZrVL0WH\">video-lessons</a>\n   <h3>v. 1.0.1</h3>\n   <p class=\"release-info\">released 12/11/2024</p>\n   <ul>\n      <li>Initial release.</li>\n   </ul>\n</App>\n\n","import MainApp from './MainApp.svelte';\n\nconst app = new MainApp({\n\ttarget: document.body,\n});\n\nexport default app;","export default {}"],"names":["noop","assign","tar","src","k","is_promise","value","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","is_empty","obj","subscribe","store","callbacks","callback","unsub","component_subscribe","component","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","get_slot_changes","dirty","lets","merged","len","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","get_all_dirty_from_scope","length","append","target","node","insert","anchor","detach","destroy_each","iterations","detaching","element","name","svg_element","text","data","space","empty","listen","event","handler","options","prevent_default","attr","attribute","children","set_data","set_input_value","input","set_style","key","important","toggle_class","toggle","custom_event","type","detail","bubbles","cancelable","HtmlTag","is_svg","__publicField","html","construct_svelte_component","props","current_component","set_current_component","get_current_component","onMount","onDestroy","createEventDispatcher","setContext","context","getContext","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","add_flush_callback","seen_callbacks","flushidx","saved_component","update","$$","flush_render_callbacks","filtered","targets","c","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","handle_promise","promise","info","token","index","child_ctx","needs_flush","error","update_await_block_branch","resolved","ensure_array_like","array_like_or_iterator","destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","o","n","old_indexes","new_blocks","new_lookup","deltas","updates","will_move","did_move","new_block","old_block","new_key","old_key","bind","create_component","mount_component","fragment","after_update","new_on_destroy","destroy_component","make_dirty","init","instance","create_fragment","not_equal","append_styles","parent_component","ready","ret","rest","nodes","SvelteComponent","PUBLIC_VERSION","sup","t0_value","li","button","t0","switch_value","div","div1","div0","create_if_block_1","create_if_block","header","img","h1","p","ul","main","footer","each_blocks","WASM","$$props","appTitle","appShortTitle","appSlogan","containers","isBeta","selectedContainer","isInfoShown","showInfo","$$invalidate","closeInfo","selectContainer","id","click_handler","keydown_handler","downloadResults","res","dataset","outliers","model","nAll","nCols","nOut","nComp","nStat","nfiller","filler","fillerComp","compNames","v","sep","addChunk","offset","rowlabels","out","values","groupname","valuesi","fillerStat","center","scale","loadings","loadingsi","hdr","blob","downloadModel","diff","x","isvector","Vector","sd","biased","variance","m","mean","s","d","sum","prod","min","isindex","minind","outind","max","maxind","CHISQ_DOF_THRESHOLD","PTOL","QTOL","QMIN","QMAX","QNITER","quantsearch","pfun","niter","qs","qe","qd","q1","q2","j","p1","p2","q0","p0","runif","rnorm","mu","sigma","pnorm","frac","erf","qnorm","SP1","SP2","C1","C2","a0","a1","a2","a3","b1","b2","b3","c0","c1","c2","c3","d1","d2","e0","e1","e2","e3","f1","f2","q","r","pf","F","df1","df2","vector","pchisq","pbeta","qf","MAXQ","MINQ","df","sigma2","F2","l0","l","F1","igamma","gamma","qchisq","x1","bratio","z","t","sign","a4","a5","y","erfc1","ind","ret_val","e","w","bot","top","ax","exparg","gsumln","gamln1","alnrel","bcorr","b0","c4","c5","r1","h","s3","s5","x2","s7","s9","s11","gam1","s1","s2","chebyshev_eval","twox","log1p","alnrcs","nlnrel","xmin","algdiv","u","p3","p4","p5","p6","q3","q4","q5","q6","r0","r2","r3","r4","r5","s4","gamln","betaln","l140","lnb","rlog1","w1","t2","erf__","R","rexpm1","esum","psi","piov4","dx0","nq","den","aug","sgn","xmx0","xmax1","upper","xsmall","fsper","eps","ans","an","tol","apser","g","aj","bx","bpser","apb","bup","ap1","brcmp1","nm1","bfrac","lambda","bn","yp1","anp1","bnp1","beta","alpha","brc","brcomp","const__","lnx","lny","e_z","x0","y0","bgrat","bm1","nu","log_r","log_u","u_0","q_r","grat_r","cn","n2","bp2n","coef","dj","M_SQRT_PI","sx","a2n_1","a2n","b2n_1","b2n","am0","an0","c_a","basym","f","z0","z2","w0","j0","j1","h2","hn","znm1","zn","np1","bsum","mmj","dsum","t1","lwbsper","do_swap","lw1bsper","lbfrac","did_bup","qr","X","Index","crossprod","Q","Matrix","Rt","rc","qc","temp","rot","isnumber","Y","ismatrix","nrx","ncx","nry","ncy","nrows","ncols","ninner","yc","outc","xr","reshape","nrow","ncol","_Matrix","I","Yt","Xt","xc","ncols_out","nrows_out","outx","_dot","fun","dims","_opvv","_opvn","rind","cind","ic","cv","ir","xc_out","ndec","leftpad","ndigits","str","dec","labels","hasLabels","hasHeader","rows","yv","strData","hasNaN","vec","startRow","firstRow","startColumn","rowValuesAll","rowValues","_Vector","_shuffle","decreasing","_sort","_sortind","_rep","_repeach","start","end","args","acc","cur","by","_seq","_Index","classRef","v1","v2","xv","yci","pca_getreslength","ncomp","pca_getmodellength","pcamodel_get","pcares_get","isArrCorrect","arr","minVal","maxVal","pca_fit","Module","exclvars","nout","nexv","x_ptr","o_ptr","ev_ptr","ev","m_length","m_constructor","m_ptr","pca_predict","r_length","r_constructor","r_ptr","res_values","resobj","expvar","resvar","cumresvar","cumexpvar","components","handle_outliers","indices","classes","sampleIndices","genhash","now","app_pca_predict","objindices","objlabels","reverseColumns","values_out","offset_in","offset_out","str2num","clearLabels","getCSVRows","csvString","dataStr","parseCSV","hasClassNames","varvaluesName","varvaluesUnits","nresp","firstRowValues","headerLabels","labelsVarname","classLabelsVarname","classNames","className","varlabels","varindices","varvaluesTemp","varvalues","varAxisTitle","varrev","detectHeader","rows_num_values","max_ncols","z_arr","detectSeparators","sep1","v11","v12","l11","l12","sep2","v21","v22","l21","l22","parseCSVParams","max_nrows","rows_values","headerShift","v31","nv21","nv31","nv22","nv32","hasClassLabels","nv1","html_tag","raw_value","changeOption","option","span","label","status","title","if_block0","create_if_block_4","if_block1","create_if_block_3","create_if_block_2","t_value","decNum","step","discrete","dispatch","sliderElement","sliderContainer","isDragging","computeValue","tmpValue","getRelativePosition","sliderRect","parentRect","minX","maxX","startChanging","width","cancelChanging","stopChanging","changingByWheel","newValue","changing","changingByKeys","$$value","select_props","promise_1","if_block","t1_value","current","errMsg","computeModel","compute","reset","maxNComp","div2","selected_object","plot_container","params","selected_plot_index","selected_plot","switchPlot","markOutlier","el","subscriber_queue","writable","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","getTickFactorLabel","tf","trimNum","num","getTickLabels","ticks","tickFactor","checkCoords","source","val2p","tX","tY","axes","px","py","getAxisTicks","lim","maxTickNum","round","whole","deltaFactor","delta","localRange","exponent","fraction","range","tickSpacing","niceNum","tickMin","tickMax","niceFraction","roundCoords","getScale","height","getAxisScale","size","createPngDataTable","crcTable","calcCrc","buf","pngDataTable","changeDpiOnArray","dataArray","dpi","physChunk","crc","crcChunk","chunkLength","finalHeader","changeDPI","base64Image","dataSplitted","format","body","headerLength","stringHeader","restOfData","headerBytes","finalArray","base64Header","downloadPNG","svg","fileName","svgHeight","svgWidth","scaleFactor","canvas","svgXml","dataURL","dataURL2","downloadLink","downloadSVG","createPngBlob","resolve","reject","svgData","svgBlob","DOMURL","err","text_1","text_1_transform_value","text_1_y_value","button0","button1","button2","rect","rect_x_value","rect_y_value","rect_width_value","rect_height_value","svg1","style","g0","svg0","defs","clipPath","g1","limX","limY","xLabel","yLabel","margins","downloadLinks","pngWidth","pngHeight","pngRes","clipboardWidth","clipboardHeight","AXES_MARGIN_FACTORS","XTICK_NUM","YTICK_NUM","TICK_SIZE","LEGEND_FONT_SIZE","PLOT_FONT_SIZE","LABELS_MARGIN","LINE_STYLES","MARKER_SYMBOLS","clipPathID","plotElement","left","bottom","dispatchClickEvent","eventName","handleClick","handleClickCopy","content","handleClickSVG","handleClickPNG","transform","tA","$isOk","invTransform","xscale","yscale","isOk","xLim","yLim","ro","entries","entry","pcr","scl","xscl","yscl","pxMargins","$scale","$yLim","$xLim","cpx","$tX","cpy","$tY","fontSize","Colors","line","line_x__value","line_x__value_1","line_y__value","line_y__value_1","lineCoords","lineColor","lineType","lineWidth","y1","y2","lineStyleStr","text_1_x_value","text_1_dx_value","text_1_dy_value","tickCoords","textColor","tickLabels","pos","las","dx","dy","textAnchor","textStyleStr","axisticklabels_changes","if_block2","showGrid","grid","axisLine","tfCoords","gridColor","ticksX","$xscale","tickNum","dY","ticksY1","ticksY2","gridYEnd","ticksY","$yscale","dX","ticksX1","ticksX2","gridXEnd","xx","yy","xStart","xEnd","yStart","yEnd","text_1_text_anchor_value","xValues","yValues","faceColor","borderColor","borderWidth","textSize","rotateAngle","textAnchors","marker","markerSize","markerSymbol","polyline","WIDTH_RATIO","HEIGHT_RATIO","TOP_MARGIN","breaks","colmap","labelColor","EL_HEIGHTS_PX","breakFactor","breakLabels","dxl","rx","ry","rw","rh","lBreaks","lLabels","isCentered","axesWidth","axesHeight","elWidth","elTop","MARGINS","LINE_COLORS","FACE_COLORS","LABELS_COLOR","LABELS_COLOR_SELECTED","AXIS_COLOR","MAX_LABEL_SYMBOLS","PNG_WIDTH","PNG_HEIGHT","PNG_RES","getColors","getAxisTitle","subset","samples","split","xMax","xMin","dt","right","getClassColors","colors","curr","getObjColors","getColorGroups","colorBy","colorByVar","resID","collabels","colbreaks","objcolors","colorVarName","classColmap","colorVar","create_if_block_7","create_if_block_6","create_if_block_5","if_block4","rect_fill_value","text_1_stroke_value","rect_stroke_value","seriesTitle","plotType","showLabels","pch","mainColor","selected","minYVal","maxYVal","minXVal","maxXVal","bw","bhw","lp","ptStyle","lbStyle","slStyle","barsStyleStr","_minXVal","_maxXVal","_minYVal","_maxYVal","labelsShort","pc","titles","varType","varForm","statName","LINE_COLOR","lines_changes","plotseries_changes","NPOINTS","get_axis_label","transType","limType","get_limit_coordinates","prob","Nh","Nq","Nf","select","series_title","resetSelection","els","ols","yMax","yMin","res_xd","res_yd","res_xd0","res_yd0","xMaxTot","yMaxTot","tColorText","textlabels_changes","pColorText","tColor","pColor","segments0_changes","segments1_changes","comp","axesScale","getValues","nobj","nvar","vMin","vMax","tpos","eigenvals","ppos","vValues","vEnd","vLabel","dV","vLim","compX","limXc","compY","limYc","yLabels","eigenvalues","minY","maxY","plotTypeOptions","value$1","plottypeselector_props","zoom","range_changes","colorByOptions","comp1","comp2","angles","getCoordinates","compXVal","compYVal","groups","groupNames","groupColors","confLevel","getEllipse","covMat","D","l1","l2","chisq","phi","v1x","v1y","n1","cosphi","sinphi","nTheta","dTheta","xVec","yVec","theta","getEllipses","nGroups","numPoints","centers","ellipses","xE","yE","segments_changes","confidenseellipses_changes","if_block3","xMinS","yMinS","xMaxS","yMaxS","xMinE","yMinE","xMaxE","yMaxE","xMinCE","yMinCE","xMaxCE","yMaxCE","showEllipse","confEllipse","rowIndices","compXValues","colorVarLabel","varIndices","varValues","varLabels","ScoresPlot","ScoresPlotControls","LoadingsPlot","LoadingsPlotControls","BiPlot","BiPlotControls","VariancePlot","VariancePlotControls","EigenvaluesPlot","EigenvaluesPlotControls","DistancePlot","DistancePlotControls","t2_value","span1","span1_title_value","span0","br","span2","span3","t6","t6_value","t8","t8_value","file","message","acceptType","fileInput","changeStatus","placeholder","maxLength","previous_key","classMandatory","classUnique","dataFile","outliersOld","sepOptions","headerOptions","predict","guessParams","hasModel","chunkSize","first100KB","reader","hasLabelsBool","hasClassLabelsBool","setData","readFile","each_value","NCOMPMAX","table","tr","td0","td1","td2","td3","t4","t4_value","resetOutliers","div4","div3","modelHash","setOutlier","click_handler_1","modelFile","setModel","modelFileName","PCA","_scriptName","_documentCurrentScript","moduleArg","moduleRtn","readyPromiseResolve","readyPromiseReject","readyPromise","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","createRequire","__vitePreload","__viteBrowserExternal$1","dirname","require","moduleOverrides","quit_","toThrow","scriptDirectory","locateFile","path","readAsync","readBinary","fs","nodePath","filename","isFileURI","binary","xhr","response","wasmBinary","wasmMemory","ABORT","EXITSTATUS","HEAP8","HEAPU8","updateMemoryViews","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","preRun","addOnPreRun","callRuntimeCallbacks","initRuntime","postRun","addOnPostRun","cb","addOnInit","runDependencies","dependenciesFulfilled","addRunDependency","_a","removeRunDependency","abort","what","dataURIPrefix","isDataURI","findWasmBinary","wasmBinaryFile","getBinarySync","getBinaryPromise","binaryFile","instantiateArrayBuffer","imports","receiver","reason","instantiateAsync","result","getWasmImports","wasmImports","createWasm","receiveInstance","module","wasmExports","receiveInstantiationResult","ExitStatus","noExitRuntime","stackRestore","val","__emscripten_stack_restore","stackSave","_emscripten_stack_get_current","__abort_js","__emscripten_memcpy_js","dest","runtimeKeepaliveCounter","__emscripten_runtime_keepalive_clear","timers","handleException","keepRuntimeAlive","_proc_exit","code","exitJS","implicit","_exit","maybeExit","callUserCallback","func","_emscripten_get_now","__setitimer_js","which","timeout_ms","__emscripten_timeout","_emscripten_date_now","getHeapMax","alignMemory","alignment","growMemory","pages","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","newSize","replacement","getCFunc","ident","writeArrayToMemory","array","buffer","lengthBytesUTF8","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","endIdx","u1","stringToUTF8","outPtr","stackAlloc","sz","__emscripten_stack_alloc","stringToUTF8OnStack","UTF8Decoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endPtr","u0","u2","ch","UTF8ToString","ptr","ccall","returnType","argTypes","opts","toC","convertReturnValue","cArgs","stack","converter","onDone","a6","a7","a8","a9","a10","a11","a12","a13","a14","calledRun","runCaller","doRun","h3","TrainAppContainer","PredictAppContainer","MainApp"],"mappings":";uFACO,SAASA,IAAO,CAAE,CAWlB,SAASC,GAAOC,EAAKC,EAAK,CAEhC,UAAWC,KAAKD,EAAKD,EAAIE,CAAC,EAAID,EAAIC,CAAC,EACnC,OAA6BF,CAC9B,CAQO,SAASG,GAAWC,EAAO,CACjC,MACC,CAAC,CAACA,IACD,OAAOA,GAAU,UAAY,OAAOA,GAAU,aAC/C,OAA4BA,EAAO,MAAU,UAE/C,CASO,SAASC,GAAIC,EAAI,CACvB,OAAOA,EAAE,CACV,CAEO,SAASC,IAAe,CAC9B,OAAO,OAAO,OAAO,IAAI,CAC1B,CAMO,SAASC,GAAQC,EAAK,CAC5BA,EAAI,QAAQJ,EAAG,CAChB,CAMO,SAASK,GAAYC,EAAO,CAClC,OAAO,OAAOA,GAAU,UACzB,CAGO,SAASC,GAAeC,EAAGC,EAAG,CACpC,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAMD,GAAK,OAAOA,GAAM,UAAa,OAAOA,GAAM,UAClF,CAEA,IAAIE,GAOG,SAASC,GAAcC,EAAaC,EAAK,CAC/C,OAAID,IAAgBC,EAAY,IAC3BH,KACJA,GAAuB,SAAS,cAAc,GAAG,GAGlDA,GAAqB,KAAOG,EACrBD,IAAgBF,GAAqB,KAC7C,CAqCO,SAASI,GAASC,EAAK,CAC7B,OAAO,OAAO,KAAKA,CAAG,EAAE,SAAW,CACpC,CASO,SAASC,GAAUC,KAAUC,EAAW,CAC9C,GAAID,GAAS,KAAM,CAClB,UAAWE,KAAYD,EACtBC,EAAS,MAAS,EAEnB,OAAO1B,EACP,CACD,MAAM2B,EAAQH,EAAM,UAAU,GAAGC,CAAS,EAC1C,OAAOE,EAAM,YAAc,IAAMA,EAAM,YAAW,EAAKA,CACxD,CAiBO,SAASC,GAAoBC,EAAWL,EAAOE,EAAU,CAC/DG,EAAU,GAAG,WAAW,KAAKN,GAAUC,EAAOE,CAAQ,CAAC,CACxD,CAEO,SAASI,GAAYC,EAAYC,EAAKC,EAASzB,EAAI,CACzD,GAAIuB,EAAY,CACf,MAAMG,EAAWC,GAAiBJ,EAAYC,EAAKC,EAASzB,CAAE,EAC9D,OAAOuB,EAAW,CAAC,EAAEG,CAAQ,CAC7B,CACF,CAEA,SAASC,GAAiBJ,EAAYC,EAAKC,EAASzB,EAAI,CACvD,OAAOuB,EAAW,CAAC,GAAKvB,EAAKP,GAAOgC,EAAQ,IAAI,MAAK,EAAIF,EAAW,CAAC,EAAEvB,EAAGwB,CAAG,CAAC,CAAC,EAAIC,EAAQ,GAC5F,CAEO,SAASG,GAAiBL,EAAYE,EAASI,EAAO7B,EAAI,CAChE,GAAIuB,EAAW,CAAC,GAAKvB,EAAI,CACxB,MAAM8B,EAAOP,EAAW,CAAC,EAAEvB,EAAG6B,CAAK,CAAC,EACpC,GAAIJ,EAAQ,QAAU,OACrB,OAAOK,EAER,GAAI,OAAOA,GAAS,SAAU,CAC7B,MAAMC,EAAS,CAAA,EACTC,EAAM,KAAK,IAAIP,EAAQ,MAAM,OAAQK,EAAK,MAAM,EACtD,QAASG,EAAI,EAAGA,EAAID,EAAKC,GAAK,EAC7BF,EAAOE,CAAC,EAAIR,EAAQ,MAAMQ,CAAC,EAAIH,EAAKG,CAAC,EAEtC,OAAOF,CACP,CACD,OAAON,EAAQ,MAAQK,CACvB,CACD,OAAOL,EAAQ,KAChB,CAGO,SAASS,GACfC,EACAC,EACAZ,EACAC,EACAY,EACAC,EACC,CACD,GAAID,EAAc,CACjB,MAAME,EAAeZ,GAAiBS,EAAiBZ,EAAKC,EAASa,CAAmB,EACxFH,EAAK,EAAEI,EAAcF,CAAY,CACjC,CACF,CAiBO,SAASG,GAAyBf,EAAS,CACjD,GAAIA,EAAQ,IAAI,OAAS,GAAI,CAC5B,MAAMI,EAAQ,CAAA,EACRY,EAAShB,EAAQ,IAAI,OAAS,GACpC,QAASQ,EAAI,EAAGA,EAAIQ,EAAQR,IAC3BJ,EAAMI,CAAC,EAAI,GAEZ,OAAOJ,CACP,CACD,MAAO,EACR,CCzFO,SAASa,EAAOC,EAAQC,EAAM,CACpCD,EAAO,YAAYC,CAAI,CACxB,CA8FO,SAASC,EAAOF,EAAQC,EAAME,EAAQ,CAC5CH,EAAO,aAAaC,EAAME,GAAU,IAAI,CACzC,CAoBO,SAASC,EAAOH,EAAM,CACxBA,EAAK,YACRA,EAAK,WAAW,YAAYA,CAAI,CAElC,CAIO,SAASI,GAAaC,EAAYC,EAAW,CACnD,QAASjB,EAAI,EAAGA,EAAIgB,EAAW,OAAQhB,GAAK,EACvCgB,EAAWhB,CAAC,GAAGgB,EAAWhB,CAAC,EAAE,EAAEiB,CAAS,CAE9C,CAOO,SAASC,EAAQC,EAAM,CAC7B,OAAO,SAAS,cAAcA,CAAI,CACnC,CAuCO,SAASC,GAAYD,EAAM,CACjC,OAAO,SAAS,gBAAgB,6BAA8BA,CAAI,CACnE,CAMO,SAASE,GAAKC,EAAM,CAC1B,OAAO,SAAS,eAAeA,CAAI,CACpC,CAIO,SAASC,GAAQ,CACvB,OAAOF,GAAK,GAAG,CAChB,CAIO,SAASG,IAAQ,CACvB,OAAOH,GAAK,EAAE,CACf,CAiBO,SAASI,GAAOd,EAAMe,EAAOC,EAASC,EAAS,CACrD,OAAAjB,EAAK,iBAAiBe,EAAOC,EAASC,CAAO,EACtC,IAAMjB,EAAK,oBAAoBe,EAAOC,EAASC,CAAO,CAC9D,CAIO,SAASC,GAAgB9D,EAAI,CACnC,OAAO,SAAU2D,EAAO,CACvB,OAAAA,EAAM,eAAc,EAEb3D,EAAG,KAAK,KAAM2D,CAAK,CAC5B,CACA,CA8CO,SAASI,EAAKnB,EAAMoB,EAAWlE,EAAO,CACxCA,GAAS,KAAM8C,EAAK,gBAAgBoB,CAAS,EACxCpB,EAAK,aAAaoB,CAAS,IAAMlE,GAAO8C,EAAK,aAAaoB,EAAWlE,CAAK,CACpF,CAgMO,SAASmE,GAASd,EAAS,CACjC,OAAO,MAAM,KAAKA,EAAQ,UAAU,CACrC,CAiNO,SAASe,GAASZ,EAAMC,EAAM,CACpCA,EAAO,GAAKA,EACRD,EAAK,OAASC,IAClBD,EAAK,KAA8BC,EACpC,CA6BO,SAASY,GAAgBC,EAAOtE,EAAO,CAC7CsE,EAAM,MAAQtE,GAAgB,EAC/B,CAcO,SAASuE,GAAUzB,EAAM0B,EAAKxE,EAAOyE,EAAW,CAClDzE,GAAS,KACZ8C,EAAK,MAAM,eAAe0B,CAAG,EAE7B1B,EAAK,MAAM,YAAY0B,EAAKxE,EAAOyE,EAAY,YAAc,EAAE,CAEjE,CA0HO,SAASC,GAAarB,EAASC,EAAMqB,EAAQ,CAEnDtB,EAAQ,UAAU,OAAOC,EAAM,CAAC,CAACqB,CAAM,CACxC,CASO,SAASC,GAAaC,EAAMC,EAAQ,CAAE,QAAAC,EAAU,GAAO,WAAAC,EAAa,EAAO,EAAG,GAAI,CACxF,OAAO,IAAI,YAAYH,EAAM,CAAE,OAAAC,EAAQ,QAAAC,EAAS,WAAAC,CAAU,CAAE,CAC7D,CAoCO,MAAMC,EAAQ,CAcpB,YAAYC,EAAS,GAAO,CAT5BC,GAAA,cAAS,IAETA,GAAA,UAEAA,GAAA,UAEAA,GAAA,UAEAA,GAAA,UAEC,KAAK,OAASD,EACd,KAAK,EAAI,KAAK,EAAI,IAClB,CAMD,EAAEE,EAAM,CACP,KAAK,EAAEA,CAAI,CACX,CAQD,EAAEA,EAAMvC,EAAQG,EAAS,KAAM,CACzB,KAAK,IACL,KAAK,OACR,KAAK,EAAIO,GAAuDV,EAAO,QAAQ,EAE/E,KAAK,EAAIQ,EAEPR,EAAO,WAAa,GAAK,WAAaA,EAAO,QAEnD,EACG,KAAK,EACJA,EAAO,UAAY,WAChBA,EACoCA,EAAQ,QAChD,KAAK,EAAEuC,CAAI,GAEZ,KAAK,EAAEpC,CAAM,CACb,CAMD,EAAEoC,EAAM,CACP,KAAK,EAAE,UAAYA,EACnB,KAAK,EAAI,MAAM,KACd,KAAK,EAAE,WAAa,WAAa,KAAK,EAAE,QAAQ,WAAa,KAAK,EAAE,UACvE,CACE,CAID,EAAEpC,EAAQ,CACT,QAASb,EAAI,EAAGA,EAAI,KAAK,EAAE,OAAQA,GAAK,EACvCY,EAAO,KAAK,EAAG,KAAK,EAAEZ,CAAC,EAAGa,CAAM,CAEjC,CAMD,EAAEoC,EAAM,CACP,KAAK,EAAC,EACN,KAAK,EAAEA,CAAI,EACX,KAAK,EAAE,KAAK,CAAC,CACb,CAID,GAAI,CACH,KAAK,EAAE,QAAQnC,CAAM,CACrB,CACF,CAyFO,SAASoC,GAA2B9D,EAAW+D,EAAO,CAC5D,OAAO,IAAI/D,EAAU+D,CAAK,CAC3B,CC1sCO,IAAIC,GAGJ,SAASC,GAAsBjE,EAAW,CAChDgE,GAAoBhE,CACrB,CAEO,SAASkE,IAAwB,CACvC,GAAI,CAACF,GAAmB,MAAM,IAAI,MAAM,kDAAkD,EAC1F,OAAOA,EACR,CA6BO,SAASG,GAAQxF,EAAI,CAC3BuF,GAAuB,EAAC,GAAG,SAAS,KAAKvF,CAAE,CAC5C,CAyBO,SAASyF,GAAUzF,EAAI,CAC7BuF,GAAuB,EAAC,GAAG,WAAW,KAAKvF,CAAE,CAC9C,CAyBO,SAAS0F,IAAwB,CACvC,MAAMrE,EAAYkE,KAClB,MAAO,CAACZ,EAAMC,EAAQ,CAAE,WAAAE,EAAa,EAAO,EAAG,KAAO,CACrD,MAAM7D,EAAYI,EAAU,GAAG,UAAUsD,CAAI,EAC7C,GAAI1D,EAAW,CAGd,MAAM0C,EAAQe,GAAoCC,EAAOC,EAAQ,CAAE,WAAAE,CAAU,CAAE,EAC/E,OAAA7D,EAAU,MAAK,EAAG,QAASjB,GAAO,CACjCA,EAAG,KAAKqB,EAAWsC,CAAK,CAC5B,CAAI,EACM,CAACA,EAAM,gBACd,CACD,MAAO,EACT,CACA,CAeO,SAASgC,GAAWrB,EAAKsB,EAAS,CACxC,OAAAL,GAAqB,EAAG,GAAG,QAAQ,IAAIjB,EAAKsB,CAAO,EAC5CA,CACR,CAWO,SAASC,GAAWvB,EAAK,CAC/B,OAAOiB,GAAuB,EAAC,GAAG,QAAQ,IAAIjB,CAAG,CAClD,CAmCO,SAASwB,GAAOzE,EAAWsC,EAAO,CACxC,MAAM1C,EAAYI,EAAU,GAAG,UAAUsC,EAAM,IAAI,EAC/C1C,GAEHA,EAAU,QAAQ,QAASjB,GAAOA,EAAG,KAAK,KAAM2D,CAAK,CAAC,CAExD,CCnLO,MAAMoC,GAAmB,CAAA,EAEnBC,GAAoB,CAAA,EAEjC,IAAIC,GAAmB,CAAA,EAEvB,MAAMC,GAAkB,CAAA,EAElBC,GAAmC,QAAQ,UAEjD,IAAIC,GAAmB,GAGhB,SAASC,IAAkB,CAC5BD,KACJA,GAAmB,GACnBD,GAAiB,KAAKG,EAAK,EAE7B,CASO,SAASC,GAAoBvG,EAAI,CACvCiG,GAAiB,KAAKjG,CAAE,CACzB,CAGO,SAASwG,GAAmBxG,EAAI,CACtCkG,GAAgB,KAAKlG,CAAE,CACxB,CAoBA,MAAMyG,GAAiB,IAAI,IAE3B,IAAIC,GAAW,EAGR,SAASJ,IAAQ,CAIvB,GAAII,KAAa,EAChB,OAED,MAAMC,EAAkBtB,GACxB,EAAG,CAGF,GAAI,CACH,KAAOqB,GAAWX,GAAiB,QAAQ,CAC1C,MAAM1E,EAAY0E,GAAiBW,EAAQ,EAC3CA,KACApB,GAAsBjE,CAAS,EAC/BuF,GAAOvF,EAAU,EAAE,CACnB,CACD,OAAQ,EAAG,CAEX,MAAA0E,GAAiB,OAAS,EAC1BW,GAAW,EACL,CACN,CAID,IAHApB,GAAsB,IAAI,EAC1BS,GAAiB,OAAS,EAC1BW,GAAW,EACJV,GAAkB,QAAQA,GAAkB,IAAK,EAAA,EAIxD,QAAS/D,EAAI,EAAGA,EAAIgE,GAAiB,OAAQhE,GAAK,EAAG,CACpD,MAAMf,EAAW+E,GAAiBhE,CAAC,EAC9BwE,GAAe,IAAIvF,CAAQ,IAE/BuF,GAAe,IAAIvF,CAAQ,EAC3BA,IAED,CACD+E,GAAiB,OAAS,CAC5B,OAAUF,GAAiB,QAC1B,KAAOG,GAAgB,QACtBA,GAAgB,IAAG,IAEpBE,GAAmB,GACnBK,GAAe,MAAK,EACpBnB,GAAsBqB,CAAe,CACtC,CAGA,SAASC,GAAOC,EAAI,CACnB,GAAIA,EAAG,WAAa,KAAM,CACzBA,EAAG,OAAM,EACT3G,GAAQ2G,EAAG,aAAa,EACxB,MAAMhF,EAAQgF,EAAG,MACjBA,EAAG,MAAQ,CAAC,EAAE,EACdA,EAAG,UAAYA,EAAG,SAAS,EAAEA,EAAG,IAAKhF,CAAK,EAC1CgF,EAAG,aAAa,QAAQN,EAAmB,CAC3C,CACF,CAOO,SAASO,GAAuB3G,EAAK,CAC3C,MAAM4G,EAAW,CAAA,EACXC,EAAU,CAAA,EAChBf,GAAiB,QAASgB,GAAO9G,EAAI,QAAQ8G,CAAC,IAAM,GAAKF,EAAS,KAAKE,CAAC,EAAID,EAAQ,KAAKC,CAAC,CAAE,EAC5FD,EAAQ,QAASC,GAAMA,EAAG,CAAA,EAC1BhB,GAAmBc,CACpB,CCnGA,MAAMG,GAAW,IAAI,IAKrB,IAAIC,GAIG,SAASC,IAAe,CAC9BD,GAAS,CACR,EAAG,EACH,EAAG,CAAE,EACL,EAAGA,EACL,CACA,CAIO,SAASE,IAAe,CACzBF,GAAO,GACXjH,GAAQiH,GAAO,CAAC,EAEjBA,GAASA,GAAO,CACjB,CAOO,SAASG,EAAcC,EAAOC,EAAO,CACvCD,GAASA,EAAM,IAClBL,GAAS,OAAOK,CAAK,EACrBA,EAAM,EAAEC,CAAK,EAEf,CASO,SAASC,EAAeF,EAAOC,EAAOzE,EAAQ7B,EAAU,CAC9D,GAAIqG,GAASA,EAAM,EAAG,CACrB,GAAIL,GAAS,IAAIK,CAAK,EAAG,OACzBL,GAAS,IAAIK,CAAK,EAClBJ,GAAO,EAAE,KAAK,IAAM,CACnBD,GAAS,OAAOK,CAAK,EACjBrG,IACC6B,GAAQwE,EAAM,EAAE,CAAC,EACrBrG,IAEJ,CAAG,EACDqG,EAAM,EAAEC,CAAK,CACb,MAAUtG,GACVA,GAEF,CCpFO,SAASwG,GAAeC,EAASC,EAAM,CAC7C,MAAMC,EAASD,EAAK,MAAQ,CAAE,EAQ9B,SAAShB,EAAOjC,EAAMmD,EAAOxD,EAAKxE,EAAO,CACxC,GAAI8H,EAAK,QAAUC,EAAO,OAC1BD,EAAK,SAAW9H,EAChB,IAAIiI,EAAYH,EAAK,IACjBtD,IAAQ,SACXyD,EAAYA,EAAU,QACtBA,EAAUzD,CAAG,EAAIxE,GAElB,MAAMyH,EAAQ5C,IAASiD,EAAK,QAAUjD,GAAMoD,CAAS,EACrD,IAAIC,EAAc,GACdJ,EAAK,QACJA,EAAK,OACRA,EAAK,OAAO,QAAQ,CAACL,EAAOtF,IAAM,CAC7BA,IAAM6F,GAASP,IAClBH,KACAK,EAAeF,EAAO,EAAG,EAAG,IAAM,CAC7BK,EAAK,OAAO3F,CAAC,IAAMsF,IACtBK,EAAK,OAAO3F,CAAC,EAAI,KAEzB,CAAO,EACDoF,KAEN,CAAK,EAEDO,EAAK,MAAM,EAAE,CAAC,EAEfL,EAAM,EAAC,EACPD,EAAcC,EAAO,CAAC,EACtBA,EAAM,EAAEK,EAAK,MAAK,EAAIA,EAAK,MAAM,EACjCI,EAAc,IAEfJ,EAAK,MAAQL,EACTK,EAAK,SAAQA,EAAK,OAAOE,CAAK,EAAIP,GAClCS,GACH1B,IAED,CACD,GAAIzG,GAAW8H,CAAO,EAAG,CACxB,MAAMtC,EAAoBE,KAiB1B,GAhBAoC,EAAQ,KACN7H,GAAU,CACVwF,GAAsBD,CAAiB,EACvCuB,EAAOgB,EAAK,KAAM,EAAGA,EAAK,MAAO9H,CAAK,EACtCwF,GAAsB,IAAI,CAC1B,EACA2C,GAAU,CAIV,GAHA3C,GAAsBD,CAAiB,EACvCuB,EAAOgB,EAAK,MAAO,EAAGA,EAAK,MAAOK,CAAK,EACvC3C,GAAsB,IAAI,EACtB,CAACsC,EAAK,SACT,MAAMK,CAEP,CACJ,EAEML,EAAK,UAAYA,EAAK,QACzB,OAAAhB,EAAOgB,EAAK,QAAS,CAAC,EACf,EAEV,KAAQ,CACN,GAAIA,EAAK,UAAYA,EAAK,KACzB,OAAAhB,EAAOgB,EAAK,KAAM,EAAGA,EAAK,MAAOD,CAAO,EACjC,GAERC,EAAK,SAA6BD,CAClC,CACF,CAGO,SAASO,GAA0BN,EAAMpG,EAAKK,EAAO,CAC3D,MAAMkG,EAAYvG,EAAI,QAChB,CAAE,SAAA2G,CAAU,EAAGP,EACjBA,EAAK,UAAYA,EAAK,OACzBG,EAAUH,EAAK,KAAK,EAAIO,GAErBP,EAAK,UAAYA,EAAK,QACzBG,EAAUH,EAAK,KAAK,EAAIO,GAEzBP,EAAK,MAAM,EAAEG,EAAWlG,CAAK,CAC9B,CC9FO,SAASuG,GAAkBC,EAAwB,CACzD,OAAOA,GAAA,YAAAA,EAAwB,UAAW,OACvCA,EACA,MAAM,KAAKA,CAAsB,CACrC,CAKO,SAASC,GAAcf,EAAOgB,EAAQ,CAC5ChB,EAAM,EAAE,CAAC,EACTgB,EAAO,OAAOhB,EAAM,GAAG,CACxB,CAsBO,SAASiB,GACfC,EACA5G,EACA6G,EACAC,EACAnH,EACAoH,EACAL,EACA3F,EACAiG,EACAC,EACAC,EACAC,EACC,CACD,IAAIC,EAAIR,EAAW,OACfS,EAAIN,EAAK,OACT3G,EAAIgH,EACR,MAAME,EAAc,CAAA,EACpB,KAAOlH,KAAKkH,EAAYV,EAAWxG,CAAC,EAAE,GAAG,EAAIA,EAC7C,MAAMmH,EAAa,CAAA,EACbC,EAAa,IAAI,IACjBC,EAAS,IAAI,IACbC,EAAU,CAAA,EAEhB,IADAtH,EAAIiH,EACGjH,KAAK,CACX,MAAM8F,EAAYiB,EAAYxH,EAAKoH,EAAM3G,CAAC,EACpCqC,EAAMoE,EAAQX,CAAS,EAC7B,IAAIR,EAAQgB,EAAO,IAAIjE,CAAG,EACrBiD,EAGMoB,GAEVY,EAAQ,KAAK,IAAMhC,EAAM,EAAEQ,EAAWlG,CAAK,CAAC,GAJ5C0F,EAAQuB,EAAkBxE,EAAKyD,CAAS,EACxCR,EAAM,EAAC,GAKR8B,EAAW,IAAI/E,EAAM8E,EAAWnH,CAAC,EAAIsF,GACjCjD,KAAO6E,GAAaG,EAAO,IAAIhF,EAAK,KAAK,IAAIrC,EAAIkH,EAAY7E,CAAG,CAAC,CAAC,CACtE,CACD,MAAMkF,EAAY,IAAI,IAChBC,EAAW,IAAI,IAErB,SAAS5G,EAAO0E,EAAO,CACtBD,EAAcC,EAAO,CAAC,EACtBA,EAAM,EAAE3E,EAAMmG,CAAI,EAClBR,EAAO,IAAIhB,EAAM,IAAKA,CAAK,EAC3BwB,EAAOxB,EAAM,MACb2B,GACA,CACD,KAAOD,GAAKC,GAAG,CACd,MAAMQ,EAAYN,EAAWF,EAAI,CAAC,EAC5BS,EAAYlB,EAAWQ,EAAI,CAAC,EAC5BW,EAAUF,EAAU,IACpBG,EAAUF,EAAU,IACtBD,IAAcC,GAEjBZ,EAAOW,EAAU,MACjBT,IACAC,KACWG,EAAW,IAAIQ,CAAO,EAIvB,CAACtB,EAAO,IAAIqB,CAAO,GAAKJ,EAAU,IAAII,CAAO,EACvD/G,EAAO6G,CAAS,EACND,EAAS,IAAII,CAAO,EAC9BZ,IACUK,EAAO,IAAIM,CAAO,EAAIN,EAAO,IAAIO,CAAO,GAClDJ,EAAS,IAAIG,CAAO,EACpB/G,EAAO6G,CAAS,IAEhBF,EAAU,IAAIK,CAAO,EACrBZ,MAXAJ,EAAQc,EAAWpB,CAAM,EACzBU,IAYD,CACD,KAAOA,KAAK,CACX,MAAMU,EAAYlB,EAAWQ,CAAC,EACzBI,EAAW,IAAIM,EAAU,GAAG,GAAGd,EAAQc,EAAWpB,CAAM,CAC7D,CACD,KAAOW,GAAGrG,EAAOuG,EAAWF,EAAI,CAAC,CAAC,EAClC,OAAAhJ,GAAQqJ,CAAO,EACRH,CACR,CClGO,SAASU,GAAKzI,EAAW+B,EAAMlC,EAAU,CAC/C,MAAM4G,EAAQzG,EAAU,GAAG,MAAM+B,CAAI,EACjC0E,IAAU,SACbzG,EAAU,GAAG,MAAMyG,CAAK,EAAI5G,EAC5BA,EAASG,EAAU,GAAG,IAAIyG,CAAK,CAAC,EAElC,CAGO,SAASiC,EAAiBxC,EAAO,CACvCA,GAASA,EAAM,GAChB,CAQO,SAASyC,EAAgB3I,EAAWsB,EAAQG,EAAQ,CAC1D,KAAM,CAAE,SAAAmH,EAAU,aAAAC,GAAiB7I,EAAU,GAC7C4I,GAAYA,EAAS,EAAEtH,EAAQG,CAAM,EAErCyD,GAAoB,IAAM,CACzB,MAAM4D,EAAiB9I,EAAU,GAAG,SAAS,IAAItB,EAAG,EAAE,OAAOK,EAAW,EAIpEiB,EAAU,GAAG,WAChBA,EAAU,GAAG,WAAW,KAAK,GAAG8I,CAAc,EAI9CjK,GAAQiK,CAAc,EAEvB9I,EAAU,GAAG,SAAW,EAC1B,CAAE,EACD6I,EAAa,QAAQ3D,EAAmB,CACzC,CAGO,SAAS6D,EAAkB/I,EAAW6B,EAAW,CACvD,MAAM2D,EAAKxF,EAAU,GACjBwF,EAAG,WAAa,OACnBC,GAAuBD,EAAG,YAAY,EACtC3G,GAAQ2G,EAAG,UAAU,EACrBA,EAAG,UAAYA,EAAG,SAAS,EAAE3D,CAAS,EAGtC2D,EAAG,WAAaA,EAAG,SAAW,KAC9BA,EAAG,IAAM,GAEX,CAGA,SAASwD,GAAWhJ,EAAWY,EAAG,CAC7BZ,EAAU,GAAG,MAAM,CAAC,IAAM,KAC7B0E,GAAiB,KAAK1E,CAAS,EAC/BgF,KACAhF,EAAU,GAAG,MAAM,KAAK,CAAC,GAE1BA,EAAU,GAAG,MAAOY,EAAI,GAAM,CAAC,GAAK,GAAKA,EAAI,EAC9C,CAaO,SAASqI,GACfjJ,EACAwC,EACA0G,EACAC,EACAC,EACArF,EACAsF,EAAgB,KAChB7I,EAAQ,CAAC,EAAE,EACV,CACD,MAAM8I,EAAmBtF,GACzBC,GAAsBjE,CAAS,EAE/B,MAAMwF,EAAMxF,EAAU,GAAK,CAC1B,SAAU,KACV,IAAK,CAAE,EAEP,MAAA+D,EACA,OAAQ5F,GACR,UAAAiL,EACA,MAAOxK,GAAc,EAErB,SAAU,CAAE,EACZ,WAAY,CAAE,EACd,cAAe,CAAE,EACjB,cAAe,CAAE,EACjB,aAAc,CAAE,EAChB,QAAS,IAAI,IAAI4D,EAAQ,UAAY8G,EAAmBA,EAAiB,GAAG,QAAU,CAAA,EAAG,EAEzF,UAAW1K,GAAc,EACzB,MAAA4B,EACA,WAAY,GACZ,KAAMgC,EAAQ,QAAU8G,EAAiB,GAAG,IAC9C,EACCD,GAAiBA,EAAc7D,EAAG,IAAI,EACtC,IAAI+D,EAAQ,GAgBZ,GAfA/D,EAAG,IAAM0D,EACNA,EAASlJ,EAAWwC,EAAQ,OAAS,CAAE,EAAE,CAAC5B,EAAG4I,KAAQC,IAAS,CAC9D,MAAMhL,EAAQgL,EAAK,OAASA,EAAK,CAAC,EAAID,EACtC,OAAIhE,EAAG,KAAO4D,EAAU5D,EAAG,IAAI5E,CAAC,EAAI4E,EAAG,IAAI5E,CAAC,EAAInC,CAAK,IAChD,CAAC+G,EAAG,YAAcA,EAAG,MAAM5E,CAAC,GAAG4E,EAAG,MAAM5E,CAAC,EAAEnC,CAAK,EAChD8K,GAAOP,GAAWhJ,EAAWY,CAAC,GAE5B4I,CACX,CAAK,EACD,GACHhE,EAAG,OAAM,EACT+D,EAAQ,GACR1K,GAAQ2G,EAAG,aAAa,EAExBA,EAAG,SAAW2D,EAAkBA,EAAgB3D,EAAG,GAAG,EAAI,GACtDhD,EAAQ,OAAQ,CACnB,GAAIA,EAAQ,QAAS,CAIpB,MAAMkH,EAAQ9G,GAASJ,EAAQ,MAAM,EACrCgD,EAAG,UAAYA,EAAG,SAAS,EAAEkE,CAAK,EAClCA,EAAM,QAAQhI,CAAM,CACvB,MAEG8D,EAAG,UAAYA,EAAG,SAAS,EAAC,EAEzBhD,EAAQ,OAAOyD,EAAcjG,EAAU,GAAG,QAAQ,EACtD2I,EAAgB3I,EAAWwC,EAAQ,OAAQA,EAAQ,MAAM,EAEzDyC,IACA,CACDhB,GAAsBqF,CAAgB,CACvC,CAmSO,MAAMK,EAAgB,CAAtB,cAQN/F,GAAA,WAQAA,GAAA,cAGA,UAAW,CACVmF,EAAkB,KAAM,CAAC,EACzB,KAAK,SAAW5K,EAChB,CAQD,IAAImF,EAAMzD,EAAU,CACnB,GAAI,CAACd,GAAYc,CAAQ,EACxB,OAAO1B,GAER,MAAMyB,EAAY,KAAK,GAAG,UAAU0D,CAAI,IAAM,KAAK,GAAG,UAAUA,CAAI,EAAI,CAAE,GAC1E,OAAA1D,EAAU,KAAKC,CAAQ,EAChB,IAAM,CACZ,MAAM4G,EAAQ7G,EAAU,QAAQC,CAAQ,EACpC4G,IAAU,IAAI7G,EAAU,OAAO6G,EAAO,CAAC,CAC9C,CACE,CAMD,KAAK1C,EAAO,CACP,KAAK,OAAS,CAACvE,GAASuE,CAAK,IAChC,KAAK,GAAG,WAAa,GACrB,KAAK,MAAMA,CAAK,EAChB,KAAK,GAAG,WAAa,GAEtB,CACF,CCrfO,MAAM6F,GAAiB,ICP1B,OAAO,OAAW,MAEpB,OAAO,WAAa,OAAO,SAAW,CAAE,EAAG,IAAI,GAAK,IAAK,EAAE,IAAIA,EAAc,+PC6B5CpI,EAA8BF,EAAAuI,EAAApI,CAAA,yCAM8BqI,EAAA3J,MAAU,KAAI,iMAD/DgD,GAAA4G,EAAA,WAAA5J,OAAsBA,EAAC,EAAA,CAAA,UAA5DqB,EAEKF,EAAAyI,EAAAtI,CAAA,EADFJ,EAA2G0I,EAAAC,CAAA,4EAAxBxJ,EAAA,IAAAsJ,KAAAA,EAAA3J,MAAU,KAAI,KAAA0C,GAAAoH,EAAAH,CAAA,QAD/D3G,GAAA4G,EAAA,WAAA5J,OAAsBA,EAAC,EAAA,CAAA,wDAUvC,IAAA+J,EAAA/J,MAAU,kKADfgD,GAAAgH,EAAA,SAAAhK,OAAsBA,EAAC,EAAA,CAAA,UAA1CqB,EAEMF,EAAA6I,EAAA1I,CAAA,qCADkB,GAAAjB,EAAA,IAAA0J,KAAAA,EAAA/J,MAAU,WAAS,iMADxBgD,GAAAgH,EAAA,SAAAhK,OAAsBA,EAAC,EAAA,CAAA,2YAa7CqB,EAMMF,EAAA8I,EAAA3I,CAAA,EALHJ,EAIM+I,EAAAC,CAAA,EAHHhJ,EAAiEgJ,EAAAL,CAAA,gDAArB7J,EAAS,CAAA,CAAA,yOA7BlCA,EAAM,CAAA,GAAAmK,GAAA,OAIlBnK,EAAU,CAAA,CAAA,uBAAf,OAAIS,GAAA,8BASFT,EAAU,CAAA,CAAA,uBAAf,OAAIS,GAAA,qGAaJT,EAAW,CAAA,GAAAoK,GAAApK,CAAA,iFA1BLA,EAAQ,CAAA,CAAA,+BACTA,EAAS,CAAA,CAAA,iPAFUA,EAAa,CAAA,CAAA,kWAJ7CqB,EAwCMF,EAAA8I,EAAA3I,CAAA,EAtCHJ,EAaS+I,EAAAI,CAAA,EAZNnJ,EAIMmJ,EAAAH,CAAA,EAHHhJ,EAAuDgJ,EAAAI,CAAA,SACvDpJ,EAAkEgJ,EAAAK,CAAA,+BAClErJ,EAAkBgJ,EAAAM,CAAA,gBAErBtJ,EAMKmJ,EAAAI,CAAA,0DAGRvJ,EAMO+I,EAAAS,CAAA,0DAEPxJ,EAIS+I,EAAAU,CAAA,EAHNzJ,EAAmFyJ,EAAAd,CAAA,yEAA7C7J,EAAQ,CAAA,CAAA,iBAAcA,EAAQ,CAAA,CAAA,2CAtB1CA,EAAa,CAAA,CAAA,kBAC/BA,EAAQ,CAAA,CAAA,EAAMA,EAAM,CAAA,mEACrBA,EAAS,CAAA,CAAA,eAGNA,EAAU,CAAA,CAAA,oBAAf,OAAIS,GAAA,EAAA,mHAAJ,qBASET,EAAU,CAAA,CAAA,oBAAf,OAAIS,GAAA,EAAA,4GAAJ,OAAIA,EAAAmK,EAAA,OAAAnK,GAAA,qFAaJT,EAAW,CAAA,kIAbX,OAAIS,GAAA,wOAzCE,KAAAoK,CAAI,EAAAC,GACJ,SAAAC,CAAQ,EAAAD,GACR,cAAAE,CAAa,EAAAF,GACb,UAAAG,CAAS,EAAAH,GACT,WAAAI,EAAU,EAAA,EAAAJ,EACV,CAAA,OAAAK,EAAS,EAAK,EAAAL,EAErBM,EAAoB,EAEpBC,EAAc,YACTC,GAAQ,CACdC,EAAA,EAAAF,EAAc,EAAI,WAGZG,GAAS,CACfD,EAAA,EAAAF,EAAc,EAAK,EAGb,SAAAI,EAAgBC,EAAE,CACxBH,EAAA,EAAAH,EAAoBM,CAAE,EAeQ,MAAAC,EAAAlL,GAAAgL,EAAgBhL,CAAC,EAAqBmL,EAAAnL,GAAAgL,EAAgBhL,CAAC,kbC9BpF,SAASoL,GAAgBC,EAAKC,EAASnK,EAAMoK,EAAUC,EAAO,EAE9D,CAACD,GAAY,CAAC,MAAM,QAAQA,CAAQ,KACrCA,EAAW,CAAA,GAId,MAAME,EAAOH,EAAQ,OAAO,MACtBI,EAAQJ,EAAQ,OAAO,MACvBK,EAAOJ,EAAS,OAChBtE,EAAIwE,EAAOE,EACXC,EAAQP,EAAI,MACZQ,EAAQ,EAGRC,EAAU,KAAK,IAAIF,EAAOC,CAAK,EAC/BE,EAAS,MAAMD,CAAO,EAAE,KAAK,EAAE,EAC/BE,EAAaJ,EAAQE,EAAU,MAAMA,EAAUF,CAAK,EAAE,KAAK,EAAE,EAAI,GAGjEK,EAAY,MAAML,CAAK,EAAE,KAAK,CAAC,EAAE,IAAI,CAACM,EAAGlM,IAAM,MAAQA,EAAI,EAAE,EAC7DmM,EAAMb,EAAQ,IAGpB,SAASc,EAASjL,EAAMkL,EAAQC,EAAW,CACxCC,GAAO;AAAA,EACPA,GAAO,CAACpL,EAAO,KAAM,GAAI,GAAG4K,CAAM,EAAE,KAAKI,CAAG,EAAI;AAAA,EAChDI,GAAO,CAAC,SAAU,QAAS,UAAW,GAAGN,EAAW,GAAGD,CAAU,EAAE,KAAKG,CAAG,EAAI;AAAA,EAC/E,MAAMK,EAASnB,EAAI,EAAE,SAASgB,EAAQA,EAAST,EAAQ3E,CAAC,EAExD,QAASjH,EAAI,EAAGA,EAAIyL,EAAMzL,IAAK,CAC5B,MAAMyM,EAAYnB,EAAQ,QAAUA,EAAQ,QAAQtL,CAAC,EAAI,IAGzD,GAAI2L,EAAO,GAAKJ,EAAS,SAASvL,CAAC,EAAG,CACnCuM,GAAO,CAACD,EAAUtM,CAAC,EAAGyM,EAAW,MAAO,GAAG,MAAMb,CAAK,EAAE,KAAK,GAAG,EAAG,GAAGI,CAAU,EAAE,KAAKG,CAAG,EAAI;AAAA,EAC9F,QACF,CAGD,MAAMO,EAAU,MAAMd,CAAK,EAC3B,QAAStN,EAAI,EAAGA,EAAIsN,EAAOtN,IACxBoO,EAAQpO,CAAC,EAAIkO,EAAOlO,EAAIsN,EAAQ5L,CAAC,EAEpCuM,GAAO,CAACD,EAAUtM,CAAC,EAAGyM,EAAW,GAAI,GAAGC,EAASV,CAAU,EAAE,KAAKG,CAAG,EAAI;AAAA,CAE3E,CACDI,GAAO;AAAA,CACT,CAID,IAAIA,EAAM,GAQV,GAPAA,GAAO,CAAC,wBAAyBX,EAAO,GAAGG,CAAM,EAAE,KAAKI,CAAG,EAAI;AAAA,EAC/DI,GAAO,CAAC,WAAYlB,EAAI,OAAQ,GAAGU,CAAM,EAAE,KAAKI,CAAG,EAAI;AAAA,EACvDI,GAAO,CAAC,UAAWlB,EAAI,MAAO,GAAGU,CAAM,EAAE,KAAKI,CAAG,EAAI;AAAA,EAGrDI,GAAO;AAAA,EACPA,GAAO,CAAC,eAAgB,GAAI,GAAGR,CAAM,EAAE,KAAKI,CAAG,EAAI;AAAA,EAC/CX,EAAO,CAGR,MAAMmB,EAAad,EAAQC,EAAU,MAAMA,EAAUD,EAAQ,CAAC,EAAE,KAAK,EAAE,EAAI,CAAA,EAC3EU,GAAO,CAAC,GAAI,KAAM,SAAU,YAAa,SAAU,YAAa,cAAe,GAAGI,CAAU,EAAE,KAAKrB,EAAQ,GAAG,EAAI;AAAA,EAClH,QAAShN,EAAI,EAAGA,EAAIsN,EAAOtN,IACxBiO,GAAO,CACJ,GACAjO,EAAI,EACJ+M,EAAI,KAAK,OAAO/M,CAAC,EACjB+M,EAAI,KAAK,UAAU/M,CAAC,EACpB+M,EAAI,KAAK,OAAO/M,CAAC,EACjB+M,EAAI,KAAK,UAAU/M,CAAC,EACpB+M,EAAI,UAAU/M,CAAC,EACf,GAAGqO,CACL,EAAC,KAAKrB,EAAQ,GAAG,EAAI;AAAA,CAE/B,KAAU,CACJ,MAAMqB,EAAad,EAAQC,EAAU,MAAMA,EAAUD,CAAK,EAAE,KAAK,EAAE,EAAI,GACvEU,GAAO,CAAC,GAAI,KAAM,SAAU,YAAa,SAAU,YAAa,GAAGI,CAAU,EAAE,KAAKR,CAAG,EAAI;AAAA,EAC3F,QAAS7N,EAAI,EAAGA,EAAIsN,EAAOtN,IACxBiO,GAAO,CACJ,GACAjO,EAAI,EACJ+M,EAAI,KAAK,OAAO/M,CAAC,EACjB+M,EAAI,KAAK,UAAU/M,CAAC,EACpB+M,EAAI,KAAK,OAAO/M,CAAC,EACjB+M,EAAI,KAAK,UAAU/M,CAAC,EACpB,GAAGqO,CACf,EAAW,KAAKR,CAAG,EAAI;AAAA,CAEnB,CAID,GAHAI,GAAO;AAAA,EAGHf,EAAO,CACRe,GAAO;AAAA,EACPA,GAAO,CAAC,qCAAsC,GAAI,GAAGR,CAAM,EAAE,KAAKI,CAAG,EAAI;AAAA,EACzEI,GAAO,CAAC,WAAY,SAAU,QAAS,GAAGN,EAAW,GAAGD,CAAU,EAAE,KAAKG,CAAG,EAAI;AAAA,EAChF,MAAMS,EAASpB,EAAM,EAAE,SAAS,EAAG,EAAIE,CAAK,EACtCmB,EAAQrB,EAAM,EAAE,SAAS,EAAIE,EAAO,EAAIA,EAAQ,CAAC,EACjDoB,EAAWtB,EAAM,EAAE,SAAS,EAAIE,EAAQ,EAAGzE,EAAIyE,EAAQ,EAAIE,EAAQF,CAAK,EAE9E,QAAS1L,EAAI,EAAGA,EAAI0L,EAAO1L,IAAK,CAC7B,MAAM+M,EAAY,MAAMnB,CAAK,EAC7B,QAAStN,EAAI,EAAGA,EAAIsN,EAAOtN,IACxByO,EAAUzO,CAAC,EAAIwO,EAASxO,EAAIsN,EAAQ5L,CAAC,EAExCuM,GAAO,CAACjB,EAAQ,UAAUtL,CAAC,EAAG4M,EAAO5M,CAAC,EAAG6M,EAAM7M,CAAC,EAAG,GAAG+M,EAAWf,CAAU,EAAE,KAAKG,CAAG,EAAI;AAAA,CAE3F,CACDI,GAAO;AAAA,CACT,CAGDH,EAAS,SAAU,EAAGd,EAAQ,SAAS,EACvCc,EAAS,qBAAsBR,EAAQ3E,EAAGqE,EAAQ,SAAS,EAC3Dc,EAAS,0BAA2BR,EAAQ3E,EAAI,EAAGqE,EAAQ,SAAS,EAIhEA,EAAQ,MAAQ,MACjBiB,EAAMA,EAAI,QAAQ,MAAOjB,EAAQ,GAAG,GAIvCiB,EAAM,CAAC,iBAAkBjB,EAAQ,SAAU,GAAGS,CAAM,EAAE,KAAKT,EAAQ,GAAG,EAAI;AAAA,EAAOiB,EACjF,IAAIS,EAAM,CAAC,gBAAkB7L,EAAO,IAAK,yBAA0B,GAAG4K,CAAM,EAAE,KAAKT,EAAQ,GAAG,EAAI;AAAA;AAAA,EAGlG,MAAM2B,EAAO,IAAI,KAAK,CAACD,EAAMT,CAAG,EAAG,CAAE,KAAM,UAAU,CAAE,EACjD5N,EAAM,OAAO,IAAI,gBAAgBsO,CAAI,EACrC3O,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,aAAa,OAAQK,CAAG,EAC1BL,EAAE,aAAa,WAAY,eAAe6C,CAAI,MAAM,EACpD7C,EAAE,MAAO,CACZ,CAQO,SAAS4O,GAAc1B,EAAO,CAElC,MAAMyB,EAAO,IAAI,KAAK,CAAC,KAAK,UACzB,CACG,OAAQzB,EAAM,OACd,MAAOA,EAAM,MACb,KAAMA,EAAM,KACZ,SAAUA,EAAM,SAChB,MAAOA,EAAM,MACb,MAAOA,EAAM,MACb,MAAOA,EAAM,MACb,KAAMA,EAAM,KACZ,MAAOA,EAAM,MACb,EAAG,MAAM,KAAKA,EAAM,CAAC,EACrB,SAAUA,EAAM,SAChB,UAAWA,EAAM,UACjB,UAAWA,EAAM,UACjB,cAAeA,EAAM,cACrB,eAAgBA,EAAM,cACxB,CACH,CAAA,EAAG,CAAE,KAAM,kBAAkB,CAAE,EAC1B7M,EAAM,OAAO,IAAI,gBAAgBsO,CAAI,EACrC3O,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,aAAa,OAAQK,CAAG,EAC1BL,EAAE,aAAa,WAAY,gBAAgB,EAC3CA,EAAE,MAAO,CACZ,CCnBO,SAAS6O,GAAKC,EAAG,CAErB,GAAIC,GAASD,CAAC,EACX,OAAOD,GAAKC,EAAE,CAAC,EAGlB,MAAMb,EAAM,IAAIe,GAAO,kBAAkBF,EAAE,OAAS,CAAC,EACrD,QAASpN,EAAI,EAAGA,EAAIoN,EAAE,OAAS,EAAGpN,IAC/BuM,EAAIvM,CAAC,EAAIoN,EAAEpN,EAAI,CAAC,EAAIoN,EAAEpN,CAAC,EAG1B,OAAO,IAAIsN,GAAOf,CAAG,CACxB,CAkSO,SAASgB,GAAGH,EAAGI,EAAQ,CAE3B,OAAIH,GAASD,CAAC,EACJG,GAAGH,EAAE,EAAGI,CAAM,EAGjB,KAAK,KAAKC,GAASL,EAAGI,CAAM,CAAC,CACvC,CAYO,SAASC,GAASL,EAAGI,EAAQ,CAMjC,GAJIA,IAAW,SACZA,EAAS,IAGRH,GAASD,CAAC,EACX,OAAOK,GAASL,EAAE,CAAC,EAGtB,MAAMM,EAAIC,GAAKP,CAAC,EAChB,IAAIQ,EAAI,EACR,QAAS5N,EAAI,EAAGA,EAAIoN,EAAE,OAAQpN,IAAK,CAChC,MAAM6N,EAAKT,EAAEpN,CAAC,EAAI0N,EAClBE,EAAIA,EAAIC,EAAIA,CACd,CAED,OAAOD,GAAKJ,EAASJ,EAAE,OAAUA,EAAE,OAAS,EAC/C,CAWO,SAASO,GAAKP,EAAG,CAErB,OAAIC,GAASD,CAAC,EACJO,GAAKP,EAAE,CAAC,EAGXU,GAAIV,CAAC,EAAIA,EAAE,MACrB,CAWO,SAASU,GAAIV,EAAG,CAEpB,GAAIC,GAASD,CAAC,EACX,OAAOU,GAAIV,EAAE,CAAC,EAGjB,IAAIQ,EAAI,EACR,QAAS5N,EAAI,EAAGA,EAAIoN,EAAE,OAAQpN,IAC3B4N,EAAIA,EAAIR,EAAEpN,CAAC,EAGd,OAAO4N,CACV,CAWO,SAASG,GAAKX,EAAG,CAErB,GAAIC,GAASD,CAAC,EACX,OAAOW,GAAKX,EAAE,CAAC,EAGlB,IAAIrD,EAAI,EACR,QAAS/J,EAAI,EAAGA,EAAIoN,EAAE,OAAQpN,IAC3B+J,EAAIA,EAAIqD,EAAEpN,CAAC,EAGd,OAAO+J,CACV,CAWO,SAASiE,GAAIZ,EAAG,CAEpB,OAAIC,GAASD,CAAC,GAAKa,GAAQb,CAAC,EAClBA,EAAE,EAAEc,GAAOd,EAAE,CAAC,EAAI,CAAC,EAGtBA,EAAEc,GAAOd,CAAC,EAAI,CAAC,CACzB,CAWO,SAASc,GAAOd,EAAG,CAEvB,GAAIC,GAASD,CAAC,GAAKa,GAAQb,CAAC,EACzB,OAAOc,GAAOd,EAAE,CAAC,EAGpB,IAAIe,EAAS,EACT5B,EAAMa,EAAE,CAAC,EACb,QAASpN,EAAI,EAAGA,GAAKoN,EAAE,OAAQpN,IACxBoN,EAAEpN,EAAI,CAAC,EAAIuM,IACZ4B,EAASnO,EACTuM,EAAMa,EAAEpN,EAAI,CAAC,GAInB,OAAOmO,CACV,CAWO,SAASC,GAAIhB,EAAG,CAEpB,OAAIC,GAASD,CAAC,GAAKa,GAAQb,CAAC,EAClBA,EAAE,EAAEiB,GAAOjB,EAAE,CAAC,EAAI,CAAC,EAGtBA,EAAEiB,GAAOjB,CAAC,EAAI,CAAC,CACzB,CAWO,SAASiB,GAAOjB,EAAG,CAEvB,GAAIC,GAASD,CAAC,GAAKa,GAAQb,CAAC,EACzB,OAAOiB,GAAOjB,EAAE,CAAC,EAGpB,IAAIe,EAAS,EACT5B,EAAMa,EAAE,CAAC,EACb,QAASpN,EAAI,EAAGA,GAAKoN,EAAE,OAAQpN,IACxBoN,EAAEpN,EAAI,CAAC,EAAIuM,IACZ4B,EAASnO,EACTuM,EAAMa,EAAEpN,EAAI,CAAC,GAInB,OAAOmO,CACV,CCnoBA,MAAMG,GAAsB,GAGtBC,GAAO,KACPC,GAAO,KACPC,GAAO,MACPC,GAAO,IACPC,GAAS,IAYR,SAASC,GAAY7E,EAAG8E,EAAMb,EAAKI,EAAKU,EAAO,CAC/CV,IAAQ,SAAWA,EAAMM,IACzBV,IAAQ,SAAWA,EAAMS,IACzBK,IAAU,SAAWA,EAAQH,IAGjC,IAAII,EAAKf,EACLgB,EAAKZ,EACLa,GAAMD,EAAKD,GAAMD,EAGrB,QAAS9O,EAAI,EAAGA,EAAI8O,EAAO9O,IAAK,CAI7B,IAAIkP,EAAIC,EACR,QAASC,EAAI,EAAGA,EAAIN,EAAOM,IAAK,CAC7BF,EAAKH,EAAKK,EAAIH,EACdE,EAAKJ,GAAMK,EAAI,GAAKH,EACpB,MAAMI,EAAKR,EAAKK,CAAE,EACZI,EAAKT,EAAKM,CAAE,EAClB,GAAIE,GAAMtF,GAAKuF,GAAMvF,EAAG,KAC1B,CAGD,MAAMwF,GAAML,EAAKC,GAAM,EACjBK,EAAKX,EAAKU,CAAE,EAWlB,GARI,KAAK,IAAIC,EAAKzF,CAAC,EAAIwE,KAGvBQ,EAAKG,EACLF,EAAKG,EACLF,GAAMD,EAAKD,GAAMD,EAGbG,EAAKD,EAAKR,IAAM,OAAOe,CAC7B,CAGD,OAAQR,EAAKC,GAAM,CACtB,CAgBO,SAASS,GAAMxI,EAAG3I,EAAI,EAAGC,EAAI,EAAG,CACrC,IAAIgO,EAAMe,GAAO,MAAMrG,CAAC,EACxB,QAASjH,EAAI,EAAGA,EAAIiH,EAAGjH,IACrBuM,EAAI,EAAEvM,CAAC,EAAI1B,EAAI,KAAK,OAAQ,GAAIC,EAAID,GAEtC,OAAOiO,CACT,CAkDO,SAASmD,GAAMzI,EAAG0I,EAAK,EAAGC,EAAQ,EAAG,CAC1C,IAAIrD,EAAMe,GAAO,MAAMrG,CAAC,EACxB,QAASjH,EAAI,EAAGA,EAAIiH,EAAGjH,IAAK,CAC1B,MAAM1B,EAAI,KAAK,KAAK,GAAK,KAAK,IAAI,KAAK,OAAQ,CAAA,CAAC,EAC1CC,EAAI,EAAI,KAAK,GAAK,KAAK,SAC7BgO,EAAI,EAAEvM,CAAC,EAAI1B,EAAI,KAAK,IAAIC,CAAC,EAAIqR,EAAQD,CACtC,CAED,OAAOpD,CACT,CA+BO,SAASsD,GAAMzC,EAAGuC,EAAK,EAAGC,EAAQ,EAAG,CAC1C,GAAIvC,GAASD,CAAC,EACZ,OAAOA,EAAE,MAAOlB,GAAM2D,GAAM3D,EAAGyD,EAAIC,CAAK,CAAC,EAG3C,MAAME,EAAO,GAAK,KAAK,KAAK,CAAC,EAAIF,GACjC,MAAO,KAAO,EAAIG,IAAK3C,EAAIuC,GAAMG,CAAI,EACvC,CAYO,SAASE,GAAMjG,EAAG4F,EAAK,EAAGC,EAAQ,EAAG,CAC1C,GAAIvC,GAAStD,CAAC,EACZ,OAAOA,EAAE,MAAOmC,GAAM8D,GAAM9D,EAAGyD,EAAIC,CAAK,CAAC,EAG3C,GAAID,IAAO,GAAKC,IAAU,EACxB,OAAOI,GAAMjG,CAAC,EAAI6F,EAAQD,EAG5B,GAAI5F,EAAI,GAAKA,EAAI,EACf,MAAM,MAAM,wCAAwC,EAGtD,GAAIA,EAAI,MAAc,MAAO,KAC7B,GAAIA,EAAI,YAAc,MAAO,KAE7B,MAAMkG,EAAM,KACNC,EAAM,EACNC,EAAK,QACLC,EAAK,IAELC,EAAK,aACLC,EAAK,aAAe,GACpBC,EAAK,aAAe,IACpBC,EAAK,YAAc,GACnBC,EAAK,aAAe,GACpBC,EAAK,aAAe,GACpBC,EAAK,WAAa,GAElBC,EAAK,aACLC,EAAK,WACLC,EAAK,aACLC,EAAK,aAAe,GACpBC,EAAK,YAAc,GACnBC,EAAK,aAAe,GAEpBC,EAAK,YACLC,EAAK,YACLC,EAAK,aAAe,GACpBC,EAAK,aAAe,IACpBC,EAAK,aAAe,GACpBC,EAAK,aAAe,IAEpBC,EAAIzH,EAAI,GACd,IAAI0H,EAEJ,GAAI,KAAK,IAAID,CAAC,GAAKvB,EACjB,OAAAwB,EAAItB,EAAKqB,EAAIA,EAEVA,KAAOhB,EAAKiB,EAAIlB,GAAMkB,EAAInB,GAAMmB,EAAIpB,MAClCM,EAAKc,EAAIf,GAAMe,EAAIhB,GAAMgB,EAAI,GAIpCA,EAAID,EAAI,EAAIzH,EAAI,EAAIA,EACpB0H,EAAI,KAAK,KAAK,CAAC,KAAK,IAAIA,CAAC,CAAC,EAC1B,IAAIpG,EAEJ,OAAIoG,GAAKvB,GACPuB,EAAIA,EAAIrB,EACR/E,KAAS0F,EAAKU,EAAIX,GAAMW,EAAIZ,GAAMY,EAAIb,KAAQK,EAAKQ,EAAIT,GAAMS,EAAI,KAEjEA,EAAIA,EAAIvB,EACR7E,IAAQgG,EAAKI,EAAIL,GAAMK,EAAIN,EAAKD,KAAQK,EAAKE,EAAIH,GAAMG,EAAI,IAGtDD,EAAI,EAAI,CAACnG,EAAMA,CACxB,CA6LO,SAASqG,GAAGC,EAAGC,EAAKC,EAAK,CAE7B,GAAID,GAAO,GAAKC,GAAO,EACpB,MAAM,IAAI,MAAM,0DAA0D,EAE7E,GAAI,MAAM,QAAQF,CAAC,EAChB,OAAOD,GAAGI,GAAOH,CAAC,EAAGC,EAAKC,CAAG,EAGhC,GAAIxE,GAASsE,CAAC,EACX,OAAOA,EAAE,MAAOzF,GAAMwF,GAAGxF,EAAG0F,EAAKC,CAAG,CAAC,EAGxC,GAAIF,GAAK,EAAG,MAAO,GAInB,IAFIC,GAAO,GAAMC,GAAO,IAAI,kBAExBA,GAAO,OAAO,kBAAmB,CAEpC,GAAID,GAAO,OAAO,kBAAmB,CAClC,GAAGD,EAAK,EAAI,MAAO,GACnB,GAAGA,GAAK,EAAI,MAAO,IACnB,GAAGA,EAAK,EAAI,MAAO,EACrB,CAED,OAAOI,GAAOJ,EAAIC,EAAKA,CAAG,CAC1B,CAED,OAAIA,GAAO,OAAO,kBAA0B,EAAIG,GAAOF,EAAMF,EAAIE,CAAG,EAEhED,EAAMD,EAAIE,EACN,EAAIG,GAAMH,GAAOA,EAAMD,EAAMD,GAAIE,EAAM,EAAID,EAAM,CAAE,EAEnDI,GAAMJ,EAAMD,GAAKE,EAAMD,EAAMD,GAAIC,EAAM,EAAIC,EAAM,CAAE,CAE9D,CAqBO,SAASI,GAAGlI,EAAG6H,EAAKC,EAAK,CAE7B,GAAI9H,IAAM,EAAG,MAAO,GACpB,GAAIA,IAAM,EAAG,OAAO,IACpB,GAAI6H,GAAO,EAAG,MAAO,KACrB,GAAIC,GAAO,EAAG,MAAO,KAErB,IAAIK,EAAOxD,GACPyD,EAAO1D,GAOX,GANI1E,EAAI,OAAU8H,IAAQ,GAAKK,EAAO,IAAUC,EAAO,IAAQpI,EAAI,OAC1DA,EAAI,OAAU8H,IAAQ,GAAKK,EAAO,IAAUC,EAAO,KACnDpI,EAAI,MAAS8H,IAAQ,GAAKK,EAAO,IAASC,EAAO,MACjDpI,EAAI,MAAS8H,IAAQ,GAAKK,EAAO,IAAQC,EAAO,KAChDpI,EAAI,KAAQ8H,IAAQ,IAAKK,EAAO,IAAOC,EAAO,KAEnD,MAAM,QAAQpI,CAAC,EACjB,OAAOkI,GAAGH,GAAO/H,CAAC,EAAG6H,EAAKC,CAAG,EAG/B,MAAMhD,EAAQ3C,GAAMwF,GAAGxF,EAAG0F,EAAKC,CAAG,EAGlC,SAASF,EAAEvE,EAAGwE,EAAKC,EAAK,CACtB,OAAIzE,IAAM,EAAU,EAChBA,IAAM,EAAU,IAChBwE,IAAQ,EAAU,IAClBC,IAAQ,EAAU,IAEfjD,GAAYxB,EAAGyB,EAAMsD,EAAMD,CAAI,CACvC,CAED,OAAO7E,GAAStD,CAAC,EAAIA,EAAE,MAAM4H,EAAGC,EAAKC,CAAG,EAAIF,EAAE5H,EAAG6H,EAAKC,CAAG,CAC5D,CAuBO,SAASE,GAAO3E,EAAGgF,EAAI,CAE3B,GAAI,MAAM,QAAQhF,CAAC,EAChB,OAAO2E,GAAOD,GAAO1E,CAAC,EAAGgF,CAAE,EAG9B,MAAMzC,EAAK,EAAI,EAAI,GAAK,EAAIyC,GAAM,GAAK,IAAMA,EAAKA,GAAM,IAAM,KAAOA,EAAKA,EAAKA,GACzEC,EAAS,GAAK,GAAKD,GAAM,GAAK,IAAMA,EAAKA,GAAM,IAAM,KAAOA,EAAKA,EAAKA,GACtExC,EAAQ,KAAK,KAAKyC,CAAM,EAG9B,SAASC,EAAGlF,EAAG,CACZ,GAAIA,IAAM,EAAG,MAAO,GAMpB,GALIgF,IAAO,GACPA,EAAK,KAAOhF,EAAIgF,EAAK,GACrBA,EAAK,IAAMhF,EAAIgF,EAAK,GACpBA,EAAK,IAAMhF,EAAIgF,EAAK,GACpBA,EAAK,GAAKhF,EAAIgF,EAAK,GACnBhF,EAAIgF,EAAK,GAAI,MAAO,GACxB,MAAMG,EAAKnF,EAAIgF,EACTI,EAAI,KAAK,IAAID,EAAI,EAAI,CAAC,EAAI,GAAM,KAAK,IAAIA,EAAI,EAAI,CAAC,EAAK,EAAI,EAAK,KAAK,IAAIA,EAAI,EAAI,CAAC,EACxF,OAAO1C,GAAM2C,EAAG7C,EAAIC,CAAK,CAC3B,CAGF,SAAS6C,EAAGrF,EAAG,CACb,OAAIA,IAAM,EAAU,EAChBgF,IAAO,GACPA,EAAK,KAAOhF,EAAIgF,EAAK,GACrBA,EAAK,IAAMhF,EAAIgF,EAAK,GACpBA,EAAK,IAAMhF,EAAIgF,EAAK,GACpBA,EAAK,GAAKhF,EAAIgF,EAAK,GACnBhF,EAAIgF,EAAK,GAAW,EACjBM,GAAOtF,EAAI,EAAGgF,EAAK,CAAC,EAAIO,GAAMP,EAAK,CAAC,CAC5C,CAEA,MAAMT,EAAIS,EAAK9D,GAAsBgE,EAAKG,EAC1C,OAAOpF,GAASD,CAAC,EAAIA,EAAE,MAAMuE,CAAC,EAAIA,EAAEvE,CAAC,CACxC,CAoBO,SAASwF,GAAO7I,EAAGqI,EAAI,CAC3B,GAAI,MAAM,QAAQrI,CAAC,EAChB,OAAO6I,GAAOd,GAAO/H,CAAC,EAAGqI,CAAE,EAI9B,MAAMzC,EAAK,EAAI,EAAI,GAAK,EAAIyC,GAAM,GAAK,IAAMA,EAAKA,GAAM,IAAM,KAAOA,EAAKA,EAAKA,GACzEC,EAAS,GAAK,GAAKD,GAAM,GAAK,IAAMA,EAAKA,GAAM,IAAM,KAAOA,EAAKA,EAAKA,GACtExC,EAAQ,KAAK,KAAKyC,CAAM,EAI9B,SAASC,EAAGlF,EAAG,CACZ,GAAIA,IAAM,EAAG,MAAO,GACpB,GAAIA,IAAM,EAAG,OAAO,IACpB,GAAIgF,IAAO,EAAG,MAAO,GACrB,MAAMI,EAAIxC,GAAM5C,EAAGuC,EAAIC,CAAK,EACtB5I,EAAI,KAAK,IAAI,KAAK,KAAK,GAAKwL,EAAIA,EAAI,GAAKA,EAAI,EAAE,EAAI,GAAK,EAAIA,EAAI,EAAI,GAAK,EAAI,EAAI,EAAG,EAAI,CAAC,EAC/F,OAAO,KAAK,IAAIxL,EAAI,GAAK,EAAIA,GAAK,GAAK,CAAC,EAAIoL,CAC9C,CAGD,SAASK,EAAGrF,EAAG,CACZ,OAAIA,IAAM,EAAU,EAChBA,IAAM,EAAU,IAChBgF,IAAO,EAAU,EAGdxD,GAAYxB,EADLlB,GAAM6F,GAAO7F,EAAGkG,CAAE,EACJ,EAAG9D,GAAsB,EAAE,CACzD,CAED,MAAMqD,EAAIS,EAAK9D,GAAsBgE,EAAKG,EAC1C,OAAOpF,GAAStD,CAAC,EAAIA,EAAE,MAAM4H,CAAC,EAAIA,EAAE5H,CAAC,CACxC,CAsBA,SAASiI,GAAM5E,EAAG9O,EAAGC,EAAG,CAErB,GAAI,MAAM,QAAQ6O,CAAC,EAChB,OAAO4E,GAAMF,GAAO1E,CAAC,EAAG9O,EAAGC,CAAC,EAG/B,GAAI8O,GAASD,CAAC,EACX,OAAOA,EAAE,MAAMlB,GAAK8F,GAAM9F,EAAG5N,EAAGC,CAAC,CAAC,EAIrC,GAAI6O,GAAK,EAAG,MAAO,GACnB,GAAIA,GAAK,EAAG,MAAO,GAGnB,GAAI9O,GAAK,GAAKC,GAAK,GAAK,CAAC,OAAO,SAASD,CAAC,GAAK,CAAC,OAAO,SAASC,CAAC,EAC9D,OAAID,GAAK,GAAKC,GAAK,EAAU,GACzBD,GAAK,GAAKA,EAAIC,GAAK,EAAU,EAC7BA,GAAK,GAAKA,EAAID,GAAK,GAEhB8O,EAAI,GAFsB,EAEV,EAG1B,MAAMyF,EAAK,GAAMzF,EAAI,GACrB,OAAO0F,GAAOxU,EAAGC,EAAG6O,EAAGyF,CAAE,CAC5B,CAcO,SAASF,GAAMI,EAAG,CACtB,GAAI1F,GAAS0F,CAAC,EACX,OAAOA,EAAE,MAAMJ,EAAK,EAGvB,GAAII,GAAK,EACN,MAAM,IAAI,MAAM,oDAAoD,EAIvE,MAAMhJ,EAAI,CACT,kBAAmB,oBAAqB,kBACxC,mBAAqB,mBAAoB,oBACzC,qBAAuB,qBAC3B,EAEG,GAAIgJ,EAAI,GACL,OAAO,KAAK,IAAM,KAAK,IAAI,KAAK,GAAKA,CAAC,EAAIJ,GAAM,EAAII,CAAC,GAGxDA,EAAIA,EAAI,EACR,IAAI3F,EAAI,kBAER,QAASpN,EAAI,EAAGA,EAAI+J,EAAE,OAAQ/J,IAC3BoN,EAAIA,EAAIrD,EAAE/J,CAAC,GAAK+S,EAAI/S,EAAI,GAG3B,MAAMgT,EAAID,EAAIhJ,EAAE,OAAS,GACzB,OAAO,KAAK,KAAK,EAAI,KAAK,EAAE,EAAI,KAAK,IAAIiJ,EAAGD,EAAI,EAAG,EAAI,KAAK,IAAI,CAACC,CAAC,EAAI5F,CACzE,CAYO,SAASsF,GAAOtF,EAAG9O,EAAG,CAI1B,IAAIwP,EAAM,EAEV,QAASnQ,EAAI,EAAGA,EAAI,IAAeA,IAAK,CACrC,MAAMiQ,EAAI,KAAK,IAAIR,EAAGzP,CAAC,EAAIgV,GAAMrU,EAAIX,EAAI,CAAC,EAC1C,GAAI,MAAMiQ,CAAC,GAAKA,EAAI,MAAS,MAC7BE,GAAOF,CACT,CAED,OAAO,KAAK,IAAIR,EAAG9O,CAAC,EAAIqU,GAAMrU,CAAC,EAAI,KAAK,IAAI,CAAC8O,CAAC,EAAIU,CACrD,CAWO,SAASiC,GAAI3C,EAAG,CACpB,MAAM6F,EAAO7F,GAAK,EAAI,EAAI,GAC1BA,EAAI,KAAK,IAAIA,CAAC,EAGd,MAAMkD,EAAK,WACLC,EAAK,YACLC,EAAK,YACL0C,EAAK,aACLC,EAAK,YAILH,EAAI,GAAO,EAHP,SAGiB5F,GACrBgG,EAAI,MAAUD,EAAKH,EAAIE,GAAMF,EAAIxC,GAAMwC,EAAIzC,GAAMyC,EAAI1C,GAAM0C,EAAI,KAAK,IAAI,CAAC5F,EAAIA,CAAC,EAEpF,OAAO6F,EAAOG,CACjB,CAuBA,SAASC,GAAMC,EAAKlG,EAAG,CAGpB,MAAMpI,EAAI,iBACJ1G,EAAI,CAAC,mBAAmB,oBAC5B,kBAAkB,kBAAkB,gBAAgB,EAChDC,EAAI,CAAC,mBAAmB,kBAC5B,gBAAgB,EACZwL,EAAI,CAAC,qBAAqB,iBAC9B,iBAAiB,iBAAiB,gBAClC,iBAAiB,iBAAiB,gBAAgB,EAC9CyH,EAAI,CAAC,EAAG,iBAAiB,iBAC7B,iBAAiB,iBAAiB,gBAClC,iBAAiB,gBAAgB,EAC7BC,EAAI,CAAC,iBAAiB,iBAC1B,iBAAiB,gBAAgB,gBAAgB,EAC7C7D,EAAI,CAAC,gBAAgB,gBACzB,iBAAiB,gBAAgB,EAEnC,IAAI2F,EACAC,EAAGR,EAAGS,EAAGC,EAAKC,EACdC,EAAK,KAAK,IAAIxG,CAAC,EACnB,GAAIwG,GAAM,GACT,OAAAZ,EAAI5F,EAAIA,EACRuG,KAASrV,EAAE,CAAC,EAAI0U,EAAI1U,EAAE,CAAC,GAAK0U,EAAI1U,EAAE,CAAC,GAAK0U,EAAI1U,EAAE,CAAC,GAAK0U,EAAI1U,EAAE,CAAC,EAAI,EAC/DoV,IAAQnV,EAAE,CAAC,EAAIyU,EAAIzU,EAAE,CAAC,GAAKyU,EAAIzU,EAAE,CAAC,GAAKyU,EAAI,EAC3CO,EAAU,GAAMnG,GAAKuG,EAAMD,GAAO,GAC9BJ,GAAO,IACNC,EAAU,KAAK,IAAIP,CAAC,EAAIO,GAEtBA,EAGR,GAAIK,GAAM,EACTD,QAAY5J,EAAE,CAAC,EAAI6J,EAAK7J,EAAE,CAAC,GAAK6J,EAAK7J,EAAE,CAAC,GAAK6J,EAAK7J,EAAE,CAAC,GAAK6J,EAAK7J,EAAE,CAAC,GAAK6J,EAAK7J,EAAE,CAAC,GAAK6J,EAAK7J,EAAE,CAAC,GAAK6J,EAAK7J,EAAE,CAAC,EACzG2J,QAAYlC,EAAE,CAAC,EAAIoC,EAAKpC,EAAE,CAAC,GAAKoC,EAAKpC,EAAE,CAAC,GAAKoC,EAAKpC,EAAE,CAAC,GAAKoC,EAAKpC,EAAE,CAAC,GAAKoC,EAAKpC,EAAE,CAAC,GAAKoC,EAAKpC,EAAE,CAAC,GAAKoC,EAAKpC,EAAE,CAAC,EACzG+B,EAAUI,EAAMD,MACV,CACN,GAAItG,GAAK,KACL,OAAAmG,EAAU,EACND,GAAO,IACXC,EAAU,KAAK,IAAInG,EAAIA,CAAC,EAAI,GAEtBmG,EAGR,GAAID,GAAO,IAAMlG,EAAI,KAAQA,EAAIA,EAAI,CAACyG,GAAO,CAAC,GAC3C,MAAO,GAGVb,EAAI,GAAM5F,EAAIA,GACduG,KAASlC,EAAE,CAAC,EAAIuB,EAAIvB,EAAE,CAAC,GAAKuB,EAAIvB,EAAE,CAAC,GAAKuB,EAAIvB,EAAE,CAAC,GAAKuB,EAAIvB,EAAE,CAAC,EAC3DiC,KAAS9F,EAAE,CAAC,EAAIoF,EAAIpF,EAAE,CAAC,GAAKoF,EAAIpF,EAAE,CAAC,GAAKoF,EAAIpF,EAAE,CAAC,GAAKoF,EAAI,EACxDO,GAAWvO,EAAIgO,EAAIW,EAAMD,GAAOE,CAClC,CAED,OAAIN,GAAO,EACNlG,EAAI,IACHmG,EAAU,KAAK,IAAInG,EAAIA,CAAC,EAAI,EAAKmG,IAGpCE,EAAIrG,EAAIA,EACR4F,EAAIS,EACJD,EAAIC,EAAIT,EACRO,GAAW,GAAMC,EAAI,IAAO,KAAK,IAAI,CAACR,CAAC,EAAIO,EACvCnG,EAAI,IACLmG,EAAU,EAAKA,IAGdA,CAEV,CAsCA,SAASO,GAAOxV,EAAGC,EAAG,CAEnB,IAAI6O,EAAI9O,EAAIC,EAAI,EAEhB,OAAI6O,GAAK,IAAa2G,GAAO3G,EAAI,CAAE,EAC/BA,GAAK,KAAa2G,GAAO3G,CAAC,EAAI4G,GAAO5G,CAAC,EACnC2G,GAAO3G,EAAI,CAAE,EAAI,KAAK,IAAIA,GAAKA,EAAI,EAAG,CAChD,CASA,SAAS6G,GAAM5D,EAAI6D,EAAI,CACpB,MAAMtD,EAAK,kBACLC,EAAK,oBACLC,EAAK,mBACLC,EAAK,oBACLoD,EAAK,oBACLC,EAAK,oBAEX,IAAIb,EAASc,EACT/V,EAAGC,EAAGyG,EAAGsP,EAAGtB,EAAGS,EAAGrG,EAAGmH,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAE7C,OAAAtW,EAAI,KAAK,IAAI+R,EAAI6D,CAAE,EACnB3V,EAAI,KAAK,IAAI8R,EAAI6D,CAAE,EAEnBI,EAAIhW,EAAIC,EACRyG,EAAIsP,GAAKA,EAAI,GACblH,EAAI,GAAMkH,EAAI,GACdG,EAAKrH,EAAIA,EAETmH,EAAKnH,EAAIqH,EAAK,EACdD,EAAKpH,EAAIqH,EAAKF,EAAK,EACnBG,EAAKtH,EAAIqH,EAAKD,EAAK,EACnBG,EAAKvH,EAAIqH,EAAKC,EAAK,EACnBE,EAAMxH,EAAIqH,EAAKE,EAAK,EAEpBN,EAAK,EAAK9V,EACVyU,EAAIqB,EAAKA,EACTZ,MAAQW,EAAKQ,EAAM5B,EAAImB,EAAKQ,GAAM3B,EAAIjC,EAAK2D,GAAM1B,EAAIlC,EAAK0D,GAAMxB,EAAInC,EACjE0D,GAAMvB,EAAIpC,EACb6C,GAAKzO,EAAIzG,EAET8V,EAAK,EAAK/V,EACV0U,EAAIqB,EAAKA,EACTd,OAAea,EAAKpB,EAAImB,GAAMnB,EAAIjC,GAAMiC,EAAIlC,GAAMkC,EAAInC,GAAMmC,EAAIpC,GAAMtS,EACnEmV,EAEIF,CACV,CAOA,SAASsB,GAAKvW,EAAG,CACd,IAAIuP,EAAG,EAAG4F,EAAGC,EAAKC,EAKlB,GAHA,EAAIrV,EACJuP,EAAIvP,EAAI,GACJuP,EAAI,IAAI,EAAIA,EAAI,IAChB,EAAI,EAAI,CACX,MAAM4D,EAAI,CAAC,kBAAkB,kBAC1B,kBAAkB,iBAAiB,oBACnC,mBAAmB,mBAAmB,oBACtC,oBAAoB,EACjBqD,EAAK,iBACLC,EAAK,kBAEX,OAAApB,SAAalC,EAAE,CAAC,EAAI,EAAIA,EAAE,CAAC,GAAK,EAAIA,EAAE,CAAC,GAAK,EAAIA,EAAE,CAAC,GAAK,EAAIA,EAAE,CAAC,GAAK,EAAIA,EAAE,CAAC,GAAK,EAAIA,EAAE,CAAC,GAAK,EAAIA,EAAE,CAAC,GAAK,EAAIA,EAAE,CAAC,EAC/GiC,GAAOqB,EAAK,EAAID,GAAM,EAAI,EAC1BrB,EAAIE,EAAMD,EACD7F,EAAI,EAAK,EAAI4F,EAAInV,EAAIA,GAAKmV,EAAI,GAAM,GACjD,KAAU,IAAI,GAAK,EACf,MAAO,GACD,CACN,MAAM1J,EAAI,CAAC,iBAAiB,kBACzB,kBAAkB,kBAAkB,kBACpC,oBAAoB,mBAAmB,EACpCyH,EAAI,CAAC,EAAG,iBAAiB,iBAC5B,kBAAkB,kBAAkB,EAEvC,OAAAmC,OAAW5J,EAAE,CAAC,EAAI,EAAIA,EAAE,CAAC,GAAK,EAAIA,EAAE,CAAC,GAAK,EAAIA,EAAE,CAAC,GAAK,EAAIA,EAAE,CAAC,GAAK,EAAIA,EAAE,CAAC,GAAK,EAAIA,EAAE,CAAC,EACrF2J,KAASlC,EAAE,CAAC,EAAI,EAAIA,EAAE,CAAC,GAAK,EAAIA,EAAE,CAAC,GAAK,EAAIA,EAAE,CAAC,GAAK,EAAI,EACxDiC,EAAIE,EAAMD,EACH7F,EAAI,EAAK,EAAIvP,GAAKmV,EAAI,GAAM,IAAOnV,EAAImV,CAC9C,EACJ,CASA,SAASuB,GAAe5H,EAAG9O,EAAG2I,EAAG,CAC9B,IAAIiN,EAAIzD,EAAIC,EAAIuE,EAGhB,GADIhO,EAAI,KACJmG,EAAI,MAAQA,EAAI,IAAK,OAAO,OAAO,IAEvC6H,EAAO7H,EAAI,EACXsD,EAAKD,EAAK,EACVyD,EAAK,EACL,QAASlU,EAAI,EAAGA,GAAKiH,EAAGjH,IACvB0Q,EAAKD,EACLA,EAAKyD,EACLA,EAAKe,EAAOxE,EAAKC,EAAKpS,EAAE2I,EAAIjH,CAAC,EAE9B,OAAQkU,EAAKxD,GAAM,EACtB,CAOA,SAASwE,GAAM9H,EAAG,CACf,MAAM+H,EAAS,CACjB,kBACA,oBACA,oBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,uBACA,mBACA,qBACA,qBACA,uBACA,qBACA,sBACA,qBACA,uBACA,qBACA,uBACA,sBACA,sBACA,qBACA,sBACA,qBACA,uBACA,qBACA,uBACA,sBACA,sBACA,qBACA,uBACA,qBACA,sBACA,sBACA,uBACA,sBACA,sBACA,qBACA,sBACA,oBACD,EAESC,EAAS,GACTC,EAAO,YAEb,GAAIjI,GAAK,EAAI,MAAO,GACpB,GAAIA,GAAK,GAAI,OAAO,OAAO,kBAC3B,GAAIA,EAAK,GAAI,OAAO,OAAO,IAE3B,GAAI,KAAK,IAAIA,CAAC,GAAK,KAClB,OAAG,KAAK,IAAIA,CAAC,EAAI,GAAK,OAAO,QAAgBA,EACxC,EAAIA,GAAKA,EAAI,MAAU,MAAQA,GAAKA,EAAI,EAAWA,GAAK,EAAI,GAAKA,GAC/DA,GAAK,EAAIA,EAAI4H,GAAe5H,EAAI,KAAM+H,EAAQC,CAAM,GAG5D,GAAIhI,EAAIiI,EACL,MAAM,IAAI,MAAM,4CAA4C,EAG/D,OAAO,KAAK,IAAI,EAAIjI,CAAC,CACxB,CAQA,SAASkI,GAAOhX,EAAGC,EAAG,CACnB,MAAMqS,EAAK,kBACLC,EAAK,oBACLC,EAAK,mBACLC,EAAK,oBACLoD,EAAK,oBACLC,EAAK,oBAEX,IAAIpP,EAAG6I,EAAGyG,EAAGtB,EAAGuC,EAAGrJ,EAAGuH,EAAGrG,EAAGmH,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAEhD,OAAItW,EAAIC,GACL+V,EAAI/V,EAAID,EACR0G,EAAI,GAAMsP,EAAI,GACdlH,EAAIkH,GAAKA,EAAI,GACbzG,EAAIvP,GAAKC,EAAI,MAEb+V,EAAIhW,EAAIC,EACRyG,EAAIsP,GAAKA,EAAI,GACblH,EAAI,GAAMkH,EAAI,GACdzG,EAAItP,GAAKD,EAAI,KAGhBmW,EAAKrH,EAAIA,EACTmH,EAAKnH,EAAIqH,EAAK,EACdD,EAAKpH,EAAIqH,EAAKF,EAAK,EACnBG,EAAKtH,EAAIqH,EAAKD,EAAK,EACnBG,EAAKvH,EAAIqH,EAAKC,EAAK,EACnBE,EAAMxH,EAAIqH,EAAKE,EAAK,EAEpB3B,EAAI,GAAKzU,EAAIA,GACbkV,MAAQW,EAAKQ,EAAM5B,EAAImB,EAAKQ,GAAM3B,EAAIjC,EAAK2D,GAAM1B,EAAIlC,EAAK0D,GAAMxB,EAAInC,EAAK0D,GAAMvB,EAAIpC,EACnF6C,GAAKzO,EAAIzG,EAETgX,EAAI1H,EAAImG,GAAO1V,EAAIC,CAAC,EACpB2N,EAAI5N,GAAK,KAAK,IAAIC,CAAC,EAAI,GAEhBgX,EAAIrJ,EAAIuH,EAAIvH,EAAIqJ,EAAI9B,EAAI8B,EAAIrJ,CACtC,CAOA,SAAS6H,GAAOzV,EAAG,CAChB,GAAIA,EAAI,GAAK,CACZ,MAAMkR,EAAK,iBACLH,EAAK,iBACLC,EAAK,kBACLkG,EAAK,kBACLC,EAAK,kBACLC,EAAK,mBACLC,EAAK,oBACLzG,EAAK,iBACLC,EAAK,iBACLyG,EAAK,iBACLC,EAAK,iBACLC,EAAK,kBACLC,EAAK,oBACLtC,QAAUkC,EAAKrX,EAAIoX,GAAKpX,EAAImX,GAAKnX,EAAIkX,GAAKlX,EAAIgR,GAAKhR,EAAI+Q,GAAK/Q,EAAIkR,SAC7DuG,EAAKzX,EAAIwX,GAAKxX,EAAIuX,GAAKvX,EAAIsX,GAAKtX,EAAI6Q,GAAK7Q,EAAI4Q,GAAK5Q,EAAI,GAC/D,MAAO,CAAEA,EAAKmV,CAClB,KAAU,CACN,MAAMuC,EAAK,iBACL3B,EAAK,iBACL4B,EAAK,iBACLC,EAAK,iBACLC,EAAK,iBACLC,EAAK,oBACLtB,EAAK,iBACLC,EAAK,iBACLR,EAAK,gBACL8B,EAAK,gBACL7B,EAAK,oBACLpH,EAAI9O,EAAI,GAAM,GACdmV,OAAS2C,EAAKhJ,EAAI+I,GAAM/I,EAAI8I,GAAM9I,EAAI6I,GAAM7I,EAAIiH,GAAMjH,EAAI4I,QACvDxB,EAAKpH,EAAIiJ,GAAMjJ,EAAImH,GAAMnH,EAAI2H,GAAM3H,EAAI0H,GAAM1H,EAAI,GAC1D,OAAOA,EAAIqG,CACX,CACJ,CAOA,SAAS6C,GAAMhY,EAAG,CACf,MAAMuP,EAAK,iBACL+C,EAAK,kBACLC,EAAK,oBACLC,EAAK,mBACLC,EAAK,oBACLoD,EAAK,oBACLC,EAAK,oBAEX,GAAI9V,GAAK,GAAK,OAAOyV,GAAOzV,CAAC,EAAI,KAAK,IAAIA,CAAC,EAC3C,GAAIA,GAAK,KAAM,OAAOyV,GAAOzV,EAAI,GAAM,EAAG,EAE1C,GAAIA,EAAI,GAAK,CACZ,IAAI2I,EAAI,KAAK,MAAM3I,EAAI,IAAI,EACvB0U,EAAI1U,EACJmV,EAAI,EACR,QAASzT,EAAI,EAAGA,GAAKiH,EAAG,EAAEjH,EACvBgT,GAAK,GACLS,GAAKT,EAER,OAAOe,GAAOf,EAAI,CAAE,EAAI,KAAK,IAAIS,CAAC,CAClC,CAEH,IAAIT,EAAI,GAAM1U,EAAIA,GACdmV,OAASW,EAAKpB,EAAImB,GAAMnB,EAAIjC,GAAMiC,EAAIlC,GAAMkC,EAAInC,GAAMmC,EAAIpC,GAAMtS,EACpE,OAAOuP,EAAI4F,GAAKnV,EAAI,KAAQ,KAAK,IAAIA,CAAC,EAAI,EAC3C,CAQA,SAASiY,GAAOlG,EAAI6D,EAAI,CAErB,MAAMV,EAAI,iBACZ,IAAIlV,EAAI,KAAK,IAAI+R,EAAI6D,CAAE,EACnB3V,EAAI,KAAK,IAAI8R,EAAI6D,CAAE,EAErB,SAASsC,EAAK/C,EAAGnV,EAAGC,EAAG,CACtB,IAAI0I,EAAI,KAAK,MAAM1I,EAAI,CAAC,EAClBwU,EAAI,EACV,QAAS/S,EAAI,EAAGA,GAAKiH,EAAG,EAAEjH,EACzBzB,GAAK,GACLwU,GAAKxU,GAAKD,EAAIC,GAEb,OAAOkV,EAAI,KAAK,IAAIV,CAAC,GAAKuD,GAAMhY,CAAC,GAAKgY,GAAM/X,CAAC,EAAIuV,GAAOxV,EAAGC,CAAC,GAC9D,CAED,GAAID,EAAI,EAAI,CAEX,GAAIA,EAAI,EACL,OAAIC,EAAI,EACA+X,GAAMhY,CAAC,GAAKgY,GAAM/X,CAAC,EAAI+X,GAAMhY,EAAEC,CAAC,GAEhC+X,GAAMhY,CAAC,EAAIgX,GAAOhX,EAAGC,CAAC,EAIjC,IAAIkV,EACJ,GAAInV,EAAI,EACL,OAAIC,GAAK,EACD+X,GAAMhY,CAAC,EAAIgY,GAAM/X,CAAC,EAAIuV,GAAOxV,EAAGC,CAAC,EAGpCA,EAAI,GACRkV,EAAI,EACG+C,EAAK/C,EAAGnV,EAAGC,CAAC,GAGb+X,GAAMhY,CAAC,EAAIgX,GAAOhX,EAAGC,CAAC,EAG9B,GAAIA,GAAK,IAAK,CACX,IAAI0I,EAAI,KAAK,MAAM3I,EAAI,CAAC,EACxBmV,EAAI,EACJ,QAASzT,EAAI,EAAGA,GAAKiH,EAAG,EAAEjH,EAAG,CAC1B1B,GAAK,GACL,IAAIgW,EAAIhW,EAAIC,EACZkV,GAAKa,GAAKA,EAAI,EAChB,CAGD,OAFAb,EAAI,KAAK,IAAIA,CAAC,EAEVlV,GAAK,EACCkV,EAAI6C,GAAMhY,CAAC,EAAIgX,GAAOhX,EAAGC,CAAC,EAG7BiY,EAAK/C,EAAGnV,EAAGC,CAAC,CAE5B,KAAa,CAEJ,IAAI0I,EAAI,KAAK,MAAM3I,EAAI,CAAC,EACxBmV,EAAI,EACJ,QAASzT,EAAI,EAAGA,GAAKiH,EAAG,EAAEjH,EACvB1B,GAAK,GACLmV,GAAKnV,GAAKA,EAAIC,EAAI,GAErB,OAAO,IAAIkV,CAAC,EAAIxM,EAAI,IAAI1I,CAAC,GAAK+X,GAAMhY,CAAC,EAAIgX,GAAOhX,EAAGC,CAAC,EACtD,CAEP,KAAW,CACP,IAAIkV,EAAIQ,GAAM3V,EAAGC,CAAC,EACd+V,EAAIhW,EAAIC,EACRgX,EAAI,EAAEjX,EAAI,IAAO,KAAK,IAAIgW,GAAKA,EAAI,EAAG,EACtCpI,EAAI3N,EAAIyV,GAAOM,CAAC,EACpB,OAAQiB,EAAIrJ,EAAK,KAAK,IAAI3N,CAAC,EAAI,IAAOiV,EAAIC,EAAIvH,EAAIqJ,EAAI,KAAK,IAAIhX,CAAC,EAAI,IAAOiV,EAAIC,EAAI8B,EAAIrJ,CACvF,CACJ,CAOA,SAAS2H,GAAOrB,EAAG,CAChB,MAAMiE,EAAM,gBAEZ,OADSjE,GAAK,EAAK,KAAO,MACfiE,EAAM,MACpB,CAOA,SAASC,GAAMtJ,EAAG,CACf,MAAM9O,EAAI,kBACJC,EAAI,kBACJiR,EAAK,iBACLH,EAAK,kBACLC,EAAK,mBACLJ,EAAK,kBACLC,EAAK,iBAEX,IAAImF,EAAG7C,EAAGuB,EAAGS,EAAGkD,EAChB,OAAIvJ,EAAI,MAASA,EAAI,KACpBqG,EAAIrG,EAAI,GAAM,GACPA,EAAI,KAAK,IAAIqG,CAAC,IAGlBrG,EAAI,MACLkH,EAAIlH,EAAI,GACRkH,GAAK,GACLqC,EAAKrY,EAAIgW,EAAI,IACLlH,EAAI,KACZkH,EAAIlH,EAAI,IAAM,IACduJ,EAAKpY,EAAI+V,EAAI,IAEbA,EAAIlH,EACJuJ,EAAK,GAGRlF,EAAI6C,GAAKA,EAAI,GACbtB,EAAIvB,EAAIA,EACRgC,IAAMnE,EAAK0D,EAAI3D,GAAM2D,EAAIxD,KAAQL,EAAK6D,EAAI9D,GAAM8D,EAAI,GAC7CA,EAAI,GAAM,GAAM,EAAKvB,GAAKA,EAAIgC,GAAKkD,EAC7C,CAOA,SAAS3C,GAAO1V,EAAG,CAEhB,GAAI,KAAK,IAAIA,CAAC,EAAI,KAAO,OAAO,KAAK,IAAI,EAAKA,CAAC,EAEjD,MAAM+Q,EAAK,kBACLC,EAAK,iBACLkG,EAAK,mBACLtG,EAAK,kBACLC,EAAK,iBACLyG,EAAK,mBAEX,IAAI5C,EAAI1U,GAAKA,EAAI,GACbsY,EAAK5D,EAAIA,EACTS,KAAO+B,EAAKoB,EAAKtH,GAAMsH,EAAKvH,GAAMuH,EAAK,MAAShB,EAAKgB,EAAKzH,GAAMyH,EAAK1H,GAAM0H,EAAK,GAElF,OAAO5D,EAAI,EAAKS,CACnB,CAMA,SAASoD,GAAMzJ,EAAG,CACf,MAAMpI,EAAI,iBACJ1G,EAAI,CAAC,mBAAoB,oBAAqB,kBAAmB,kBAAmB,gBAAgB,EACpGC,EAAI,CAAC,mBAAoB,kBAAmB,gBAAgB,EAC5DwL,EAAI,CAAC,qBAAqB,iBAC9B,iBAAiB,iBAAiB,gBAClC,iBAAiB,iBAAiB,gBAAgB,EAC9CyH,EAAI,CAAC,EAAI,iBAAkB,iBAC/B,iBAAiB,iBAAiB,gBAClC,iBAAiB,gBAAgB,EAC7BC,EAAI,CAAC,iBAAkB,iBAC3B,iBAAiB,gBAAgB,gBAAgB,EAC7C7D,EAAI,CAAC,gBAAgB,gBACzB,iBAAiB,gBAAgB,EAEnC,IAAIoF,EAAGyB,EAAIb,EAAIF,EAAKC,EAGpB,GADAC,EAAK,KAAK,IAAIxG,CAAC,EACXwG,GAAM,GACP,OAAAZ,EAAI5F,EAAIA,EACRuG,KAASrV,EAAE,CAAC,EAAI0U,EAAI1U,EAAE,CAAC,GAAK0U,EAAI1U,EAAE,CAAC,GAAK0U,EAAI1U,EAAE,CAAC,GAAK0U,EAAI1U,EAAE,CAAC,EAAI,EAC/DoV,IAAQnV,EAAE,CAAC,EAAIyU,EAAIzU,EAAE,CAAC,GAAKyU,EAAIzU,EAAE,CAAC,GAAKyU,EAAI,EACtC5F,GAAKuG,EAAMD,GAGnB,GAAIE,GAAM,EAAI,CACbD,QAAY5J,EAAE,CAAC,EAAI6J,EAAK7J,EAAE,CAAC,GAAK6J,EAAK7J,EAAE,CAAC,GAAK6J,EAAK7J,EAAE,CAAC,GAAK6J,EAAK7J,EAAE,CAAC,GAAK6J,EACpE7J,EAAE,CAAC,GAAK6J,EAAK7J,EAAE,CAAC,GAAK6J,EAAK7J,EAAE,CAAC,EAChC2J,QAAYlC,EAAE,CAAC,EAAIoC,EAAKpC,EAAE,CAAC,GAAKoC,EAAKpC,EAAE,CAAC,GAAKoC,EAAKpC,EAAE,CAAC,GAAKoC,EAAKpC,EAAE,CAAC,GAAKoC,EACpEpC,EAAE,CAAC,GAAKoC,EAAKpC,EAAE,CAAC,GAAKoC,EAAKpC,EAAE,CAAC,EAChC,IAAIsF,EAAI,GAAM,KAAK,IAAI,CAAC1J,EAAIA,CAAC,EAAIuG,EAAMD,EAAM,GAC7C,OAAQtG,EAAI,EAAK,CAAC0J,EAAIA,CACtB,CAED,GAAIlD,GAAM,IACT,OAAOxG,EAAI,EAAI,EAAI,GAGpBqH,EAAKrH,EAAIA,EACT4F,EAAI,EAAKyB,EACTd,KAASlC,EAAE,CAAC,EAAIuB,EAAIvB,EAAE,CAAC,GAAKuB,EAAIvB,EAAE,CAAC,GAAKuB,EAAIvB,EAAE,CAAC,GAAKuB,EAAIvB,EAAE,CAAC,EAC3DiC,KAAS9F,EAAE,CAAC,EAAIoF,EAAIpF,EAAE,CAAC,GAAKoF,EAAIpF,EAAE,CAAC,GAAKoF,EAAIpF,EAAE,CAAC,GAAKoF,EAAI,EACxDA,GAAKhO,EAAI2O,GAAOc,EAAKf,IAAQE,EAC7B,IAAIkD,EAAI,GAAM,KAAK,IAAI,CAACrC,CAAE,EAAIzB,EAAI,GAClC,OAAQ5F,EAAI,EAAK,CAAC0J,EAAIA,CACzB,CAQA,SAASC,GAAO3J,EAAG,CAChB,MAAMiC,EAAK,oBACLC,EAAK,kBACLJ,EAAK,kBACLC,EAAK,iBACLyG,EAAK,mBACLC,EAAK,oBAEX,GAAI,KAAK,IAAIzI,CAAC,GAAK,IAChB,OAAOA,KAAOkC,EAAKlC,EAAIiC,GAAMjC,EAAI,OAAUyI,EAAKzI,EAAIwI,GAAMxI,EAAI+B,GAAM/B,EAAI8B,GAAM9B,EAAI,IAC9E,CACN,IAAIqG,EAAI,KAAK,IAAIrG,CAAC,EAClB,OAAOA,EAAI,EAAKqG,GAAK,GAAM,EAAKA,EAAI,IAAOA,EAAI,GAAM,EACrD,CACJ,CAEA,SAASuD,GAAKrH,EAAIvC,EAAG,CAElB,IAAIqG,EACJ,GAAIrG,EAAI,GAGP,GAFIuC,EAAK,IACT8D,EAAI9D,EAAKvC,EACLqG,EAAI,GAAI,OAAO,KAAK,IAAI9D,CAAE,EAAI,KAAK,IAAIvC,CAAC,UAExCuC,EAAK,IACT8D,EAAI9D,EAAKvC,EACLqG,EAAI,GAAI,OAAO,KAAK,IAAI9D,CAAE,EAAI,KAAK,IAAIvC,CAAC,EAG7C,OAAO,KAAK,IAAIqG,CAAC,CACpB,CAEA,SAASwD,GAAI7J,EAAG,CAEb,MAAM8J,EAAQ,iBACRC,EAAM,mBAEN9H,EAAK,CAAC,kBAAkB,iBAC5B,iBAAiB,iBAAiB,iBAClC,iBAAiB,gBAAgB,EAC7BH,EAAK,CAAC,iBAAkB,iBAC5B,gBAAiB,iBAAkB,eACnC,mBAAmB,EACfI,EAAK,CAAC,kBAAkB,kBAC5B,kBAAkB,mBACdH,EAAK,CAAC,iBAAkB,iBAC5B,iBAAkB,gBAAgB,EAEjC,IAAIzB,EAAGzG,EAAGmQ,EACTnG,EACAwC,EAAGV,EACHsE,EAAKC,EAAKC,EAAKC,EAAMC,EAAOC,EAAOC,EAQvC,GANAF,EAAQ,OAAO,iBACfxG,EAAK,IAAO,GAAM,OAAO,SACtBwG,EAAQxG,IAAIwG,EAAQxG,GACvB0G,EAAS,KAETL,EAAM,EACFlK,EAAI,GAAK,CACZ,GAAI,KAAKA,CAAC,GAAKuK,EAAQ,CACpB,GAAIvK,GAAK,EAAI,MAAO,GAClBkK,EAAM,GAAMlK,CACrB,KAAW,CASF,GARAqG,EAAI,CAACrG,EACLmK,EAAML,EAEFzD,GAAK,IACVA,EAAI,CAACA,EACL8D,EAAM,CAACA,GAGF9D,GAAKgE,EAAO,MAAO,GAqBzB,GAnBAL,EAAK,KAAK,MAAM3D,CAAC,EACjBA,GAAK2D,EACLA,EAAK,KAAK,MAAM3D,EAAI,CAAE,EACtBA,GAAKA,EAAI2D,EAAK,KAAQ,EAEtBnQ,EAAImQ,EAAK,EACLnQ,EAAIA,GAAKmQ,IACZ3D,EAAI,EAAKA,GAGRV,EAAImE,EAAQzD,EACd/F,EAAIzG,EAAI,EACJyG,EAAIA,GAAKzG,IACZsQ,EAAM,CAACA,GAGNtQ,GAAKmQ,EAAK,GAAK,EACjB1J,EAAIzG,EAAI,EACRyG,GAAKA,EACDA,GAAKzG,EAAG,CACX,GAAI8L,GAAK,EAAI,MAAO,GACpBuE,EAAMC,GAAO,IAAIxE,CAAC,EAAI,IAAIA,CAAC,EAAI,EACvC,MACQuE,EAAMC,GAAO,IAAIxE,CAAC,EAAI,IAAIA,CAAC,EAAI,EAElC,CAED3F,EAAI,EAAKA,CACT,CAGD,GAAIA,GAAK,EAAI,CACZiK,EAAMjK,EACNsK,EAAQrI,EAAG,CAAC,EAAIjC,EAEhB,QAASpN,EAAI,EAAGA,GAAK,EAAG,EAAEA,EACvBqX,GAAOA,EAAMnI,EAAGlP,EAAI,CAAC,GAAKoN,EAC1BsK,GAASA,EAAQrI,EAAGrP,CAAC,GAAKoN,EAG7B,OAAAiK,GAAOK,EAAQrI,EAAG,CAAC,IAAMgI,EAAMnI,EAAG,CAAC,GACnCsI,EAAOpK,EAAI+J,EACJE,EAAMG,EAAOF,CACpB,CAED,GAAIlK,EAAIqK,EAAO,CACdhE,EAAI,GAAMrG,EAAIA,GACdiK,EAAM5D,EACNiE,EAAQpI,EAAG,CAAC,EAAImE,EAEhB,QAASzT,EAAI,EAAGA,GAAK,EAAG,EAAEA,EACvBqX,GAAOA,EAAMlI,EAAGnP,EAAI,CAAC,GAAKyT,EAC1BiE,GAASA,EAAQpI,EAAGtP,CAAC,GAAKyT,EAG7B6D,EAAMI,GAASL,EAAMlI,EAAG,CAAC,GAAK,GAAM/B,EAAIkK,CACxC,CAED,OAAOA,EAAM,IAAIlK,CAAC,CACrB,CAEA,SAASwK,GAAMtZ,EAAGC,EAAG6O,EAAGyK,EAAK,CAE1B,IAAIC,EAAK9S,EAAG4I,EAAGoF,EAAG+E,EAAIC,EAEtB,GAAI1Z,EAAIuZ,EAAM,KAAO,CAEpB,GADA7E,EAAI1U,EAAI,KAAK,IAAI8O,CAAC,EACd4F,EAAI,KAAK,OAAO,CAAC,EAClB,MAAO,GAEV8E,EAAM,KAAK,IAAI9E,CAAC,CACpB,MACI8E,EAAM,EAgBP,IAbFA,GAAOvZ,EAAID,EACT0Z,EAAMH,EAAMvZ,EACZyZ,EAAKzZ,EAAI,EACT0U,EAAI5F,EACJQ,EAAIoF,EAAI+E,EAIRA,GAAM,EACN/E,EAAI5F,EAAI4F,EACRhO,EAAIgO,EAAI+E,EACRnK,GAAK5I,EAEE,KAAK,IAAIoI,CAAC,EAAI4K,GAClBD,GAAM,EACN/E,EAAI5F,EAAI4F,EACRhO,EAAIgO,EAAI+E,EACRnK,GAAK5I,EAGV,OAAA8S,GAAOxZ,EAAIsP,EAAI,EACNkK,CACV,CAEA,SAASG,GAAM3Z,EAAGC,EAAG6O,EAAGyK,EAAK,CAE1B,MAAMK,EAAI,iBAEV,IAAIF,EAAKhT,EAAGoK,EAAGxB,EAAGoF,EAAGmF,EACjBC,EAAK7Z,EAAI6O,EAab,IAXA4F,EAAI5F,EAAIgL,EACRpT,EAAIzG,EAAIsZ,GAAO,IAAO,KAAK,IAAIzK,CAAC,EAAI6J,GAAI1Y,CAAC,EAAI2Z,EAAIlF,EAAI,KAAK,IAAIoF,CAAE,EAAIF,EAAIlF,EACxEgF,EAAMH,EAAM,EAAK,KAAK,IAAI7S,CAAC,EAC3BoK,EAAI,EACJxB,EAAI,EAGJwB,GAAK,EACL4D,GAAK5F,EAAIgL,EAAKhJ,EACd+I,EAAKnF,EAAI5D,EACTxB,GAAKuK,EACE,KAAK,IAAIA,CAAE,EAAIH,GACrB5I,GAAK,EACL4D,GAAK5F,EAAIgL,EAAKhJ,EACd+I,EAAKnF,EAAI5D,EACTxB,GAAKuK,EAGN,MAAO,CAAC7Z,GAAK0G,EAAI4I,EACpB,CAEA,SAASyK,GAAM/Z,EAAGC,EAAG6O,EAAGyK,EAAK,CAC1B,IAAInK,EACAoK,EAAK9S,EAAGgO,EAAGuC,EAAGxC,EAAG1C,EAAI6D,EAAIoE,EAE7B,GAAIlL,GAAK,EAAI,MAAO,GAGpB,GADAiD,EAAK,KAAK,IAAI/R,EAAGC,CAAC,EACd8R,GAAM,EACT0C,EAAIzU,EAAI,KAAK,IAAI8O,CAAC,EAAImJ,GAAOjY,EAAGC,CAAC,EACjCuZ,EAAM,KAAK,IAAI/E,CAAC,EAAIzU,UAEpB4V,EAAK,KAAK,IAAI5V,EAAGC,CAAC,EAEd2V,EAAK,EAEN,GAAIA,GAAM,EAAI,CAGT,GADA4D,EAAM,KAAK,IAAI1K,EAAG9O,CAAC,EACfwZ,GAAO,EAAI,OAAOA,EAGtBQ,EAAMha,EAAIC,EACN+Z,EAAM,GACP/C,EAAIjX,EAAIC,EAAI,EACZwU,GAAK8B,GAAKU,CAAC,EAAI,GAAM+C,GAErBvF,EAAI8B,GAAKyD,CAAG,EAAI,EAGnBtT,GAAK6P,GAAKvW,CAAC,EAAI,IAAOuW,GAAKtW,CAAC,EAAI,GAAMwU,EACtC+E,GAAQ9S,GAAKzG,EAAI+Z,EAE7B,KAAgB,CAGJ,GAFA/C,EAAIxB,GAAO1D,CAAE,EACb3C,EAAI,KAAK,MAAMwG,EAAK,CAAE,EAClBxG,GAAK,EAAG,CACT1I,EAAI,EACJ,QAAShF,EAAI,EAAGA,GAAK0N,EAAG,EAAE1N,EACvBkU,GAAM,GACNlP,GAAKkP,GAAM7D,EAAK6D,GAEnBqB,GAAK,KAAK,IAAIvQ,CAAC,CACjB,CAED+N,EAAIzU,EAAI,KAAK,IAAI8O,CAAC,EAAImI,EACtBrB,GAAM,GACNoE,EAAMjI,EAAK6D,EACPoE,EAAM,GACP/C,EAAIlF,EAAK6D,EAAK,EACdlB,GAAK6B,GAAKU,CAAC,EAAI,GAAM+C,GAErBtF,EAAI6B,GAAKyD,CAAG,EAAI,EAGnBR,EAAM,KAAK,IAAI/E,CAAC,GAAK1C,EAAK/R,IAAMuW,GAAKX,CAAE,EAAI,GAAMlB,CACnD,MAEHuC,EAAIxB,GAAO1D,CAAE,EAAIiF,GAAOjF,EAAI6D,CAAE,EAC9BnB,EAAIzU,EAAI,KAAK,IAAI8O,CAAC,EAAImI,EACxBuC,EAAMzH,EAAK/R,EAAI,KAAK,IAAIyU,CAAC,EAI3B,GAAI+E,GAAO,GAAKxZ,GAAKuZ,EAAM,GAAK,OAAOC,EAEvC,IAAIE,EAAMH,EAAMvZ,EACZ2I,EAAI,EACJ6G,EAAM,EACN2F,EASJ,IARAzO,EAAI,EAGJiC,GAAK,EACLjC,IAAM,GAAMzG,EAAI0I,EAAI,IAAOmG,EAC3BqG,EAAIzO,GAAK1G,EAAI2I,GACb6G,GAAO2F,EAEAxM,EAAI,KAAO,KAAK,IAAIwM,CAAC,EAAIuE,GAC/B/Q,GAAK,EACLjC,IAAM,GAAMzG,EAAI0I,EAAI,IAAOmG,EAC3BqG,EAAIzO,GAAK1G,EAAI2I,GACb6G,GAAO2F,EAER,OAAInV,EAAIwP,EAAM,GACbgK,GAAQxZ,EAAIwP,EAAM,EAElBgK,EAAM,EAGAA,CACV,CAEA,SAASS,GAAIja,EAAGC,EAAG6O,EAAGgG,EAAGnM,EAAG4Q,EAAK,CAE9B,IAAItE,EACA5V,EAAGgS,EACH9B,EAAG2E,EAEH8F,EAAMha,EAAIC,EAChBia,EAAMla,EAAI,EAaP,GAXG2I,EAAI,GAAK3I,GAAK,GAAMga,GAAOE,EAAM,KACpC7I,EAAK,KAAK,MAAM,KAAK,IAAIkE,GAAO,CAAC,CAAC,CAAC,EACnClW,EAAI,KAAK,MAAMkW,GAAO,CAAC,CAAC,EACpBlE,EAAKhS,IAAGgS,EAAKhS,GAChBkQ,EAAI,KAAK,IAAI,CAAC8B,CAAE,IAEjBA,EAAK,EACL9B,EAAI,GAGJ0F,EAAUkF,GAAO9I,EAAIrR,EAAGC,EAAG6O,EAAGgG,CAAC,EAAI9U,EAC/B2I,GAAK,GAAKsM,GAAW,EAAK,OAAOA,EAEtC,IAAImF,EAAMzR,EAAI,EACVwM,EAAI5F,EAGR,GADAlQ,EAAI,EACAY,EAAI,EAAI,CACX,GAAI6U,EAAI,KAAM,CACX,IAAI3B,GAAKlT,EAAI,GAAM6O,EAAIgG,EAAI9U,EACvBmT,GAAK,IAAI9T,EAAK8T,EAAIiH,EAAO,KAAK,MAAMjH,CAAC,EAAIiH,EACpD,MACO/a,EAAI+a,EAGL,QAAS1Y,EAAI,EAAGA,EAAIrC,EAAG,EAAEqC,EACxBwS,EAAIxS,EACJ6N,IAAMyK,EAAM9F,IAAMgG,EAAMhG,GAAKpF,EAC7BqG,GAAK5F,CAER,CAGD,QAAS7N,EAAIrC,EAAGqC,EAAI0Y,IACnBlG,EAAIxS,EACJ6N,IAAMyK,EAAM9F,IAAMgG,EAAMhG,GAAKpF,EAC7BqG,GAAK5F,EACD,EAAAA,GAAKgK,EAAMpE,IAJS,EAAEzT,EAI1B,CAGD,OAAAuT,GAAWE,EACJF,CACV,CAEA,SAASoF,GAAMra,EAAGC,EAAG6O,EAAGgG,EAAGwF,EAAQf,EAAK,CACrC,IAAI7S,EAAGwO,EAAGvM,EAAG8C,EAAG0H,EAAG7D,EAAGoF,EAAGS,EAAG7C,EAAIC,EAAImF,EAAI+B,EAAIc,EAAIC,EAAKC,EAAMC,EAAMC,EAAMC,EAAOC,EAI9E,GAHI,CAAC,OAAO,SAASP,CAAM,IAE3BO,EAAMC,GAAO9a,EAAGC,EAAG6O,EAAGgG,CAAC,EACnB,OAAO,MAAM+F,CAAG,GAAG,OAAO,OAAO,IACrC,GAAIA,GAAO,EAAI,MAAO,GAsCtB,IApCAnU,EAAI4T,EAAS,EACbhI,EAAKrS,EAAID,EACTuS,EAAK,EAAKvS,EAAI,EACdwa,EAAM1F,EAAI,EAEVnM,EAAI,EACJ8C,EAAI,EACJ6D,EAAItP,EAAI,EACRyZ,EAAK,EACLc,EAAK,EACLE,EAAO,EACPC,EAAOhU,EAAI6L,EACXY,EAAIZ,EAAK7L,EAGTiC,GAAK,EACL+L,EAAI/L,EAAI3I,EACRmV,EAAIxM,GAAK1I,EAAI0I,GAAKmG,EAClBoG,EAAIlV,EAAIsP,EACRsL,EAAQnP,GAAKA,EAAI6G,GAAM4C,EAAIA,GAAKC,EAAIrG,GACpCoG,GAAKR,EAAI,IAAOnC,EAAKmC,EAAIA,GACzBiG,EAAOhS,EAAIwM,EAAI7F,EAAI4F,GAAKxO,EAAIiC,EAAI6R,GAChC/O,EAAIiJ,EAAI,EACRpF,GAAK,EAELoF,EAAIkG,EAAQnB,EAAKkB,EAAOF,EAAMhB,EAAKgB,EAAMA,EAAO/F,EAChDA,EAAIkG,EAAQL,EAAKI,EAAOD,EAAMH,EAAKG,EAAMA,EAAOhG,EAEhDgD,EAAKvE,EACLA,EAAIsH,EAAOC,EAEXjB,GAAMiB,EACNH,GAAMG,EACND,EAAOtH,EACPuH,EAAO,EAEA/R,EAAI,MACRA,GAAK,EACL+L,EAAI/L,EAAI3I,EACRmV,EAAIxM,GAAK1I,EAAI0I,GAAKmG,EAClBoG,EAAIlV,EAAIsP,EACRsL,EAAQnP,GAAKA,EAAI6G,GAAM4C,EAAIA,GAAKC,EAAIrG,GACpCoG,GAAKR,EAAI,IAAOnC,EAAKmC,EAAIA,GACzBiG,EAAOhS,EAAIwM,EAAI7F,EAAI4F,GAAKxO,EAAIiC,EAAI6R,GAChC/O,EAAIiJ,EAAI,EACRpF,GAAK,EAELoF,EAAIkG,EAAQnB,EAAKkB,EAAOF,EAAMhB,EAAKgB,EAAMA,EAAO/F,EAChDA,EAAIkG,EAAQL,EAAKI,EAAOD,EAAMH,EAAKG,EAAMA,EAAOhG,EAElDgD,EAAKvE,EACLA,EAAIsH,EAAOC,EACP,OAAK,IAAIvH,EAAIuE,CAAE,GAAK6B,EAAMpG,KAE9BsG,GAAMiB,EACNH,GAAMG,EACND,EAAOtH,EACPuH,EAAO,EAGR,OAAOG,EAAM1H,CAChB,CAEA,SAAS2H,GAAO9a,EAAGC,EAAG6O,EAAGgG,EAAG,CAEzB,MAAMiG,EAAU,iBAChB,IAAIpS,EAAGjC,EAAGwO,EAAG+B,EAAGrJ,EAAG6G,EAAG1C,EAAI6D,EAAIoE,EAE9B,GAAIlL,GAAK,GAAMgG,GAAK,EAAI,MAAO,GAI/B,GAFA/C,EAAK,KAAK,IAAI/R,EAAGC,CAAC,EAEd8R,EAAK,EAAI,CAEV,IAAIiJ,EAAKC,EAeX,GAdInM,GAAK,MACNkM,EAAM,KAAK,IAAIlM,CAAC,EAChBmM,EAAMvF,GAAO,CAAC5G,CAAC,GAEXgG,EAAI,MACPkG,EAAM,KAAK,IAAIlM,CAAC,EAChBmM,EAAM,KAAK,IAAInG,CAAC,IAEhBkG,EAAMtF,GAAO,CAACZ,CAAC,EACfmG,EAAM,KAAK,IAAInG,CAAC,GAIpBL,EAAIzU,EAAIgb,EAAM/a,EAAIgb,EACdlJ,GAAM,EACP,OAAA0C,GAAKwD,GAAOjY,EAAGC,CAAC,EACT,KAAK,IAAIwU,CAAC,EAIpB,GADAmB,EAAK,KAAK,IAAI5V,EAAGC,CAAC,EACd2V,GAAM,EACP,OAAAqB,EAAIxB,GAAO1D,CAAE,EAAIiF,GAAOjF,EAAI6D,CAAE,EACvB7D,EAAK,KAAK,IAAI0C,EAAIwC,CAAC,EAG7B,GAAIrB,GAAM,EAAI,CAEX,IAAIsF,EAAM,KAAK,IAAIzG,CAAC,EACpB,OAAIyG,GAAO,EAAW,GAEtBlB,EAAMha,EAAIC,EACN+Z,EAAM,GACT/C,EAAIjX,EAAIC,EAAI,EACZwU,GAAK8B,GAAKU,CAAC,EAAI,GAAM+C,GAErBvF,EAAI8B,GAAKyD,CAAG,EAAI,EAGjBtT,GAAK6P,GAAKvW,CAAC,EAAI,IAAOuW,GAAKtW,CAAC,EAAI,GAAMwU,EAC/ByG,GAAOnJ,EAAKrL,IAAMqL,EAAK6D,EAAK,GACrC,CAID,GAFAqB,EAAIxB,GAAO1D,CAAE,EACbpJ,EAAI,KAAK,MAAMiN,EAAK,CAAE,EAClBjN,GAAK,EAAG,CACTjC,EAAI,EACJ,QAAShF,EAAI,EAAGA,GAAKiH,EAAG,EAAEjH,EACzBkU,GAAM,GACNlP,GAAKkP,GAAM7D,EAAK6D,GAEjBqB,EAAI,KAAK,IAAIvQ,CAAC,EAAIuQ,CACpB,CAEDxC,GAAKwC,EACLrB,GAAM,GACNoE,EAAMjI,EAAK6D,EACX,IAAIlB,EACJ,OAAIsF,EAAM,GACP/C,EAAIlF,EAAK6D,EAAK,EACdlB,GAAK6B,GAAKU,CAAC,EAAI,GAAM+C,GAErBtF,EAAI6B,GAAKyD,CAAG,EAAI,EAGZjI,EAAK,KAAK,IAAI0C,CAAC,GAAK8B,GAAKX,CAAE,EAAI,GAAMlB,CAChD,KAAU,CAEJ,IAAIsB,EAAGmF,EAAIC,EAAId,EACjB,OAAIta,GAAKC,GACJ+V,EAAIhW,EAAIC,EACRkb,EAAKnF,GAAKA,EAAI,GACdoF,EAAK,GAAMpF,EAAI,GACfsE,EAASta,GAAKA,EAAIC,GAAK6O,IAEvBkH,EAAI/V,EAAID,EACRmb,EAAK,GAAMnF,EAAI,GACfoF,EAAKpF,GAAKA,EAAI,GACdsE,GAAUta,EAAIC,GAAK6U,EAAI7U,GAG5BiV,EAAI,CAACoF,EAASta,EACdiX,EAAI,KAAK,IAAI/B,CAAC,EAAI,GAAKA,EAAI,KAAK,IAAIpG,EAAIqM,CAAE,EAAI/C,GAAMlD,CAAC,EACrDA,EAAIoF,EAASra,EACX2N,EAAI,KAAK,IAAIsH,CAAC,GAAK,GAAKkD,GAAMlD,CAAC,EAAIA,EAAI,KAAK,IAAIJ,EAAIsG,CAAE,EACxD3G,EAAI,KAAK,IAAI,EAAEzU,EAAIiX,EAAIhX,EAAI2N,EAAE,EAEtBmN,EAAU,KAAK,KAAK9a,EAAIkb,CAAE,EAAI1G,EAAI,KAAK,IAAI,CAACkB,GAAM3V,EAAGC,CAAC,CAAC,CAC9D,CACJ,CAEA,SAASka,GAAO9I,EAAIrR,EAAGC,EAAG6O,EAAGgG,EAAG,CAC7B,MAAMiG,EAAU,iBAChB,IAAIrU,EAAGgO,EAAGuC,EAAGrJ,EAAG6G,EAAG1C,EAAI6D,EAAIoE,EAG3B,GADAjI,EAAK,KAAK,IAAI/R,EAAGC,CAAC,EACd8R,EAAK,EAAI,CACV,IAAIiJ,EAAKC,EAaX,GAZMnM,GAAK,MACNkM,EAAM,KAAK,IAAIlM,CAAC,EAChBmM,EAAMvF,GAAO,CAAC5G,CAAC,GACPgG,EAAI,MACZkG,EAAM,KAAK,IAAIlM,CAAC,EAChBmM,EAAM,KAAK,IAAInG,CAAC,IAEhBkG,EAAMtF,GAAO,CAACZ,CAAC,EACfmG,EAAM,KAAK,IAAInG,CAAC,GAGrBL,EAAIzU,EAAIgb,EAAM/a,EAAIgb,EACdlJ,GAAM,EACN,OAAA0C,GAAKwD,GAAOjY,EAAGC,CAAC,EACVyY,GAAKrH,EAAIoD,CAAC,EAIpB,GADAmB,EAAK,KAAK,IAAI5V,EAAGC,CAAC,EACd2V,GAAM,EACP,OAAAqB,EAAIxB,GAAO1D,CAAE,EAAIiF,GAAOjF,EAAI6D,CAAE,EACvB7D,EAAM2G,GAAKrH,EAAIoD,EAAIwC,CAAC,EACvB,GAAIrB,GAAM,EAAI,CAClB,IAAI4D,EAAMd,GAAKrH,EAAIoD,CAAC,EACpB,OAAI+E,GAAO,EAAWA,GACtBQ,EAAMha,EAAIC,EACN+Z,EAAM,GACT/C,EAAIjX,EAAIC,EAAI,EACZwU,GAAK8B,GAAKU,CAAC,EAAI,GAAM+C,GAErBvF,EAAI8B,GAAKyD,CAAG,EAAI,EAEjBtT,GAAK6P,GAAKvW,CAAC,EAAI,IAAOuW,GAAKtW,CAAC,EAAI,GAAMwU,EAC9B+E,GAAOzH,EAAKrL,IAAMqL,EAAK6D,EAAK,GACtC,CAECqB,EAAIxB,GAAO1D,CAAE,EACf,IAAIpJ,EAAI,KAAK,MAAMiN,EAAK,CAAE,EAC1B,GAAIjN,GAAK,EAAG,CACTjC,EAAI,EACJ,QAAShF,EAAI,EAAGA,GAAKiH,EAAG,EAAEjH,EACzBkU,GAAM,GACNlP,GAAKkP,GAAM7D,EAAK6D,GAEhBqB,GAAK,KAAK,IAAIvQ,CAAC,CAClB,CAED,OAAA+N,GAAKwC,EACLrB,GAAM,GACNoE,EAAMjI,EAAK6D,EACXlB,EAAIsF,EAAM,GAAMzD,GAAKyD,EAAM,CAAE,EAAI,GAAMA,EAAMzD,GAAKyD,CAAG,EAAI,EAClDjI,EAAK2G,GAAKrH,EAAIoD,CAAC,GAAK8B,GAAKX,CAAE,EAAI,GAAMlB,CAEhD,KAAU,CACN,IAAIsB,EAAGmF,EAAIC,EAAId,EACXta,EAAIC,GACH+V,EAAI/V,EAAID,EACRmb,EAAK,GAAMnF,EAAI,GACfoF,EAAKpF,GAAKA,EAAI,GACdsE,GAAUta,EAAIC,GAAK6U,EAAI7U,IAEvB+V,EAAIhW,EAAIC,EACRkb,EAAKnF,GAAKA,EAAI,GACdoF,EAAK,GAAMpF,EAAI,GACfsE,EAASta,GAAKA,EAAIC,GAAK6O,GAElB,CAAC8H,GAAM3W,EAAED,CAAC,EACpB,IAAIkV,EAAI,CAACoF,EAASta,EAClB,OAAAiX,EAAI,KAAK,IAAI/B,CAAC,EAAI,GAAMA,EAAI,KAAK,IAAIpG,EAAIqM,CAAE,EAAI/C,GAAMlD,CAAC,EACtDA,EAAIoF,EAASra,EACb2N,EAAI,KAAK,IAAIsH,CAAC,EAAI,GAAMA,EAAI,KAAK,IAAIJ,EAAIsG,CAAE,EAAIhD,GAAMlD,CAAC,EAEtDT,EAAIiE,GAAKrH,EAAI,EAAErR,EAAIiX,EAAIhX,EAAI2N,EAAE,EACtBmN,EAAU,KAAK,KAAK9a,EAAIkb,CAAE,EAAS1G,EAAI,KAAK,IAAI,CAACkB,GAAM3V,EAAGC,CAAC,CAAC,CACnE,CACJ,CAcA,SAASob,GAAMrb,EAAGC,EAAG6O,EAAGgG,EAAGK,EAAGoE,EAAK,CAEhC,IAAI7S,EAAI,MAAM,EAAa,EACvB6I,EAAI,MAAM,EAAa,EACvB+L,EAAMrb,EAAI,GAAM,GAClBsb,EAAKvb,EAAIsb,EAAM,GACfN,EAAOlG,EAAI,KAAS,KAAK,IAAIhG,CAAC,EAAI4G,GAAO,CAACZ,CAAC,EAC3CL,EAAI,CAAC8G,EAAKP,EAEZ,GAAI/a,EAAIwU,GAAK,EACV,MAAM,IAAI,MAAM,uCAAuC,EAG1D,IAAI+G,EAAQ,KAAK,IAAIvb,CAAC,EAAI2W,GAAML,GAAKtW,CAAC,CAAC,EAAIA,EAAI,KAAK,IAAIwU,CAAC,EAAI8G,EAAKP,EAChES,EAAQD,GAASxE,GAAO/W,EAAGD,CAAC,EAAIC,EAAI,KAAK,IAAIsb,CAAE,GAC/CtE,EAAI,KAAK,IAAIwE,CAAK,EACpB,GAAIA,GAAS,OAAO,kBACjB,MAAM,IAAI,MAAM,uCAAuC,EAG1D,IAAIC,EAAOzE,GAAK,EACZ/C,EAAKiB,GAAK,EAAM,EAAK,KAAK,IAAI,KAAK,IAAIA,CAAC,EAAIsG,CAAK,EACjDE,EAAMC,GAAO3b,EAAGwU,EAAG+G,EAAOjC,CAAG,EAC/B3L,EAAI,KAAQ2N,EAAKA,GACjBjD,EAAK0C,EAAM,IAAOA,EAClBlK,EAAI6K,EACJnM,EAAMsB,EACN4D,EAAI,EAAImH,EAAK,EAAIC,EAAK,EACxB,QAASnT,EAAI,EAAGA,GAAK,GAAe,EAAEA,EAAG,CACxC,IAAIoT,EAAO9b,EAAI6b,EACfhL,GAAKiL,GAAQA,EAAO,GAAMjL,GAAK2D,EAAIsH,EAAO,GAAMrH,GAAK9G,EACrDkO,GAAM,EACNpH,GAAK4D,EACLuD,GAAMC,GAAMA,EAAK,GACjB,IAAI1B,EAAMzR,EAAI,EACdjC,EAAE0T,CAAG,EAAIyB,EAEP,IAAIvM,EAAI,EACV,GAAI3G,EAAI,EAAG,CACR,IAAIqT,GAAO/b,EAAI0I,EACf,QAASjH,EAAI,EAAGA,GAAK0Y,EAAK,EAAE1Y,EAC3B4N,GAAK0M,GAAOtV,EAAEhF,EAAI,CAAC,EAAI6N,EAAE6K,EAAM1Y,CAAC,EAChCsa,IAAQ/b,CAEX,CAEDsP,EAAE6K,CAAG,EAAIkB,EAAMO,EAAKvM,EAAI3G,EACxB,IAAIsT,EAAK1M,EAAE6K,CAAG,EAAItJ,EAElB,GADAtB,GAAOyM,EACHzM,GAAO,EACN,MAAM,IAAI,MAAM,uCAAuC,EAG1D,GAAI,KAAK,IAAIyM,CAAE,GAAK1C,GAAO/J,EAAM0E,GAChC,KAEH,CAEH,OAAAiB,GAAKuG,EAAM,KAAK,IAAID,EAAQ,KAAK,IAAIjM,CAAG,CAAC,EAAIyH,EAAIzH,EACxC2F,CACV,CAUA,SAASyG,GAAO5b,EAAG8O,EAAG0M,EAAOjC,EAAK,CAC/B,MAAM2C,EAAY,kBAClB,GAAIlc,EAAI8O,GAAK,EACZ,OAAIA,GAAK9O,EACC,KAAK,IAAI,CAACwb,CAAK,EAEf,EAEJ,GAAIxb,GAAK,GAAK,CACpB,GAAI8O,EAAI,IAEL,OAAQ,GADAyJ,GAAM,KAAK,KAAKzJ,CAAC,CAAC,EACR,IAAO,KAAK,IAAI,CAAC0M,CAAK,EAClC,CACN,IAAIW,EAAK,KAAK,KAAKrN,CAAC,EACtB,OAAOiG,GAAM,EAAGoH,CAAE,EAAEA,EAAKD,CACzB,CACL,SAAcpN,EAAI,IAAK,CACnB,IAAI2K,EAAK,EACL/S,EAAIoI,EACJU,EAAMV,GAAK9O,EAAI,GACf0Z,EAAMH,EAAM,IAAOvZ,EAAI,GAAK0U,EAO9B,IAJA+E,GAAM,EACN/S,GAAK,EAAEoI,EAAI2K,GACX/E,EAAIhO,GAAK1G,EAAIyZ,GACbjK,GAAOkF,EACA,KAAK,IAAIA,CAAC,EAAIgF,GAClBD,GAAM,EACN/S,GAAK,EAAEoI,EAAI2K,GACX/E,EAAIhO,GAAK1G,EAAIyZ,GACbjK,GAAOkF,EAGZ,IAAI5D,EAAI9Q,EAAI8O,IAAMU,EAAI,EAAK,IAAKxP,EAAI,IAAO8O,EAAI,GAAI9O,EAAI,IACnDyU,EAAIzU,EAAI,KAAK,IAAI8O,CAAC,EAClBkH,EAAIO,GAAKvW,CAAC,EACV,EAAIgW,EAAI,EAEZ,GAAKlH,GAAK,KAAS9O,EAAI8O,EAAI,MAAW2F,EAAI,QAAW,CAClD,IAAIP,EAAIuE,GAAOhE,CAAC,EACdvB,IAAMgB,EAAI,GAAM,IAAOpD,EAAIoD,GAAK,EAAI8B,EACpC,OAAO9C,GAAK,EAAM,EAAMA,EAAI,KAAK,IAAI,CAACsI,CAAK,CACpD,KAEO,QAAQ,GADA,KAAK,IAAI/G,CAAC,EAAI,GAAK,GAAM3D,EAAI,IACnB,IAAO,KAAK,IAAI,CAAC0K,CAAK,CAE/C,KAAU,CAEN,IAAIY,EAAQ,EACRC,EAAM,EACNC,EAAQxN,EACRyN,EAAMzN,GAAK,EAAK9O,GAChB0G,EAAI,EAAI8V,EAAKC,EAGfL,EAAQtN,EAAIuN,EAAM3V,EAAI0V,EACtBE,EAAQxN,EAAIyN,EAAM7V,EAAI4V,EACtBE,EAAMJ,EAAQE,EACd5V,GAAK,EACL,IAAIgW,EAAMhW,EAAI1G,EAKd,IAJAqc,EAAMD,EAAQM,EAAML,EACpBE,EAAMD,EAAQI,EAAMH,EACpBE,EAAMJ,EAAME,EAEL,KAAK,IAAIE,EAAMD,CAAG,GAAKjD,EAAMkD,GACjCL,EAAQtN,EAAIuN,EAAM3V,EAAI0V,EACtBE,EAAQxN,EAAIyN,EAAM7V,EAAI4V,EACtBE,EAAMJ,EAAQE,EACd5V,GAAK,EACLgW,EAAMhW,EAAI1G,EACVqc,EAAMD,EAAQM,EAAML,EACpBE,EAAMD,EAAQI,EAAMH,EACpBE,EAAMJ,EAAME,EAGjB,OAAQE,CACR,CACJ,CAUA,SAASE,GAAM3c,EAAGC,EAAGqa,EAAQf,EAAK,CAG/B,MAAM3G,EAAK,iBACLC,EAAK,iBAGLd,EAAK,MAAM,GAAS,CAAC,EACrB6D,EAAK,MAAM,GAAS,CAAC,EACrBlP,EAAI,MAAM,GAAS,CAAC,EACpB6I,EAAI,MAAM,GAAS,CAAC,EAE1B,IAAIqN,EAAI5c,EAAIoY,GAAM,CAACkC,EAAOta,CAAC,EAAIC,EAAImY,GAAMkC,EAAOra,CAAC,EAAGyU,EAEtD,GADAA,EAAI,KAAK,IAAI,CAACkI,CAAC,EACXlI,GAAK,EAAI,MAAO,GAElB,IAAImI,EAAK,KAAK,KAAKD,CAAC,EAClBnI,EAAIoI,EAAKhK,EAAK,GACdiK,EAAKF,EAAIA,EACT,EAAGlF,EAAI3B,EAAIgH,EAET/c,EAAIC,GACP,EAAID,EAAIC,EACRyX,EAAK,GAAM,EAAI,GACf3B,GAAM9V,EAAID,GAAKC,EACf8c,EAAK,EAAK,KAAK,KAAK/c,GAAK,EAAI,EAAG,IAE9B,EAAIC,EAAID,EACR0X,EAAK,GAAM,EAAI,GACf3B,GAAM9V,EAAID,GAAKA,EACf+c,EAAK,EAAK,KAAK,KAAK9c,GAAK,EAAI,EAAG,GAGnC8R,EAAG,CAAC,EAAIgE,EAAK,kBACbrP,EAAE,CAAC,EAAIqL,EAAG,CAAC,EAAI,IACfxC,EAAE,CAAC,EAAI,CAAC7I,EAAE,CAAC,EACX,IAAIsW,EAAK,GAAMpK,EAAKmC,GAAM,EAAG8H,CAAE,EAC7BI,EAAKpK,EACLrD,EAAMwN,EAAKzN,EAAE,CAAC,EAAIwN,EAAKE,EAErB3N,EAAI,EACN4N,EAAK,EAAI,EACTC,EAAK,EACLhI,EAAI4H,EACJK,EAAO3I,EACP4I,EAAKP,EAEP,QAASnU,EAAI,EAAGA,GAAK,GAAQA,GAAK,EAAG,CACpCwU,GAAMD,EACNnL,EAAGpJ,EAAI,CAAC,EAAI+O,EAAK,GAAM,EAAIyF,EAAK,IAAOxU,EAAI,GAC3C,IAAI2U,GAAM3U,EAAI,EACd2G,GAAK6N,EACLpL,EAAGuL,GAAM,CAAC,EAAIvH,EAAK,EAAKzG,GAAK3G,EAAI,GAE/B,QAASjH,EAAIiH,EAAGjH,GAAK4b,GAAK,EAAE5b,EAAG,CAC5B,IAAIyR,GAAKzR,EAAI,GAAM,IACnBkU,EAAG,CAAC,EAAIzC,EAAIpB,EAAG,CAAC,EAChB,QAAS3C,EAAI,EAAGA,GAAK1N,EAAG,EAAE0N,EAAG,CAC1B,IAAImO,GAAO,EACX,QAASzM,GAAI,EAAGA,IAAK1B,EAAE,EAAG,EAAE0B,GAAG,CAC5B,IAAI0M,GAAMpO,EAAI0B,GACdyM,KAASzM,GAAIqC,EAAIqK,IAAOzL,EAAGjB,GAAI,CAAC,EAAI8E,EAAG4H,GAAM,CAAC,CAChD,CACL5H,EAAGxG,EAAI,CAAC,EAAI+D,EAAIpB,EAAG3C,EAAI,CAAC,EAAImO,GAAOnO,CACnC,CACD1I,EAAEhF,EAAI,CAAC,EAAIkU,EAAGlU,EAAI,CAAC,GAAKA,EAAI,GAE5B,IAAI+b,EAAO,EACX,QAAS3M,EAAI,EAAGA,GAAKpP,EAAE,EAAG,EAAEoP,EAC3B2M,GAAQlO,EAAE7N,EAAIoP,EAAI,CAAC,EAAIpK,EAAEoK,EAAI,CAAC,EAE/BvB,EAAE7N,EAAI,CAAC,EAAI,EAAE+b,EAAO/W,EAAEhF,EAAI,CAAC,EAC7B,CAECsb,EAAKnK,EAAKuK,GAAQzU,EAAI,GAAMqU,EAC5BC,EAAKpK,EAAKwK,EAAK1U,EAAIsU,EACnBG,EAAON,EAAKM,EACZC,EAAKP,EAAKO,EACVlI,GAAK4H,EACP,IAAIhS,EAAKwE,EAAE5G,EAAI,CAAC,EAAIwM,EAAI6H,EACxB7H,GAAK4H,EACL,IAAIW,EAAKnO,EAAE+N,GAAM,CAAC,EAAInI,EAAI8H,EAE1B,GADAzN,GAAOzE,EAAK2S,EACR,KAAK,IAAI3S,CAAE,EAAI,KAAK,IAAI2S,CAAE,GAAKnE,EAAM/J,EACtC,KAEH,CAEH,IAAIyH,EAAI,KAAK,IAAI,CAACtB,GAAM3V,EAAGC,CAAC,CAAC,EAC7B,OAAO2S,EAAK8B,EAAIuC,EAAIzH,CACrB,CAUA,SAASgF,GAAOxU,EAAGC,EAAG6O,EAAGgG,EAAG,CAGzB,IAAIK,EAAI,EAAGkD,EAAK,EAGhB,SAASsF,EAAQ5L,EAAI6D,EAAIuF,EAAIyC,EAAS,CACnC,MAAMzI,EAAI4E,GAAMhI,EAAI6D,EAAIuF,EAAI,KAAG,EAC/B,OAAOyC,EAAU,GAAMzI,EAAI,GAAMA,CACnC,CAED,SAAS0I,EAAS9L,EAAI6D,EAAIwF,EAAIwC,EAAS,CACpC,MAAMvF,EAAK0B,GAAMnE,EAAI7D,EAAIqJ,EAAI,KAAG,EAChC,OAAOwC,EAAUvF,EAAK,GAAMA,EAAK,EACnC,CAED,SAASyF,EAAO/L,EAAI6D,EAAIuF,EAAIC,EAAId,EAAQsD,EAAS,CAC9C,MAAMzI,EAAIkF,GAAMtI,EAAI6D,EAAIuF,EAAIC,EAAId,EAAQ,qBAAQ,EAChD,OAAOsD,EAAU,GAAMzI,EAAI,GAAMA,CACnC,CAED,SAAS+C,EAAKnG,EAAI6D,EAAIuF,EAAIC,EAAIwC,EAAS,CACpC,IAAIjV,EAAI,KAAK,MAAMiN,CAAE,EACrBA,EAAKA,EAAKjN,EACNiN,IAAO,IACRjN,EAAIA,EAAI,EACRiN,EAAK,GAGR,IAAIT,EAAI8E,GAAIrE,EAAI7D,EAAIqJ,EAAID,EAAIxS,EAAG,KAAG,EAClC,OAAIwS,GAAM,IACPhG,EAAIA,EAAI4E,GAAMhI,EAAI6D,EAAIuF,EAAI,KAAG,EACtByC,EAAU,GAAMzI,EAAI,GAAMA,IAGhCpD,GAAM,KACPpJ,EAAI,GACJwM,EAAIA,EAAI8E,GAAIlI,EAAI6D,EAAIuF,EAAIC,EAAIzS,EAAG,KAAG,EAClCoJ,EAAKA,EAAKpJ,GAGbwM,EAAIkG,GAAMtJ,EAAI6D,EAAIuF,EAAIC,EAAIjG,EAAG,GAAK,KAAG,EAC9ByI,EAAU,GAAMzI,EAAI,GAAMA,EACnC,CAED,GAAInV,EAAI,MAAM,MAAQC,EAAI,MAAM,KAE7B,OAAOA,GAAKD,EAAIC,GAGnB,IAAI8R,EAAI6D,EAAIuF,EAAIC,EAAIwC,EACpB,GAAI5d,GAAK,GAAKC,GAAK,EAAG,CASnB,GARI6O,EAAI,IACL8O,EAAU,GACV7L,EAAK9R,EAAGkb,EAAKrG,EAAGc,EAAK5V,EAAGob,EAAKtM,IAE7B8O,EAAU,GACV7L,EAAK/R,EAAGmb,EAAKrM,EAAG8G,EAAK3V,EAAGmb,EAAKtG,GAG5Bc,EAAK,KAAK,IAAI,MAAK,MAAM7D,CAAE,EAC5B,OAAAoD,EAAImE,GAAMvH,EAAI6D,EAAIuF,EAAI,KAAG,EAClByC,EAAU,GAAMzI,EAAI,GAAMA,EAGpC,GAAIpD,EAAK,KAAK,IAAI,MAAK,MAAM6D,CAAE,GAAKA,EAAKuF,GAAM,EAC5C,OAAA9C,EAAKsB,GAAM5H,EAAI6D,EAAIuF,EAAI,KAAG,EACnByC,EAAUvF,EAAK,GAAMA,EAAK,GAGpC,GAAI,KAAK,IAAItG,EAAI6D,CAAE,EAAI,EAAI,CACxB,GAAIA,GAAM,EAAI,OAAO+H,EAAQ5L,EAAI6D,EAAIuF,EAAIyC,CAAO,EAChD,GAAIzC,GAAM,IAAM,OAAO0C,EAAS9L,EAAI6D,EAAIwF,EAAIwC,CAAO,EACnD,GAAIzC,EAAK,IAAO,KAAK,IAAIA,EAAKvF,EAAI7D,CAAE,GAAK,GAAK,OAAO4L,EAAQ5L,EAAI6D,EAAIuF,EAAIyC,CAAO,CACzF,KAAa,CAEJ,GADI7L,GAAM,KAAK,IAAI,GAAK6D,CAAE,GACtB,KAAK,IAAIuF,EAAIpJ,CAAE,GAAK,GAAK,OAAO4L,EAAQ5L,EAAI6D,EAAIuF,EAAIyC,CAAO,EAC/D,GAAIzC,GAAM,GAAK,OAAO0C,EAAS9L,EAAI6D,EAAIwF,EAAIwC,CAAO,CACpD,CAED,IAAIG,EAAU,GAWd,OAVI,KAAK,IAAIhM,EAAI6D,CAAE,EAAI,GAAMA,EAAK,GAC/ByC,EAAK,GAGL0F,EAAU,GACV1F,EAAK4B,GAAIrE,EAAI7D,EAAIqJ,EAAID,EAAI,GAAG,KAAU,EACtCvF,GAAM,IAGTyC,EAAKgD,GAAMzF,EAAI7D,EAAIqJ,EAAID,EAAI9C,EAAI,GAAK,KAAU,EAC1CA,GAAM,GAAM,EAAIA,GAAMA,EAAK,OAAO,WAC/B0F,EACD1F,EAAK4B,GAAIrE,EAAK,EAAG7D,EAAIqJ,EAAID,EAAI,EAAG,KAAS,EAEzC9C,EAAK,OAAO,kBAEfA,EAAKgD,GAAMzF,EAAI7D,EAAIqJ,EAAID,EAAI9C,EAAI,GAAK,KAAS,EAC7ClD,EAAK,CAAC,MAAMkD,CAAE,EACPuF,EAAU,GAAMzI,EAAI,GAAMA,IAGpCA,EAAI,GAAMkD,EAAK,GACRuF,EAAU,GAAMzI,EAAI,GAAMA,EACvC,KAAU,CAEJ,IAAImF,EAAS,OAAO,SAASta,EAAIC,CAAC,EAAKD,EAAIC,GAAKD,EAAIC,GAAK6U,EAAI7U,EAAID,GAAKA,EAAIC,GAAK6O,EAAK9O,EAAI8U,EAAI7U,EAAI6O,EAChG,MAAM8O,EAAUtD,EAAS,EACzB,IAAIvI,EAAI6D,EAAIuF,EAAIC,EAOhB,GANIwC,GACDtD,EAAS,CAACA,EACVvI,EAAK9R,EAAGkb,EAAKrG,EAAGc,EAAK5V,EAAGob,EAAKtM,IAE7BiD,EAAK/R,EAAGmb,EAAKrM,EAAG8G,EAAK3V,EAAGmb,EAAKtG,GAE5Bc,EAAK,GACN,OAAIA,EAAKuF,GAAM,GAAYwC,EAAQ5L,EAAI6D,EAAIuF,EAAIyC,CAAO,EAC1C1F,EAAKnG,EAAI6D,EAAIuF,EAAIC,EAAIwC,CAAO,EACpC,GAAI7L,EAAK6D,GACb,GAAIA,GAAM,KAAS0E,EAAS1E,EAAK,IAAM,OAAOkI,EAAO/L,EAAI6D,EAAIuF,EAAIC,EAAId,EAAQsD,CAAO,MAChF,IAAI7L,GAAM,IACd,OAAO+L,EAAO/L,EAAI6D,EAAIuF,EAAIC,EAAId,EAAQsD,CAAO,EACzC,GAAItD,EAASvI,EAAK,IACtB,OAAO+L,EAAO/L,EAAI6D,EAAIuF,EAAIC,EAAId,EAAQsD,CAAO,EAGhD,OAAAzI,EAAIwH,GAAM5K,EAAI6D,EAAI0E,EAAQ,MAAM,GAAG,EAC5BsD,EAAU,GAAMzI,EAAI,GAAMA,CACnC,CACJ,CCv0EO,SAAS6I,GAAGC,EAAG,CAEnB,MAAM7O,EAAI6O,EAAE,MACNtV,EAAIsV,EAAE,MAEZ,GAAI7O,EAAIzG,EAAG,CACR,MAAMoE,EAAMiR,GAAGC,EAAE,OAAO,CAAA,EAAIC,GAAM,IAAI,EAAG9O,CAAC,CAAC,CAAC,EAC5C,MAAO,CAAC,EAAErC,EAAI,EAAG,EAAEoR,GAAUpR,EAAI,EAAGkR,CAAC,CAAC,CACxC,CAED,IAAIG,EAAIC,GAAO,IAAIjP,CAAC,EAChBkP,EAAKL,EAAE,IAEX,QAASnN,EAAI,EAAGA,GAAKnI,EAAGmI,IACrB,QAASpP,EAAI0N,EAAG1N,GAAMoP,EAAI,EAAIpP,IAAK,CAEhC,MAAMyR,EAAImL,EAAG,EAAE,UAAU5c,EAAI,GAAKiH,EAAGjH,EAAIiH,CAAC,EACpCuK,EAAKkL,EAAE,EAAE,UAAU1c,EAAI,GAAK0N,EAAG1N,EAAI0N,CAAC,EACpCmP,EAAKpL,EAAE,QACPqL,EAAKtL,EAAE,QAEP,CAACxM,EAAG4I,EAAGmP,CAAI,EAAIC,GAAIH,EAAGzN,EAAI,CAAC,EAAGyN,EAAGzN,EAAI,EAAInI,CAAC,CAAC,EAGjD,QAAStJ,EAAI,EAAGA,EAAIsJ,EAAGtJ,IAEpB8T,EAAE9T,CAAC,EAAQkf,EAAGlf,CAAC,EAAKqH,EAAI6X,EAAGlf,EAAIsJ,CAAC,EAAI2G,EACpC6D,EAAE9T,EAAIsJ,CAAC,EAAI4V,EAAGlf,CAAC,EAAI,CAACiQ,EAAIiP,EAAGlf,EAAIsJ,CAAC,EAAIjC,EAEpCwM,EAAE7T,CAAC,EAAQmf,EAAGnf,CAAC,EAAKqH,EAAI8X,EAAGnf,EAAI+P,CAAC,EAAIE,EACpC4D,EAAE7T,EAAI+P,CAAC,EAAIoP,EAAGnf,CAAC,EAAI,CAACiQ,EAAIkP,EAAGnf,EAAI+P,CAAC,EAAI1I,EAGvC,QAASrH,EAAIsJ,EAAGtJ,EAAI+P,EAAG/P,IACpB6T,EAAE7T,CAAC,EAAQmf,EAAGnf,CAAC,EAAKqH,EAAI8X,EAAGnf,EAAI+P,CAAC,EAAIE,EACpC4D,EAAE7T,EAAI+P,CAAC,EAAIoP,EAAGnf,CAAC,EAAI,CAACiQ,EAAIkP,EAAGnf,EAAI+P,CAAC,EAAI1I,CAEzC,CAGJ,MAAMsO,EAAMkJ,GAAM,IAAI,EAAGvV,CAAC,EAC1B,MAAO,CACJ,EAAGyG,IAAMzG,EAAIyV,EAAIA,EAAE,OAAO,CAAE,EAAEpJ,CAAG,EACjC,EAAG5F,IAAMzG,EAAI2V,EAAG,EAAC,EAAKA,EAAG,OAAO,CAAA,EAAItJ,CAAG,EAAE,EAAG,CAC9C,CACJ,CA6TO,SAAS0J,GAAI9B,EAAGhD,EAAG,CAEvB,GAAIgD,GAAK,EACN,MAAO,CAAC,EAAG,EAAGhD,CAAC,EAGlB,GAAI,KAAK,IAAIgD,CAAC,EAAI,KAAK,IAAIhD,CAAC,EAAG,CAC5B,MAAMlF,EAAIkF,EAAIgD,EACRc,EAAK,KAAK,KAAK,EAAIhJ,EAAIA,CAAC,EACxBhO,EAAI,EAAIgX,EACd,MAAO,CAAChX,EAAGgO,EAAIhO,EAAGkW,EAAIc,CAAE,CAC1B,CAED,MAAM,EAAId,EAAIhD,EACR8D,EAAK,KAAK,KAAK,EAAI,EAAI,CAAC,EACxB,EAAI,EAAIA,EACd,MAAO,CAAC,EAAI,EAAG,EAAG9D,EAAI8D,CAAE,CAC3B,CCrcO,SAASiB,GAAS7P,EAAG,CACzB,OAAO,OAAOA,GAAO,QACxB,CA4DO,SAASqP,GAAUF,EAAGW,EAAG,CAM7B,GAJIA,IAAM,SACPA,EAAIX,GAGH,CAACY,GAASZ,CAAC,GAAK,CAACY,GAASD,CAAC,EAC5B,MAAM,MAAM,2DAA2D,EAG1E,MAAME,EAAMb,EAAE,MACRc,EAAMd,EAAE,MAERe,EAAMJ,EAAE,MACRK,EAAML,EAAE,MAGRM,EAAQH,EACRI,EAAQF,EACRG,EAASN,EACT7Q,EAAM,IAAI,aAAaiR,EAAQC,CAAK,EAE1C,QAAS,EAAI,EAAG,EAAIA,EAAO,IAAK,CAE7B,MAAME,EAAKT,EAAE,EAAE,SAAS,EAAII,GAAM,EAAI,GAAKA,CAAG,EAGxCM,EAAOrR,EAAI,SAAS,EAAIiR,GAAQ,EAAI,GAAKA,CAAK,EAEpD,QAAS/L,EAAI,EAAGA,EAAI+L,EAAO/L,IAAK,CAG7B,MAAMoM,EAAKtB,EAAE,EAAE,SAAS9K,EAAI2L,GAAM3L,EAAI,GAAK2L,CAAG,EAE9C,IAAIxP,EAAI,EACR,QAAS5N,EAAI,EAAGA,EAAI0d,EAAQ1d,IACzB4N,GAAKiQ,EAAG7d,CAAC,EAAI2d,EAAG3d,CAAC,EAEpB4d,EAAKnM,CAAC,EAAI7D,CACZ,CACH,CAED,OAAO,IAAI+O,GAAOpQ,EAAKiR,EAAOC,CAAK,CACtC,CA6GO,SAASK,GAAQjf,EAAKkf,EAAMC,EAAM,CAEtC,GAAIA,IAAS,OAAW,CACrB,GAAID,IAASlf,EAAI,EAAE,OAChB,MAAM,MAAM,4EAA4E,EAE3F,OAAO,IAAIyO,GAAOzO,EAAI,CAAC,CACzB,CAED,GAAIA,EAAI,EAAE,SAAWkf,EAAOC,EACzB,MAAM,MAAM,4EAA4E,EAG3F,OAAO,IAAIrB,GAAO9d,EAAI,EAAGkf,EAAMC,CAAI,CACtC,CAiBO,SAASb,GAASZ,EAAG,CACzB,OAAOA,GAAKA,EAAE,cAAgBI,EACjC,CAmBO,MAAMsB,GAAN,MAAMA,EAAO,CAmBjB,YAAazR,EAAQgR,EAAOC,EAAO,CAChC,GAAI,CAAC,YAAY,OAAOjR,CAAM,GAAKA,EAAO,cAAgByR,GAAO,kBAC9D,MAAM,MAAM,kDAAkD,EAGjE,GAAIT,IAAU,GAAKC,IAAU,EAC1B,MAAM,MAAM,0DAA0D,EAGzE,GAAIjR,EAAO,SAAWgR,EAAQC,EAC3B,MAAM,MAAM,wEAAwE,EAGvF,KAAK,EAAIjR,EACT,KAAK,MAAQgR,EACb,KAAK,MAAQC,CACf,CASD,KAAM,CAEH,GAAI,KAAK,QAAU,KAAK,MACrB,MAAM,MAAM,6CAA6C,EAG5D,MAAMxW,EAAI,KAAK,MAEf,GAAI,KAAK,oBAAqB,CAE3B,GAAI,KAAK,oBAEN,OAAOgX,GAAO,MAAM,KAAK,KAAI,EAAG,MAAM/R,GAAK,KAAK,IAAIA,CAAC,EAAI,OAAO,QAAU,EAAIA,EAAI,CAAC,CAAC,EAIvF,MAAMgS,EAAID,GAAO,IAAIhX,CAAC,EAChBkX,EAAKF,GAAO,IAAIhX,CAAC,EACjBmX,EAAK,KAAK,IAGVxQ,EAAIwQ,EAAG,GAAGnX,EAAI,GAAKA,GAAKA,EAAI,EAAE,EAC9BjC,EAAIiC,EAAI,EACd,QAASwK,EAAI,EAAGA,EAAIxK,EAAGwK,IACpB0M,EAAG,EAAEnZ,EAAIiC,EAAIwK,CAAC,EAAIyM,EAAE,EAAElZ,EAAIiC,EAAIwK,CAAC,EAAI7D,EAItC,QAAS5I,EAAIiC,EAAI,EAAGjC,GAAK,EAAGA,IAAK,CAC9B,IAAI4I,EAAIsQ,EAAE,UAAUlZ,EAAI,CAAC,EACzB,MAAMqZ,EAAKD,EAAG,UAAUpZ,EAAI,CAAC,EAC7B,QAASyM,EAAIzM,EAAI,EAAGyM,EAAIxK,EAAGwK,IAAM,CAC9B,MAAMkM,EAAKQ,EAAG,UAAU1M,EAAI,CAAC,EAC7B7D,EAAIA,EAAE,SAAS+P,EAAG,KAAKU,EAAG5M,CAAC,CAAC,CAAC,CAC/B,CACD0M,EAAG,EAAE,IAAIvQ,EAAE,OAAOyQ,EAAGrZ,CAAC,CAAC,EAAE,EAAGA,EAAIiC,CAAC,CACnC,CAED,OAAOkX,EAAG,EAAG,CACf,CAGD,GAAI,KAAK,oBAAqB,CAG3B,MAAMtQ,EAAI,KAAK,OACf,GAAIE,GAAKF,CAAC,EAAI,OAAO,QAClB,MAAM,MAAM,oCAAoC,EAInD,MAAMqQ,EAAID,GAAO,IAAIhX,CAAC,EAChBkX,EAAKF,GAAO,IAAIhX,CAAC,EACjBmX,EAAK,KAAK,IAGVpZ,EAAI,EACJ4I,EAAIwQ,EAAG,EAAE,CAAC,EAChB,QAAS3M,EAAI,EAAGA,EAAIxK,EAAGwK,IACpB0M,EAAG,EAAEnZ,EAAIiC,EAAIwK,CAAC,EAAIyM,EAAE,EAAElZ,EAAIiC,EAAIwK,CAAC,EAAI7D,EAItC,QAAS5I,EAAI,EAAGA,EAAIiC,EAAGjC,IAAK,CACzB,IAAI4I,EAAIsQ,EAAE,UAAUlZ,EAAI,CAAC,EACzB,MAAMqZ,EAAKD,EAAG,UAAUpZ,EAAI,CAAC,EAC7B,QAASyM,EAAI,EAAGA,EAAIzM,EAAGyM,IAAM,CAC1B,MAAMkM,EAAKQ,EAAG,UAAU1M,EAAI,CAAC,EAC7B7D,EAAIA,EAAE,SAAS+P,EAAG,KAAKU,EAAG5M,CAAC,CAAC,CAAC,CAC/B,CACD0M,EAAG,EAAE,IAAIvQ,EAAE,OAAOyQ,EAAGrZ,CAAC,CAAC,EAAE,EAAGA,EAAIiC,CAAC,CACnC,CAED,OAAOkX,EAAG,EAAG,CACf,CAGD,MAAM1M,EAAI6K,GAAG,IAAI,EACjB,GAAI,CAAC7K,EAAE,EAAE,oBACN,MAAM,MAAM,gEAAgE,EAG/E,OAAOA,EAAE,EAAE,IAAK,EAAC,IAAIA,EAAE,EAAE,EAAC,CAAE,CAC9B,CAQD,mBAAoB,CAEjB,GAAI,KAAK,QAAU,KAAK,MAAO,MAAO,GACtC,QAASrC,EAAI,EAAGA,EAAI,KAAK,MAAOA,IAC7B,QAASpP,EAAI,EAAGA,EAAIoP,EAAGpP,IACpB,GAAI,KAAK,IAAI,KAAK,EAAEoP,EAAI,KAAK,MAAQpP,CAAC,CAAC,EAAIie,GAAO,UAAW,MAAO,GAI1E,MAAO,EACT,CAQD,mBAAoB,CAEjB,GAAI,KAAK,QAAU,KAAK,MAAO,MAAO,GAEtC,QAAS7O,EAAI,EAAGA,EAAI,KAAK,MAAOA,IAC7B,QAASpP,EAAIoP,EAAI,EAAGpP,EAAI,KAAK,MAAOA,IACjC,GAAI,KAAK,IAAI,KAAK,EAAEoP,EAAI,KAAK,MAAQpP,CAAC,CAAC,EAAIie,GAAO,UAAW,MAAO,GAI1E,MAAO,EACT,CASD,MAAO,CAEJ,MAAMhX,EAAI,KAAK,IAAI,KAAK,MAAO,KAAK,KAAK,EACnCsF,EAAM,IAAI,aAAatF,CAAC,EAC9B,QAAS4V,EAAK,EAAGA,EAAK5V,EAAG4V,IACtBtQ,EAAIsQ,CAAE,EAAI,KAAK,UAAUA,EAAK,CAAC,EAAEA,CAAE,EAGtC,OAAO,IAAIvP,GAAOf,CAAG,CACvB,CASD,GAAI,CAED,MAAM+R,EAAY,KAAK,MACjBC,EAAY,KAAK,MACjBhS,EAAM,IAAI0R,GAAO,kBAAkB,KAAK,EAAE,MAAM,EAEtD,GAAI,KAAK,MAAQ,KAAK,MAAO,CAC1B,QAAQje,EAAI,EAAGA,EAAI,KAAK,MAAOA,IAAK,CACjC,MAAMoN,EAAI,KAAK,EAAE,SAASpN,EAAI,KAAK,OAAQA,EAAI,GAAK,KAAK,KAAK,EAC9D,QAAQoP,EAAI,EAAGA,EAAI,KAAK,MAAOA,IAC5B7C,EAAI6C,EAAImP,EAAYve,CAAC,EAAIoN,EAAEgC,CAAC,CAEjC,CAED,OAAO,IAAI6O,GAAO1R,EAAKgS,EAAWD,CAAS,CAC7C,CAED,QAAQlP,EAAI,EAAGA,EAAI,KAAK,MAAOA,IAAK,CACjC,MAAMoP,EAAOjS,EAAI,SAAS6C,EAAImP,GAAYnP,EAAI,GAAKmP,CAAS,EAC5D,QAAQve,EAAI,EAAGA,EAAI,KAAK,MAAOA,IAC5Bwe,EAAKxe,CAAC,EAAI,KAAK,EAAEA,EAAI,KAAK,MAAQoP,CAAC,CAExC,CAED,OAAO,IAAI6O,GAAO1R,EAAKgS,EAAWD,CAAS,CAC7C,CAWD,IAAI/B,EAAG,CAEJ,GAAIlP,GAASkP,CAAC,EACX,OAAO,IAAI0B,GAAOQ,GAAK,KAAK,EAAGlC,EAAE,EAAG,KAAK,MAAO,KAAK,MAAOA,EAAE,OAAQ,CAAC,EAAG,KAAK,MAAO,CAAC,EAG1F,GAAIY,GAASZ,CAAC,EACX,OAAO,IAAI0B,GAAOQ,GAAK,KAAK,EAAGlC,EAAE,EAAG,KAAK,MAAO,KAAK,MAAOA,EAAE,MAAOA,EAAE,KAAK,EAAG,KAAK,MAAOA,EAAE,KAAK,EAGrG,MAAM,MAAM,iDAAiD,CAC/D,CAYD,GAAGA,EAAGmC,EAAKC,EAAM,CAEd,GAAIxB,GAASZ,CAAC,EACX,OAAO,IAAI0B,GAAOW,GAAM,KAAK,EAAGrC,EAAE,EAAGmC,CAAG,EAAG,KAAK,MAAO,KAAK,KAAK,EAGpE,GAAIzB,GAASV,CAAC,EACX,OAAO,IAAI0B,GAAOY,GAAM,KAAK,EAAGtC,EAAGmC,CAAG,EAAG,KAAK,MAAO,KAAK,KAAK,EAGlE,GAAI,CAACrR,GAASkP,CAAC,EACZ,MAAM,IAAI,MAAM,0DAA0D,EAO7E,GAJIoC,IAAS,SACVA,EAAOpC,EAAE,SAAW,KAAK,MAAQ,EAAI,GAGpCoC,IAAS,GAAKpC,EAAE,SAAW,KAAK,MAAO,CAExC,MAAMhQ,EAAM,IAAI0R,GAAO,kBAAkB,KAAK,EAAE,MAAM,EACtD,QAASjZ,EAAI,EAAGA,EAAI,KAAK,MAAOA,IAC7BuH,EAAI,IAAIsS,GAAM,KAAK,UAAU7Z,EAAI,CAAC,EAAGuX,EAAE,EAAEvX,CAAC,EAAG0Z,CAAG,EAAG1Z,EAAI,KAAK,KAAK,EAGpE,OAAO,IAAIiZ,GAAO1R,EAAK,KAAK,MAAO,KAAK,KAAK,CAC/C,CAED,GAAIoS,IAAS,GAAKpC,EAAE,SAAW,KAAK,MAAO,CAExC,MAAMhQ,EAAM,IAAI0R,GAAO,kBAAkB,KAAK,EAAE,MAAM,EACtD,QAASjZ,EAAI,EAAGA,EAAI,KAAK,MAAOA,IAC7BuH,EAAI,IAAIqS,GAAM,KAAK,UAAU5Z,EAAI,CAAC,EAAGuX,EAAE,EAAGmC,CAAG,EAAG1Z,EAAI,KAAK,KAAK,EAGjE,OAAO,IAAIiZ,GAAO1R,EAAK,KAAK,MAAO,KAAK,KAAK,CAC/C,CAED,MAAM,IAAI,MAAM,8FAA8F,CAEhH,CAWD,IAAIgQ,EAAG,CACJ,OAAO,KAAK,GAAGA,EAAG,CAACje,EAAGC,IAAMD,EAAIC,CAAC,CACnC,CAUD,SAASge,EAAG,CACT,OAAO,KAAK,GAAGA,EAAG,CAACje,EAAGC,IAAMD,EAAIC,CAAC,CACnC,CAWD,KAAKge,EAAG,CACL,OAAO,KAAK,GAAGA,EAAG,CAACje,EAAGC,IAAMD,EAAIC,CAAC,CACnC,CAWD,OAAOge,EAAG,CACP,OAAO,KAAK,GAAGA,EAAG,CAACje,EAAGC,IAAMD,EAAIC,CAAC,CACnC,CAWD,MAAMmgB,EAAKC,EAAM,CAQd,GALIA,IAAS,SACVA,EAAO,GAINA,GAAQ,EAAG,CACZ,MAAM1X,EAAI,KAAK,MACTsF,EAAM,IAAI0R,GAAO,kBAAkBhX,CAAC,EAC1C,QAAS,EAAI,EAAG,EAAIA,EAAG,IACpBsF,EAAI,CAAC,EAAImS,EAAI,KAAK,UAAU,EAAI,CAAC,CAAC,EAErC,OAAO,IAAIpR,GAAOf,CAAG,CACvB,CAGD,GAAIoS,GAAQ,EACT,OAAO,KAAK,EAAG,EAAC,MAAMD,EAAK,CAAC,EAI/B,GAAIC,GAAQ,EAAG,CACZ,MAAM1X,EAAI,KAAK,EAAE,OACXsF,EAAM,IAAI0R,GAAO,kBAAkBhX,CAAC,EAC1C,QAAS,EAAI,EAAG,EAAIA,EAAG,IACpBsF,EAAI,CAAC,EAAImS,EAAI,KAAK,EAAE,CAAC,CAAC,EAEzB,OAAO,IAAIT,GAAO1R,EAAK,KAAK,MAAO,KAAK,KAAK,CAC/C,CACH,CAmBD,QAASgQ,EAAGuC,EAAMC,EAAM,CAEjB,OAAOD,GAAU,WAClBA,EAAO,CAACA,CAAI,GAGXA,EAAK,SAAW,IACjBA,EAAOtC,GAAM,IAAI,EAAG,KAAK,KAAK,GAG5BvO,GAAQ6Q,CAAI,IACdA,EAAOjZ,GAAMiZ,CAAI,GAGhB,OAAOC,GAAU,WAClBA,EAAO,CAACA,CAAI,GAGXA,EAAK,SAAW,IACjBA,EAAOvC,GAAM,IAAI,EAAG,KAAK,KAAK,GAG5BvO,GAAQ8Q,CAAI,IACdA,EAAOlZ,GAAMkZ,CAAI,GAGpB,MAAMvB,EAAQsB,EAAK,OACbrB,EAAQsB,EAAK,OAEnB,GAAI/Q,GAAI8Q,CAAI,EAAI,GAAK1Q,GAAI0Q,CAAI,EAAI,KAAK,MACnC,MAAM,MAAM,mEAAmE,EAGlF,GAAI9Q,GAAI+Q,CAAI,EAAI,GAAK3Q,GAAI2Q,CAAI,EAAI,KAAK,MACnC,MAAM,MAAM,sEAAsE,EAGrF,GAAIxC,EAAE,QAAUiB,GAASjB,EAAE,QAAUkB,EAClC,MAAM,MAAM,8DAA8D,EAG7E,QAASuB,EAAK,EAAGA,EAAKD,EAAK,OAAQC,IAAM,CACtC,MAAMX,EAAK9B,EAAE,UAAUyC,EAAK,CAAC,EACvBC,GAAMF,EAAK,EAAEC,CAAE,EAAI,GAAK,KAAK,MACnC,QAASE,EAAK,EAAGA,EAAKJ,EAAK,OAAQI,IAAM,CACtC,MAAMzN,EAAIqN,EAAK,EAAEI,CAAE,EACnB,KAAK,EAAED,EAAKxN,EAAI,CAAC,EAAI4M,EAAGa,CAAE,CAC5B,CACH,CAED,OAAO,IACT,CASD,MAAO,CACJ,OAAO,IAAIjB,GAAO,KAAK,EAAE,QAAS,KAAK,MAAO,KAAK,KAAK,CAC1D,CAUD,OAAOiB,EAAI,CAER,GAAIA,EAAK,GAAKA,EAAK,KAAK,MACrB,MAAM,MAAM,0BAA0B,EAGzC,MAAMhT,EAAI,IAAIoB,GAAO,kBAAkB,KAAK,KAAK,EACjD,QAAStI,EAAI,EAAGA,EAAI,KAAK,MAAOA,IAC7BkH,EAAElH,CAAC,EAAI,KAAK,UAAUA,EAAI,CAAC,EAAEka,EAAK,CAAC,EAEtC,OAAO,IAAI5R,GAAOpB,CAAC,CACrB,CAWD,UAAU8S,EAAI,CAEX,GAAIA,EAAK,GAAKA,EAAK,KAAK,MACrB,MAAM,MAAM,gCAAgC,EAG/C,OAAO,IAAI1R,GAAO,KAAK,EAAE,OAAO0R,EAAK,GAAK,KAAK,MAAOA,EAAK,KAAK,KAAK,CAAC,CACxE,CAWD,UAAUA,EAAI,CACX,OAAO,KAAK,EAAE,UAAUA,EAAK,GAAK,KAAK,MAAOA,EAAK,KAAK,KAAK,CAC/D,CAeD,OAAOF,EAAMC,EAAM,CAkBhB,GAhBI,OAAOD,GAAU,WAClBA,EAAOjZ,GAAM,CAACiZ,CAAI,CAAC,GAGlB,OAAOC,GAAU,WAClBA,EAAOlZ,GAAM,CAACkZ,CAAI,CAAC,GAGlB,MAAM,QAAQD,CAAI,IACnBA,EAAOA,EAAK,SAAW,EAAI,KAAOjZ,GAAMiZ,CAAI,GAG3C,MAAM,QAAQC,CAAI,IACnBA,EAAOA,EAAK,SAAW,EAAI,KAAOlZ,GAAMkZ,CAAI,GAG3CD,IAAS,MAAQ,CAAC7Q,GAAQ6Q,CAAI,EAC/B,MAAM,MAAM,sEAAsE,EAGrF,GAAIC,IAAS,MAAQ,CAAC9Q,GAAQ8Q,CAAI,EAC/B,MAAM,MAAM,sEAAsE,EAGrF,GAAID,IAAS,OAAS9Q,GAAI8Q,CAAI,EAAI,GAAK1Q,GAAI0Q,CAAI,EAAI,KAAK,OACrD,MAAM,MAAM,6DAA6D,EAG5E,GAAIC,IAAS,OAAS/Q,GAAI+Q,CAAI,EAAI,GAAK3Q,GAAI2Q,CAAI,EAAI,KAAK,OACrD,MAAM,MAAM,6DAA6D,EAI5E,GAAID,IAAS,KAAM,CAEhB,MAAMR,EAAYS,EAAK,OACjBR,EAAY,KAAK,MACjBhS,EAAM,IAAI0R,GAAO,kBAAkBM,EAAYD,CAAS,EAC9D,QAASU,EAAK,EAAGA,EAAKD,EAAK,OAAQC,IAChCzS,EAAI,IAAI,KAAK,EAAE,OAAOwS,EAAK,EAAEC,CAAE,EAAI,GAAK,KAAK,MAAOD,EAAK,EAAEC,CAAE,EAAI,KAAK,KAAK,EAAGA,EAAK,KAAK,KAAK,EAGhG,OAAO,IAAIf,GAAO1R,EAAKgS,EAAWD,CAAS,CAC7C,CAGD,GAAIS,GAAS,KACV,OAAO,KAAK,IAAI,OAAOA,EAAMD,CAAI,EAAE,IAItC,MAAMP,EAAYO,EAAK,OACjBR,EAAYS,EAAK,OACjBxS,EAAM,IAAI0R,GAAO,kBAAkBM,EAAYD,CAAS,EAC9D,IAAIa,EAAS,IAAIlB,GAAO,kBAAkBM,CAAS,EACnD,QAASS,EAAK,EAAGA,EAAKV,EAAWU,IAAM,CAGpC,MAAMX,EAAK,KAAK,EAAE,UAAUU,EAAK,EAAEC,CAAE,EAAI,GAAK,KAAK,MAAQD,EAAK,EAAEC,CAAE,EAAK,KAAK,KAAK,EACnF,QAASE,EAAK,EAAGA,EAAKX,EAAWW,IAC9BC,EAAOD,CAAE,EAAIb,EAAGS,EAAK,EAAEI,CAAE,EAAI,CAAC,EAEjC3S,EAAI,IAAI4S,EAAQH,EAAKT,CAAS,CAChC,CAED,OAAO,IAAIN,GAAO1R,EAAKgS,EAAWD,CAAS,CAC7C,CAaD,SAAUc,EAAM,CAEb,SAASC,EAAQjS,EAAGnG,EAAG,CACpB,MAAQ,IAAI,OAAOA,EAAImG,EAAE,MAAM,EAAIA,CACrC,CAEGgS,IAAS,SACVA,EAAO,GAGG,KAAK,MAClB,MAAME,EAAU,KAAK,MAAM,KAAK,IAAI,KAAK,MAAMlR,GAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAIgR,EAAO,EAEvE,IAAIG,EAAM,GACV,MAAMnB,EAAK,KAAK,IAChB,QAASpZ,EAAI,EAAGA,GAAKoZ,EAAG,MAAOpZ,IAC5Bua,GAAO,MAAM,KAAKnB,EAAG,UAAUpZ,CAAC,CAAC,EAAE,IAAIkH,GAAKmT,EAAQnT,EAAE,QAAQkT,CAAI,EAAGE,CAAO,CAAC,EAAE,KAAK,GAAG,EAAI;AAAA,EAG9F,OAAOC,CACT,CAYD,MAAMpT,EAAKqT,EAAK5V,EAAQ6V,EAAQ,CAGzBtT,IAAQ,SACTA,EAAM,KAILqT,IAAQ,SACTA,EAAMrT,IAAQ,IAAM,IAAM,KAG7B,MAAMuT,EAAoCD,GAAW,MAAQA,EAAO,OAAS,EACvEE,EAAoC/V,GAAW,MAAQA,EAAO,OAAS,EAE7E,GAAI8V,GAAaD,EAAO,SAAW,KAAK,MACrC,MAAM,MAAO,2FAA2F,EAG3G,GAAIE,GAAa/V,EAAO,SAAW,KAAK,OAAS8V,EAAY,EAAI,GAC9D,MAAM,MAAO,wFAAwF,EAIxG,MAAMhS,EAAI,KAAK,IACf,IAAIkS,EAAOD,EAAY/V,EAAO,KAAKuC,CAAG,EAAI;AAAA,EAAO,GACjD,QAASnH,EAAI,EAAGA,GAAK0I,EAAE,MAAO1I,IAC3B4a,EAAOA,GAAQF,EAAYD,EAAOza,EAAI,CAAC,EAAImH,EAAM,IAAMuB,EAAE,UAAU1I,CAAC,EAAE,KAAKmH,CAAG,EAAI;AAAA,EAIrF,OAAAyT,EAAOA,EAAK,QAAQ,MAAOJ,CAAG,EAEvBI,CACT,CAeD,OAAO,MAAMpC,EAAOC,EAAO9N,EAAIC,EAAO,CACnC,OAAOkO,GAAQpO,GAAM8N,EAAQC,EAAO9N,EAAIC,CAAK,EAAG4N,EAAOC,CAAK,CAC9D,CAcD,OAAO,KAAKD,EAAOC,EAAOnf,EAAGC,EAAG,CAC7B,OAAOuf,GAAQrO,GAAM+N,EAAQC,EAAOnf,EAAGC,CAAC,EAAGif,EAAOC,CAAK,CACzD,CAYD,OAAO,IAAID,EAAOC,EAAO,CAElBA,IAAU,SACXA,EAAQD,GAGX,MAAMjR,EAAM,IAAI,aAAaiR,EAAQC,CAAK,EAC1C,QAASZ,EAAK,EAAGA,EAAK,KAAK,IAAIW,EAAOC,CAAK,EAAGZ,IAC3CtQ,EAAIsQ,EAAKW,EAAQX,CAAE,EAAI,EAG1B,OAAO,IAAIoB,GAAO1R,EAAKiR,EAAOC,CAAK,CACrC,CAWD,OAAO,MAAMrQ,EAAG,CAEb,GAAI,CAACC,GAASD,CAAC,EACZ,MAAM,MAAM,2CAA2C,EAG1D,MAAMnG,EAAImG,EAAE,OACNb,EAAM,IAAI,aAAatF,EAAIA,CAAC,EAClC,QAAS4V,EAAK,EAAGA,EAAK5V,EAAG4V,IACtBtQ,EAAIsQ,EAAK5V,EAAI4V,CAAE,EAAIzP,EAAE,EAAEyP,CAAE,EAG5B,OAAO,IAAIoB,GAAO1R,EAAKtF,EAAGA,CAAC,CAC7B,CAYD,OAAO,MAAMuW,EAAOC,EAAO,CAExB,OAAIA,IAAU,SACXA,EAAQD,GAGJ,IAAIS,GAAO,IAAI,aAAaT,EAAQC,CAAK,EAAGD,EAAOC,CAAK,CACjE,CAYD,OAAO,KAAKD,EAAOC,EAAO,CACvB,OAAOQ,GAAO,KAAK,EAAGT,EAAOC,CAAK,CACpC,CAYD,OAAO,KAAKvR,EAAGsR,EAAOC,EAAO,CAEtBA,IAAU,SACXA,EAAQD,GAGX,MAAMjR,EAAM,IAAI,aAAaiR,EAAQC,CAAK,EAC1C,QAAS,EAAI,EAAG,EAAIlR,EAAI,OAAQ,IAC7BA,EAAI,CAAC,EAAIL,EAGZ,OAAO,IAAI+R,GAAO1R,EAAKiR,EAAOC,CAAK,CACrC,CAYD,OAAO,MAAMrQ,EAAGgG,EAAGsL,EAAK,CAUrB,GARI,MAAM,QAAQtR,CAAC,IAChBA,EAAI0E,GAAO1E,CAAC,GAGX,MAAM,QAAQgG,CAAC,IAChBA,EAAItB,GAAOsB,CAAC,GAGX,CAAC/F,GAASD,CAAC,EACZ,MAAM,MAAM,wEAAwE,EAGvF,GAAI,CAACC,GAAS+F,CAAC,EACZ,MAAM,MAAM,wEAAwE,EAGvF,MAAM7G,EAAM0R,GAAO,MAAM7Q,EAAE,OAAQgG,EAAE,MAAM,EAC3C,QAASpO,EAAI,EAAGA,EAAIoO,EAAE,OAAQpO,IAAK,CAChC,MAAM6a,EAAKzM,EAAE,EAAEpO,CAAC,EACV4Y,EAAOrR,EAAI,UAAUvH,EAAI,CAAC,EAChC,QAASyM,EAAI,EAAGA,EAAIrE,EAAE,OAAQqE,IAC3BmM,EAAKnM,CAAC,EAAIiN,EAAItR,EAAE,EAAEqE,CAAC,EAAGoO,CAAE,CAE7B,CAED,OAAOtT,CACT,CAcD,OAAO,SAASuT,EAAS3T,EAAKwT,EAAWD,EAAW,CAIjD,SAASK,EAAOC,EAAK,CAClB,OAAOA,EAAI,KAAK9T,GAAK,OAAO,MAAM,OAAO,WAAWA,EAAE,KAAM,CAAA,CAAC,CAAC,CAChE,CAGGC,IAAQ,SACTA,EAAM,KAIT,MAAMqT,EAAMrT,IAAQ,IAAM,IAAM,IAGhC2T,EAAUA,EAAQ,QAAQ,YAAa,EAAE,EAAE,QAAQ,yBAAyB,EAAE,EAG9EA,EAAUA,EAAQ,QAAQ,OAAQ,EAAE,EAGpC,IAAIF,EAAOE,EAAQ,MAAM,IAAI,EAGzBlW,EAAS,CAAA,EACTqW,EAAW,EACf,MAAMC,EAAWN,EAAK,CAAC,EAAE,MAAMzT,CAAG,GAC9BwT,GAAcA,IAAc,QAAaI,EAAOG,CAAQ,KACzDtW,EAASsW,EACTD,EAAW,GAIdL,EAAOA,EAAK,OAAO1T,GAAKA,EAAE,KAAM,EAAC,OAAS,CAAC,EAG3C,IAAIuT,EAAS,CAAA,EACTU,EAAc,EACdT,IACDS,EAAc,GAIjB,MAAM3C,EAAQoC,EAAK,OAASK,EACtBxC,EAAQyC,EAAS,OAASC,EAGhC,GAAI3C,EAAQ,EACT,MAAM,MAAM,sDAAsD,EAGrE,GAAIC,EAAQ,EACT,MAAM,MAAM,yDAAyD,EAIxE,MAAMnc,EAAO2c,GAAO,MAAMR,EAAOD,CAAK,EAGtC,QAAS/L,EAAIwO,EAAUxO,EAAI+L,EAAQyC,EAAUxO,IAAK,CAG/C,MAAM2O,EAAeR,EAAKnO,CAAC,EAAE,MAAMtF,CAAG,EAEtC,IAAIkU,EAQJ,GAPIX,GACDD,EAAOhO,EAAIwO,CAAQ,EAAIG,EAAa,CAAC,EACrCC,EAAYD,EAAa,MAAM,CAAC,EAAE,IAAIlU,GAAK,OAAO,WAAWA,EAAE,KAAI,EAAG,QAAQsT,EAAK,GAAG,CAAC,CAAC,GAExFa,EAAYD,EAAa,IAAIlU,GAAK,OAAO,WAAWA,EAAE,KAAM,EAAC,QAAQsT,EAAK,GAAG,CAAC,CAAC,EAG9Ea,EAAU,KAAKnU,GAAK,OAAO,MAAMA,CAAC,CAAC,EACpC,MAAM,MAAM,wFAAwF,EAGvG,GAAImU,EAAU,QAAU5C,EACrB,MAAM,MAAM,kCAAoChM,CAAC,EAGpDnQ,EAAK,EAAE,IAAI,IAAI,aAAa+e,CAAS,GAAI5O,EAAIwO,GAAYxC,CAAK,CAChE,CAED,MAAO,CAAC,OAAQnc,EAAK,EAAC,EAAI,OAAQsI,EAAQ,OAAQ6V,EAAQ,IAAItT,EAAK,IAAIqT,CAAG,CAC5E,CAEJ,EA57BGxc,GAFUib,GAEH,oBAAoB,cAC3Bjb,GAHUib,GAGH,YAAY,KAAK,IAAI,GAAI,EAAE,GAH9B,IAAMtB,GAANsB,GAy8BA,SAAS5Q,GAASD,EAAG,CACzB,OAAOA,GAAKA,EAAE,cAAgBE,EACjC,CAWO,SAASwE,GAAOtF,EAAQ,CAC5B,OAAO,IAAIc,GAAO,IAAI,aAAad,CAAM,CAAC,CAC7C,CAIO,MAAM8T,GAAN,MAAMA,EAAO,CAiBjB,YAAY9T,EAAQ,CAEjB,GAAI,CAAC,YAAY,OAAOA,CAAM,GAAKA,EAAO,cAAgB,aACvD,MAAM,MAAM,kDAAkD,EAGjE,KAAK,EAAIA,EACT,KAAK,OAASA,EAAO,MACvB,CASD,MAAMkS,EAAK,CACR,MAAMnS,EAAM,IAAIiQ,GAAM,kBAAkB,KAAK,MAAM,EACnD,IAAIvV,EAAI,EACR,QAASjH,EAAI,EAAGA,EAAI,KAAK,OAAQA,IAC1B0e,EAAI,KAAK,EAAE1e,CAAC,EAAGA,CAAC,IACjBuM,EAAItF,CAAC,EAAIjH,EAAI,EACbiH,EAAIA,EAAI,GAId,OAAO,IAAIuV,GAAMjQ,EAAI,SAAS,EAAGtF,CAAC,CAAC,CACrC,CAUD,OAAOyX,EAAK,CACT,MAAMnS,EAAM,IAAI+T,GAAO,kBAAkB,KAAK,MAAM,EACpD,IAAIrZ,EAAI,EACR,QAASjH,EAAI,EAAGA,EAAI,KAAK,OAAQA,IAC1B0e,EAAI,KAAK,EAAE1e,CAAC,EAAGA,CAAC,IACjBuM,EAAItF,CAAC,EAAI,KAAK,EAAEjH,CAAC,EACjBiH,EAAIA,EAAI,GAId,OAAO,IAAIqZ,GAAO/T,EAAI,SAAS,EAAGtF,CAAC,CAAC,CACtC,CAQD,SAAU,CACP,OAAO,IAAIqZ,GAAOC,GAAS,KAAK,CAAC,CAAC,CACpC,CAWD,KAAKC,EAAY,CACd,OAAO,IAAIF,GAAOG,GAAM,KAAK,EAAGD,CAAU,CAAC,CAC7C,CAUD,QAAQA,EAAY,CACjB,OAAO,IAAIhE,GAAMkE,GAAS,KAAK,EAAGF,CAAU,CAAC,CAC/C,CAWD,IAAIvZ,EAAG,CACJ,OAAO0Z,GAAK,KAAM1Z,CAAC,CACrB,CAWD,QAAQA,EAAG,CACR,OAAO2Z,GAAS,KAAM3Z,CAAC,CACzB,CAkBD,QAASmG,EAAGkG,EAAK,CAEV,OAAOA,GAAS,WACjBA,EAAM,CAACA,CAAG,GAGTA,EAAI,SAAW,IAChBA,EAAMkJ,GAAM,IAAI,EAAG,KAAK,MAAM,GAG5BvO,GAAQqF,CAAG,IACbA,EAAMzN,GAAMyN,CAAG,GAGlB,MAAMrM,EAAIqM,EAAI,OAEd,GAAItF,GAAIsF,CAAG,EAAI,GAAKlF,GAAIkF,CAAG,EAAI,KAAK,OACjC,MAAM,MAAM,gEAAgE,EAG/E,GAAIlG,EAAE,SAAWnG,EACd,MAAM,MAAM,2DAA2D,EAG1E,QAASjH,EAAI,EAAGA,EAAIsT,EAAI,OAAQtT,IAAK,CAClC,MAAMyR,EAAI6B,EAAI,EAAEtT,CAAC,EACjB,KAAK,EAAEyR,EAAI,CAAC,EAAIrE,EAAE,EAAEpN,CAAC,CACvB,CAED,OAAO,IACT,CAUD,OAAOsT,EAAK,CAUT,GARI,OAAOA,GAAS,WACjBA,EAAMzN,GAAM,CAACyN,CAAG,CAAC,GAGhB,MAAM,QAAQA,CAAG,IAClBA,EAAM,OAAOA,EAAI,CAAC,GAAO,UAAYkJ,GAAM,SAASlJ,CAAG,EAAIzN,GAAMyN,CAAG,GAGnE,CAACrF,GAAQqF,CAAG,EACb,MAAM,MAAM,2EAA2E,EAG1F,MAAMrM,EAAIqM,EAAI,OACR/G,EAAM+T,GAAO,MAAMrZ,CAAC,EAE1B,QAASjH,EAAI,EAAGA,EAAIiH,EAAGjH,IAAK,CAEzB,GAAIsT,EAAI,EAAEtT,CAAC,EAAI,EACZ,MAAM,MAAM,4CAA4C,EAG3D,GAAIsT,EAAI,EAAEtT,CAAC,EAAI,KAAK,OACjB,MAAM,MAAM,iDAAiD,EAGhEuM,EAAI,EAAEvM,CAAC,EAAI,KAAK,EAAEsT,EAAI,EAAEtT,CAAC,EAAI,CAAC,CAChC,CAED,OAAOuM,CACT,CAWD,MAAMsU,EAAOC,EAAK,CAUf,GARID,IAAU,OACXA,EAAQ,GAGPC,GAAQ,OACTA,EAAM,KAAK,QAGVD,EAAQ,EACT,MAAM,MAAM,2CAA2C,EAG1D,GAAIC,EAAM,KAAK,OACZ,MAAM,MAAM,gDAAgD,EAG/D,GAAIA,EAAMD,EACP,MAAM,MAAM,gDAAgD,EAG/D,OAAO,IAAIP,GAAO,KAAK,EAAE,MAAMO,EAAQ,EAAGC,CAAG,CAAC,CAChD,CAMD,MAAO,CACJ,OAAO,IAAIR,GAAO,KAAK,EAAE,MAAO,CAAA,CAClC,CAWD,IAAIlT,EAAG,CAEJ,OAAIA,IAAM,SACPA,EAAI,MAGAqR,GAAK,KAAK,EAAGrR,EAAE,EAAG,EAAG,KAAK,OAAQA,EAAE,OAAQ,CAAC,EAAE,CAAC,CACzD,CAYD,GAAGA,EAAGsR,EAAK,CACR,GAAIrR,GAASD,CAAC,EACX,OAAO,IAAIkT,GAAO1B,GAAM,KAAK,EAAGxR,EAAE,EAAGsR,CAAG,CAAC,EAG5C,GAAIzB,GAAS7P,CAAC,EACX,OAAO,IAAIkT,GAAOzB,GAAM,KAAK,EAAGzR,EAAGsR,CAAG,CAAC,EAG1C,MAAM,IAAI,MAAM,gDAAgD,CAClE,CAWD,IAAItR,EAAG,CACJ,OAAO,KAAK,GAAGA,EAAG,CAAC9O,EAAGC,IAAMD,EAAIC,CAAC,CACnC,CAWD,SAAS6O,EAAG,CACT,OAAO,KAAK,GAAGA,EAAG,CAAC9O,EAAGC,IAAMD,EAAIC,CAAC,CACnC,CAWD,KAAK6O,EAAG,CACL,OAAO,KAAK,GAAGA,EAAG,CAAC9O,EAAGC,IAAMD,EAAIC,CAAC,CACnC,CAWD,OAAO6O,EAAG,CACP,OAAO,KAAK,GAAGA,EAAG,CAAC9O,EAAGC,IAAMD,EAAIC,CAAC,CACnC,CAUD,MAAMmgB,EAAK,CAER,MAAMzX,EAAI,KAAK,EAAE,OACXsF,EAAM+T,GAAO,MAAMrZ,CAAC,EAC1B,QAASjH,EAAI,EAAGA,EAAIiH,EAAGjH,IACpBuM,EAAI,EAAEvM,CAAC,EAAI0e,EAAI,KAAK,EAAE1e,CAAC,CAAC,EAG3B,OAAOuM,CACT,CAcD,OAAO,KAAKwU,EAAM,CAEf,GAAIA,EAAK,SAAW,EAAG,OAAOA,EAAK,CAAC,EAEpC,MAAMvO,EAAIuO,EAAK,OAAQ,CAACC,EAAKC,IAAQD,GAAO,OAAOC,GAAS,SAAW,EAAIA,EAAI,QAAS,CAAC,EACnF1U,EAAM,IAAI+T,GAAO,kBAAkB9N,CAAC,EAE1C,IAAIqO,EAAQ,EACZ,UAAWviB,KAAKyiB,EAET,OAAOziB,GAAO,UACfiO,EAAIsU,CAAK,EAAIviB,EACbuiB,GAAS,IAETtU,EAAI,IAAIc,GAAS/O,CAAC,EAAIA,EAAE,EAAI,IAAIgiB,GAAO,kBAAkBhiB,CAAC,EAAGuiB,CAAK,EAClEA,GAAS,OAAOviB,GAAO,SAAW,EAAIA,EAAE,QAI9C,OAAO,IAAIgiB,GAAO/T,CAAG,CACvB,CAaD,OAAO,IAAIsU,EAAOC,EAAKI,EAAI,CACxB,OAAOC,GAAKN,EAAOC,EAAKI,EAAIZ,EAAM,CACpC,CAaD,OAAO,MAAM9f,EAAQmP,EAAIC,EAAO,CAC7B,OAAOF,GAAMlP,EAAQmP,EAAIC,CAAK,CAChC,CAaD,OAAO,KAAKpP,EAAQlC,EAAGC,EAAG,CACvB,OAAOkR,GAAMjP,EAAQlC,EAAGC,CAAC,CAC3B,CAWD,OAAO,MAAM0I,EAAG,CACb,OAAO,IAAIqZ,GAAO,IAAIA,GAAO,kBAAkBrZ,CAAC,CAAC,CACnD,CAWD,OAAO,KAAKA,EAAG,CACZ,OAAOqZ,GAAO,KAAK,EAAGrZ,CAAC,CACzB,CAYD,OAAO,KAAKiF,EAAGjF,EAAG,CAEf,MAAMsF,EAAM,IAAI+T,GAAO,kBAAkBrZ,CAAC,EAC1C,QAASjH,EAAI,EAAGA,EAAIuM,EAAI,OAAQvM,IAC7BuM,EAAIvM,CAAC,EAAIkM,EAGZ,OAAO,IAAIoU,GAAO/T,CAAG,CACvB,CAEJ,EA9eGvJ,GAFUsd,GAEH,oBAAoB,cAFvB,IAAMhT,GAANgT,GA2fA,SAASrS,GAAQb,EAAG,CACxB,OAAOA,EAAE,cAAgBoP,EAC5B,CAWO,SAAS3W,GAAM2G,EAAQ,CAC3B,OAAO,IAAIgQ,GAAM,IAAI,WAAWhQ,CAAM,CAAC,CAC1C,CAIO,MAAM4U,GAAN,MAAMA,EAAM,CAiBhB,YAAY5U,EAAQ,CAEjB,GAAI,CAAC,YAAY,OAAOA,CAAM,GAAKA,EAAO,cAAgB,WACvD,MAAM,MAAM,+CAA+C,EAG9D,KAAK,EAAIA,EACT,KAAK,OAASA,EAAO,MACvB,CAUD,MAAMkS,EAAK,CACR,MAAMnS,EAAM,IAAI6U,GAAM,kBAAkB,KAAK,MAAM,EACnD,IAAIna,EAAI,EACR,QAASjH,EAAI,EAAGA,EAAI,KAAK,OAAQA,IAC1B0e,EAAI,KAAK,EAAE1e,CAAC,EAAGA,CAAC,IACjBuM,EAAItF,CAAC,EAAIjH,EAAI,EACbiH,EAAIA,EAAI,GAId,OAAO,IAAIma,GAAM7U,EAAI,SAAS,EAAGtF,CAAC,CAAC,CACrC,CAUD,OAAOyX,EAAK,CACT,MAAMnS,EAAM,IAAI6U,GAAM,kBAAkB,KAAK,MAAM,EACnD,IAAIna,EAAI,EACR,QAASjH,EAAI,EAAGA,EAAI,KAAK,OAAQA,IAC1B0e,EAAI,KAAK,EAAE1e,CAAC,EAAGA,CAAC,IACjBuM,EAAItF,CAAC,EAAI,KAAK,EAAEjH,CAAC,EACjBiH,EAAIA,EAAI,GAId,OAAO,IAAIma,GAAM7U,EAAI,SAAS,EAAGtF,CAAC,CAAC,CACrC,CAQD,SAAU,CACP,OAAO,IAAIma,GAAMb,GAAS,KAAK,CAAC,CAAC,CACnC,CAWD,KAAKC,EAAY,CACd,OAAO,IAAIY,GAAMX,GAAM,KAAK,EAAGD,CAAU,CAAC,CAC5C,CAUD,QAAQA,EAAY,CACjB,OAAO,IAAIY,GAAMV,GAAS,KAAK,EAAGF,CAAU,CAAC,CAC/C,CAUD,IAAIvZ,EAAG,CACJ,OAAO0Z,GAAK,KAAM1Z,CAAC,CACrB,CAWD,QAAQA,EAAG,CACR,OAAO2Z,GAAS,KAAM3Z,CAAC,CACzB,CASD,OAAOqM,EAAK,CAUT,GARG,OAAOA,GAAS,WAChBA,EAAMzN,GAAM,CAACyN,CAAG,CAAC,GAGhB,MAAM,QAAQA,CAAG,IAClBA,EAAMzN,GAAMyN,CAAG,GAGd,CAACrF,GAAQqF,CAAG,EACb,MAAM,MAAM,2EAA2E,EAG1F,MAAMrM,EAAIqM,EAAI,OACR/G,EAAM,IAAI6U,GAAM,kBAAkBna,CAAC,EAEzC,QAASjH,EAAI,EAAGA,EAAIiH,EAAGjH,IAAK,CAEzB,GAAIsT,EAAI,EAAEtT,CAAC,EAAI,EACZ,MAAM,MAAM,4CAA4C,EAG3D,GAAIsT,EAAI,EAAEtT,CAAC,EAAI,KAAK,OACjB,MAAM,MAAM,iDAAiD,EAGhEuM,EAAIvM,CAAC,EAAI,KAAK,EAAEsT,EAAI,EAAEtT,CAAC,EAAI,CAAC,CAC9B,CAED,OAAO,IAAIohB,GAAM7U,CAAG,CACtB,CAWD,MAAMsU,EAAOC,EAAK,CAUf,GARID,IAAU,OACXA,EAAQ,GAGPC,GAAQ,OACTA,EAAM,KAAK,QAGVD,EAAQ,EACT,MAAM,MAAM,2CAA2C,EAG1D,GAAIC,EAAM,KAAK,OACZ,MAAM,MAAM,gDAAgD,EAG/D,GAAIA,EAAMD,EACP,MAAM,MAAM,gDAAgD,EAG/D,OAAO,IAAIO,GAAM,KAAK,EAAE,MAAMP,EAAQ,EAAGC,CAAG,CAAC,CAC/C,CAeD,OAAO,IAAID,EAAOC,EAAKI,EAAI,CACxB,OAAOC,GAAKN,EAAOC,EAAKI,EAAIE,EAAK,CACnC,CAWD,OAAO,KAAKna,EAAG,CACZ,OAAOma,GAAM,KAAK,EAAGna,CAAC,CACxB,CAYD,OAAO,KAAKiF,EAAGjF,EAAG,CAEf,MAAMsF,EAAM,IAAI6U,GAAM,kBAAkBna,CAAC,EACzC,QAASjH,EAAI,EAAGA,EAAIuM,EAAI,OAAQvM,IAC7BuM,EAAIvM,CAAC,EAAIkM,EAGZ,OAAO,IAAIkV,GAAM7U,CAAG,CACtB,CAWD,OAAO,SAASa,EAAG,CAEhB,IAAInG,EAAI,EACR,MAAMsF,EAAM,IAAI6U,GAAM,kBAAkBhU,EAAE,MAAM,EAEhD,QAASpN,EAAI,EAAGA,EAAIoN,EAAE,OAAQpN,IACvBoN,EAAEpN,CAAC,IACJuM,EAAItF,CAAC,EAAIjH,EAAI,EACbiH,EAAIA,EAAI,GAId,OAAO,IAAIma,GAAM7U,EAAI,SAAS,EAAGtF,CAAC,CAAC,CACrC,CACJ,EAlRGjE,GAFUoe,GAEH,oBAAoB,YAFvB,IAAM5E,GAAN4E,GAyYP,SAASD,GAAKN,EAAOC,EAAKI,EAAIG,EAAU,CAGjCH,IAAO,SAAWA,EAAML,GAASC,EAAO,EAAI,IAGhD,MAAMtgB,EAAS,KAAK,OAAOsgB,EAAMD,GAASK,CAAE,EAAI,EAEhD,GAAI1gB,EAAS,EACV,MAAM,MAAM,uCAAuC,EAGtD,MAAM4M,EAAI,IAAIiU,EAAS,kBAAkB7gB,CAAM,EAC/C,QAASR,EAAI,EAAGA,EAAIQ,EAAQR,IACzBoN,EAAEpN,CAAC,EAAI6gB,EAAQ7gB,EAAIkhB,EAGtB,OAAO,IAAIG,EAASjU,CAAC,CACxB,CAYA,SAASuT,GAAK9hB,EAAKoI,EAAG,CAEnB,MAAMuL,EAAI3T,EAAI,OAASoI,EACjBsF,EAAM,IAAI1N,EAAI,YAAY,kBAAkB2T,CAAC,EACnD,QAASxS,EAAI,EAAGA,GAAKiH,EAAGjH,IACrB,QAASoP,EAAI,EAAGA,EAAIvQ,EAAI,OAAQuQ,IAC7B7C,GAAKvM,EAAI,GAAKnB,EAAI,OAASuQ,CAAC,EAAIvQ,EAAI,EAAEuQ,CAAC,EAI7C,OAAO,IAAIvQ,EAAI,YAAY0N,CAAG,CACjC,CAYA,SAASqU,GAAS/hB,EAAKoI,EAAG,CAEvB,GAAIA,EAAI,GAAK,KAAK,MAAMA,CAAC,IAAMA,EAC5B,MAAM,MAAM,mDAAmD,EAGlE,MAAMuL,EAAI3T,EAAI,OAASoI,EACjBsF,EAAM,IAAI1N,EAAI,YAAY,kBAAkB2T,CAAC,EACnD,QAASpD,EAAI,EAAGA,EAAIvQ,EAAI,OAAQuQ,IAC7B,QAAS,EAAI,EAAG,EAAInI,EAAG,IACpBsF,EAAI6C,EAAInI,EAAI,CAAC,EAAIpI,EAAI,EAAEuQ,CAAC,EAI9B,OAAO,IAAIvQ,EAAI,YAAY0N,CAAG,CACjC,CAcA,SAASqS,GAAM0C,EAAIC,EAAI7C,EAAK,CAEzB,GAAI4C,EAAG,SAAWC,EAAG,OAClB,MAAM,IAAI,MAAM,mCAAmC,EAGtD,GAAID,EAAG,cAAgBC,EAAG,YACvB,MAAM,IAAI,MAAM,kCAAkC,EAGrD,MAAMhV,EAAM,IAAI+U,EAAG,YAAYA,EAAG,MAAM,EACxC,QAASthB,EAAI,EAAGA,EAAIshB,EAAG,OAAQthB,IAC5BuM,EAAIvM,CAAC,EAAI0e,EAAI4C,EAAGthB,CAAC,EAAGuhB,EAAGvhB,CAAC,CAAC,EAG5B,OAAOuM,CACV,CAeA,SAASsS,GAAMyC,EAAIC,EAAI7C,EAAK,CAEzB,MAAMnS,EAAM,IAAI+U,EAAG,YAAYA,EAAG,MAAM,EACxC,QAASthB,EAAI,EAAGA,EAAIshB,EAAG,OAAQthB,IAC5BuM,EAAIvM,CAAC,EAAI0e,EAAI4C,EAAGthB,CAAC,EAAGuhB,CAAE,EAGzB,OAAOhV,CACV,CAcO,SAASkS,GAAK+C,EAAI3B,EAAIzC,EAAKC,EAAKC,EAAKC,EAAK,CAE9C,GAAIF,IAAQC,EACT,MAAM,MAAM,sCAAsC,EAIrD,MAAME,EAAQJ,EACRK,EAAQF,EACRG,EAASL,EACT9Q,EAAM,IAAIiV,EAAG,YAAYhE,EAAQC,CAAK,EAE5C,QAAS,EAAI,EAAG,EAAIA,EAAO,IAAK,CAC7B,MAAME,EAAKkC,EAAG,SAAS,EAAIvC,GAAM,EAAI,GAAKA,CAAG,EACvCM,EAAOrR,EAAI,SAAS,EAAIiR,GAAQ,EAAI,GAAKA,CAAK,EAEpD,QAASxd,EAAI,EAAGA,EAAI0d,EAAQ1d,IAAK,CAC9B,MAAMyhB,EAAM9D,EAAG3d,CAAC,EACV6d,EAAK2D,EAAG,SAASxhB,EAAIod,GAAMpd,EAAI,GAAKod,CAAG,EAC7C,QAAS3L,EAAI,EAAGA,EAAI+L,EAAO/L,IACxBmM,EAAKnM,CAAC,GAAKoM,EAAGpM,CAAC,EAAIgQ,CAExB,CACH,CAED,OAAOlV,CACV,CAWO,SAASgU,GAASnT,EAAG,CAE1B,IAAIgG,EAAIhG,EAAE,QACNnG,EAAImM,EAAE,OACNJ,EAAGhT,EAEP,KAAOiH,GACLjH,EAAI,KAAK,MAAM,KAAK,OAAQ,EAAGiH,GAAG,EAClC+L,EAAII,EAAEnM,CAAC,EACPmM,EAAEnM,CAAC,EAAImM,EAAEpT,CAAC,EACVoT,EAAEpT,CAAC,EAAIgT,EAGT,OAAOI,CACT,CAYO,SAASqN,GAAMrT,EAAGoT,EAAa,GAAO,CAC1C,OAAOA,EAAapT,EAAE,MAAO,EAAC,KAAK,CAAC9O,EAAGC,IAAMA,EAAID,CAAC,EAAI8O,EAAE,MAAO,EAAC,KAAK,CAAC9O,EAAGC,IAAMD,EAAIC,CAAC,CACvF,CAYO,SAASmiB,GAAStT,EAAGoT,EAAa,GAAO,CAC7C,MAAMlN,EAAMkJ,GAAM,IAAI,EAAGpP,EAAE,MAAM,EAAE,EACnC,OAAOoT,EAAalN,EAAI,KAAK,CAAChV,EAAGC,IAAM6O,EAAE7O,EAAI,CAAC,EAAI6O,EAAE9O,EAAI,CAAC,CAAC,EAAIgV,EAAI,KAAK,CAAChV,EAAGC,IAAM6O,EAAE9O,EAAI,CAAC,EAAI8O,EAAE7O,EAAI,CAAC,CAAC,CACvG,CC50EO,SAASmjB,GAAiBlE,EAAOmE,EAAOlE,EAAO,CAenD,MAAQ,GAAID,EAAQmE,EAASA,EAAS,EAAIlE,EAAQkE,CACrD,CAWO,SAASC,GAAmBnE,EAAOkE,EAAO,CA0B9C,MAAO,GAAI,EAAIlE,EAAQA,EAAQkE,EAAQ,GAAKA,CAC/C,CAYO,SAASE,GAAanU,EAAGvM,EAAM7C,EAAG,CAEtC,GAAI,CAACoP,GAAK,CAACA,EAAE,OAAS,CAACA,EAAE,MAAM,SAAS,UAAU,EAC/C,MAAM,IAAI,MAAM,0DAA0D,EAG7E,MAAM+P,EAAQ/P,EAAE,MACViU,EAAQjU,EAAE,MAChB,IAAIrB,EAAQ7L,EAEZ,OAAOW,EAAI,CACR,IAAK,KACFkL,EAAS,EACT7L,EAASid,EACT,MACH,IAAK,KACFpR,EAAS,EAAIoR,EACbjd,EAASid,EACT,MACH,IAAK,WACL,IAAK,YACFpR,EAAS,EAAI,EAAIoR,GAASnf,EAAI,GAAKmf,EACnCjd,EAASid,EACT,MACH,IAAK,IACFpR,EAAS,EAAI,EAAIoR,EACjBjd,EAASlC,EAAImf,EACb,MACH,IAAK,YACL,IAAK,aACFpR,EAAS,EAAI,EAAIoR,EAAQA,EAAQkE,EACjCnhB,EAASmhB,EACT,MACH,IAAK,MACFtV,EAAS,EAAI,EAAIoR,EAAQA,EAAQkE,EAAQA,EACzCnhB,EAASmhB,EACT,MACH,IAAK,MACFtV,EAAS,EAAI,EAAIoR,EAAQA,EAAQkE,EAAQ,EAAIA,EAC7CnhB,EAASmhB,EACT,MACH,IAAK,MACFtV,EAAS,EAAI,EAAIoR,EAAQA,EAAQkE,EAAQ,EAAIA,EAC7CnhB,EAASmhB,EACT,MACH,IAAK,MACFtV,EAAS,EAAI,EAAIoR,EAAQA,EAAQkE,EAAQ,EAAIA,EAC7CnhB,EAASmhB,EACT,MACH,IAAK,MACFtV,EAAS,EAAI,EAAIoR,EAAQA,EAAQkE,EAAQ,EAAIA,EAC7CnhB,EAASmhB,EACT,MACH,IAAK,MACFtV,EAAS,EAAI,EAAIoR,EAAQA,EAAQkE,EAAQ,EAAIA,EAC7CnhB,EAASmhB,EACT,MACH,IAAK,MACFtV,EAAS,EAAI,EAAIoR,EAAQA,EAAQkE,EAAQ,EAAIA,EAC7CnhB,EAASmhB,EACT,MACH,IAAK,MACFtV,EAAS,EAAI,EAAIoR,EAAQA,EAAQkE,EAAQ,EAAIA,EAC7CnhB,EAASmhB,EACT,MACH,IAAK,MACFtV,EAAS,EAAI,EAAIoR,EAAQA,EAAQkE,EAAQ,EAAIA,EAC7CnhB,EAASmhB,EACT,MACH,IAAK,MACFtV,EAAS,EAAI,EAAIoR,EAAQA,EAAQkE,EAAQ,GAAKA,EAC9CnhB,EAASmhB,EACT,MACH,IAAK,MACFtV,EAAS,EAAI,EAAIoR,EAAQA,EAAQkE,EAAQ,GAAKA,EAC9CnhB,EAASmhB,EACT,MACH,IAAK,MACFtV,EAAS,EAAI,EAAIoR,EAAQA,EAAQkE,EAAQ,GAAKA,EAC9CnhB,EAASmhB,EACT,MACH,IAAK,MACFtV,EAAS,EAAI,EAAIoR,EAAQA,EAAQkE,EAAQ,GAAKA,EAC9CnhB,EAASmhB,EACT,MACH,IAAK,MACFtV,EAAS,EAAI,EAAIoR,EAAQA,EAAQkE,EAAQ,GAAKA,EAC9CnhB,EAASmhB,EACT,MACH,IAAK,MACFtV,EAAS,EAAI,EAAIoR,EAAQA,EAAQkE,EAAQ,GAAKA,EAC9CnhB,EAASmhB,EACT,MACH,IAAK,MACFtV,EAAS,EAAI,EAAIoR,EAAQA,EAAQkE,EAAQ,GAAKA,EAC9CnhB,EAASmhB,EACT,MAEH,QACG,MAAM,MAAM,mCAAmC,CACpD,CAED,OAAOjU,EAAE,EAAE,SAASrB,EAAQA,EAAS7L,CAAM,CAC9C,CAYO,SAASshB,GAAW,EAAG3gB,EAAM7C,EAAG,CAEpC,GAAI,CAAC,GAAK,CAAC,EAAE,OAAS,CAAC,EAAE,MAAM,SAAS,QAAQ,EAC7C,MAAM,IAAI,MAAM,0DAA0D,EAG7E,MAAMmf,EAAQ,EAAE,MACVD,EAAQ,EAAE,MACVmE,EAAQ,EAAE,MAChB,IAAItV,EAAQ7L,EAEZ,OAAOW,EAAI,CACR,IAAK,SACL,IAAK,UACFkL,GAAU/N,EAAI,GAAKkf,EACnBhd,EAASgd,EACT,MACH,IAAK,QACFnR,EAASmR,EAAQmE,GAASrjB,EAAI,GAAKkf,EACnChd,EAASgd,EACT,MACH,IAAK,QACFnR,EAAS,EAAImR,EAAQmE,GAASrjB,EAAI,GAAKkf,EACvChd,EAASgd,EACT,MACH,IAAK,aACL,IAAK,YACFnR,EAAS,EAAImR,EAAQmE,EACrBnhB,EAASmhB,EACT,MACH,IAAK,SACFtV,EAAS,EAAImR,EAAQmE,EAAQA,GAASrjB,EAAI,GAAKkf,EAC/Chd,EAASgd,EACT,MACH,IAAK,SACFnR,EAAS,EAAImR,EAAQmE,EAAQA,GAASrjB,EAAI,GAAKkf,EAC/Chd,EAASgd,EACT,MAEH,IAAK,QACFnR,EAAS,EAAImR,EAAQmE,EAAQA,GAASrjB,EAAI,GAAKmf,EAC/Cjd,EAASid,EACT,MACH,IAAK,QACFpR,EAAU,EAAImR,EAAQmE,EAASA,EAASlE,EAAQkE,GAAUrjB,EAAI,GAAKmf,EACnEjd,EAASid,EACT,MACH,IAAK,SACFpR,EAAU,EAAImR,EAAQmE,EAASA,EAAS,EAAIlE,EAAQkE,GAAUrjB,EAAI,GAAKmf,EACvEjd,EAASid,EACT,MACH,IAAK,SACFpR,EAAU,EAAImR,EAAQmE,EAASA,EAAS,EAAIlE,EAAQkE,GAAUrjB,EAAI,GAAKmf,EACvEjd,EAASid,EACT,MAEH,QACG,MAAM,IAAI,MAAM,iCAAiC,CACtD,CAED,OAAO,EAAE,EAAE,SAASpR,EAAQA,EAAS7L,CAAM,CAC9C,CAEA,SAASuhB,GAAaC,EAAKC,EAAQC,EAAQ,CACxC,GAAI,CAAC,MAAM,QAAQF,CAAG,EAAG,MAAO,GAChC,GAAIA,EAAI,SAAW,EAAG,MAAO,GAE7B,QAAShiB,EAAI,EAAGA,EAAIgiB,EAAI,OAAQhiB,IAAK,CAClC,MAAMkM,EAAI8V,EAAIhiB,CAAC,EACf,GAAIkM,EAAI+V,GAAU/V,EAAIgW,EAAQ,MAAO,EAE3C,CACG,MAAO,EACV,CAeO,SAASC,GAAQC,EAAQ7F,EAAGoF,EAAO/U,EAAQC,EAAOtB,EAAU8W,EAAU,CAG1E,GAAI,CAAClF,GAASZ,CAAC,EACZ,MAAM,IAAI,MAAM,8BAA8B,EAI5ChR,IAAUA,EAAW,IAC1B,MAAM+W,EAAO/W,GAAY,MAAM,QAAQA,CAAQ,EAAIA,EAAS,OAAS,EACrE,GAAI,CAACwW,GAAaxW,EAAU,EAAGgR,EAAE,MAAQ,CAAC,EACvC,MAAM,IAAI,MAAM,2EAA2E,EAIzF8F,IAAUA,EAAW,IAC1B,MAAME,EAAOF,GAAY,MAAM,QAAQA,CAAQ,EAAIA,EAAS,OAAS,EACrE,GAAI,CAACN,GAAaM,EAAU,EAAG9F,EAAE,MAAQ,CAAC,EACvC,MAAM,IAAI,MAAM,2EAA2E,EAG9F,MAAMiB,EAAQjB,EAAE,MAAQ+F,EAClB7E,EAAQlB,EAAE,MAAQgG,EAExB,GAAI/E,EAAQ,GAAKC,EAAQ,EACtB,MAAM,IAAI,MAAM,qDAAqD,EAiBxE,GAZI7Q,IAAW,SACZA,EAAS,IAGRC,IAAU,SACXA,EAAQ,IAGP8U,IAAU,SACXA,EAAQ,KAAK,IAAIpF,EAAE,MAAQ+F,EAAO,EAAG/F,EAAE,MAAQgG,CAAI,GAGlDZ,EAAQ,GAAKA,EAAQ,KAAK,IAAInE,EAAQ,EAAGC,CAAK,EAC/C,MAAM,IAAI,MAAM,kEAAkE,EAKrF,MAAM+E,EAAQJ,EAAO,QAAQ7F,EAAE,EAAE,OAASA,EAAE,EAAE,iBAAiB,EAC/D6F,EAAO,QAAQ,IAAI7F,EAAE,EAAGiG,EAAQjG,EAAE,EAAE,iBAAiB,EAGrD,IAAIkG,EAAQ,KACZ,GAAIH,EAAO,EAAG,CACX,MAAMtb,EAAI,IAAI,WAAWuE,CAAQ,EACjCkX,EAAQL,EAAO,QAAQpb,EAAE,OAASA,EAAE,iBAAiB,EACrDob,EAAO,OAAO,IAAIpb,EAAGyb,EAAQzb,EAAE,iBAAiB,CAClD,CAGD,IAAI0b,EAAS,KACb,GAAIH,EAAO,EAAG,CACX,MAAMI,EAAK,IAAI,WAAWN,CAAQ,EAClCK,EAASN,EAAO,QAAQO,EAAG,OAASA,EAAG,iBAAiB,EACxDP,EAAO,OAAO,IAAIO,EAAID,EAASC,EAAG,iBAAiB,CACrD,CAGD,MAAMC,EAAWhB,GAAmBnE,EAAOkE,CAAK,EAC1CkB,EAAgB,aAChBC,EAAQV,EAAO,QAAQQ,EAAWC,EAAc,iBAAiB,EAQvE,GALYT,EAAO,MAAM,cACb,CAAC,QAAQ,EACT,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,QAAQ,EAC7G,CAACI,EAAOjG,EAAE,MAAOA,EAAE,MAAOoF,EAAO/U,EAAQC,EAAOiW,EAAOL,EAAOH,EAAMI,EAAQH,CAAI,CAAC,IAEjF,EACT,MAAM,IAAI,MAAM,sBAAsB,EAIzC,MAAM/W,EAAQ4W,EAAO,QAAQ,MAC1BU,EAAMD,EAAc,kBACpBC,EAAMD,EAAc,kBAAoBD,CAC9C,EAGG,OAAAR,EAAO,MAAMI,CAAK,EAClBJ,EAAO,MAAMU,CAAK,EACdL,GAAOL,EAAO,MAAMK,CAAK,EACzBC,GAAQN,EAAO,MAAMM,CAAM,EAGxB,CACJ,MAAO,CAAC,UAAU,EAClB,EAAGlX,EACH,MAAOmW,EACP,MAAOnE,EACP,MAAOC,EACP,SAAU4E,EACV,OAAQzV,EACR,MAAOC,CACb,CACA,CAaO,SAASkW,GAAYX,EAAQ1U,EAAG6O,EAAGhR,EAAU,CAGjD,GAAI,CAACmC,GAAK,CAACA,EAAE,OAAS,CAACA,EAAE,MAAM,SAAS,UAAU,EAC/C,MAAM,IAAI,MAAM,yDAAyD,EAG5E,GAAI,CAACyP,GAASZ,CAAC,EACZ,MAAM,IAAI,MAAM,kCAAkC,EAIhDhR,IAAUA,EAAW,IAC1B,MAAM+W,EAAO/W,GAAY,MAAM,QAAQA,CAAQ,EAAIA,EAAS,OAAS,EACrE,GAAI,CAACwW,GAAaxW,EAAU,EAAGgR,EAAE,MAAQ,CAAC,EACvC,MAAM,IAAI,MAAM,+EAA+E,EAIlG,IAAIgG,EAAO7U,EAAE,SAAS,OACPA,EAAE,SAGjB,MAAM8P,EAAQjB,EAAE,MAAQ+F,EAGpB/F,EAAE,QAAU7O,EAAE,QAEf6U,EAAO,GAIV,MAAM9E,EAAQlB,EAAE,MAAQgG,EAExB,GAAI/E,EAAQ,EACT,MAAM,IAAI,MAAM,0CAA0C,EAG7D,GAAIC,IAAU/P,EAAE,MACb,MAAM,IAAI,MAAM,kGAAkG,EAKrH,MAAM8U,EAAQJ,EAAO,QAAQ7F,EAAE,EAAE,OAASA,EAAE,EAAE,iBAAiB,EAC/D6F,EAAO,QAAQ,IAAI7F,EAAE,EAAGiG,EAAQjG,EAAE,EAAE,iBAAiB,EAGrD,IAAIkG,EAAQ,KACZ,GAAIH,EAAO,EAAG,CACX,MAAMtb,EAAI,IAAI,WAAWuE,CAAQ,EACjCkX,EAAQL,EAAO,QAAQpb,EAAE,OAASA,EAAE,iBAAiB,EACrDob,EAAO,OAAO,IAAIpb,EAAGyb,EAAQzb,EAAE,iBAAiB,CAClD,CAGD,IAAI0b,EAAS,KACb,GAAIH,EAAO,EAAG,CACX,MAAMI,EAAK,IAAI,WAAWjV,EAAE,QAAQ,EACpCgV,EAASN,EAAO,QAAQO,EAAG,OAASA,EAAG,iBAAiB,EACxDP,EAAO,OAAO,IAAIO,EAAID,EAASC,EAAG,iBAAiB,CACrD,CAGD,MAAMG,EAAQV,EAAO,QAAQ1U,EAAE,EAAE,OAASA,EAAE,EAAE,iBAAiB,EAC/D0U,EAAO,QAAQ,IAAI1U,EAAE,EAAGoV,EAAQpV,EAAE,EAAE,iBAAiB,EAGrD,MAAMsV,EAAWtB,GAAiBnF,EAAE,MAAQ+F,EAAM5U,EAAE,MAAO6O,EAAE,MAAQgG,CAAI,EACnEU,EAAgB,aAChBC,EAAQd,EAAO,QAAQY,EAAWC,EAAc,iBAAiB,EAQvE,GALYb,EAAO,MAAM,kBACb,CAAC,QAAQ,EACT,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,QAAQ,EACzF,CAACI,EAAOjG,EAAE,MAAOA,EAAE,MAAOuG,EAAOI,EAAOT,EAAOH,EAAMI,EAAQH,CAAI,CAAC,IAElE,EACT,MAAM,IAAI,MAAM,qCAAqC,EAIxD,MAAMY,EAAaf,EAAO,QAAQ,MAC/Bc,EAAMD,EAAc,kBACpBC,EAAMD,EAAc,kBAAoBD,CAC9C,EAGGZ,EAAO,MAAMI,CAAK,EAClBJ,EAAO,MAAMU,CAAK,EAClBV,EAAO,MAAMc,CAAK,EACdT,GAAOL,EAAO,MAAMK,CAAK,EACzBC,GAAQN,EAAO,MAAMM,CAAM,EAG/B,MAAMU,EAAS,CACZ,MAAO,CAAC,QAAQ,EAChB,EAAGD,EACH,MAAOzV,EAAE,MACT,MAAO8P,EACP,MAAOC,EACP,SAAUlS,EACV,SAAUmC,EAAE,SACZ,OAAQA,EAAE,OACV,MAAOA,EAAE,KACf,EAGS2V,EAAS,IAAI,MAAM3V,EAAE,KAAK,EAC1B4V,EAAS,IAAI,MAAM5V,EAAE,KAAK,EAC1B6V,EAAY,IAAI,MAAM7V,EAAE,KAAK,EAC7B8V,EAAY,IAAI,MAAM9V,EAAE,KAAK,EAC7B+V,EAAa,IAAI,MAAM/V,EAAE,KAAK,EAE9BxB,EAAI4V,GAAWsB,EAAQ,YAAY,EACzCK,EAAW,CAAC,EAAI,EAChBD,EAAU,CAAC,EAAItX,EAAE,CAAC,EAClBqX,EAAU,CAAC,EAAI,EAAIrX,EAAE,CAAC,EACtBmX,EAAO,CAAC,EAAInX,EAAE,CAAC,EACfoX,EAAO,CAAC,EAAI,EAAIpX,EAAE,CAAC,EACnB,QAASlM,EAAI,EAAGA,EAAI0N,EAAE,MAAO1N,IAC1ByjB,EAAWzjB,CAAC,EAAIA,EAAI,EACpBwjB,EAAUxjB,CAAC,EAAIkM,EAAElM,CAAC,EAClBujB,EAAUvjB,CAAC,EAAI,EAAIkM,EAAElM,CAAC,EACtBqjB,EAAOrjB,CAAC,EAAIkM,EAAElM,CAAC,EAAIkM,EAAElM,EAAI,CAAC,EAC1BsjB,EAAOtjB,CAAC,EAAI,EAAIqjB,EAAOrjB,CAAC,EAI3B,OAAAojB,EAAO,KAAO,CAAC,WAAAK,EAAY,OAAAH,EAAQ,OAAAD,EAAQ,UAAAG,EAAW,UAAAD,GAC/CH,CACV,CCnfA,SAASM,GAAgBpY,EAASC,EAAU,CACzC,IAAIoY,EAASC,EAASnE,EACtB,GAAIlU,EAAS,OAAS,EAAG,CAEtB,MAAME,EAAOH,EAAQ,OAAO,MACtBuY,EAAgBvY,EAAQ,WACxBrE,EAAIwE,EAAOF,EAAS,OAC1BoY,EAAU,MAAM1c,CAAC,EACjB2c,EAAU,MAAM3c,CAAC,EACjBwY,EAAS,MAAMxY,CAAC,EAChB,IAAImI,EAAI,EACR,QAASpP,EAAI,EAAGA,EAAIyL,EAAMzL,IACnBuL,EAAS,SAASvL,CAAC,IACvB2jB,EAAQvU,CAAC,EAAIyU,EAAc7jB,CAAC,EAC5B4jB,EAAQxU,CAAC,EAAI9D,EAAQ,QAAQtL,CAAC,EAC9Byf,EAAOrQ,CAAC,EAAI9D,EAAQ,UAAUtL,CAAC,EAC/BoP,EAAIA,EAAI,EAEjB,MACMuU,EAAUrY,EAAQ,WAClBmU,EAASnU,EAAQ,UACjBsY,EAAUtY,EAAQ,QAGrB,MAAO,CAACqY,EAASlE,EAAQmE,CAAO,CACnC,CAOO,SAASE,IAAU,CACtB,MAAMC,EAAM,IAAI,KAahB,MAZiB,GAAGA,EAAI,YAAa,CAAA,IAAIA,EAAI,SAAQ,EAAK,GACrD,SAAU,EACV,SAAS,EAAG,GAAG,CAAC,GAAGA,EAAI,QAAO,EAAG,SAAQ,EAAG,SAAS,EAAG,GAAG,CAAC,GAAGA,EAC/D,SAAU,EACV,SAAU,EACV,SAAS,EAAG,GAAG,CAAC,GAAGA,EAAI,WAAU,EAAG,SAAQ,EAAG,SAAS,EAAG,GAAG,CAAC,GAAGA,EAClE,WAAY,EACZ,SAAU,EACV,SAAS,EAAG,GAAG,CAAC,GAAGA,EACnB,gBAAiB,EACjB,SAAU,EACV,SAAS,EAAG,GAAG,CAAC,EAEzB,CAaO,SAASC,GAAgB5B,EAAQ5W,EAAOF,EAASC,EAAU,CAG/D,KAAM,CAAC0Y,EAAYC,EAAWN,CAAO,EAAIF,GAAgBpY,EAASC,CAAQ,EAGpEkG,EAAIsR,GAAYX,EAAQ5W,EAAOF,EAAQ,OAAQC,CAAQ,EAC7DkG,EAAE,KAAUqS,KACZrS,EAAE,WAAgBwS,EAClBxS,EAAE,UAAeyS,EACjBzS,EAAE,QAAamS,EACfnS,EAAE,WAAgBnG,EAAQ,WAC1BmG,EAAE,UAAenG,EAAQ,UAGzBmG,EAAE,UAAeoQ,GAAarW,EAAO,WAAW,EAChDiG,EAAE,IAASoQ,GAAarW,EAAO,KAAK,EACpCiG,EAAE,IAASoQ,GAAarW,EAAO,KAAK,EACpCiG,EAAE,IAASoQ,GAAarW,EAAO,KAAK,EACpCiG,EAAE,IAASoQ,GAAarW,EAAO,KAAK,EACpCiG,EAAE,IAASoQ,GAAarW,EAAO,KAAK,EACpCiG,EAAE,IAASoQ,GAAarW,EAAO,KAAK,EACpCiG,EAAE,IAASoQ,GAAarW,EAAO,KAAK,EACpCiG,EAAE,IAASoQ,GAAarW,EAAO,KAAK,EAEpC,MAAMvE,EAAIuE,EAAM,MAChB,OAAAiG,EAAE,MAAa,GAAKxK,EAAI,IAAMA,EAAI,GAAMgL,GAAG,IAAM,EAAIhL,EAAI,CAAC,EACnDwK,CACV,CASO,SAAS0S,GAAe3X,EAAQ,CAEpC,MAAM4X,EAAazH,GAAO,MAAMnQ,EAAO,MAAOA,EAAO,KAAK,EAC1D,QAASxM,EAAI,EAAGA,EAAIwM,EAAO,MAAOxM,IAAK,CACpC,MAAMqkB,EAAY7X,EAAO,MAAQxM,EAC3BskB,EAAa9X,EAAO,OAASA,EAAO,MAAQ,EAAIxM,GACtDokB,EAAW,EAAE,IAAI5X,EAAO,EAAE,MAAM6X,EAAWA,EAAY7X,EAAO,KAAK,EAAG8X,CAAU,CAClF,CAED,OAAOF,CACV,CAWA,SAASG,GAAQhF,EAAKC,EAAM,IAAK,CAE9B,OAAI,MAAM,QAAQD,CAAG,GAAKA,EAAI,OAAS,EAC7BC,IAAQ,IAAMD,EAAI,IAAIrT,GAAK,OAAO,WAAWA,EAAE,KAAI,CAAE,CAAC,EAC1DqT,EAAI,IAAIrT,GAAK,OAAO,WAAWA,EAAE,KAAI,EAAG,QAAQsT,EAAK,GAAG,CAAC,CAAC,EAGzDA,IAAQ,IAAM,OAAO,WAAWD,EAAI,MAAM,EAC9C,OAAO,WAAWA,EAAI,KAAI,EAAG,QAAQC,EAAK,GAAG,CAAC,CACpD,CAQA,SAASO,GAAOiC,EAAK,CAClB,OAAOA,EAAI,KAAK9V,GAAK,OAAO,MAAMA,CAAC,CAAC,CACvC,CAQA,SAASsY,GAAY5W,EAAG,CACrB,OAAOA,EAAE,QAAQ,IAAM,EAAE,EAAE,KAAI,EAAG,QAAQ,iBAAkB,IAAI,CACnE,CAOA,SAAS6W,GAAWC,EAAW,CAE5B,IAAIC,EAAUD,EAAU,QAAQ,YAAa,EAAE,EAAE,QAAQ,yBAAyB,EAAE,EAGpF,OAAAC,EAAUA,EAAQ,QAAQ,OAAQ,EAAE,EAG7BA,EAAQ,MAAM,IAAI,EAAE,OAAOzY,GAAKA,EAAE,KAAI,EAAG,OAAS,CAAC,CAC7D,CAiBO,SAAS0Y,GAAS9E,EAAS3T,EAAKvC,EAAQ8V,EAAWmF,EAAeC,EAAeC,EAAgBC,EAAQ,EAAG,CAUhH,GAJI7Y,IAAQ,SACTA,EAAM,KAGL,EAAEA,IAAQ,KAAOA,IAAQ,KAC1B,MAAM,IAAI,MAAM,oDAAoD,EAIvE,MAAMqT,EAAMrT,IAAQ,IAAM,IAAM,IAGhC,IAAIyT,EAAO6E,GAAW3E,CAAO,EAE7B,GAAIF,EAAK,OAAS,EACf,MAAM,IAAI,MAAM,+EAA+E,EAIlG,MAAMqF,EAAiBrF,EAAK,CAAC,EAAE,MAAMzT,CAAG,EAGxC,IAAI8T,EAAW,EACXiF,EACJ,MAAMvF,EAAY/V,IAAW,MACzB+V,GAAcA,IAAc,QAAaI,GAAO,QAAQ,KACzDmF,EAAeD,EACfhF,EAAW,GAKd,MAAMzC,EAAQoC,EAAK,OAASK,EAC5B,GAAIzC,EAAQ,EACT,MAAM,IAAI,MAAM,sDAAsD,EAKzE,IAAI2H,EACAhF,EACA+D,EACAD,EAAa,MAAMzG,CAAK,EACxBkC,GACDyF,EAAgBxF,EAAY6E,GAAYU,EAAa,CAAC,CAAC,EAAI,GAC3DhB,EAAY,MAAM1G,CAAK,EACvB2C,EAAc,IAEdgF,EAAgB,GAChBjB,EAAY,CAAA,EACZ/D,EAAc,GAIjB,IAAIiF,EACAC,EAAa,CAAA,EACbzB,EACAiB,GACDO,EAAqBzF,EAAY6E,GAAYU,EAAa/E,CAAW,CAAC,EAAI,GAC1EyD,EAAU,MAAMpG,CAAK,EACrB2C,EAAcA,EAAc,IAE5BiF,EAAqB,GACrBxB,EAAU,CAAA,GAIb,MAAMnG,EAAQwH,EAAe,OAAS9E,EACtC,GAAI1C,EAAQ,EACT,MAAM,IAAI,MAAM,yDAAyD,EAI5E,MAAMnc,EAAOqb,GAAO,MAAMc,EAAOD,CAAK,EAGtC,QAAS/L,EAAIwO,EAAUxO,EAAI+L,EAAQyC,EAAUxO,IAAK,CAG/C,MAAMqN,EAAOrN,EAAIwO,EACjBgE,EAAWnF,CAAI,EAAIA,EAGnB,IAAIsB,EAAeR,EAAKnO,CAAC,EAAE,MAAMtF,CAAG,EASpC,GANIuT,IACDwE,EAAUpF,CAAI,EAAIsB,EAAa,CAAC,EAChCA,EAAa,MAAO,GAInByE,EAAe,CAChB,MAAMS,EAAYlF,EAAa,CAAC,EAChCwD,EAAQ9E,CAAI,EAAIwG,EAChBlF,EAAa,MAAO,GAGhBiF,EAAW,SAAW,GAAKA,EAAW,QAAQC,CAAS,EAAI,IAC5DD,EAAW,KAAKC,CAAS,CAE9B,CAGD,MAAMjF,EAAYb,IAAQ,IACvBY,EAAa,IAAIlU,GAAK,OAAO,WAAWA,EAAE,KAAI,CAAE,CAAC,EACjDkU,EAAa,IAAIlU,GAAK,OAAO,WAAWA,EAAE,KAAI,EAAG,QAAQsT,EAAK,GAAG,CAAC,CAAC,EAEtE,GAAIa,EAAU,KAAKnU,GAAK,OAAO,MAAMA,CAAC,CAAC,EACpC,MAAM,IAAI,MAAM,wFAAwF,EAG3G,GAAImU,EAAU,QAAU5C,EACrB,MAAM,IAAI,MAAM,kCAAoChM,CAAC,EAGxDnQ,EAAK,EAAE,IAAI,IAAI,aAAa+e,CAAS,GAAI5O,EAAIwO,GAAYxC,CAAK,CAChE,CAGD,GAAI,CAACiC,GAAawE,EAAU,SAAW1G,EAAO,CAC3C0G,EAAY,MAAM1G,CAAK,EACvB,QAASxd,EAAI,EAAGA,EAAIwd,EAAOxd,IACxBkkB,EAAUlkB,CAAC,EAAI,KAAOA,EAAI,EAE/B,CAGDkkB,EAAYA,EAAU,IAAIhY,GAAKsY,GAAYtY,CAAC,CAAC,EAC7C0X,EAAUA,EAAQ,IAAI1X,GAAKsY,GAAYtY,CAAC,CAAC,EACzCmZ,EAAaA,EAAW,IAAInZ,GAAKsY,GAAYtY,CAAC,CAAC,EAG/C,IAAIqZ,EACAC,EAAa,MAAM/H,CAAK,EACxBgI,EAAgB,MAAMhI,CAAK,EAC/B,GAAIyH,GAAgBA,EAAa,SAAWzH,EAAQ0C,EAAa,CAC9DoF,EAAYL,EAAa,IAAIhZ,GAAKsY,GAAYtY,CAAC,CAAC,EAAE,MAAMiU,CAAW,EACnE,QAASngB,EAAI,EAAGA,EAAIyd,EAAOzd,IACxBwlB,EAAWxlB,CAAC,EAAIA,EAChBylB,EAAczlB,CAAC,EAAIA,EAAI,CAEhC,KAAU,CACJulB,EAAY,MAAM9H,CAAK,EACvB,QAASzd,EAAI,EAAGA,EAAIyd,EAAOzd,IACxBwlB,EAAWxlB,CAAC,EAAIA,EAChBulB,EAAUvlB,CAAC,EAAI,KAAOA,EAAI,GAC1BylB,EAAczlB,CAAC,EAAIA,EAAI,CAE5B,CAGD,IAAI0lB,EACJ,GAAI9b,IAAW,UAIZ,GAHA8b,EAAYlG,IAAQ,IACjB+F,EAAU,IAAIrZ,GAAK,OAAO,WAAWA,EAAE,KAAI,CAAE,CAAC,EAC9CqZ,EAAU,IAAIrZ,GAAK,OAAO,WAAWA,EAAE,KAAI,EAAG,QAAQsT,EAAK,GAAG,CAAC,CAAC,EAC/DkG,EAAU,KAAKxZ,GAAK,OAAO,MAAMA,CAAC,CAAC,EACpC,MAAM,IAAI,MAAM,+FAA+F,OAGlHwZ,EAAYD,EAGV,MAAM,QAAQC,CAAS,IAAGA,EAAY,CAAA,GACtCZ,IAAeA,EAAgB,IAC/BC,IAAgBA,EAAiB,IAEtCD,EAAgBY,EAAU,OAAS,GAAKZ,EAAc,OAAS,EAAIA,EAAgB,YACnFC,EAAiBW,EAAU,OAAS,GAAKX,EAAe,OAAS,EAAIA,EAAiB,GACtF,MAAMY,EAAeb,GAAiBC,EAAe,OAAS,EAAI,KAAOA,EAAiB,IAEpFa,EAASF,EAAU,CAAC,EAAIA,EAAU,CAAC,EAwBzC,MAvBY,CACT,OAAQE,EAASzB,GAAe7iB,EAAK,GAAG,EAAIA,EAAK,EAAG,EACpD,OAAAsI,EACA,UAAA8V,EACA,cAAAmF,EACA,cAAAM,EACA,mBAAAC,EACA,UAAAlB,EACA,WAAAD,EACA,UAAY2B,EAASL,EAAU,QAAS,EAAGA,EAC3C,UAAYK,EAASF,EAAU,QAAS,EAAGA,EAC3C,WAAAF,EACA,OAAAI,EACA,QAAAhC,EACA,eACA,WAAAyB,EACA,IAAAlZ,EACA,IAAAqT,EACA,cAAAsF,EACA,eAAAC,EACA,aAAAY,CACN,CAGA,CAUA,SAASE,GAAaC,EAAiB,CAGpC,GAAI/F,GAAO+F,EAAgB,CAAC,EAAE,MAAM,CAAC,CAAC,EACnC,MAAO,GAMV,MAAMC,EAAYD,EAAgB,CAAC,EAAE,OAC/BE,EAAQ,CAAA,EACd,QAAShhB,EAAI,EAAGA,EAAI+gB,EAAW/gB,IAAK,CAGjC,IAAIia,EAAK,CAAA,EACT,QAASjf,EAAI,EAAGA,EAAI8lB,EAAgB,OAAQ9lB,IACzCif,EAAG,KAAK6G,EAAgB9lB,CAAC,EAAEgF,CAAC,CAAC,EAIhC,MAAMsc,EAAKwE,EAAgB,CAAC,EAAE9gB,CAAC,EACzB0I,EAAIC,GAAKsR,CAAE,EACXrR,EAAIL,GAAG0R,CAAE,EACTlM,EAAI,KAAK,KAAKuO,EAAK5T,GAAKE,CAAC,EAC/BoY,EAAM,KAAKjT,CAAC,CACd,CAGD,OAAOiT,EAAM,MAAM9Z,GAAKA,EAAI,CAAC,CAChC,CASA,SAAS+Z,GAAiBrG,EAAM,CAG7B,MAAMsG,EAAO,IACPC,EAAMvG,EAAK,CAAC,EAAE,MAAMsG,CAAI,EACxBE,EAAMxG,EAAK,CAAC,EAAE,MAAMsG,CAAI,EACxBG,EAAMF,EAAI,OACVG,EAAMF,EAAI,OAEVG,EAAO,IACPC,EAAM5G,EAAK,CAAC,EAAE,MAAM2G,CAAI,EACxBE,EAAM7G,EAAK,CAAC,EAAE,MAAM2G,CAAI,EACxBG,EAAMF,EAAI,OACVG,EAAMF,EAAI,OAIb,IAAChJ,EAAetR,EACnB,GAAIka,EAAM,GAAKC,EAAM,GAAKD,IAAQC,GAAOD,EAAMK,EAC5Cva,EAAM+Z,EACNzI,EAAQ4I,UAGAK,EAAM,GAAKC,EAAM,GAAKD,IAAQC,EACtCxa,EAAMoa,EACN9I,EAAQ6I,MAIR,OAAM,IAAI,MAAM,qEAAqE,EAKxF,MAAO,CAACna,EADIA,IAAQ,IAAM,IAAM,IACdsR,CAAK,CAC1B,CASO,SAASmJ,GAAelC,EAAW,CAGvC,MAAM9E,EAAO6E,GAAWC,CAAS,EAC3BlH,EAAQoC,EAAK,OACnB,GAAIpC,EAAQ,EACT,MAAM,IAAI,MAAM,iHAAiH,EAIpI,KAAM,CAACrR,EAAKqT,EAAK/B,CAAK,EAAIwI,GAAiBrG,CAAI,EACzCmG,EAAY,KAAK,IAAItI,EAAO,CAAC,EAG7BoJ,EAAY,KAAK,IAAIrJ,EAAO,CAAC,EACnC,IAAIsJ,EAAclH,EAAK,MAAM,EAAGiH,CAAS,EAAE,IAAI3a,GAAKA,EAAE,MAAMC,CAAG,EAAE,MAAM,EAAG4Z,CAAS,CAAC,EAGpFe,EAAcA,EAAY,IAAI5a,GAAKA,EAAE,IAAIA,GAAKsY,GAAYtY,CAAC,CAAC,CAAC,EAG7D,MAAM4Z,EAAkBgB,EAAY,IAAI5a,GAAKqY,GAAQrY,EAAE,MAAK,EAAIsT,CAAG,CAAC,EACpE,QAASxf,EAAI,EAAGA,EAAI6mB,EAAW7mB,IAC5B,GAAI+f,GAAO+F,EAAgB9lB,CAAC,EAAE,MAAM,CAAC,CAAC,EACnC,MAAM,IAAI,MAAM,8EAA8E,EAKpG,MAAM2f,EAAYkG,GAAaC,CAAe,EAC9C,IAAIiB,EAAc,EAElB,MAAM1S,EAAKsL,EAAY,EAAI,EACrB1J,EAAK5B,EAAK,EAGVmS,EAAMM,EAAYzS,CAAE,EAAE,CAAC,EACvB2S,EAAMF,EAAY7Q,CAAE,EAAE,CAAC,EAGvBgR,EAAOnB,EAAgBzR,CAAE,EAAE,CAAC,EAC5B6S,EAAOpB,EAAgB7P,CAAE,EAAE,CAAC,EAG5BkR,EAAOrB,EAAgBzR,CAAE,EAAE,CAAC,EAC5B+S,EAAOtB,EAAgB7P,CAAE,EAAE,CAAC,EAGlC,IAAIyJ,EAAY,GACZ2H,EAAiB,GAmBrB,GAlBI,OAAO,MAAMJ,CAAI,GAAK,OAAO,MAAMC,CAAI,GAAKV,IAAQQ,GAGrDtH,EAAY,GACZqH,EAAcA,EAAc,GACpB,OAAO,MAAMI,CAAI,GAAK,OAAO,MAAMC,CAAI,GAAKZ,IAAQQ,IAK5DtH,EAAY,GACZ2H,EAAiB,GACjBN,EAAcA,EAAc,GAM3B,CAACM,EAAgB,CAClB,MAAMrJ,EAAO0B,EAAY,EAAI,EAGvBuH,EAAOnB,EAAgBzR,CAAE,EAAE2J,CAAI,EAC/BkJ,EAAOpB,EAAgB7P,CAAE,EAAE+H,CAAI,EAErCqJ,EAAiBtH,GAAO,CAACkH,EAAMC,CAAI,CAAC,EACpCH,EAAcA,EAAcM,CAC9B,CAGD,IAAIzd,EAAS,KACb,GAAI+V,EAAW,CACDoH,EAAc,EAAID,EAAY,CAAC,EAAE,MAAMC,CAAW,EAAID,EAAY,CAAC,EAC9E,MAAMQ,EAAMP,EAAc,EAAIjB,EAAgB,CAAC,EAAE,MAAMiB,CAAW,EAAIjB,EAAgB,CAAC,EACvFlc,EAASmW,GAAOuH,CAAG,EAAI,SAAW,QACpC,CAED,MAAO,CAACnb,EAAKuT,EAAW2H,EAAgBzd,CAAM,CACjD,gGCjjBUrK,EAAM,CAAA,EAAA,4IADiDA,EAAM,CAAA,EAAA,iBAAA,EAAmBgD,GAAA6G,EAAA,WAAA7J,MAAQA,EAAK,CAAA,CAAA,uBAApGqB,EAESF,EAAA0I,EAAAvI,CAAA,sEADFtB,EAAM,CAAA,EAAA,KAAAgoB,EAAA,EAAAC,CAAA,+BADiDjoB,EAAM,CAAA,EAAA,wCAAmBgD,GAAA6G,EAAA,WAAA7J,MAAQA,EAAK,CAAA,CAAA,8EAD7FA,EAAO,CAAA,CAAA,aAAYA,EAAM,CAAA,kBAA9B,OAAIS,GAAA,EAAA,mMADsET,EAAS,CAAA,EAAA,iBAAA,aAO3EA,EAAE,CAAA,CAAA,wCAPfqB,EAMMF,EAAA6I,EAAA1I,CAAA,4DACND,EAAoCF,EAAAyB,EAAAtB,CAAA,OAAPtB,EAAK,CAAA,CAAA,wBAPjBA,EAAY,CAAA,CAAA,iDACnBA,EAAO,CAAA,CAAA,+DAD8DA,EAAS,CAAA,EAAA,mDAO3EA,EAAE,CAAA,CAAA,iBAAcA,EAAK,CAAA,QAALA,EAAK,CAAA,CAAA,+GApCpB,GAAA0L,CAAE,EAAAZ,GACF,QAAAzI,CAAO,EAAAyI,GACP,MAAAxM,EAAQ+D,EAAQ,CAAC,CAAA,EAAAyI,EACjB,CAAA,UAAAib,EAAY,EAAE,EAAAjb,EAMnB,MAAAod,EAAgBjU,GAAC,IAChBA,EAAE,MAAQ,YAAW,OAChBF,EAAM1R,EAAQ,UAAUsK,GAAKA,IAAMrO,CAAK,EAC1CyV,EAAM,GACPxI,EAAA,EAAAjN,EAAQ+D,EAAQ0R,EAAM,CAAC,CAAA,YAKzBE,EAAE,MAAQ,aAAY,OACjBF,EAAM1R,EAAQ,UAAUsK,GAAKA,IAAMrO,CAAK,EAC1CyV,EAAM1R,EAAQ,OAAS,GACxBkJ,EAAA,EAAAjN,EAAQ+D,EAAQ0R,EAAM,CAAC,CAAA,WAURpI,EAAAwc,GAAA5c,EAAA,EAAAjN,EAAQ6pB,CAAM,eAKZ7pB,EAAK,KAAA,2UC9BV0B,EAAK,CAAA,CAAA,6CAA1BqB,EAAkCF,EAAAinB,EAAA9mB,CAAA,2BAAbtB,EAAK,CAAA,CAAA,+CADrBA,EAAK,CAAA,GAAAoK,GAAApK,CAAA,0HADgBA,EAAM,CAAA,EAAA,gBAAA,UAAnCqB,EAKMF,EAAA6I,EAAA1I,CAAA,sDAJEtB,EAAK,CAAA,iKADgBA,EAAM,CAAA,EAAA,gKAJrB,CAAA,MAAAqoB,EAAQ,IAAI,EAAAvd,EACZ,CAAA,OAAAwd,EAAS,EAAE,EAAAxd,0aCAzBzJ,EAEOF,EAAAinB,EAAA9mB,CAAA,EADPJ,EAAwEknB,EAAAve,CAAA,ogBCDxExI,EAA2BF,EAAA6I,EAAA1I,CAAA,kMCCQtB,EAAK,CAAA,CAAA,cAASA,EAAK,CAAA,CAAA,uCAAtDqB,EAAkEF,EAAA0I,EAAAvI,CAAA,0DAA/BtB,EAAK,CAAA,CAAA,mBAASA,EAAK,CAAA,CAAA,wDAHxC,GAAA,CAAA,MAAAuoB,EAAQ,OAAO,EAAAzd,uMCsJf0d,EAAAxoB,MAAS,IAAEyoB,GAAAzoB,CAAA,EAIX0oB,EAAA1oB,KAAQ,IAAE2oB,GAAA3oB,CAAA,+GALyBA,EAAK,CAAA,EAAA,GAAA,UAA7CqB,EAIMF,EAAA6I,EAAA1I,CAAA,gEAHDtB,MAAS,iFAD0BA,EAAK,CAAA,EAAA,GAAA,EAKxCA,KAAQ,yJAbRwoB,EAAAxoB,KAAQ,IAAE4oB,GAAA5oB,CAAA,EAIV0oB,EAAA1oB,MAAS,IAAEmK,GAAAnK,CAAA,+GALwBA,EAAK,CAAA,EAAA,GAAA,UAA7CqB,EAIMF,EAAA6I,EAAA1I,CAAA,gEAHDtB,KAAQ,iFAD2BA,EAAK,CAAA,EAAA,GAAA,EAKxCA,MAAS,uJAMwDA,EAAK,CAAA,EAAC,QAAQA,EAAM,CAAA,CAAA,EAAA,6IAA1FqB,EAAmGF,EAAAinB,EAAA9mB,CAAA,8BAA7BtB,EAAK,CAAA,EAAC,QAAQA,EAAM,CAAA,CAAA,EAAA,KAAA0C,GAAA+Q,EAAAoV,CAAA,yCAIrB7oB,EAAK,CAAA,EAAC,QAAQA,EAAM,CAAA,CAAA,EAAA,4IAAzFqB,EAAkGF,EAAAinB,EAAA9mB,CAAA,8BAA7BtB,EAAK,CAAA,EAAC,QAAQA,EAAM,CAAA,CAAA,EAAA,KAAA0C,GAAA+Q,EAAAoV,CAAA,yCAbnB7oB,EAAK,CAAA,EAAC,QAAQA,EAAM,CAAA,CAAA,EAAA,6IAA1FqB,EAAmGF,EAAAinB,EAAA9mB,CAAA,8BAA7BtB,EAAK,CAAA,EAAC,QAAQA,EAAM,CAAA,CAAA,EAAA,KAAA0C,GAAA+Q,EAAAoV,CAAA,yCAIrB7oB,EAAK,CAAA,EAAC,QAAQA,EAAM,CAAA,CAAA,EAAA,4IAAzFqB,EAAkGF,EAAAinB,EAAA9mB,CAAA,8BAA7BtB,EAAK,CAAA,EAAC,QAAQA,EAAM,CAAA,CAAA,EAAA,KAAA0C,GAAA+Q,EAAAoV,CAAA,kEAPtF7oB,EAAQ,CAAA,KAAAoK,0DAhBbpK,EAAE,CAAA,CAAA,+DAGSA,EAAK,CAAA,CAAA,sBACLA,EAAG,CAAA,CAAA,sBACHA,EAAG,CAAA,CAAA,uEAEFA,EAAQ,CAAA,CAAA,UAR3BqB,EAoCMF,EAAA6I,EAAA1I,CAAA,mDA1B2BtB,EAAe,EAAA,CAAA,CAAA,mBAC/BA,EAAQ,EAAA,CAAA,iBACVA,EAAc,EAAA,CAAA,mBACZA,EAAa,CAAA,CAAA,oBACZA,EAAc,EAAA,CAAA,iBACjBA,EAAY,EAAA,CAAA,iGAdpBA,EAAE,CAAA,CAAA,2BAGSA,EAAK,CAAA,CAAA,2BACLA,EAAG,CAAA,CAAA,2BACHA,EAAG,CAAA,CAAA,wBAEFA,EAAQ,CAAA,CAAA,mFA/Hb,GAAA0L,CAAE,EAAAZ,GACF,MAAAxM,CAAK,EAAAwM,GACL,IAAA2D,CAAG,EAAA3D,GACH,IAAA+D,CAAG,EAAA/D,EACH,CAAA,OAAAge,EAAS,CAAC,EAAAhe,GACV,KAAAie,EAAI,GAAMla,EAAMJ,GAAO,KAAK,QAAQ,CAAC,CAAA,EAAA3D,EACrC,CAAA,SAAAke,EAAW,EAAK,EAAAle,EAGvB,GAAAxM,EAAQmQ,GAAOnQ,EAAQuQ,EACd,MAAA,IAAA,MAAM,6CAA6C,EAG5D,GAAAJ,EAAMI,EACG,MAAA,IAAA,MAAM,0CAA0C,EAGvD,MAAAoa,EAAW/kB,SAEbglB,EACAC,EACAC,EAAa,GAEX,MAAAC,EAAgB7e,GAAC,CACd,MAAA8e,EAAW7a,EAAMjE,GAAKqE,EAAMJ,WAKzB,KAAK,MAAM6a,EAAWP,CAAI,EAAIA,GAAM,QAAQ,CAAC,GAOnDQ,EAAuBtV,GAAC,OACrBuV,EAAaN,EAAc,wBAC3BO,EAAaN,EAAgB,wBAC7BO,EAAOF,EAAW,EAClBG,EAAOF,EAAW,EAAIA,EAAW,MAE/B,OAAAxV,EAAE,QAAUyV,IAASC,EAAOD,IAOjCE,EAAiB3V,GAAC,OACfzJ,EAAI+e,EAAoBtV,CAAC,EAC3BzJ,EAAI,GAAKA,EAAI,IACjB4e,EAAa5e,EAAI,IAAMqf,EAAQ,GAAKrf,EAAI,IAAMqf,EAAQ,IAOnDC,EAAkB7V,GAAC,CACtBmV,EAAa,IAOVW,EAAgB9V,GAAC,CACpBmV,EAAa,SACP5e,EAAI+e,EAAoBtV,CAAC,EAC3BzJ,EAAI,GAAKA,EAAI,OAEjBlM,EAAQ+qB,EAAa7e,CAAC,CAAA,GAOnBwf,EAAmB/V,GAAC,KACnBgW,EAAW3rB,EAAQyqB,EAAO9U,EAAE,OAAS,GACrCgW,EAAWxb,IAAKwb,EAAWxb,GAC3Bwb,EAAWpb,IAAKob,EAAWpb,GAE/BtD,EAAA,EAAAjN,EAAU,EAAA,KAAK,MAAM2rB,EAAWlB,CAAI,EAAIA,GAAM,QAAQ,CAAC,CAAA,GAOpDmB,EAAYjW,GAAC,KACXmV,EAAU,aACT5e,EAAI+e,EAAoBtV,CAAC,EAC3BzJ,EAAI,GAAKA,EAAI,OAEjBlM,EAAQ+qB,EAAa7e,CAAC,CAAA,GAOnB2f,EAAkBlW,GAAC,IAClBA,EAAE,MAAQ,YAAW,KACtB3V,EAAQA,EAAQyqB,EAAOta,EAAMA,EAAMnQ,EAAQyqB,CAAI,YAI9C9U,EAAE,MAAQ,aAAY,KACvB3V,EAAQA,EAAQyqB,EAAOla,EAAMA,EAAMvQ,EAAQyqB,CAAI,qDA2BaG,EAAakB,qDASblB,EAAakB,qDAlBpEjB,EAAeiB,gQAbvBP,EAAQpb,IAAQI,EAAM,KAAOvQ,EAAQmQ,IAAQI,EAAMJ,GAAO,GAAG,gBAC7Dwa,EAAS,SAAU3qB,CAAK,gsCCDkB,MAAQ0B,EAAQ,CAAA,OAAQ,SAAW,UAA/CA,EAAK,CAAA,IAAA,iBAALA,EAAK,CAAA,+HAAeA,EAAQ,CAAA,2BAA5BA,EAAK,CAAA,0JAGe,IAAAqqB,EAAA,CAAA,GAAA,SAAA,QAAA,CAAA,MAAO,IAAI,UAA7BrqB,EAAM,CAAA,IAAA,iBAANA,EAAM,CAAA,2IAANA,EAAM,CAAA,0JAGU,IAAAqqB,EAAA,CAAA,GAAA,QAAA,QAAA,CAAA,MAAO,IAAI,UAA5BrqB,EAAK,CAAA,IAAA,iBAALA,EAAK,CAAA,4IAALA,EAAK,CAAA,+IAGT,cAAY,0IAArBA,EAAO,CAAA,CAAA,gVAQpBA,EAAO,CAAA,EAAAoG,CAAA,8IAAPpG,EAAO,CAAA,IAAAkG,GAAAokB,EAAAlkB,CAAA,kdAkBLpG,EAAK,EAAA,EAAA,yCAATqB,EAAcF,EAAAqJ,EAAAlJ,CAAA,+BAAVtB,EAAK,EAAA,EAAA,KAAA0C,GAAA+Q,EAAAoV,CAAA,yCAVP0B,EAAAvqB,OAAU,MAAI4oB,GAAA5oB,CAAA,uEAAdA,OAAU,6dAEkBwqB,EAAAxqB,KAAM,MAAK,+CACjBA,EAAK,EAAA,CAAA,qBAD1B,4BAA0B,eAAa,MAAI,iCAA9CqB,EAAkDF,EAAAqJ,EAAAlJ,CAAA,uDAApB,CAAAmpB,GAAApqB,EAAA,IAAAmqB,KAAAA,EAAAxqB,KAAM,MAAK,KAAA0C,GAAA+Z,EAAA+N,CAAA,khBAPzCnpB,EAAgCF,EAAAqJ,EAAAlJ,CAAA,mcAyBlCtB,EAAM,CAAA,CAAA,UAAVqB,EAAeF,EAAAqJ,EAAAlJ,CAAA,4BAAXtB,EAAM,CAAA,CAAA,6CAhDPwoB,EAAAxoB,EAAY,CAAA,GAAA,CAAAA,EAAU,CAAA,GAAAA,OAAW,aAAW2oB,GAAA3oB,CAAA,IAiB7CA,EAAO,CAAA,GAAAmK,GAAAnK,CAAA,KA6BPA,EAAM,CAAA,IAAK,SAAWA,EAAM,CAAA,IAAAoK,GAAApK,CAAA,iJA9C3BA,EAAY,CAAA,GAAA,CAAAA,EAAU,CAAA,GAAAA,OAAW,sHAiBlCA,EAAO,CAAA,6GA6BPA,EAAM,CAAA,IAAK,SAAWA,EAAM,CAAA,yPAhJnB,KAAA6K,CAAI,EAAAC,GACJ,QAAAiB,CAAO,EAAAjB,GACP,SAAAkB,CAAQ,EAAAlB,GAGR,IAAAgB,CAAG,EAAAhB,GACH,MAAAmB,CAAK,EAAAnB,EAQZwd,EAAS,UACToC,EAAS,KAGTtI,EAAQ,EACR/U,EAAS,MACTC,EAAQ,KAGRnH,EAWW,eAAAwkB,EAAa5e,EAASqW,EAAO/U,EAAQC,EAAK,CACtD/B,EAAA,EAAApF,EAAU0E,EAAI,EACV,KAAKgY,GAAM,CACTtX,EAAA,EAAA+c,EAAS,WAAW,EAGd,MAAAna,EAAIyU,GAAQC,EAAQ9W,EAAQ,OAAQqW,EAAO/U,EAAQC,EAAOtB,CAAQ,EACxEmC,EAAE,KAAUoW,KAEZpW,EAAE,SAAU,GACZA,EAAE,UAAepC,EAAQ,UACzBoC,EAAE,WAAgBpC,EAAQ,WAC1BoC,EAAE,UAAepC,EAAQ,UACzBoC,EAAE,cAAmBpC,EAAQ,cAC7BoC,EAAE,eAAoBpC,EAAQ,eAC9BoC,EAAE,OAAYpC,EAAQ,OACtBoC,EAAE,SAAU,GAEZA,EAAE,KAAM,SAGF+D,EAAIuS,GAAgB5B,EAAQ1U,EAAGpC,EAASC,CAAQ,EAGtDT,EAAA,EAAAU,EAAQkC,CAAC,EACT5C,EAAA,GAAAO,EAAMoG,CAAC,EACP3G,EAAA,EAAA+c,EAAS,SAAS,CAEpB,CAAA,EAAA,MAAMrU,GAAC,CAEL1I,EAAA,EAAAU,EAAQ,IAAI,EACZV,EAAA,EAAA+c,EAAS,OAAO,EAChB/c,EAAA,EAAAmf,EAASzW,CAAC,KAQV,SAAA2W,EAAQ3W,EAAC,CACf1I,EAAA,EAAA+c,EAAS,SAAS,EAClB/c,EAAA,EAAAmf,EAAS,IAAI,EACbC,EAAa5e,EAASqW,EAAO/U,IAAW,MAAOC,IAAU,KAAK,WAMxDud,GAAK,CACXtf,EAAA,EAAA+c,EAAS,SAAS,EAClB/c,EAAA,EAAApF,EAAU,IAAI,EACdoF,EAAA,EAAAU,EAAQ,IAAI,EACZV,EAAA,EAAAmf,EAAS,IAAI,gBAciBtI,EAAK9jB,6CAGH+O,EAAM/O,uBAGPgP,EAAKhP,+MAhBhCyN,IAAY,MAAM8e,qBAGxBtf,EAAA,EAAEuf,EAAW/e,EAAU,KAAK,IAAIA,EAAQ,OAAO,MAAQ,EAAIC,EAAS,OAAQD,EAAQ,OAAO,MAAQ,CAAC,EAAI,IAAI,gBAC1GR,EAAA,EAAA6W,EAAQ0I,EAAW,KAAK,IAAIA,EAAU,EAAE,EAAI,IAAI,yUCxBpC,IAAA/gB,EAAA/J,KAAc,sKAAd,GAAAK,EAAA,KAAA0J,KAAAA,EAAA/J,KAAc,eAAa,gVAP3B,IAAA+J,EAAA/J,KAAc,iLAAd,GAAAK,EAAA,KAAA0J,KAAAA,EAAA/J,KAAc,eAAa,oWAN3B,IAAA+J,EAAA/J,KAAc,wKAAd,GAAAK,EAAA,KAAA0J,KAAAA,EAAA/J,KAAc,eAAa,2WAP3B,IAAA+J,EAAA/J,KAAc,kEACLA,EAAe,CAAA,IAAA,oBAAfA,EAAe,CAAA,gJADxB,GAAAK,EAAA,KAAA0J,KAAAA,EAAA/J,KAAc,eAAa,sQAClBA,EAAe,CAAA,8KATxB,IAAA+J,EAAA/J,KAAc,+EACLA,EAAe,CAAA,IAAA,oBAAfA,EAAe,CAAA,gJADxB,GAAAK,EAAA,KAAA0J,KAAAA,EAAA/J,KAAc,eAAa,4RAClBA,EAAe,CAAA,mJA4D/BA,EAAK,EAAA,EAAA,+JAJPqB,EAIiBF,EAAA0I,EAAAvI,CAAA,iFAAftB,EAAK,EAAA,EAAA,KAAA0C,GAAA+Q,EAAAoV,CAAA,mHArBC7oB,EAAa,CAAA,EAAC,QAAU,UAAS,EAE5BA,EAAa,CAAA,EAAC,QAAU,YAAW,iCAMvCA,EAAK,EAAA,IAAK,WAAaA,QAAU,WAAaA,EAAe,CAAA,GAAI,GAACmK,GAAAnK,CAAA,sPAAlEA,EAAK,EAAA,IAAK,WAAaA,QAAU,WAAaA,EAAe,CAAA,GAAI,8PAH/CA,EAAiB,EAAA,0CAAeA,EAAM,CAAA,IAAA,kBAANA,EAAM,CAAA,6JAAtCA,EAAiB,EAAA,GAAA,4OAAeA,EAAM,CAAA,oLAFtCA,EAAiB,EAAA,4CAAeA,EAAM,CAAA,IAAA,kBAANA,EAAM,CAAA,6JAAtCA,EAAiB,EAAA,GAAA,8OAAeA,EAAM,CAAA,oLAFtCA,EAAiB,EAAA,0CAAeA,EAAM,CAAA,IAAA,kBAANA,EAAM,CAAA,6JAAtCA,EAAiB,EAAA,GAAA,4OAAeA,EAAM,CAAA,4cAU5B,QAAM,8IAAnBA,EAAW,EAAA,CAAA,qGAD7BqB,EAEMF,EAAA6I,EAAA1I,CAAA,8PAdP,OAAAtB,OAAwBA,EAAC,EAAA,EAAA,+XAxC5BA,EAAa,CAAA,EAAC,QAAU,SAAQ,EAQ3BA,EAAa,CAAA,EAAC,QAAU,UAAS,EAOjCA,EAAa,CAAA,EAAC,QAAU,YAAW,EAMnCA,EAAa,CAAA,EAAC,QAAU,OAAM,mCAkBjCA,EAAO,CAAA,CAAA,uBAAZ,OAAIS,GAAA,oSA3CZY,EAwEMF,EAAA4pB,EAAAzpB,CAAA,EArEHJ,EAoCM6pB,EAAA7gB,CAAA,iCAGNhJ,EA6BM6pB,EAAA9gB,CAAA,uNA5BIjK,EAAO,CAAA,CAAA,oBAAZ,OAAIS,GAAA,EAAA,4GAAJ,OAAIA,EAAAmK,EAAA,OAAAnK,GAAA,+CAAJ,OAAIA,GAAA,4JApFE,IAAAqL,CAAG,EAAAhB,GACH,MAAAmB,CAAK,EAAAnB,GACL,QAAAzI,CAAO,EAAAyI,GACP,QAAAiB,CAAO,EAAAjB,EAQdkgB,KAGAC,EACAC,EAAS,KACTC,EAAsB,EACtBC,EAAgB/oB,EAAQ8oB,CAAmB,EAGzC,MAAAlC,EAAW/kB,KAMR,SAAAmnB,EAAW5qB,EAAC,CAClB8K,EAAA,EAAA2f,EAAS,IAAI,EACb3f,EAAA,EAAA4f,EAAsB1qB,CAAC,MACvB2qB,EAAgB/oB,EAAQ8oB,CAAmB,CAAA,EAOrC,SAAAG,EAAYC,EAAE,CACpBtC,EAAS,aAAe,CAAA,GAAI+B,CAAe,CAAA,gBAWtBA,EAAe1sB,uBAQf0sB,EAAe1sB,mDAZvB2sB,EAAcb,yBA4CmCc,EAAM5sB,uBAEN4sB,EAAM5sB,uBAEN4sB,EAAM5sB,SAc5C,MAAAsN,EAAAnL,GAAA4qB,EAAW5qB,CAAC,EACdkL,EAAAlL,GAAA4qB,EAAW5qB,CAAC,sRCrHxC,MAAM+qB,GAAmB,CAAA,EA0BlB,SAASC,GAASntB,EAAOgjB,EAAQtjB,GAAM,CAE7C,IAAI0tB,EAEJ,MAAMC,EAAc,IAAI,IAIxB,SAASC,EAAIC,EAAW,CACvB,GAAI/sB,GAAeR,EAAOutB,CAAS,IAClCvtB,EAAQutB,EACJH,GAAM,CAET,MAAMI,EAAY,CAACN,GAAiB,OACpC,UAAWO,KAAcJ,EACxBI,EAAW,CAAC,IACZP,GAAiB,KAAKO,EAAYztB,CAAK,EAExC,GAAIwtB,EAAW,CACd,QAASrrB,EAAI,EAAGA,EAAI+qB,GAAiB,OAAQ/qB,GAAK,EACjD+qB,GAAiB/qB,CAAC,EAAE,CAAC,EAAE+qB,GAAiB/qB,EAAI,CAAC,CAAC,EAE/C+qB,GAAiB,OAAS,CAC1B,CACD,CAEF,CAMD,SAASpmB,EAAO5G,EAAI,CACnBotB,EAAIptB,EAAGF,CAAK,CAAC,CACb,CAOD,SAASiB,EAAUhB,EAAKytB,EAAahuB,GAAM,CAE1C,MAAM+tB,EAAa,CAACxtB,EAAKytB,CAAU,EACnC,OAAAL,EAAY,IAAII,CAAU,EACtBJ,EAAY,OAAS,IACxBD,EAAOpK,EAAMsK,EAAKxmB,CAAM,GAAKpH,IAE9BO,EAAID,CAAK,EACF,IAAM,CACZqtB,EAAY,OAAOI,CAAU,EACzBJ,EAAY,OAAS,GAAKD,IAC7BA,IACAA,EAAO,KAEX,CACE,CACD,MAAO,CAAE,IAAAE,EAAK,OAAAxmB,EAAQ,UAAA7F,EACvB,CCnFO,SAAS0sB,GAAmBC,EAAI,CACpC,OAAIA,IAAO,EAAU,GACd,yDAA0DA,EAAI,SAAU,CAAA,UAClF,CAQO,SAASC,GAAQC,EAAK,CAG1B,GAAIA,IAAQ,KAAK,MAAMA,CAAG,EAAG,OAAOA,EAGpC,IAAIpM,EAAMoM,EAAI,YAAY,EAAE,EAG5B,OAAApM,EAAMA,EAAI,QAAQ,SAAU,EAAE,EAGvB,WAAWA,CAAG,CACxB,CASO,SAASqM,GAAcC,EAAO,CAElC,GAAIA,IAAU,OAAW,OACzB,GAAIA,EAAM,SAAW,EAAG,MAAO,CAAC,EAAG,CAACA,EAAM,CAAC,EAAE,SAAQ,CAAE,CAAC,EAGxD,IAAIvD,EAAOoD,GAAQ,KAAK,IAAI1d,GAAIb,GAAK0e,CAAK,CAAC,CAAC,CAAC,EACzCC,EAAa,EAGjB,GAAIxD,GAAQ,GAAKuD,EAAM,OAAS,EAC7B,OAAIvD,EAAO,IAAY,CAAC,EAAG,MAAM,KAAKuD,CAAK,EAAE,IAAI3f,GAAKA,EAAE,QAAQ,CAAC,CAAC,CAAC,GAEnE4f,EADa,KAAK,KAAKJ,GAAQ,KAAK,MAAMpD,CAAI,CAAC,CAAC,EAC1B,EACf,CAACwD,EAAY,MAAM,KAAKD,CAAK,EAAE,IAAI3f,IAAMA,EAAI,KAAK,IAAI,GAAI4f,CAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAG5F,IAAIzD,EAAS,KAAK,KAAK,CAACqD,GAAQ,KAAK,MAAMpD,CAAI,CAAC,CAAC,EACjD,OAAID,GAAU,EACJ,CAAC,EAAG,MAAM,KAAKwD,CAAK,EAAE,IAAI3f,GAAKA,EAAE,QAAQmc,CAAM,CAAC,CAAC,GAE3DyD,EAAazD,EAAS,EACtBA,EAAS,EAELqD,GAAQ,KAAK,IAAItd,GAAIyd,CAAK,CAAC,CAAC,GAAK,GAC3B,CAAC,CAACC,EAAY,MAAM,KAAKD,CAAK,EAAE,IAAI3f,IAAMA,EAAI,KAAK,IAAI,GAAI4f,CAAU,GAAG,QAAQzD,CAAM,CAAC,CAAC,EAExF,CAAC,CAACyD,EAAY,MAAM,KAAKD,CAAK,EAAE,IAAI3f,IAAMA,EAAI,KAAK,IAAI,GAAI4f,CAAU,GAAG,SAAU,CAAA,CAAC,EAEhG,CAYO,SAASC,GAAY3e,EAAG4e,EAAQ,CAMpC,GAJI,MAAM,QAAQ5e,CAAC,IAChBA,EAAI0E,GAAO1E,CAAC,GAGX,CAACC,GAASD,CAAC,EACZ,MAAM,MAAM4e,EAAS,sEAAsE,EAG9F,GAAI5e,EAAE,OAAS,EACZ,MAAM,MAAM4e,EAAS,qCAAqC,EAG7D,OAAO5e,CACV,CA8CO,SAAS6e,GAAM7e,EAAGgG,EAAG8Y,EAAIC,EAAIC,EAAM,CAEvC,GAAIhf,IAAM,QAAagG,IAAM,OAAW,OAExC,MAAMiZ,EAAKD,EAAK,UAAUL,GAAY3e,EAAG,OAAO,EAAG8e,EAAG,MAAM,EACtDI,EAAKF,EAAK,UAAUL,GAAY3Y,EAAG,OAAO,EAAG+Y,EAAG,MAAM,EAE5D,GAAIE,EAAG,QAAUC,EAAG,OACjB,MAAM,MAAM,4FAA4F,EAG3G,IAAIviB,EAAI,GACR,QAAS/J,EAAI,EAAGA,EAAIqsB,EAAG,OAAQrsB,IAC5B+J,GAAKsiB,EAAGrsB,CAAC,EAAI,IAAMssB,EAAGtsB,CAAC,EAAI,IAG9B,OAAO+J,CACV,CAeO,SAASwiB,GAAaV,EAAOW,EAAKC,EAAYC,EAAOC,EAAOC,EAAa,CAe7E,GAT2BD,GAAU,OAClCA,EAAQ,IAGPC,IAAgB,SACjBA,EAAc,MAIbf,IAAU,OAAW,CAKtB,GAJI,MAAM,QAAQA,CAAK,IACpBA,EAAQ/Z,GAAO+Z,CAAK,GAGnB,CAACxe,GAASwe,CAAK,EAChB,MAAM,MAAM,uEAAuE,EAGtF,OAAOA,EAAM,OAAOze,GAAKA,GAAKof,EAAI,CAAC,EAAIpf,GAAKof,EAAI,CAAC,CAAC,CACpD,CAGD,GAAI,OAAOA,GAAS,UAAYA,EAAI,CAAC,IAAM,QAAaA,EAAI,CAAC,IAAM,OAAW,OAG9E,MAAMK,EAAQ,KAAK,IAAKL,EAAI,CAAC,EAAIA,EAAI,CAAC,CAAG,EAAGI,EACtCE,EAAaN,EAAI,CAAC,EAAIA,EAAI,CAAC,EAAI,EAAIK,EACnCE,EAAW,KAAK,MAAM,KAAK,MAAMD,CAAU,CAAC,EAC5CE,EAAY,EAAI,KAAK,IAAI,GAAID,EAAW,CAAC,EACzCE,EAAQ,KAAK,MAAMH,EAAaE,CAAQ,EAAIA,EAElD,IAAIE,EAAcC,GAAQF,EAAQR,EAAY,EAAK,EAC/CE,IACGO,EAAc,IAAGA,EAAc,GACnCA,EAAc,KAAK,MAAMA,CAAW,GAIvC,IAAIE,EAAU,KAAK,MAAMZ,EAAI,CAAC,EAAIK,GAAUK,CAAW,EAAIA,EACvDG,EAAU,KAAK,OAAOb,EAAI,CAAC,EAAIK,GAASK,CAAW,EAAIA,EAIvDA,EAAc,IAAQV,EAAI,CAAC,EAAIa,EAAYH,EAAc,IAAIG,EAAUA,EAAUH,GAGrFT,EAAc,KAAK,KAAKf,IAAS2B,EAAUD,GAAWF,CAAW,CAAC,EAAI,EAGtErB,EAAQve,GAAO,MAAMmf,CAAU,EAC/B,QAASzsB,EAAI,EAAGA,EAAIysB,EAAYzsB,IAC7B6rB,EAAM,EAAE7rB,CAAC,EAAIotB,EAAUF,EAAcltB,EAIxC,GAAI,KAAK,IAAIktB,CAAW,EAAI,EAAG,CAE5B,MAAMzb,EAAI,KAAK,IAAI,GAAI,EAAI,KAAK,MAAM,CAAC,KAAK,MAAMyb,CAAW,CAAC,CAAC,EAC/DrB,EAAQA,EAAM,MAAM3f,GAAM,KAAK,OAAOA,EAAI,OAAO,SAAWuF,CAAC,EAAIA,CAAE,CACrE,CAGD,OAAOoa,EAAM,OAAOze,GAAKA,GAAKof,EAAI,CAAC,EAAIpf,GAAKof,EAAI,CAAC,CAAC,CACrD,CAYO,SAASW,GAAQL,EAAaJ,EAAO,CAEzC,MAAMK,EAAW,KAAK,MAAM,KAAK,MAAMD,CAAU,CAAC,EAC5CE,EAAWF,EAAa,KAAK,IAAI,GAAIC,CAAQ,EACnD,IAAIO,EAEJ,OAAIZ,EACGM,EAAW,IACZM,EAAe,EACTN,EAAW,EACjBM,EAAe,EACTN,EAAW,EACjBM,EAAe,EAEfA,EAAe,GAEdN,GAAY,EACbM,EAAe,EACTN,GAAY,EAClBM,EAAe,EACTN,GAAY,EAClBM,EAAe,EAEfA,EAAe,GAGdA,EAAe,KAAK,IAAI,GAAIP,CAAQ,CAC9C,CAMO,SAASQ,GAAYngB,EAAG,CAC5B,OAAO,KAAK,MAAMA,EAAI,EAAE,EAAI,EAC/B,CAYO,SAASogB,GAASpE,EAAOqE,EAAQ,CACrC,OAAIA,EAAS,OAASrE,EAAQ,MAAc,QACxCqE,EAAS,OAASrE,EAAQ,MAAc,SACxCqE,EAAS,OAASrE,EAAQ,MAAc,QACrC,QACV,CASO,SAASsE,GAAatE,EAAOuE,EAAM,CACvC,OAAIvE,EAAQ,MAAc,QACtBA,EAAQ,MAAc,SACtBA,EAAQ,MAAc,QACnB,QACV,CAWA,SAASwE,IAAqB,CAC3B,MAAMC,EAAW,IAAI,WAAW,GAAG,EACnC,QAAS5mB,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC3B,IAAIjC,EAAIiC,EACR,QAAStJ,EAAI,EAAGA,EAAI,EAAGA,IACpBqH,EAAKA,EAAI,EAAK,WAAcA,IAAM,EAAKA,IAAM,EAEhD6oB,EAAS5mB,CAAC,EAAIjC,CAChB,CACD,OAAO6oB,CACV,CAMA,SAASC,GAAQC,EAAK,CACnB,IAAI/oB,EAAI,GACJgpB,EAAeJ,KACnB,QAAS3mB,EAAI,EAAGA,EAAI8mB,EAAI,OAAQ9mB,IAC7BjC,EAAIgpB,GAAchpB,EAAI+oB,EAAI9mB,CAAC,GAAK,GAAI,EAAKjC,IAAM,EAElD,OAAOA,EAAI,EACd,CAOA,SAASipB,GAAiBC,EAAWC,EAAK,CAEvC,MAAMC,EAAY,IAAI,WAAW,EAAE,EAKnCD,GAAO,QACPC,EAAU,CAAC,EAAI,IAAI,WAAW,CAAC,EAC/BA,EAAU,CAAC,EAAI,IAAI,WAAW,CAAC,EAC/BA,EAAU,CAAC,EAAI,IAAI,WAAW,CAAC,EAC/BA,EAAU,CAAC,EAAI,IAAI,WAAW,CAAC,EAC/BA,EAAU,CAAC,EAAID,IAAQ,GACvBC,EAAU,CAAC,EAAID,IAAQ,GACvBC,EAAU,CAAC,EAAID,IAAQ,EACvBC,EAAU,CAAC,EAAID,EAAM,IACrBC,EAAU,CAAC,EAAIA,EAAU,CAAC,EAC1BA,EAAU,CAAC,EAAIA,EAAU,CAAC,EAC1BA,EAAU,EAAE,EAAIA,EAAU,CAAC,EAC3BA,EAAU,EAAE,EAAIA,EAAU,CAAC,EAC3BA,EAAU,EAAE,EAAI,EAGhB,MAAMC,EAAMP,GAAQM,CAAS,EACvBE,EAAW,IAAI,WAAW,CAAC,EACjCA,EAAS,CAAC,EAAID,IAAQ,GACtBC,EAAS,CAAC,EAAID,IAAQ,GACtBC,EAAS,CAAC,EAAID,IAAQ,EACtBC,EAAS,CAAC,EAAID,EAAM,IAGpB,MAAME,EAAc,IAAI,WAAW,CAAC,EACpCA,EAAY,CAAC,EAAI,EACjBA,EAAY,CAAC,EAAI,EACjBA,EAAY,CAAC,EAAI,EACjBA,EAAY,CAAC,EAAI,EAEjB,MAAMC,EAAc,IAAI,WAAW,EAAE,EACrC,OAAAA,EAAY,IAAIN,EAAW,CAAC,EAC5BM,EAAY,IAAID,EAAa,EAAE,EAC/BC,EAAY,IAAIJ,EAAW,EAAE,EAC7BI,EAAY,IAAIF,EAAU,EAAE,EACrBE,CACV,CAOA,SAASC,GAAUC,EAAaP,EAAK,CAElC,MAAMQ,EAAeD,EAAY,MAAM,GAAG,EACpCE,EAASD,EAAa,CAAC,EACvBE,EAAOF,EAAa,CAAC,EAGrBG,EAAe,GAAK,EAAI,EAExBC,EAAeF,EAAK,UAAU,EAAGC,CAAY,EAC7CE,EAAaH,EAAK,UAAUC,CAAY,EACxCG,EAAc,KAAKF,CAAY,EAC/Bb,EAAY,IAAI,WAAWe,EAAY,MAAM,EACnD,QAASjvB,EAAI,EAAGA,EAAIkuB,EAAU,OAAQluB,IACnCkuB,EAAUluB,CAAC,EAAIivB,EAAY,WAAWjvB,CAAC,EAE1C,MAAMkvB,EAAajB,GAAiBC,EAAWC,CAAgB,EACzDgB,EAAe,KAAK,OAAO,aAAa,GAAGD,CAAU,CAAC,EAC5D,MAAO,CAACN,EAAQ,IAAKO,EAAcH,CAAU,EAAE,KAAK,EAAE,CACzD,CAaO,SAASI,GAAaC,EAAKC,EAAUlG,EAAOqE,EAAQpiB,EAAK,CAc7D,GAZK+d,IACFA,EAAQ,IAGNqE,IACFA,EAAS,IAGPpiB,IACFA,EAAM,KAGL+d,EAAQ,GAAKA,EAAQ,GACtB,MAAM,MAAM,kDAAkD,EAGjE,GAAIqE,EAAS,GAAKA,EAAS,GACxB,MAAM,MAAM,mDAAmD,EAGlE,GAAIpiB,EAAM,IAAMA,EAAM,KACnB,MAAM,MAAM,oDAAoD,EAGnE,GAAI,CAACgkB,GAAO,EAAEA,aAAe,YAC1B,MAAM,MAAM,mDAAmD,GAG9D,CAACC,GAAYA,EAAS,KAAI,IAAO,MAClCA,EAAW,QAIdlG,EAAQA,EAAQ,KAAO/d,EACvBoiB,EAASA,EAAS,KAAOpiB,EAEzB,WAAW,IAAM,CAGd,MAAMkkB,EAAYF,EAAI,aAChBG,EAAWH,EAAI,YACfI,EAAc,KAAK,IAAIrG,EAAQoG,EAAU/B,EAAS8B,CAAS,EAG3DG,EAAS,SAAS,cAAc,QAAQ,EACxC/rB,EAAU+rB,EAAO,WAAW,IAAI,EAGtCA,EAAO,MAASF,EAAWC,EAC3BC,EAAO,OAASH,EAAYE,EAG5BJ,EAAI,aAAa,QAASK,EAAO,KAAK,EACtCL,EAAI,aAAa,SAAUK,EAAO,MAAM,EAGxC/rB,EAAQ,UAAY,QACpBA,EAAQ,MAAM8rB,EAAaA,CAAW,EACtC9rB,EAAQ,SAAS,EAAG,EAAG+rB,EAAO,MAAOA,EAAO,MAAM,EAGlD,MAAMC,EAAS,IAAI,cAAe,EAAC,kBAAkBN,CAAG,EAClDpiB,EAAO,IAAI,KAAK,CAAC0iB,CAAM,EAAG,CAAE,KAAM,6BAA6B,CAAE,EACjEhxB,EAAM,IAAI,gBAAgBsO,CAAI,EAE9BpD,EAAM,IAAI,MAEhBA,EAAI,OAAS,UAAY,CAGtBlG,EAAQ,UAAUkG,EAAK,EAAG,EAAG6lB,EAAO,MAAOA,EAAO,MAAM,EAGxD,MAAME,EAAUF,EAAO,UAAU,WAAW,EACtCG,EAAWpB,GAAUmB,EAASvkB,CAAG,EAGjCykB,EAAe,SAAS,cAAc,GAAG,EAC/CA,EAAa,KAAOD,EACpBC,EAAa,SAAW,GAAGR,CAAQ,OACnCQ,EAAa,MAAK,CAC3B,EAGMjmB,EAAI,IAAMlL,CACZ,EAAE,EAAE,CACR,CASO,SAASoxB,GAAYV,EAAKC,EAAU,CAExC,GAAI,CAACD,GAAO,EAAEA,aAAe,YAC1B,MAAM,MAAM,kDAAkD,GAG7D,CAACC,GAAYA,EAAS,KAAI,IAAO,MAClCA,EAAW,QAGd,MAAMC,EAAYF,EAAI,aAChBG,EAAWH,EAAI,YACrBA,EAAI,aAAa,QAASG,EAAW,IAAI,EACzCH,EAAI,aAAa,SAAUE,EAAY,IAAI,EAC3CF,EAAI,aAAa,UAAW,OAAOG,CAAQ,IAAID,CAAS,EAAE,EAE1D,MAAMtiB,EAAO,IAAI,KAAK,CAACoiB,EAAI,SAAS,EAAG,CAAE,KAAM,eAAe,CAAE,EAC1D1wB,EAAM,OAAO,IAAI,gBAAgBsO,CAAI,EACrC3O,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,aAAa,OAAQK,CAAG,EAC1BL,EAAE,aAAa,WAAY,GAAGgxB,CAAQ,MAAM,EAC5ChxB,EAAE,MAAO,CACZ,CAWO,eAAe0xB,GAAcX,EAAKjG,EAAOqE,EAAQ,CAIrD,MAAM8B,EAAYF,EAAI,aAChBG,EAAWH,EAAI,YACfI,EAAc,KAAK,IAAIrG,EAAQoG,EAAU/B,EAAS8B,CAAS,EAG3DG,EAAS,SAAS,cAAc,QAAQ,EACxC/rB,EAAU+rB,EAAO,WAAW,IAAI,EAGtC,OAAAA,EAAO,MAASF,EAAWC,EAC3BC,EAAO,OAASH,EAAYE,EAG5B9rB,EAAQ,MAAM8rB,EAAaA,CAAW,EAGtCJ,EAAI,aAAa,QAASK,EAAO,KAAK,EACtCL,EAAI,aAAa,SAAUK,EAAO,MAAM,EAuChC,MApCQ,IAAI,QAAQ,CAACO,EAASC,IAAW,CAG9C,MAAMC,EAAU,IAAI,cAAe,EAAC,kBAAkBd,CAAG,EACnDe,EAAU,IAAI,KAAK,CAACD,CAAO,EAAG,CAAE,KAAM,6BAA6B,CAAE,EACrEE,EAAS,OAAO,KAAO,OAAO,WAAa,OAC3C1xB,EAAM0xB,EAAO,gBAAgBD,CAAO,EAGpCvmB,EAAM,IAAI,MAChBA,EAAI,OAAS,UAAY,CAGtBlG,EAAQ,UAAUkG,EAAK,EAAG,EAAG6lB,EAAO,MAAOA,EAAO,MAAM,EACxDW,EAAO,gBAAgB1xB,CAAG,EAG1B+wB,EAAO,OAAO,SAAUziB,EAAM,CACvBA,EACDgjB,EAAQhjB,CAAI,EAEZijB,EAAO,IAAI,MAAM,uBAAuB,CAAC,CAE9C,EAAE,WAAW,CACvB,EAGMrmB,EAAI,QAAU,SAAUymB,EAAK,CAC1BJ,EAAOI,CAAG,CACnB,EAGMzmB,EAAI,IAAMlL,CAChB,CAAI,CAIJ,wICjNkB,CAAC,aAAMY,EAAM,CAAA,EAAGA,EAAG,CAAA,GAAG,CAAC,WAAM,CAAC,WAAM,CAAC,iCAAwDuC,EAAAyuB,EAAA,YAAAC,EAAA,mBAAAjxB,KAAO,CAAC,GAAA,oCAA9GqB,EAAiKF,EAAA6vB,EAAA1vB,CAAA,cAAdtB,EAAM,CAAA,+BAANA,EAAM,CAAA,qBAAzIA,EAAM,CAAA,EAAGA,EAAG,CAAA,GAAG,eAAuEK,EAAA,CAAA,EAAA,IAAA4wB,KAAAA,EAAA,mBAAAjxB,KAAO,CAAC,oGAIrGA,EAAI,CAAA,EAAGA,EAAK,CAAA,EAAC,CAAC,EAAMuC,EAAAyuB,EAAA,IAAAE,EAAAlxB,KAASA,EAAG,CAAA,CAAA,WAAM,CAAC,WAAM,CAAC,sEAAvDqB,EAAkIF,EAAA6vB,EAAA1vB,CAAA,cAAdtB,EAAM,CAAA,+BAANA,EAAM,CAAA,oBAAjHA,EAAI,CAAA,EAAGA,EAAK,CAAA,EAAC,eAAOK,EAAA,CAAA,EAAA,KAAA6wB,KAAAA,EAAAlxB,KAASA,EAAG,CAAA,wFAIhCA,EAAI,CAAA,EAAGA,EAAK,CAAA,EAAC,CAAC,UAAM,CAAC,WAAM,CAAC,WAAM,EAAE,uEAA7CqB,EAAyHF,EAAA6vB,EAAA1vB,CAAA,cAAbtB,EAAK,CAAA,+BAALA,EAAK,CAAA,oBAAxGA,EAAI,CAAA,EAAGA,EAAK,CAAA,EAAC,4VAkC5BqB,EAIMF,EAAA6I,EAAA1I,CAAA,EAHHJ,EAA4E8I,EAAAmnB,CAAA,SAC5EjwB,EAA4E8I,EAAAonB,CAAA,SAC5ElwB,EAA+E8I,EAAAqnB,CAAA,sBAF7DrxB,EAAc,EAAA,CAAA,iBAAcA,EAAc,EAAA,CAAA,eAC1CA,EAAc,EAAA,CAAA,iBAAcA,EAAc,EAAA,CAAA,eAC1CA,EAAe,EAAA,CAAA,iBAAcA,EAAe,EAAA,CAAA;oHARjEqB,EAGIF,EAAAqJ,EAAAlJ,CAAA,wFAzCOtB,EAAM,CAAA,GAAIA,EAAM,CAAA,IAAK,IAAE2oB,GAAA3oB,CAAA,IAIvBA,EAAM,CAAA,GAAIA,EAAM,CAAA,IAAK,IAAE4oB,GAAA5oB,CAAA,IAIvBA,EAAK,CAAA,GAAIA,EAAK,CAAA,IAAK,IAAEmK,GAAAnK,CAAA,uKA6B1BA,EAAK,CAAA,KAAAoK,0EAvED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA8BP,iOAuB8C7H,EAAA+uB,EAAA,IAAAC,EAAAvxB,MAAI,CAAC,CAAA,EAAMuC,EAAA+uB,EAAA,IAAAE,EAAAxxB,MAAI,CAAC,CAAA,EAAUuC,EAAA+uB,EAAA,QAAAG,EAAAzxB,EAAI,EAAA,EAAA,CAAC,EAAEA,MAAI,CAAC,CAAA,EAAWuC,EAAA+uB,EAAA,SAAAI,EAAA1xB,EAAI,EAAA,EAAA,CAAC,EAAEA,MAAI,CAAC,CAAA,WADvFA,EAAU,EAAA,CAAA,oEAUcA,EAAU,EAAA,EAAA,GAAA,UAf9CA,EAAI,CAAA,CAAA,UAAKA,EAAG,CAAA,CAAA,cAASA,EAAK,CAAA,CAAA,eAAUA,EAAM,CAAA,CAAA,+JAjD9BA,EAAQ,EAAA,CAAA,IAAA,sDAHcA,EAAa,CAAA,EAAA,gBAAA,qBAAsBA,EAAK,CAAA,CAAA,WAAxFqB,EAyFMF,EAAA6I,EAAA1I,EAAA,EAvFHJ,EAwEM8I,EAAA2nB,CAAA,EArEHzwB,EA8BQywB,EAAAC,CAAA,SAER1wB,EAaIywB,EAAAE,CAAA,6DAEJ3wB,EAqBMywB,EAAAG,CAAA,EAjBH5wB,EAIO4wB,EAAAC,CAAA,EAHJ7wB,EAEW6wB,EAAAC,CAAA,EADR9wB,EAAuG8wB,EAAAV,CAAA,gCAS7GpwB,EAEI4wB,EAAAG,CAAA,uFAjBuDjyB,EAAW,EAAA,CAAA,iBAC1DA,EAAW,EAAA,CAAA,kBAdlBA,EAAM,CAAA,GAAIA,EAAM,CAAA,IAAK,2DAIrBA,EAAM,CAAA,GAAIA,EAAM,CAAA,IAAK,2DAIrBA,EAAK,CAAA,GAAIA,EAAK,CAAA,IAAK,+DAWmB,CAAAyqB,GAAApqB,GAAA,CAAA,EAAA,MAAAkxB,KAAAA,EAAAvxB,MAAI,CAAC,iBAAM,CAAAyqB,GAAApqB,GAAA,CAAA,EAAA,MAAAmxB,KAAAA,EAAAxxB,MAAI,CAAC,iBAAU,CAAAyqB,GAAApqB,GAAA,CAAA,EAAA,MAAAoxB,KAAAA,EAAAzxB,EAAI,EAAA,EAAA,CAAC,EAAEA,MAAI,CAAC,qBAAW,CAAAyqB,GAAApqB,GAAA,CAAA,EAAA,MAAAqxB,KAAAA,EAAA1xB,EAAI,EAAA,EAAA,CAAC,EAAEA,MAAI,CAAC,6VANnGA,EAAI,CAAA,CAAA,2BAAKA,EAAG,CAAA,CAAA,8BAASA,EAAK,CAAA,CAAA,+BAAUA,EAAM,CAAA,CAAA,uCAjD9BA,EAAQ,EAAA,CAAA,mJAHcA,EAAa,CAAA,EAAA,sEAAsBA,EAAK,CAAA,CAAA,gRApX1E,KAAAkyB,CAAI,EAAApnB,GACJ,KAAAqnB,CAAI,EAAArnB,EACJ,CAAA,MAAAyd,EAAQ,EAAE,EAAAzd,EACV,CAAA,OAAAsnB,EAAS,EAAE,EAAAtnB,EACX,CAAA,OAAAunB,EAAS,EAAE,EAAAvnB,EACX,CAAA,QAAAwnB,GAAW,EAAK,IAAM,GAAK,EAAG,CAAA,EAAAxnB,EAM9B,CAAA,cAAAynB,EAAgB,MAAM,EAAAznB,EACtB,CAAA,SAAAilB,EAAW,MAAM,EAAAjlB,EACjB,CAAA,SAAA0nB,EAAW,CAAC,EAAA1nB,EACZ,CAAA,UAAA2nB,EAAY,CAAC,EAAA3nB,EACb,CAAA,OAAA4nB,EAAS,GAAG,EAAA5nB,EACZ,CAAA,eAAA6nB,EAAiB,IAAI,EAAA7nB,EACrB,CAAA,gBAAA8nB,EAAkB,GAAG,EAAA9nB,EAQ1B,MAAAme,EAAW/kB,KAGX2uB,EAAmB,CACtB,MAAS,GACT,OAAU,GACV,MAAS,GACT,OAAU,IAIPC,EAAS,CACZ,MAAS,EACT,OAAU,EACV,MAAS,GACT,OAAU,IAIPC,GAAS,CACZ,MAAS,EACT,OAAU,GACV,MAAS,GACT,OAAU,IAIPC,EAAS,CACZ,MAAS,EACT,OAAU,EACV,MAAS,EACT,OAAU,IAIPC,EAAgB,CACnB,MAAS,GACT,OAAU,GACV,MAAS,GACT,OAAU,IAIPC,EAAc,CACjB,MAAS,GACT,OAAU,GACV,MAAS,GACT,OAAU,IAIPC,EAAa,CAChB,MAAS,GACT,OAAU,GACV,MAAS,GACT,OAAU,IAIPC,EAAW,CACd,OAAQ,IAAK,MAAO,MAAO,KAAK,EAChC,QAAS,IAAK,MAAO,MAAO,KAAK,EACjC,OAAQ,IAAK,MAAO,MAAO,KAAK,EAChC,QAAS,IAAK,MAAO,MAAO,KAAK,GAI9BC,EAAkB,CAAA,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAGxDC,GAAa,eAAiB,KAAK,MAAM,KAAK,OAAM,EAAK,GAAK,MAQhEC,GACA1J,GAAQ,IAAKqE,GAAS,IACtBsF,GAAO,EAAGC,GAAS,EAAGrf,EAAM,WAavBsf,GAAmBC,EAAWpI,GAAE,CAChC,MAAA7f,GAAK,MAAM,UAAU,QAAQ,KAAK6f,GAAG,WAAW,SAAUA,EAAE,EAClEtC,EAAS0K,EAAS,CAAG,YAAapI,GAAG,WAAW,aAAa,OAAO,EAAG,UAAW7f,KAY5E,SAAAkoB,GAAY3f,EAAC,CAGf,GAAAA,EAAE,OAAO,UAAY,QAAUA,EAAE,OAAO,WAAW,UAAU,SAAS,eAAe,EAAA,CACtFyf,GAAmB,cAAezf,EAAE,MAAM,SAKzC,GAAAA,EAAE,OAAO,UAAY,QAAUA,EAAE,OAAO,WAAW,UAAU,SAAS,YAAY,EAAA,CACnFyf,GAAmB,WAAYzf,EAAE,MAAM,SAK1CgV,EAAS,WAAW,EAWR,eAAA4K,GAAgB5f,EAAC,CAC7B,UAAU,UAAU,MAAK,KAClB,cAAa,CAAG,YAAawc,GAAc8C,GAAaZ,EAAgBC,CAAe,GAC3F,CAAA,EAAA,eAAgBnsB,GAAK,CAAI,QAAQ,MAAMA,EAAK,IAEzC,MAAAqtB,GAAU7f,EAAE,OAAO,YACzBA,EAAE,OAAO,UAAU,IAAI,QAAQ,EAC/BA,EAAE,OAAO,YAAc,SAGvB,gBACEA,EAAE,OAAO,UAAU,OAAO,QAAQ,EAClCA,EAAE,OAAO,YAAc6f,IACtB,cAWGC,IAAc,CACpBvD,GAAY+C,GAAaxD,CAAQ,WAW3BiE,IAAc,CACpBnE,GAAY0D,GAAaxD,EAAUyC,EAAUC,EAAWC,CAAM,QAY3DuB,GAAS,SAAYtnB,EAAGunB,GAAE,OAExBC,GAASxnB,IAAM,QAAaA,IAAM,QACnC,MAAM,QAAQA,CAAC,IAAGA,EAAI4F,GAAO5F,CAAC,MAC7BmB,GAASnB,CAAC,GAAKA,EAAE,OAAS,WAExBA,EAAE,MAAM5N,IAAKivB,IAAajvB,GAAIm1B,GAAG,CAAC,GAAKA,GAAG,CAAC,EAAIA,GAAG,CAAC,CAAA,CAAA,EAAI,GAa3DE,GAAY,SAAYznB,EAAGunB,GAAE,OAE3BC,GAASxnB,IAAM,QAAaA,IAAM,QACnC,MAAM,QAAQA,CAAC,IAAGA,EAAI4F,GAAO5F,CAAC,MAC7BmB,GAASnB,CAAC,GAAKA,EAAE,OAAS,IAExB,OAAAA,EAAE,MAAM5N,KAAMA,GAAIm1B,GAAG,CAAC,GAAKA,GAAG,CAAC,EAAIA,GAAG,CAAC,GAAG,GAO9CG,GAAS5I,GAAS,QAAQ,EAC1B6I,GAAS7I,GAAS,QAAQ,EAC1Bne,GAAQme,GAAS,QAAQ,8BACzB8I,GAAO9I,GAAS,EAAK,6BACrB+I,GAAO/I,GAASyG,CAAI,8BACpBuC,GAAOhJ,GAAS0G,CAAI,wBACpB,MAAAxF,GAAKlB,GAAQ,CAAE,OAAW,CAAA,EAAG,EAAG,CAAC,EAAG,QAAY,CAAA,EAAG,EAAG,CAAC,0BACvD,MAAAmB,GAAKnB,GAAQ,CAAE,OAAW,CAAA,EAAG,EAAG,CAAC,EAAG,QAAY,CAAA,EAAG,EAAG,CAAC,0BAmC/DtnB,GAAW,OA5BE,CAGG,UAAA8vB,GACG,aAAAG,GAGP,MAAA9mB,GACC,OAAA+mB,GACA,OAAAC,GACF,KAAAC,GACA,KAAAC,GACA,KAAAC,GACF,GAAA9H,GACA,GAAAC,GACI,OAAAwF,EACA,OAAAC,EAGK,YAAAe,EACE,cAAAD,EACJ,UAAAL,EACA,UAAAC,GACA,UAAAC,EACK,eAAAK,EACE,iBAAAJ,EAGG,QA4DlByB,GAAE,IAAO,eAAeC,GAAO,CACzB,QAAAC,MAASD,EAAO,OAChBE,GAAMtB,GAAY,wBAClBuB,GAAM7G,GAAS4G,GAAI,MAAOA,GAAI,MAAM,EACpCE,GAAO5G,GAAa0G,GAAI,KAAK,EAC7BG,GAAO7G,GAAa0G,GAAI,MAAM,EACpCvnB,GAAM,OAAOO,IAAKinB,EAAG,EACrBT,GAAO,OAAOxmB,IAAKknB,EAAI,EACvBT,GAAO,OAAOzmB,IAAKmnB,EAAI,EAEjB,MAAA7mB,GAAI+kB,EAAe4B,EAAG,EAAI,QAChCtB,GAAOpB,GAAUA,IAAW,GAAKjkB,GAAI,CAAC,EACtCslB,GAASpB,GAAUA,IAAW,GAAKlkB,GAAI,MACvCiG,EAAMmU,GAASA,IAAU,GAAKpa,GAAI,CAAC,EACnC5C,EAAA,EAAAse,GAAQgL,GAAI,MAAQrB,GAAOqB,GAAI,MAAQrB,GAAO,CAAC,EAC/CjoB,EAAA,EAAA2iB,GAAS2G,GAAI,OAAUpB,GAASrf,EAAOygB,GAAI,OAASpB,GAASrf,EAAM,CAAC,KAM1EpQ,GAAO,IAAA,CACJ0wB,GAAG,QAAQnB,EAAW,IAGzBtvB,GAAS,IAAA,CACNywB,GAAG,UAAUnB,EAAW,+CAOEA,GAAWnJ,+jBAtFrC7e,EAAA,GAAA0pB,EAAY3C,EAAQ,IAAI3lB,GAAKA,EAAIkmB,EAAoBqC,CAAM,CAAA,CAAA,0BAG3DV,GAAK,OAAO7nB,GAAKulB,CAAI,0BACrBuC,GAAK,OAAO9nB,GAAKwlB,CAAI,sCAIrBoC,GAAK,OAAO5nB,GACZ,MAAM,QAAQwoB,CAAK,GACnB,MAAM,QAAQC,CAAK,GACnBA,EAAM,SAAW,GACjBD,EAAM,SAAW,GAAC,CACjBA,EAAM,KAAKxoB,IAAKA,KAAM,MAAS,GAAA,CAC/ByoB,EAAM,KAAKzoB,IAAKA,KAAM,MAAS,GAC/B,CAAAwoB,EAAM,KAAKxoB,IAAK,MAAMA,EAAC,CAAA,GAAA,CACvByoB,EAAM,KAAKzoB,IAAK,MAAMA,EAAC,CACxB,GAAAyoB,EAAM,CAAC,IAAMA,EAAM,CAAC,GACpBD,EAAM,CAAC,IAAMA,EAAM,CAAC,GACpBtL,GAASoL,EAAU,CAAC,EAAIA,EAAU,CAAC,GACnC/G,GAAU+G,EAAU,CAAC,EAAIA,EAAU,CAAC,CAAA,sCAKhCd,GACDxH,GAAG,OAAOhgB,IAAC,CACR,OAAQ,EAAMkd,GAAQoL,EAAU,CAAC,EAAIA,EAAU,CAAC,IAAMG,EAAM,CAAC,EAAIA,EAAM,CAAC,GAAIA,EAAM,CAAC,EAAGH,EAAU,CAAC,GACjG,QAAS,EAAKpL,GAAQoL,EAAU,CAAC,EAAIA,EAAU,CAAC,IAAMG,EAAM,CAAC,EAAIA,EAAM,CAAC,GAAU,EAAe,CAAC,wCAOpGjB,GACDvH,GAAG,OAAOjgB,IAAC,CACR,OAAQ,CAAM,EAAAuhB,GAAS+G,EAAU,CAAC,EAAIA,EAAU,CAAC,IAAME,EAAM,CAAC,EAAIA,EAAM,CAAC,GAAIA,EAAM,CAAC,EAAGF,EAAU,CAAC,GAClG,QAAS,EAAK/G,GAAS+G,EAAU,CAAC,EAAIA,EAAU,CAAC,IAAME,EAAM,CAAC,EAAIA,EAAM,CAAC,GAAW,EAAc,CAAC,yCAMzG5pB,EAAA,GAAA8pB,EAAMlB,EAAQF,GAAUmB,EAAOE,EAAI,MAAM,EAAK,CAAA,EAAG,CAAC,CAAA,qCAClD/pB,EAAA,GAAAgqB,EAAMpB,EAAQF,GAAUkB,EAAOK,EAAI,MAAM,EAAK,CAAA,EAAG,CAAC,CAAA,mBA2BlDjqB,EAAA,GAAAkqB,EAAWvC,EAAegC,CAAM,CAAA,iVCzX/B,MAAMQ,GAAS,CACnB,UAAa,UACb,UAAa,UACb,MAAa,OACb,MAAa,OACb,KAAa,UACb,WAAc,UACd,UAAa,UACb,SAAa,UACb,OAAU,UAEV,QAAW,UACX,cAAiB,UACjB,aAAgB,MACnB,6FCmCU11B,EAAE,CAAA,CAAA,uBAAP,OAAIS,GAAA,2FADCT,EAAS,CAAA,CAAA,UAAnBqB,EAIIF,EAAAwX,EAAArX,CAAA,yEAHMtB,EAAE,CAAA,CAAA,oBAAP,OAAIS,GAAA,EAAA,mHAAJ,wBADKT,EAAS,CAAA,CAAA,yHAE6BuC,EAAAozB,EAAA,KAAAC,EAAA51B,KAAGA,EAAC,EAAA,CAAA,CAAA,EAAOuC,EAAAozB,EAAA,KAAAE,EAAA71B,KAAGA,EAAC,EAAA,CAAA,CAAA,EAAOuC,EAAAozB,EAAA,KAAAG,EAAA91B,KAAGA,EAAC,EAAA,CAAA,CAAA,EAAOuC,EAAAozB,EAAA,KAAAI,EAAA/1B,KAAGA,EAAC,EAAA,CAAA,CAAA,cAAUA,EAAY,CAAA,CAAA,UAAxGqB,EAA4GF,EAAAw0B,EAAAr0B,CAAA,UAA/DjB,EAAA,GAAAu1B,KAAAA,EAAA51B,KAAGA,EAAC,EAAA,CAAA,gBAAOK,EAAA,GAAAw1B,KAAAA,EAAA71B,KAAGA,EAAC,EAAA,CAAA,gBAAOK,EAAA,GAAAy1B,KAAAA,EAAA91B,KAAGA,EAAC,EAAA,CAAA,gBAAOK,EAAA,IAAA01B,KAAAA,EAAA/1B,KAAGA,EAAC,EAAA,CAAA,kCAAUA,EAAY,CAAA,CAAA,uCAHtGuqB,EAAAvqB,EAAO,CAAA,IAAA,QAAaA,EAAO,CAAA,IAAA,QAAaA,EAAO,CAAA,IAAA,QAAaA,OAAO,QAASoK,GAAApK,CAAA,oEAA5EA,EAAO,CAAA,IAAA,QAAaA,EAAO,CAAA,IAAA,QAAaA,EAAO,CAAA,IAAA,QAAaA,OAAO,6IA/B1D,WAAAg2B,EAAU,EAAA,EAAAlrB,GACV,UAAAmrB,EAAYP,GAAO,QAAQ,EAAA5qB,EAC3B,CAAA,SAAAorB,EAAW,CAAC,EAAAprB,EACZ,CAAA,UAAAqrB,EAAY,CAAC,EAAArrB,EACb,CAAA,UAAAib,EAAY,EAAE,EAAAjb,QAQnB+hB,EAAOxoB,GAAW,MAAM,EACxBiJ,EAAQuf,EAAK,iCACbF,EAAKE,EAAK,8BACVD,EAAKC,EAAK,wBAGZ,IAAAvZ,EAAI4B,EAAIkhB,EAAIC,gPACTL,EAAW,QAAU,IACzBzqB,EAAA,EAAA+H,EAAKuZ,EAAK,UAAUmJ,EAAW,CAAC,EAAE,CAAC,EAAGV,EAAI,MAAM,CAAA,EAChD/pB,EAAA,EAAA6qB,EAAKvJ,EAAK,UAAUmJ,EAAW,CAAC,EAAE,CAAC,EAAGR,EAAI,MAAM,CAAA,EAChDjqB,EAAA,EAAA2J,EAAK2X,EAAK,UAAUmJ,EAAW,CAAC,EAAE,CAAC,EAAGV,EAAI,MAAM,CAAA,EAChD/pB,EAAA,EAAA8qB,EAAKxJ,EAAK,UAAUmJ,EAAW,CAAC,EAAE,CAAC,EAAGR,EAAI,MAAM,CAAA,qBAIhDjqB,EAAA,EAAA+qB,EAAyB,UAAAL,CAAS,kBAAkBE,CAAS,uBAAuBtJ,EAAK,YAAYqI,CAAM,EAAEgB,EAAS,CAAC,CAAA,EAAA,8YCiBrH,OAAAl2B,EAAQ,CAAA,IAAA,GAAKA,OAAQ,EAACmK,GAIjBnK,EAAQ,CAAA,IAAA,GAAKA,OAAQ,EAAC4oB,0FALU5oB,EAAY,CAAA,CAAA,UAAzDqB,EAcIF,EAAAwX,EAAArX,CAAA,kHAdyCtB,EAAY,CAAA,CAAA,8DAU/CA,EAAC,CAAA,CAAA,uBAAN,OAAIS,GAAA,kKAACT,EAAC,CAAA,CAAA,oBAAN,OAAIS,GAAA,EAAA,2HAAJ,0DAJKT,EAAC,CAAA,CAAA,uBAAN,OAAIS,GAAA,kKAACT,EAAC,CAAA,CAAA,oBAAN,OAAIS,GAAA,EAAA,2HAAJ,0DAJKT,EAAC,CAAA,CAAA,uBAAN,OAAIS,GAAA,kKAACT,EAAC,CAAA,CAAA,oBAAN,OAAIS,GAAA,EAAA,2HAAJ,qDASqFwnB,EAAAjoB,KAAWA,EAAC,EAAA,CAAA,EAAA,6CAAjFA,EAAC,EAAA,CAAA,EAAKuC,EAAAyuB,EAAA,IAAAuF,EAAAv2B,KAAEA,EAAC,EAAA,CAAA,CAAA,EAAMuC,EAAAyuB,EAAA,IAAAE,EAAAlxB,KAAEA,EAAC,EAAA,CAAA,CAAA,WAAOA,EAAE,CAAA,CAAA,WAAMA,EAAE,CAAA,CAAA,oBAAeA,EAAU,CAAA,CAAA,UAA3EqB,EAAyGF,EAAA6vB,EAAA1vB,CAAA,wBAArBjB,EAAA,GAAA4nB,KAAAA,EAAAjoB,KAAWA,EAAC,EAAA,CAAA,EAAA,MAAAgxB,EAAA,UAAA/I,GAA3E5nB,EAAA,IAAAk2B,KAAAA,EAAAv2B,KAAEA,EAAC,EAAA,CAAA,eAAMK,EAAA,IAAA6wB,KAAAA,EAAAlxB,KAAEA,EAAC,EAAA,CAAA,8BAAOA,EAAE,CAAA,CAAA,kBAAMA,EAAE,CAAA,CAAA,2BAAeA,EAAU,CAAA,CAAA,uCAJkDioB,EAAAjoB,KAAWA,EAAC,EAAA,CAAA,EAAA,iDAA1HA,EAAC,EAAA,CAAA,EAAKuC,EAAAyuB,EAAA,IAAAuF,EAAAv2B,KAAEA,EAAC,EAAA,CAAA,CAAA,EAAMuC,EAAAyuB,EAAA,IAAAE,EAAAlxB,KAAEA,EAAC,EAAA,CAAA,CAAA,EAAQuC,EAAAyuB,EAAA,KAAAwF,EAAA,CAAAx2B,KAAG,CAAC,WAAM,CAAC,EAA4BuC,EAAAyuB,EAAA,YAAAC,EAAA,eAAAjxB,EAAE,CAAA,EAAAA,EAAO,EAAA,CAAA,CAAA,KAAAA,KAAEA,EAAC,EAAA,CAAA,CAAA,GAAA,oBAAmB,KAAK,UAApHqB,EAAkJF,EAAA6vB,EAAA1vB,CAAA,wBAArBjB,EAAA,GAAA4nB,KAAAA,EAAAjoB,KAAWA,EAAC,EAAA,CAAA,EAAA,MAAAgxB,EAAA,UAAA/I,GAApH5nB,EAAA,IAAAk2B,KAAAA,EAAAv2B,KAAEA,EAAC,EAAA,CAAA,eAAMK,EAAA,IAAA6wB,KAAAA,EAAAlxB,KAAEA,EAAC,EAAA,CAAA,eAAQK,EAAA,KAAAm2B,KAAAA,EAAA,CAAAx2B,KAAG,gBAAoCK,EAAA,IAAA4wB,KAAAA,EAAA,eAAAjxB,EAAE,CAAA,EAAAA,EAAO,EAAA,CAAA,CAAA,KAAAA,KAAEA,EAAC,EAAA,CAAA,CAAA,8DAJsCioB,EAAAjoB,KAAWA,EAAC,EAAA,CAAA,EAAA,iDAA/HA,EAAC,EAAA,CAAA,EAAKuC,EAAAyuB,EAAA,IAAAuF,EAAAv2B,KAAEA,EAAC,EAAA,CAAA,CAAA,EAAMuC,EAAAyuB,EAAA,IAAAE,EAAAlxB,KAAEA,EAAC,EAAA,CAAA,CAAA,WAAO,CAAC,EAAMuC,EAAAyuB,EAAA,KAAAyF,EAAAz2B,KAAG,IAAI,EAA4BuC,EAAAyuB,EAAA,YAAAC,EAAA,eAAAjxB,EAAE,CAAA,EAAAA,EAAO,EAAA,CAAA,CAAA,KAAAA,KAAEA,EAAC,EAAA,CAAA,CAAA,GAAA,oBAAmB,QAAQ,UAAzHqB,EAAuJF,EAAA6vB,EAAA1vB,CAAA,wBAArBjB,EAAA,GAAA4nB,KAAAA,EAAAjoB,KAAWA,EAAC,EAAA,CAAA,EAAA,MAAAgxB,EAAA,UAAA/I,GAAzH5nB,EAAA,IAAAk2B,KAAAA,EAAAv2B,KAAEA,EAAC,EAAA,CAAA,eAAMK,EAAA,IAAA6wB,KAAAA,EAAAlxB,KAAEA,EAAC,EAAA,CAAA,eAAcK,EAAA,IAAAo2B,KAAAA,EAAAz2B,KAAG,mBAAgCK,EAAA,IAAA4wB,KAAAA,EAAA,eAAAjxB,EAAE,CAAA,EAAAA,EAAO,EAAA,CAAA,CAAA,KAAAA,KAAEA,EAAC,EAAA,CAAA,CAAA,8DAJ/FuqB,EAAAvqB,EAAM,CAAA,IAAA,QAAaA,OAAM,QAASoK,GAAApK,CAAA,oEAAlCA,EAAM,CAAA,IAAA,QAAaA,OAAM,iJA3ClB,WAAA02B,CAAU,EAAA5rB,GACR,UAAA6rB,CAAS,EAAA7rB,GACT,WAAA8rB,CAAU,EAAA9rB,EACV,CAAA,IAAA+rB,EAAM,CAAC,EAAA/rB,EACP,CAAA,IAAAgsB,EAAM,CAAC,EAAAhsB,QAQZ+hB,EAAOxoB,GAAW,MAAM,EACxBiJ,EAAQuf,EAAK,iCACbF,EAAKE,EAAK,8BACVD,EAAKC,EAAK,8BACV0H,EAAO1H,EAAK,8BAEdtB,EAEA1d,EAAGgG,EACHkjB,EAAK,EAAGC,EAAK,EAAGC,4CAuBW1L,EAAEnB,sOApB1B+J,IACJ5oB,EAAA,EAAAsC,EAAIgf,EAAK,UAAU6J,EAAW,CAAC,EAAE,CAAC,EAAGpB,EAAI,MAAM,CAAA,EAC/C/pB,EAAA,EAAAsI,EAAIgZ,EAAK,UAAU6J,EAAW,CAAC,EAAE,CAAC,EAAGlB,EAAI,MAAM,CAAA,2BAI/CrnB,EAAI0e,EAAK,cAAcqI,CAAM,CAAA,yBAI7B+B,EAAU,CAAK,SAAU,SAAU,QAAS,SAAU,KAAK,EAAGJ,CAAG,CAAA,MACjEE,EAAE,CAAK,EAAG,EAAG5oB,EAAI,EAAC,CAAGA,CAAC,EAAG0oB,CAAG,CAAA,MAC5BG,EAAE,CAAK,EAAG7oB,EAAG,EAAC,CAAGA,EAAG,CAAC,EAAG0oB,CAAG,CAAA,qBAI7BtrB,EAAA,EAAE2rB,EAAY,QAAWP,CAAS,GAAA,iOCfT32B,EAAI,CAAA,YAAaA,EAAS,EAAA,WAAY,wFAAtCA,EAAI,CAAA,wBAAaA,EAAS,EAAA,iiBAgBlBA,EAAQ,CAAA,EAAe,WAAA,CAAAisB,GAAmBjsB,EAAU,CAAA,CAAA,CAAA,2HAApDA,EAAQ,CAAA,GAAeK,EAAA,MAAA82B,EAAA,WAAA,CAAAlL,GAAmBjsB,EAAU,CAAA,CAAA,CAAA,4JAjBjFA,EAAQ,CAAA,GAAA4oB,GAAA5oB,CAAA,8BAKUA,EAAQ,CAAA,YAAaA,EAAS,EAAA,WAAY,iCAG1CA,EAAU,CAAA,YAAaA,EAAS,EAAA,WAAY,KAG9D,IAAA0oB,EAAA1oB,EAAW,CAAA,EAAA,SAAW,GAAKA,EAAU,CAAA,EAAC,SAAWA,EAAW,CAAA,EAAA,CAAC,EAAE,CAAC,EAAE,QAAMmK,GAAAnK,CAAA,EAKxEo3B,EAAAp3B,OAAe,GAACoK,GAAApK,CAAA,iIAlBCA,EAAS,CAAA,CAAA,UAAlCqB,EAqBIF,EAAAwX,EAAArX,CAAA,oGAnBItB,EAAQ,CAAA,+HAKUA,EAAQ,CAAA,wBAAaA,EAAS,EAAA,6CAG9BA,EAAU,CAAA,wBAAaA,EAAS,EAAA,aAGlDA,EAAW,CAAA,EAAA,SAAW,GAAKA,EAAU,CAAA,EAAC,SAAWA,EAAW,CAAA,EAAA,CAAC,EAAE,CAAC,EAAE,uGAKlEA,OAAe,wIAlBEA,EAAS,CAAA,qOAnBpB,WAAA42B,EAAU,EAAA,EAAA9rB,EACV,CAAA,SAAAusB,EAAW,EAAK,EAAAvsB,EAChB,CAAA,IAAAgsB,EAAM,CAAC,EAAAhsB,EAEP,CAAA,IAAA+rB,EAAM,CAAC,EAAA/rB,EACP,CAAA,UAAAib,EAAY,EAAE,EAAAjb,GACd,KAAAwsB,EAAI,EAAA,EAAAxsB,GACJ,SAAAysB,EAAQ,EAAA,EAAAzsB,GACR,WAAA4rB,EAAU,EAAA,EAAA5rB,GACV,SAAA0sB,EAAQ,EAAA,EAAA1sB,EACR,CAAA,WAAAyhB,EAAa,CAAC,EAAAzhB,GAEd,UAAAmrB,EAAYP,GAAO,QAAQ,EAAA5qB,GAC3B,UAAA2sB,EAAY/B,GAAO,UAAU,EAAA5qB,GAC7B,UAAA6rB,EAAYjB,GAAO,QAAQ,EAAA5qB,qwBC0EN,8lBAF9Byf,EAAAvqB,EAAS,CAAA,GAAAA,EAAS,CAAA,EAAA,OAAS,GAACoK,GAAApK,CAAA,yEAA5BA,EAAS,CAAA,GAAAA,EAAS,CAAA,EAAA,OAAS,+MAtFlB,CAAA,KAAAW,EAAO,OAAO,EAAAmK,EACd,CAAA,MAAAwhB,EAAQ,MAAS,EAAAxhB,EACjB,CAAA,WAAA8rB,EAAa,MAAS,EAAA9rB,EACtB,CAAA,SAAAusB,EAAW,EAAK,EAAAvsB,EAChB,CAAA,IAAAgsB,EAAM,CAAC,EAAAhsB,EACP,CAAA,MAAAsiB,EAAQ,EAAK,EAAAtiB,GAEb,UAAAmrB,EAAYP,GAAO,QAAQ,EAAA5qB,GAC3B,UAAA2sB,EAAY/B,GAAO,UAAU,EAAA5qB,GAC7B,UAAA6rB,EAAYjB,GAAO,QAAQ,EAAA5qB,EAQlC,GAAAnK,IAAS,aACJ,4DAIHksB,EAAOxoB,GAAW,MAAM,EAGxBmwB,EAAO3H,EAAK,gCACZ4H,EAAO5H,EAAK,gCACZvf,EAAQuf,EAAK,iCACbwH,EAASxH,EAAK,kCACd0H,EAAO1H,EAAK,+BACZD,EAAKC,EAAK,4BAGZyK,EAAI,CAAA,EACJC,EAAQ,CAAA,EACRb,EAAU,CAAA,EACVc,EAAQ,CAAA,EACRjL,EAAa,gWAGV4H,EAAK,CAGH,MAAAuD,EAAS1K,GAAaV,EAAO8I,EAAOvI,EAAK,UAAU8K,CAAO,EAAG,GAAMvK,CAAK,EACxEwK,GAAUF,EAAO,OAGjBG,EAAKhL,EAAK,cAAcA,EAAK,UAAUqI,CAAM,CAAI,EAAAM,EAAI,OAAO,EAAE,CAAC,EAC/DsC,EAAU/pB,GAAO,KAAKonB,EAAM,CAAC,EAAGyC,EAAO,EACvCG,EAAUD,EAAQ,IAAID,CAAE,EAGxBG,EAAWjqB,GAAO,KAAKonB,EAAM,CAAC,EAAGyC,EAAO,EAO1C,IAJAtL,IAAU,QAAasK,IAAe,SACtCrrB,EAAA,GAAA,CAAAghB,EAAYqK,CAAU,EAAIvK,GAAcqL,EAAO,CAAC,EAAAnL,GAAAhhB,EAAA,EAAAqrB,CAAA,EAAArrB,EAAA,EAAA4oB,CAAA,EAAA5oB,EAAA,GAAA+gB,CAAA,EAAA/gB,EAAA,GAAA6pB,CAAA,EAAA7pB,EAAA,GAAAosB,CAAA,EAAApsB,EAAA,GAAA6hB,CAAA,EAAA7hB,EAAA,GAAA2pB,CAAA,EAAA3pB,EAAA,GAAAiqB,CAAA,EAAAjqB,EAAA,GAAA4pB,CAAA,IAGhDyB,EAAW,SAAWc,EAAO,YACxB,iEAITnsB,EAAA,EAAA+rB,IACII,EAAQI,CAAO,EACf,CAAAJ,EAAQM,CAAQ,CAAA,CAAA,MAGpBT,EAAQ,EACJhlB,GAAM,CAAE6iB,EAAM,CAAC,IAAK7iB,GAAM,CAAE4iB,EAAM,CAAC,CAAA,CAAA,CAAA,GACnC5iB,GAAM,CAAE6iB,EAAM,CAAC,IAAK7iB,GAAM,CAAE4iB,EAAM,CAAC,CAAA,CAAA,CAAA,IAGvC5pB,EAAA,EAAAmrB,IACIgB,EAAQK,CAAO,EACf,CAAAL,EAAQI,CAAO,CAAA,CAAA,EAGnBvsB,EAAA,GAAAisB,IACI,KAAM,IAAI,EACT,CAAA,CAAApC,EAAM,CAAC,CAAA,EAAA,CAAK0C,EAAQ,EAAEF,GAAU,CAAC,EAAI,IAAMC,CAAE,CAAA,CAAA,CAAA,sSCOrB,8lBAF9BtN,EAAAvqB,EAAS,CAAA,GAAAA,EAAS,CAAA,EAAA,OAAS,GAACoK,GAAApK,CAAA,yEAA5BA,EAAS,CAAA,GAAAA,EAAS,CAAA,EAAA,OAAS,+MAtFlB,CAAA,KAAAW,EAAO,OAAO,EAAAmK,EACd,CAAA,MAAAwhB,EAAQ,MAAS,EAAAxhB,EACjB,CAAA,WAAA8rB,EAAa,MAAS,EAAA9rB,EACtB,CAAA,SAAAusB,EAAW,EAAK,EAAAvsB,EAChB,CAAA,IAAAgsB,EAAM,CAAC,EAAAhsB,EACP,CAAA,MAAAsiB,EAAQ,EAAK,EAAAtiB,GAEb,UAAAmrB,EAAYP,GAAO,QAAQ,EAAA5qB,GAC3B,UAAA2sB,EAAY/B,GAAO,UAAU,EAAA5qB,GAC7B,UAAA6rB,EAAYjB,GAAO,QAAQ,EAAA5qB,EAQlC,GAAAnK,IAAS,aACJ,4DAIHksB,EAAOxoB,GAAW,MAAM,EAGxBmwB,EAAO3H,EAAK,gCACZ4H,EAAO5H,EAAK,gCACZvf,EAAQuf,EAAK,iCACbyH,EAASzH,EAAK,kCACd0H,EAAO1H,EAAK,+BACZF,EAAKE,EAAK,4BAGZyK,EAAI,CAAA,EACJC,EAAQ,CAAA,EACRb,EAAU,CAAA,EACVc,EAAQ,CAAA,EACRjL,EAAa,gWAGV4H,EAAK,CAGH,MAAA8D,EAASjL,GAAaV,EAAO6I,EAAOtI,EAAK,UAAUqL,CAAO,EAAG,GAAM9K,CAAK,EACxEwK,GAAUK,EAAO,OAGjBE,EAAKtL,EAAK,cAAcA,EAAK,UAAUqI,CAAM,CAAI,EAAAI,EAAI,OAAO,EAAE,CAAC,EAC/D8C,EAAUrqB,GAAO,KAAKqnB,EAAM,CAAC,EAAGwC,EAAO,EACvCS,EAAUD,EAAQ,IAAID,CAAE,EAGxBG,EAAWvqB,GAAO,KAAKqnB,EAAM,CAAC,EAAGwC,EAAO,EAO1C,IAJAtL,IAAU,QAAasK,IAAe,SACtCrrB,EAAA,GAAA,CAAAghB,EAAYqK,CAAU,EAAIvK,GAAc4L,EAAO,CAAC,EAAA1L,GAAAhhB,EAAA,EAAAqrB,CAAA,EAAArrB,EAAA,EAAA4oB,CAAA,EAAA5oB,EAAA,GAAA+gB,CAAA,EAAA/gB,EAAA,GAAA4pB,CAAA,EAAA5pB,EAAA,GAAA2sB,CAAA,EAAA3sB,EAAA,GAAA6hB,CAAA,EAAA7hB,EAAA,GAAA2pB,CAAA,EAAA3pB,EAAA,GAAA+pB,CAAA,EAAA/pB,EAAA,GAAA6pB,CAAA,IAGhDwB,EAAW,SAAWqB,EAAO,YACxB,iEAIT1sB,EAAA,EAAA+rB,IACIc,EAASH,CAAM,EACf,CAAAK,EAAUL,CAAM,CAAA,CAAA,MAGpBV,EAAQ,EACJhlB,GAAM,CAAE6iB,EAAM,CAAC,IAAK7iB,GAAM,CAAE4iB,EAAM,CAAC,CAAA,CAAA,CAAA,GACnC5iB,GAAM,CAAE6iB,EAAM,CAAC,IAAK7iB,GAAM,CAAE4iB,EAAM,CAAC,CAAA,CAAA,CAAA,IAGvC5pB,EAAA,EAAAmrB,IACI0B,EAASH,CAAM,EACf,CAAAI,EAASJ,CAAM,CAAA,CAAA,EAGnB1sB,EAAA,GAAAisB,EAEK,CAAA,CAAA,CAAA,EAAA,EAAA,EAAA,CAAA,CAAAa,EAAQ,EAAET,GAAU,CAAC,EAAIO,CAAE,EAAI,CAAAhD,EAAM,CAAC,CAAA,CAAA,CAAA,CAAA,yRCvD/B5yB,EAAA+uB,EAAA,SAAAoE,GAAO,QAAQ,wDAA8CnzB,EAAA+uB,EAAA,IAAAC,EAAAvxB,KAAG,CAAC,CAAA,EAAMuC,EAAA+uB,EAAA,IAAAE,EAAAxxB,KAAG,CAAC,CAAA,EAAUuC,EAAA+uB,EAAA,QAAAG,EAAAzxB,EAAG,CAAA,EAAA,CAAC,EAAIA,KAAG,CAAC,CAAA,EAAWuC,EAAA+uB,EAAA,SAAAI,EAAA1xB,EAAG,CAAA,EAAA,CAAC,EAAIA,KAAG,CAAC,CAAA,yEADvIqB,EAEIF,EAAAwX,EAAArX,CAAA,EADJJ,EAA4IyX,EAAA2Y,CAAA,UAAhEjxB,EAAA,GAAAkxB,KAAAA,EAAAvxB,KAAG,CAAC,eAAMK,EAAA,GAAAmxB,KAAAA,EAAAxxB,KAAG,CAAC,eAAUK,EAAA,GAAAoxB,KAAAA,EAAAzxB,EAAG,CAAA,EAAA,CAAC,EAAIA,KAAG,CAAC,mBAAWK,EAAA,GAAAqxB,KAAAA,EAAA1xB,EAAG,CAAA,EAAA,CAAC,EAAIA,KAAG,CAAC,2DAFrIA,EAAK,CAAA,GAAAoK,GAAApK,CAAA,oEAALA,EAAK,CAAA,8IA3BI,KAAAW,CAAI,EAAAmK,EAQX,GAAAnK,IAAS,WACJ,wDAKHksB,EAAOxoB,GAAW,MAAM,EACxBmwB,EAAO3H,EAAK,gCACZ4H,EAAO5H,EAAK,gCACZ0H,EAAO1H,EAAK,+BACZF,EAAKE,EAAK,8BACVD,EAAKC,EAAK,uGAGbthB,EAAA,EAAAgtB,EAAKpE,EAAQtH,EAAK,UAAUuI,EAAOE,EAAI,MAAM,EAAI,MAAS,mBAC1D/pB,EAAA,EAAAitB,EAAKrE,EAAQtH,EAAK,UAAUsI,EAAOK,EAAI,MAAM,EAAI,MAAS,qMCqBtDx1B,EAAE,CAAA,CAAA,uBAAP,OAAI,GAAA,uGADYA,EAAS,CAAA,CAAA,cAAUA,EAAK,CAAA,CAAA,cAASA,EAAY,CAAA,CAAA,UAA/DqB,EAIIF,EAAAwX,EAAArX,CAAA,yEAHGtB,EAAE,CAAA,CAAA,oBAAP,OAAIS,GAAA,EAAA,mHAAJ,6BADgBT,EAAS,CAAA,oCAAUA,EAAK,CAAA,CAAA,qBAASA,EAAY,CAAA,CAAA,+EAElDuC,EAAAozB,EAAA,KAAAC,EAAA51B,KAAGA,EAAC,EAAA,CAAA,CAAA,EAAOuC,EAAAozB,EAAA,KAAAE,EAAA71B,KAAGA,EAAC,EAAA,CAAA,CAAA,EAAOuC,EAAAozB,EAAA,KAAAG,EAAA91B,KAAGA,EAAC,EAAA,CAAA,CAAA,EAAOuC,EAAAozB,EAAA,KAAAI,EAAA/1B,KAAGA,EAAC,EAAA,CAAA,CAAA,UAA/CqB,EAAoDF,EAAAw0B,EAAAr0B,CAAA,UAA1CjB,EAAA,GAAAu1B,KAAAA,EAAA51B,KAAGA,EAAC,EAAA,CAAA,gBAAOK,EAAA,GAAAw1B,KAAAA,EAAA71B,KAAGA,EAAC,EAAA,CAAA,gBAAOK,EAAA,IAAAy1B,KAAAA,EAAA91B,KAAGA,EAAC,EAAA,CAAA,gBAAOK,EAAA,IAAA01B,KAAAA,EAAA/1B,KAAGA,EAAC,EAAA,CAAA,uDAHhDA,EAAK,CAAA,GAAAoK,GAAApK,CAAA,oEAALA,EAAK,CAAA,0IA1CE,OAAAy4B,CAAM,EAAA3tB,GACJ,KAAA4tB,CAAI,EAAA5tB,GACJ,OAAA6tB,CAAM,EAAA7tB,GACN,KAAA8tB,CAAI,EAAA9tB,GACJ,UAAAmrB,EAAYP,GAAO,OAAO,EAAA5qB,EAC1B,CAAA,SAAAorB,EAAW,CAAC,EAAAprB,EACZ,CAAA,UAAAqrB,EAAY,CAAC,EAAArrB,EACb,CAAA,UAAAib,EAAY,YAAY,EAAAjb,EACxB,CAAA,MAAAyd,EAAQ,EAAE,EAAAzd,QAQf+hB,EAAOxoB,GAAW,MAAM,EACxBiJ,EAAQuf,EAAK,iCACb0H,EAAO1H,EAAK,+BACZF,EAAKE,EAAK,8BACVD,EAAKC,EAAK,wBAEZ,IAAAvZ,EAAI4B,EAAIkhB,EAAIC,+VAETlC,EAAK,CAEN5oB,EAAA,EAAA+H,EAAKuZ,EAAK,UAAUL,GAAYiM,EAAQ,UAAU,EAAGnD,EAAI,MAAM,CAAA,EAC/D/pB,EAAA,EAAA6qB,EAAKvJ,EAAK,UAAUL,GAAYmM,EAAQ,UAAU,EAAGnD,EAAI,MAAM,CAAA,EAC/DjqB,EAAA,EAAA2J,EAAK2X,EAAK,UAAUL,GAAYkM,EAAM,UAAU,EAAGpD,EAAI,MAAM,CAAA,EAC7D/pB,EAAA,EAAA8qB,EAAKxJ,EAAK,UAAUL,GAAYoM,EAAM,UAAU,EAAGpD,EAAI,MAAM,CAAA,QAEvD9tB,EAAI4L,EAAG,OACT,GAAA4B,EAAG,SAAWxN,GAAK0uB,EAAG,SAAW1uB,GAAK2uB,EAAG,SAAW3uB,EAC/C,MAAA,MAAM,yFAAyF,qBAM3G6D,EAAA,EAAA+qB,EAAyB,UAAAL,CAAS,kBAAkBE,CAAS,uBAAuBtJ,EAAK,YAAYqI,CAAM,EAAEgB,EAAS,CAAC,CAAA,EAAA,6bCwB9G,qBAAA,OAAAl2B,MAAW,SAAQmK,mBAOpB,MAAM,QAAQnK,OAAQ,YAAY,OAAOA,EAAG,CAAA,CAAA,qFATxCA,EAAS,CAAA,CAAA,cAAUA,EAAK,CAAA,CAAA,cAASA,EAAY,EAAA,CAAA,UAA/DqB,EAmBIF,EAAAwX,EAAArX,CAAA,8GAnBctB,EAAS,CAAA,oCAAUA,EAAK,CAAA,CAAA,sBAASA,EAAY,EAAA,CAAA,kDAerDA,EAAC,CAAA,CAAA,uBAAN,OAAIS,GAAA,oKAACT,EAAC,CAAA,CAAA,oBAAN,OAAIS,GAAA,EAAA,2HAAJ,0DALKT,EAAC,CAAA,CAAA,uBAAN,OAAIS,GAAA,oKAACT,EAAC,CAAA,CAAA,oBAAN,OAAIS,GAAA,EAAA,2HAAJ,0DAPKT,EAAC,CAAA,CAAA,uBAAN,OAAIS,GAAA,oKAACT,EAAC,CAAA,CAAA,oBAAN,OAAIS,GAAA,EAAA,2HAAJ,qDAaqGwnB,EAAAjoB,KAAOA,EAAC,EAAA,CAAA,EAAA,mDAA7FA,EAAC,EAAA,CAAA,EAAKuC,EAAAyuB,EAAA,IAAAuF,EAAAv2B,KAAEA,EAAC,EAAA,CAAA,CAAA,EAAMuC,EAAAyuB,EAAA,IAAAE,EAAAlxB,KAAEA,EAAC,EAAA,CAAA,CAAA,EAAOuC,EAAAyuB,EAAA,KAAAwF,EAAAx2B,KAAGA,EAAG,CAAA,CAAA,CAAA,EAAOuC,EAAAyuB,EAAA,KAAAyF,EAAAz2B,KAAGA,EAAG,CAAA,CAAA,CAAA,EAAgBuC,EAAAyuB,EAAA,cAAA6H,EAAA74B,MAAYA,EAAG,CAAA,CAAA,CAAA,UAA1FqB,EAAqHF,EAAA6vB,EAAA1vB,CAAA,wBAAjBjB,EAAA,GAAA4nB,KAAAA,EAAAjoB,KAAOA,EAAC,EAAA,CAAA,EAAA,MAAAgxB,EAAA,UAAA/I,GAAvF5nB,EAAA,IAAAk2B,KAAAA,EAAAv2B,KAAEA,EAAC,EAAA,CAAA,eAAMK,EAAA,IAAA6wB,KAAAA,EAAAlxB,KAAEA,EAAC,EAAA,CAAA,eAAOK,EAAA,KAAAm2B,KAAAA,EAAAx2B,KAAGA,EAAG,CAAA,CAAA,gBAAOK,EAAA,KAAAo2B,KAAAA,EAAAz2B,KAAGA,EAAG,CAAA,CAAA,gBAAgBK,EAAA,GAAAw4B,KAAAA,EAAA74B,MAAYA,EAAG,CAAA,CAAA,8DALmBioB,EAAAjoB,KAAOA,EAAC,EAAA,CAAA,EAAA,mDAAtGA,EAAC,EAAA,CAAA,EAAKuC,EAAAyuB,EAAA,IAAAuF,EAAAv2B,KAAEA,EAAC,EAAA,CAAA,CAAA,EAAMuC,EAAAyuB,EAAA,IAAAE,EAAAlxB,KAAEA,EAAC,EAAA,CAAA,CAAA,aAAOA,EAAE,CAAA,EAACA,EAAG,CAAA,EAACA,EAAC,EAAA,CAAA,CAAA,CAAA,aAAQA,EAAE,CAAA,EAACA,EAAG,CAAA,EAACA,EAAC,EAAA,CAAA,CAAA,CAAA,sBAAiBA,EAAW,EAAA,EAACA,EAAG,CAAA,EAACA,EAAC,EAAA,CAAA,CAAA,CAAA,UAAlGqB,EAA8HF,EAAA6vB,EAAA1vB,CAAA,wBAAjBjB,EAAA,GAAA4nB,KAAAA,EAAAjoB,KAAOA,EAAC,EAAA,CAAA,EAAA,MAAAgxB,EAAA,UAAA/I,GAAhG5nB,EAAA,IAAAk2B,KAAAA,EAAAv2B,KAAEA,EAAC,EAAA,CAAA,eAAMK,EAAA,IAAA6wB,KAAAA,EAAAlxB,KAAEA,EAAC,EAAA,CAAA,6BAAOA,EAAE,CAAA,EAACA,EAAG,CAAA,EAACA,EAAC,EAAA,CAAA,CAAA,8BAAQA,EAAE,CAAA,EAACA,EAAG,CAAA,EAACA,EAAC,EAAA,CAAA,CAAA,4BAAiBA,EAAW,EAAA,EAACA,EAAG,CAAA,EAACA,EAAC,EAAA,CAAA,CAAA,gHAPnFA,EAAC,EAAA,CAAA,EAAKuC,EAAAyuB,EAAA,IAAAuF,EAAAv2B,KAAEA,EAAC,EAAA,CAAA,CAAA,EAAMuC,EAAAyuB,EAAA,IAAAE,EAAAlxB,KAAEA,EAAC,EAAA,CAAA,CAAA,EAAOuC,EAAAyuB,EAAA,KAAAwF,EAAAx2B,KAAGA,EAAG,CAAA,CAAA,CAAA,EAAOuC,EAAAyuB,EAAA,KAAAyF,EAAAz2B,KAAGA,EAAG,CAAA,CAAA,CAAA,EAC7CuC,EAAAyuB,EAAA,YAAAC,EAAAjxB,OAAgB,OAAsB,UAAAA,EAAgB,CAAA,CAAA,KAAAA,EAAE,CAAA,EAAAA,OAAKA,EAAE,CAAA,EAACA,EAAG,CAAA,CAAA,CAAA,KAAMA,EAAE,CAAA,EAAAA,EAAK,EAAA,CAAA,EAAAA,KAAGA,EAAG,CAAA,CAAA,CAAA,IAAO,EAAE,sBAC7FA,EAAW,EAAA,EAACA,EAAG,CAAA,EAACA,EAAC,EAAA,CAAA,CAAA,CAAA,UAFjCqB,EAE0DF,EAAA6vB,EAAA1vB,CAAA,cAAdtB,EAAM,CAAA,4BAANA,EAAM,CAAA,GAF7BK,EAAA,IAAAk2B,KAAAA,EAAAv2B,KAAEA,EAAC,EAAA,CAAA,eAAMK,EAAA,IAAA6wB,KAAAA,EAAAlxB,KAAEA,EAAC,EAAA,CAAA,eAAOK,EAAA,KAAAm2B,KAAAA,EAAAx2B,KAAGA,EAAG,CAAA,CAAA,gBAAOK,EAAA,KAAAo2B,KAAAA,EAAAz2B,KAAGA,EAAG,CAAA,CAAA,gBAC7CK,EAAA,KAAA4wB,KAAAA,EAAAjxB,OAAgB,OAAsB,UAAAA,EAAgB,CAAA,CAAA,KAAAA,EAAE,CAAA,EAAAA,OAAKA,EAAE,CAAA,EAACA,EAAG,CAAA,CAAA,CAAA,KAAMA,EAAE,CAAA,EAAAA,EAAK,EAAA,CAAA,EAAAA,KAAGA,EAAG,CAAA,CAAA,CAAA,IAAO,oCAC3FA,EAAW,EAAA,EAACA,EAAG,CAAA,EAACA,EAAC,EAAA,CAAA,CAAA,8DAPlCuqB,EAAAvqB,MAASA,EAAC,CAAA,IAAK,QAAaA,OAAM,QAASoK,GAAApK,CAAA,oEAA3CA,MAASA,EAAC,CAAA,IAAK,QAAaA,OAAM,+IA3D3B,QAAA84B,CAAO,EAAAhuB,GACL,QAAAiuB,CAAO,EAAAjuB,GACP,OAAAoV,CAAM,EAAApV,EACN,CAAA,IAAA+rB,EAAM,CAAC,EAAA/rB,GACP,UAAAkuB,EAAYtD,GAAO,YAAY,EAAA5qB,EAC/B,CAAA,YAAAmuB,EAAc,aAAa,EAAAnuB,EAC3B,CAAA,YAAAouB,EAAc,CAAC,EAAApuB,EACf,CAAA,SAAAquB,EAAW,CAAC,EAAAruB,EACZ,CAAA,UAAAib,EAAY,aAAa,EAAAjb,EACzB,CAAA,MAAAyd,EAAQ,aAAa,EAAAzd,EACrB,CAAA,YAAAsuB,EAAc,CAAC,EAAAtuB,QAOpB+hB,EAAOxoB,GAAW,MAAM,EACxBiJ,EAAQuf,EAAK,iCACbF,EAAKE,EAAK,8BACVD,EAAKC,EAAK,8BACV0H,EAAO1H,EAAK,+BAEZwM,EAAW,CAAI,SAAU,SAAU,QAAS,SAAU,KAAK,MAE7DxrB,EAAGgG,EACHkjB,EAAK,EAAGC,EAAK,ybAGV7C,EAAK,CAEE,GAAA,OAAAjU,GAAW,UAAmB,OAAA2W,GAAQ,SACxC,MAAA,MAAM,gGAAgG,EAO3G,GAJJtrB,EAAA,EAAAsC,EAAIgf,EAAK,UAAUL,GAAYsM,EAAS,YAAY,EAAGxD,EAAI,MAAM,CAAA,EACjE/pB,EAAA,EAAAsI,EAAIgZ,EAAK,UAAUL,GAAYuM,EAAS,YAAY,EAAGvD,EAAI,MAAM,CAAA,EAG7D3nB,EAAE,SAAWgG,EAAE,OACV,MAAA,MAAM,oFAAoF,KAG/F,MAAM,QAAQqM,CAAM,GAAKA,EAAO,SAAWrS,EAAE,OACxC,MAAA,MAAM,kFAAkF,wBAKnG,CACQ,MAAAM,EAAI0e,EAAK,cAAcqI,CAAM,MACnC6B,EAAE,CAAI,EAAG,EAAG5oB,EAAI,EAAC,CAAGA,EAAGA,CAAC,CAAA,MACxB6oB,EAAE,CAAI,EAAG7oB,EAAG,EAAC,CAAGA,EAAG,EAAGA,CAAC,CAAA,sBAIzB5C,EAAA,GAAE2rB,EAAuB,QAAA8B,CAAS,iBAAiBE,CAAW,aAAaD,CAAW,cAAcE,CAAQ,KAAA,kVCPtGn5B,EAAC,CAAA,CAAA,uBAAN,OAAIS,GAAA,+HAD8BT,EAAK,CAAA,CAAA,cAASA,EAAY,CAAA,CAAA,wEAAjEqB,EAIIF,EAAAwX,EAAArX,CAAA,yEAHMtB,EAAC,CAAA,CAAA,oBAAN,OAAIS,GAAA,EAAA,mHAAJ,wBADkCT,EAAK,CAAA,CAAA,oBAASA,EAAY,CAAA,CAAA,kFAElCA,EAAY,CAAA,CAAA,EAA5BuC,EAAAyuB,EAAA,IAAAuF,EAAAv2B,KAAEA,EAAC,EAAA,CAAA,CAAA,EAAMuC,EAAAyuB,EAAA,IAAAE,EAAAlxB,KAAEA,EAAC,EAAA,CAAA,CAAA,UAArBqB,EAA6CF,EAAA6vB,EAAA1vB,CAAA,2BAApBtB,EAAY,CAAA,CAAA,EAA5BK,EAAA,GAAAk2B,KAAAA,EAAAv2B,KAAEA,EAAC,EAAA,CAAA,eAAMK,EAAA,GAAA6wB,KAAAA,EAAAlxB,KAAEA,EAAC,EAAA,CAAA,oDAHtBuqB,EAAAvqB,MAASA,EAAC,CAAA,IAAK,QAAaA,OAAM,QAASoK,GAAApK,CAAA,oEAA3CA,MAASA,EAAC,CAAA,IAAK,QAAaA,OAAM,6IA/C3B,QAAA84B,CAAO,EAAAhuB,GACL,QAAAiuB,CAAO,EAAAjuB,EACP,CAAA,OAAAwuB,EAAS,CAAC,EAAAxuB,EACV,CAAA,UAAAkuB,EAAY,aAAa,EAAAluB,GACzB,YAAAmuB,EAAcvD,GAAO,OAAO,EAAA5qB,EAC5B,CAAA,YAAAouB,EAAc,CAAC,EAAApuB,EACf,CAAA,WAAAyuB,EAAa,CAAC,EAAAzuB,EACd,CAAA,MAAAyd,EAAQ,EAAE,EAAAzd,QAQf+hB,EAAOxoB,GAAW,MAAM,EACxBsoB,EAAKE,EAAK,8BACVD,EAAKC,EAAK,8BACV0H,EAAO1H,EAAK,6BAEdhf,EAAGgG,EAAG2lB,uVAGHrF,EAAK,CAEE,GAAA,OAAAmF,GAAY,UAAYA,EAAS,GAAKA,EAASzM,EAAK,eAAe,OACrE,MAAA,MAA+D,yDAAAA,EAAK,eAAe,MAAM,GAAA,EAS9F,GANJthB,EAAA,EAAAiuB,EAAe3M,EAAK,eAAeyM,EAAS,CAAC,CAAA,EAE7C/tB,EAAA,EAAAsC,EAAIgf,EAAK,UAAUL,GAAYsM,EAAS,QAAQ,EAAGxD,EAAI,MAAM,CAAA,EAC7D/pB,EAAA,EAAAsI,EAAIgZ,EAAK,UAAUL,GAAYuM,EAAS,QAAQ,EAAGvD,EAAI,MAAM,CAAA,EAGzD3nB,EAAE,SAAWgG,EAAE,OACV,MAAA,MAAM,gFAAgF,oBAKjGtI,EAAA,EAAE2rB,EAAY,CAAI,IAAK,IAAK,GAAG,EAAE,SAASsC,CAAY,UAC3CP,GAAeA,IAAgB,cAAgBA,EAAcD,CAAS,+BAA+BO,CAAU,MAC/G,QAAAP,CAAS,iBAAiBE,CAAW,aAAaD,CAAW,eAAeM,CAAU,KAAA,ySCdhEv5B,EAAC,CAAA,CAAA,gDADEA,EAAY,CAAA,CAAA,cAASA,EAAK,CAAA,CAAA,UAA/DqB,EAEIF,EAAAwX,EAAArX,CAAA,EADDJ,EAAmCyX,EAAA8gB,CAAA,4BAAJz5B,EAAC,CAAA,CAAA,mBADEA,EAAY,CAAA,CAAA,mBAASA,EAAK,CAAA,CAAA,yCAD7DA,EAAK,CAAA,GAAIA,EAAC,CAAA,IAAK,QAASoK,GAAApK,CAAA,oEAAxBA,EAAK,CAAA,GAAIA,EAAC,CAAA,IAAK,iJA3BR,QAAA84B,CAAO,EAAAhuB,GACL,QAAAiuB,CAAO,EAAAjuB,EACP,CAAA,UAAAqrB,EAAY,CAAC,EAAArrB,GACb,UAAAmrB,EAAYP,GAAO,OAAO,EAAA5qB,EAC1B,CAAA,SAAAorB,EAAW,CAAC,EAAAprB,EACZ,CAAA,MAAAyd,EAAQ,EAAE,EAAAzd,QAQf+hB,EAAOxoB,GAAW,MAAM,EAExBiJ,EAAQuf,EAAK,iCACb0H,EAAO1H,EAAK,+BACZF,EAAKE,EAAK,8BACVD,EAAKC,EAAK,wRAGfthB,EAAA,EAAEf,EAAI2pB,EAAQzH,GAAMoM,EAASC,EAASzD,EAAKE,EAAK3I,CAAI,EAAI,MAAS,oBAG/DthB,EAAA,EAAA+qB,EAA0C,2BAAAL,CAAS,kBAAkBE,CAAS,wBAAwBtJ,EAAK,YAAYqI,CAAM,EAAEgB,EAAS,CAAC,CAAA,EAAA,wQC8DrIl2B,EAAM,CAAA,CAAA,uBAAX,OAAIS,GAAA,4BAIAT,EAAU,CAAA,GAAA4oB,GAAA5oB,CAAA,EAIX0oB,EAAA1oB,OAAgB,GAACmK,GAAAnK,CAAA,wLATtBqB,EAaIF,EAAAwX,EAAArX,CAAA,0HAZGtB,EAAM,CAAA,CAAA,oBAAX,OAAIS,GAAA,EAAA,gHAAJ,OAIIT,EAAU,CAAA,yDAIXA,OAAgB,iIANgIioB,EAAAjoB,KAAQA,EAAC,EAAA,CAAA,EAAA,8CADlJuC,EAAA+uB,EAAA,IAAAC,EAAAvxB,MAAGA,EAAC,EAAA,CAAA,CAAA,UAAMA,EAAE,EAAA,CAAA,cAASA,EAAE,CAAA,CAAA,eAAUA,EAAE,EAAA,CAAA,eAASA,EAAG,EAAA,CAAA,EAC/CuC,EAAAyuB,EAAA,IAAAuF,EAAAv2B,MAAGA,EAAC,EAAA,CAAA,CAAA,UAAMA,EAAE,EAAA,CAAA,WAAMA,EAAG,CAAA,CAAA,EAAMuC,EAAAyuB,EAAA,KAAAyF,EAAAz2B,MAAK,IAAI,gDAAoCA,EAAU,CAAA,CAAA,oBAAcA,EAAQ,CAAA,EAAA,IAAA,sCADjHqB,EAA4DF,EAAAmwB,EAAAhwB,CAAA,EAC5DD,EAAoKF,EAAA6vB,EAAA1vB,CAAA,wBAD3JjB,EAAA,CAAA,EAAA,MAAAkxB,KAAAA,EAAAvxB,MAAGA,EAAC,EAAA,CAAA,kCAAMA,EAAE,EAAA,CAAA,uBAASA,EAAE,CAAA,CAAA,0BAAUA,EAAE,EAAA,CAAA,iBAASA,EAAG,EAAA,kBAC0FK,EAAA,CAAA,EAAA,KAAA4nB,KAAAA,EAAAjoB,KAAQA,EAAC,EAAA,CAAA,EAAA,MAAAgxB,EAAA,UAAA/I,GAAlJ5nB,EAAA,CAAA,EAAA,MAAAk2B,KAAAA,EAAAv2B,MAAGA,EAAC,EAAA,CAAA,kCAAMA,EAAE,EAAA,CAAA,qBAAMA,EAAG,CAAA,CAAA,EAAMK,EAAA,CAAA,EAAA,MAAAo2B,KAAAA,EAAAz2B,MAAK,sCAAwCA,EAAU,CAAA,CAAA,iBAAcA,EAAQ,CAAA,EAAA,sEAG4BioB,EAAAjoB,KAAQA,EAAC,CAAA,CAAA,EAAA,iCAAhJuC,EAAAyuB,EAAA,IAAAuF,EAAAv2B,MAAGA,EAAC,CAAA,CAAA,CAAA,UAAMA,EAAE,EAAA,CAAA,WAAM,CAAC,EAAMuC,EAAAyuB,EAAA,KAAAyF,EAAAz2B,MAAK,IAAI,gDAAoCA,EAAU,CAAA,CAAA,oBAAcA,EAAQ,CAAA,EAAA,IAAA,sCAA/GqB,EAAkKF,EAAA6vB,EAAA1vB,CAAA,wBAAlBjB,EAAA,CAAA,EAAA,KAAA4nB,KAAAA,EAAAjoB,KAAQA,EAAC,CAAA,CAAA,EAAA,MAAAgxB,EAAA,UAAA/I,GAAhJ5nB,EAAA,CAAA,EAAA,MAAAk2B,KAAAA,EAAAv2B,MAAGA,EAAC,CAAA,CAAA,kCAAMA,EAAE,EAAA,CAAA,EAAaK,EAAA,CAAA,EAAA,MAAAo2B,KAAAA,EAAAz2B,MAAK,sCAAwCA,EAAU,CAAA,CAAA,iBAAcA,EAAQ,CAAA,EAAA,+DAIsDioB,EAAAgE,GAAmBjsB,EAAW,CAAA,CAAA,EAAA,iCAA1LuC,EAAAyuB,EAAA,IAAAuF,EAAAv2B,MAAGA,EAAC,CAAA,CAAA,EAAIA,EAAG,CAAA,EAAA,CAAC,EAAI,GAAI,EAAKuC,EAAAyuB,EAAA,IAAAE,EAAAlxB,EAAG,EAAA,EAAA,CAAC,EAAIA,MAAK,GAAG,WAAM,CAAC,WAAM,CAAC,gDAAoCA,EAAU,CAAA,CAAA,oBAAcA,EAAQ,CAAA,EAAA,IAAA,sCAApIqB,EAA4MF,EAAA6vB,EAAA1vB,CAAA,wBAAvCjB,EAAA,CAAA,EAAA,GAAA4nB,KAAAA,EAAAgE,GAAmBjsB,EAAW,CAAA,CAAA,EAAA,MAAAgxB,EAAA,UAAA/I,GAA1L5nB,EAAA,CAAA,EAAA,MAAAk2B,KAAAA,EAAAv2B,MAAGA,EAAC,CAAA,CAAA,EAAIA,EAAG,CAAA,EAAA,CAAC,EAAI,iBAASK,EAAA,CAAA,EAAA,MAAA6wB,KAAAA,EAAAlxB,EAAG,EAAA,EAAA,CAAC,EAAIA,MAAK,oCAAqDA,EAAU,CAAA,CAAA,iBAAcA,EAAQ,CAAA,EAAA,+DAXlIuqB,EAAAvqB,EAAS,CAAA,GAAAA,EAAG,EAAA,EAAA,OAAS,GAACoK,GAAApK,CAAA,kEAAtBA,EAAS,CAAA,GAAAA,EAAG,EAAA,EAAA,OAAS,wGApEjB,MAAA05B,GAAc,GACdC,GAAe,IACfC,GAAa,gDAlBR,OAAAC,CAAM,EAAA/uB,GACN,OAAAgvB,CAAM,EAAAhvB,EACN,CAAA,OAAAge,EAAS,CAAC,EAAAhe,EACV,CAAA,OAAAoV,EAAS,IAAI,EAAApV,EACb,CAAA,WAAAivB,EAAa,SAAS,EAAAjvB,EACtB,CAAA,SAAA2qB,EAAW,GAAI,EAAA3qB,QAgBpBkvB,EAAa,CAAI,MAAS,EAAG,OAAU,EAAG,MAAS,GAAI,OAAU,IAenE,IAAAC,EAAaC,QAWXrN,EAAOxoB,GAAW,MAAM,EACxBsoB,EAAKE,EAAK,8BACVD,EAAKC,EAAK,8BACV2H,EAAO3H,EAAK,gCACZ4H,EAAO5H,EAAK,gCACZvf,EAAQuf,EAAK,iCACb0H,EAAO1H,EAAK,6BAOdsN,EAAKC,EAAIC,GAAIC,EAAIC,qQApCbV,GAAUA,EAAO,OAAS,GACrB,MAAA,IAAA,MAAM,iDAAiD,6BAI5DC,GAAM,EAAMA,EAAO,SAAWD,EAAO,OAAS,GAAKC,EAAO,SAAWD,EAAO,SACvE,MAAA,IAAA,MAAM,0GAA0G,2BAI5HtuB,EAAA,GAAEivB,EAAU1sB,GAAS+rB,CAAM,EAAIA,EAAO,EAAIA,CAAM,0BAG1CW,EACHjvB,EAAA,EAAA,CAAA0uB,EAAaC,CAAW,EAAI7N,GAAcmO,CAAO,EAAAP,GAAA1uB,EAAA,GAAA2uB,CAAA,EAAA3uB,EAAA,GAAAivB,CAAA,EAAAjvB,EAAA,GAAAsuB,CAAA,KAElDtuB,EAAA,EAAA0uB,EAAc,IAAI,EAClB1uB,EAAA,GAAA2uB,EAAc,IAAI,4BAGpB3uB,EAAA,EAAEkvB,EAAUva,GAAUA,EAAO,SAAWsa,EAAQ,OAASta,EAASga,CAAW,mBAY3E3uB,EAAA,EAAA7D,EAAIoyB,EAAO,MAAM,qBACnBvuB,EAAA,EAAEmvB,EAAaD,GAAWA,EAAQ,SAAW/yB,CAAC,2BAKxCysB,EAAK,CAEA,MAAAwG,EAAYvF,EAAM,CAAC,EAAIA,EAAM,CAAC,EAC9BwF,EAAazF,EAAM,CAAC,EAAIA,EAAM,CAAC,EAC/BtL,EAAQ8Q,EAAYjB,GACpBxL,EAAS0M,EAAajB,GAGtBkB,GAAUhR,GAASniB,GAAKuyB,IAAgB,IACxCzG,GAAO4B,EAAM,CAAC,EAAIuF,GAAa,EAAIjB,IAAe,GAClDoB,GAAQ3F,EAAM,CAAC,EAAIjH,EAAS0L,GAGlCruB,EAAA,GAAA8uB,GAAKxN,EAAK,UAAUL,GAAa,CAAAsO,EAAK,EAAG,YAAY,EAAGtF,EAAI,MAAM,CAAA,OAClE4E,EAAKvN,EAAK,UAAU9e,GAAO,IAAI,EAAGrG,CAAC,EAAE,MAAMiF,IAAK6mB,GAAO7mB,GAAIkuB,EAAO,EAAGvF,EAAI,MAAM,CAAA,MAC/EgF,EAAKzN,EAAK,WAAWgO,EAAO,EAAGvF,EAAI,OAAO,CAAA,OAC1CiF,EAAKP,EAAc9E,CAAM,CAAA,MACzBiF,EAAMO,EAAaJ,EAAG,CAAC,EAAI,EAAI,CAAC,+MC5FlC,MAAMS,GAAU,CAAC,IAAM,IAAK,IAAM,EAAG,EAY/BC,GAAc,CAAC,IAAO,UAAW,GAAM,UAAW,OAAU,UAAW,IAAO,SAAS,EACvFC,GAAc,CAAC,IAAO,UAAW,GAAM,UAAW,OAAU,UAAW,IAAO,SAAS,EACvFC,GAAe,UACfC,GAAwB,UACxBC,GAAa,UACbC,GAAoB,EAGpBC,GAAY,EACZC,GAAa,EACbC,GAAU,IAOhB,SAASC,GAAU/zB,EAAG,CAC1B,OAAIA,GAAM,EAAU,CAAC,SAAS,EAC1BA,GAAM,EAAU,CAAC,UAAW,SAAS,EACrCA,GAAM,EAAU,CAAC,UAAW,UAAW,SAAS,EAChDA,GAAM,EAAU,CAAC,UAAW,UAAW,UAAW,SAAS,EAC3DA,GAAM,EAAU,CAAC,UAAW,UAAW,UAAW,UAAW,SAAS,EACtEA,GAAM,EAAU,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,EACjFA,GAAM,EAAU,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,EAC5FA,GAAM,EAAU,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,EACvGA,GAAM,EAAU,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,EAClHA,GAAK,GAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,EAC7HA,GAAK,GAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAC1G,UAAW,SAAS,EACnBA,GAAK,GAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAC1G,UAAW,UAAW,SAAS,EAC9BA,GAAK,GAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAC1G,UAAW,UAAW,UAAW,SAAS,EACzCA,GAAK,GAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UACrH,UAAW,UAAW,UAAW,SAAS,EACzCA,GAAK,GAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UACrH,UAAW,UAAW,UAAW,UAAW,SAAS,EAGjD,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UACnH,UAAW,UAAW,UAAW,UAAW,SAAS,CAC3D,CASO,SAASg0B,GAAa7X,EAAQzB,EAAO,CACzC,MAAO,KAAKA,CAAK,MAAMyB,EAAO,KAAK,OAAOzB,EAAQ,CAAC,EAAI,KAAK,QAAQ,CAAC,CAAC,IACzE,CASO,SAASuZ,GAAO9tB,EAAG+tB,EAAS,CAChC,GAAI/tB,EAAE,SAAW+tB,EAAQ,OAAQ,OAAO/tB,EACxC,MAAMnG,EAAIk0B,EAAQ,OACZ5uB,EAAM,IAAIa,EAAE,YAAYnG,CAAC,EAC/B,QAASjH,KAAKm7B,EACX5uB,EAAIvM,CAAC,EAAIoN,EAAE+tB,EAAQn7B,CAAC,CAAC,EAExB,OAAOuM,CACV,CAQO,SAAS6uB,GAAMhuB,EAAGnG,EAAG,CACzB,IAAIo0B,EAAO,OAAO,kBACdC,EAAO,OAAO,kBAGlB,QAASt7B,EAAI,EAAGA,EAAIoN,EAAE,OAAQpN,IAC3Bs7B,EAAO,KAAK,IAAIA,EAAMluB,EAAEpN,CAAC,CAAC,EAC1Bq7B,EAAO,KAAK,IAAIA,EAAMjuB,EAAEpN,CAAC,CAAC,EAI7B,IAAI6rB,EAAQU,GAAa,OAAW,CAAC+O,EAAMD,CAAI,EAAGp0B,EAAI,EAAG,GAAM,GAAO,CAAC,EAAE,EAGzE,MAAMs0B,EAAK1P,EAAM,CAAC,EAAIA,EAAM,CAAC,EAC7B,GAAIA,EAAM,CAAC,EAAIyP,EAAM,CAClB,MAAMvI,EAAOlH,EAAM,CAAC,EAAI0P,EACxB1P,EAAQ,CAACkH,EAAOuI,EAAOvI,EAAOuI,EAAM,GAAGzP,CAAK,CAC9C,CACD,GAAIA,EAAMA,EAAM,OAAS,CAAC,EAAIwP,EAAM,CACjC,MAAMG,EAAQ3P,EAAMA,EAAM,OAAS,CAAC,EAAI0P,EACxC1P,EAAQ,CAAC,GAAGA,EAAO2P,EAAQH,EAAOG,EAAQH,CAAI,CAChD,CAED,OAAOxP,CACV,CAQO,SAAS4P,GAAepW,EAAY,CACxC,MAAMpe,EAAIoe,EAAW,OACrB,GAAIpe,EAAI,GAAKA,EAAI,GACd,MAAM,MAAM,uEAAuE,EAGtF,MAAMy0B,EAASV,GAAU/zB,CAAC,EAK1B,OAJYoe,EAAW,OAAO,CAACrE,EAAK2a,EAAM91B,KACvCmb,EAAI2a,CAAI,EAAID,EAAO71B,CAAK,EACjBmb,GACP,CAAE,CAAA,CAER,CAWO,SAAS4a,GAAaxuB,EAAGgsB,EAAQC,EAAQ,CAC7C,MAAMpyB,EAAImyB,EAAO,OAGXsC,EAAS,IAAI,MAAMtuB,EAAE,MAAM,EAC3Byf,EAAQuM,EAAO,CAAC,EAAIA,EAAO,CAAC,EAElC,QAASp5B,EAAI,EAAGA,EAAIoN,EAAE,OAAQpN,IAC3B,QAASoP,EAAI,EAAGA,EAAInI,EAAI,EAAGmI,IAAK,CAC7B,MAAM2jB,EAAO3lB,EAAEpN,CAAC,GAAKo5B,EAAOhqB,CAAC,EACvBosB,EAAQpsB,IAAMnI,EAAI,EAAImG,EAAEpN,CAAC,EAAIo5B,EAAOhqB,EAAI,CAAC,EAAIyd,EAAOzf,EAAEpN,CAAC,EAAIo5B,EAAOhqB,EAAI,CAAC,EAC7E,GAAI2jB,GAAQyI,EAAO,CAChBE,EAAO17B,CAAC,EAAIq5B,EAAOjqB,CAAC,EACpB,KACF,CACH,CAGJ,OAAOssB,CACV,CAGO,SAASG,GAAevwB,EAASD,EAAKywB,EAASC,EAAYC,EAAQ,MAAO,CAE9E,GAAI,CAAC3wB,EAAK,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,IAAI,EAE9C,IAAI4wB,EAAW5C,EAAQ6C,EAAWC,EAAWC,EAC7C,GAAIN,IAAY,UAAYzwB,EAAI,WAAY,CAEzC,MAAMgxB,EAAcZ,GAAepwB,EAAI,UAAU,EACjDguB,EAAS,OAAO,KAAKgD,CAAW,EAAE,IAAInwB,GAAKmwB,EAAYnwB,CAAC,CAAC,EACzD+vB,EAAY5wB,EAAI,WAChB8wB,EAAY9wB,EAAI,QAAQ,IAAIa,GAAKmwB,EAAYnwB,CAAC,CAAC,EAC/CgwB,EAAYD,EAAU,IAAI,CAAC/vB,EAAGlM,IAAMA,CAAC,CAC3C,SAAc87B,IAAY,WAAY,CAEhC,MAAMQ,EAAWpB,GAAO5vB,EAAQ,OAAO,UAAUywB,CAAU,EAAG1wB,EAAI,UAAU,EAC5E+wB,EAAe9wB,EAAQ,UAAUywB,EAAa,CAAC,EAC3CK,EAAa,OAAS,KACvBA,EAAeA,EAAa,UAAU,EAAG,EAAE,EAAI,OAElDF,EAAYd,GAAMkB,EAAU,EAAE,EAC9BjD,EAAS2B,GAAUkB,EAAU,OAAS,CAAC,EACvCC,EAAYP,GAAaU,EAAUJ,EAAW7C,CAAM,CAC1D,MAEM4C,EAAY,KACZC,EAAY,KACZ7C,EAAS,KACT8C,EAAY,MAAM9wB,EAAI,KAAK,EAAE,KAAKkvB,GAAYyB,CAAK,CAAC,EAGvD,MAAO,CAACC,EAAW5C,EAAQ6C,EAAWC,EAAWC,CAAY,CAChE,iOC/DQrU,GAAAxoB,EAAa,CAAA,IAAA,KAAOA,OAAa,MAAGg9B,GAAAh9B,CAAA,EAOpC0oB,EAAA1oB,OAAa,KAAGi9B,GAAAj9B,CAAA,EAShBo3B,GAAAp3B,EAAa,CAAA,IAAA,KAAOA,OAAa,MAAGk9B,GAAAl9B,CAAA,IASpCA,EAAU,CAAA,IAAK,QAAUA,EAAW,EAAA,GAAAyoB,GAAAzoB,CAAA,EASpCm9B,EAAAn9B,MAAY,GAACmK,GAAAnK,CAAA,kNAlCbA,EAAa,CAAA,IAAA,KAAOA,OAAa,sEAOjCA,OAAa,sEASbA,EAAa,CAAA,IAAA,KAAOA,OAAa,sEASjCA,EAAU,CAAA,IAAK,QAAUA,EAAW,EAAA,oEASpCA,MAAY,4PA/BoBA,EAAE,EAAA,CAAA,eAAUA,EAAS,CAAA,CAAA,kDADjBA,EAAW,CAAA,EAAA,QAAA,cAAgBA,EAAY,EAAA,CAAA,UAA7EqB,EAEIF,EAAAwX,EAAArX,CAAA,EADDJ,EAAuDyX,EAAA8gB,CAAA,mCAAxBz5B,EAAE,EAAA,CAAA,wBAAUA,EAAS,CAAA,CAAA,iBADjBA,EAAW,CAAA,EAAA,sEAQ1CA,EAAE,EAAA,CAAA,uBAAP,OAAI,GAAA,8HAD+BA,EAAW,CAAA,EAAA,OAAA,cAAeA,EAAY,EAAA,CAAA,UAA3EqB,EAIIF,EAAAwX,EAAArX,CAAA,+EAHGtB,EAAE,EAAA,CAAA,oBAAP,OAAIS,GAAA,EAAA,mHAAJ,sBADmCT,EAAW,CAAA,EAAA,gHAEvCA,EAAE,EAAA,EAACA,EAAC,EAAA,CAAA,EAAIA,EAAG,EAAA,CAAA,EAAMuC,EAAA+uB,EAAA,IAAAE,EAAAxxB,EAAE,CAAA,EAAA,EAAEA,OAAK,EAAKA,EAAE,EAAA,EAAGA,MAAGA,EAAC,EAAA,CAAA,CAAA,EAASuC,EAAA+uB,EAAA,OAAA8L,EAAAp9B,MAAGA,EAAC,EAAA,CAAA,CAAA,cAAUA,EAAE,CAAA,CAAA,EAAUuC,EAAA+uB,EAAA,SAAAI,EAAA1xB,EAAE,CAAA,EAAA,EAAEA,OAAK,EAAIA,EAAE,EAAA,EAACA,EAAC,EAAA,CAAA,EAAIA,EAAE,EAAA,EAAGA,EAAE,EAAA,EAAGA,EAAE,EAAA,EAACA,EAAC,EAAA,CAAA,CAAA,UAAvHqB,EAA4HF,EAAAmwB,EAAAhwB,CAAA,4BAAnHtB,EAAE,EAAA,EAACA,EAAC,EAAA,CAAA,EAAIA,EAAG,EAAA,eAAMK,EAAA,CAAA,EAAA,OAAAmxB,KAAAA,EAAAxxB,EAAE,CAAA,EAAA,EAAEA,OAAK,EAAKA,EAAE,EAAA,EAAGA,MAAGA,EAAC,EAAA,CAAA,eAASK,EAAA,CAAA,EAAA,OAAA+8B,KAAAA,EAAAp9B,MAAGA,EAAC,EAAA,CAAA,wCAAUA,EAAE,CAAA,CAAA,EAAUK,EAAA,CAAA,EAAA,OAAAqxB,KAAAA,EAAA1xB,EAAE,CAAA,EAAA,EAAEA,OAAK,EAAIA,EAAE,EAAA,EAACA,EAAC,EAAA,CAAA,EAAIA,EAAE,EAAA,EAAGA,EAAE,EAAA,EAAGA,EAAE,EAAA,EAACA,EAAC,EAAA,CAAA,gEAQhHA,EAAE,EAAA,CAAA,uBAAP,OAAI,GAAA,iIADkCA,EAAW,CAAA,EAAA,SAAA,cAAiBA,EAAO,EAAA,CAAA,UAA3EqB,EAIIF,EAAAwX,EAAArX,CAAA,+EAHGtB,EAAE,EAAA,CAAA,oBAAP,OAAIS,GAAA,EAAA,mHAAJ,sBADsCT,EAAW,CAAA,EAAA,6GAEQA,EAAG,CAAA,CAAA,EAArDuC,EAAAyuB,EAAA,IAAAuF,EAAAv2B,MAAGA,EAAC,EAAA,CAAA,CAAA,EAAMuC,EAAAyuB,EAAA,IAAAE,EAAAlxB,MAAGA,EAAC,EAAA,CAAA,CAAA,aAASA,EAAS,CAAA,CAAA,EAAUuC,EAAAyuB,EAAA,SAAAqM,EAAAr9B,MAAGA,EAAC,EAAA,CAAA,CAAA,UAAvDqB,EAAsEF,EAAA6vB,EAAA1vB,CAAA,8BAAXtB,EAAG,CAAA,CAAA,EAArDK,EAAA,CAAA,EAAA,MAAAk2B,KAAAA,EAAAv2B,MAAGA,EAAC,EAAA,CAAA,eAAMK,EAAA,CAAA,EAAA,OAAA6wB,KAAAA,EAAAlxB,MAAGA,EAAC,EAAA,CAAA,mCAASA,EAAS,CAAA,CAAA,EAAUK,EAAA,CAAA,EAAA,OAAAg9B,KAAAA,EAAAr9B,MAAGA,EAAC,EAAA,CAAA,8DAQhDA,EAAE,EAAA,CAAA,uBAAP,OAAIS,GAAA,6HAD+BT,EAAO,EAAA,CAAA,UAA5CqB,EAIIF,EAAAwX,EAAArX,CAAA,gFAHGtB,EAAE,EAAA,CAAA,oBAAP,OAAIS,GAAA,EAAA,mHAAJ,qDACoDooB,EAAA7oB,MAAYA,EAAC,EAAA,CAAA,EAAA,2CAA1DuC,EAAAyuB,EAAA,IAAAuF,EAAAv2B,MAAGA,EAAC,EAAA,CAAA,CAAA,EAAMuC,EAAAyuB,EAAA,IAAAE,EAAAlxB,MAAGA,EAAC,EAAA,CAAA,CAAA,EAAOuC,EAAAyuB,EAAA,KAAAyF,EAAAz2B,EAAE,CAAA,EAAA,EAAEA,OAAK,EAAIA,EAAE,EAAA,GAAIA,EAAE,EAAA,CAAA,UAAnDqB,EAA4EF,EAAA6vB,EAAA1vB,CAAA,iBAAtBjB,EAAA,CAAA,EAAA,QAAAwoB,KAAAA,EAAA7oB,MAAYA,EAAC,EAAA,CAAA,EAAA,KAAA0C,GAAA+Q,EAAAoV,CAAA,EAA1DxoB,EAAA,CAAA,EAAA,MAAAk2B,KAAAA,EAAAv2B,MAAGA,EAAC,EAAA,CAAA,eAAMK,EAAA,CAAA,EAAA,OAAA6wB,KAAAA,EAAAlxB,MAAGA,EAAC,EAAA,CAAA,eAAOK,EAAA,CAAA,EAAA,MAAAo2B,KAAAA,EAAAz2B,EAAE,CAAA,EAAA,EAAEA,OAAK,EAAIA,EAAE,EAAA,GAAIA,EAAE,EAAA,2EAO9C,OAAAA,OAAa,IAAG2oB,0BAUhB3oB,EAAU,CAAA,IAAK,QAAUA,OAAeA,EAAW,EAAA,EAAC,OAAS,GAAC4oB,GAAA5oB,CAAA,oEAX1D,CAAC,UAAK,CAAC,cAAS,MAAM,eAAU,MAAM,kCAA/CqB,EAAoEF,EAAAmwB,EAAAhwB,CAAA,kIAW/DtB,EAAU,CAAA,IAAK,QAAUA,OAAeA,EAAW,EAAA,EAAC,OAAS,2LAJpDuC,EAAA+uB,EAAA,SAAAgM,EAAAt9B,MAAGA,EAAQ,CAAA,CAAA,CAAA,EAASuC,EAAA+uB,EAAA,OAAA8L,EAAAp9B,MAAGA,EAAQ,CAAA,CAAA,CAAA,YAAMA,EAAE,EAAA,EAACA,EAAQ,CAAA,CAAA,EAAIA,EAAG,EAAA,CAAA,EAAMuC,EAAA+uB,EAAA,IAAAE,EAAAxxB,EAAE,CAAA,EAAA,EAAEA,MAAY,EAAKA,EAAE,EAAA,EAAGA,MAAGA,EAAQ,CAAA,CAAA,CAAA,cAAUA,EAAE,CAAA,CAAA,EAAUuC,EAAA+uB,EAAA,SAAAI,EAAA1xB,EAAE,CAAA,EAAA,EAAEA,MAAY,EAAIA,EAAE,EAAA,EAACA,EAAQ,CAAA,CAAA,EAAIA,EAAE,EAAA,EAAGA,EAAE,EAAA,EAAGA,EAAE,EAAA,EAACA,EAAQ,CAAA,CAAA,CAAA,iDADzJA,EAAW,CAAA,EAAA,OAAA,cAAeA,EAAY,EAAA,CAAA,UAA3EqB,EAEIF,EAAAwX,EAAArX,CAAA,EADJJ,EAAmMyX,EAAA2Y,CAAA,UAArLjxB,EAAA,CAAA,EAAA,OAAAi9B,KAAAA,EAAAt9B,MAAGA,EAAQ,CAAA,CAAA,oBAASK,EAAA,CAAA,EAAA,OAAA+8B,KAAAA,EAAAp9B,MAAGA,EAAQ,CAAA,CAAA,oCAAMA,EAAE,EAAA,EAACA,EAAQ,CAAA,CAAA,EAAIA,EAAG,EAAA,eAAMK,EAAA,CAAA,EAAA,OAAAmxB,KAAAA,EAAAxxB,EAAE,CAAA,EAAA,EAAEA,MAAY,EAAKA,EAAE,EAAA,EAAGA,MAAGA,EAAQ,CAAA,CAAA,qCAAUA,EAAE,CAAA,CAAA,EAAUK,EAAA,CAAA,EAAA,OAAAqxB,KAAAA,EAAA1xB,EAAE,CAAA,EAAA,EAAEA,MAAY,EAAIA,EAAE,EAAA,EAACA,EAAQ,CAAA,CAAA,EAAIA,EAAE,EAAA,EAAGA,EAAE,EAAA,EAAGA,EAAE,EAAA,EAACA,EAAQ,CAAA,CAAA,mCADzJA,EAAW,CAAA,EAAA,iHAHgBA,EAAG,CAAA,CAAA,EAA1DuC,EAAAyuB,EAAA,IAAAuF,EAAAv2B,MAAGA,EAAQ,CAAA,CAAA,CAAA,EAAMuC,EAAAyuB,EAAA,IAAAE,EAAAlxB,MAAGA,EAAQ,CAAA,CAAA,CAAA,EAAWuC,EAAAyuB,EAAA,SAAAqM,EAAAr9B,MAAGA,EAAQ,CAAA,CAAA,CAAA,oDADnBA,EAAW,CAAA,EAAA,SAAA,cAAiBA,EAAO,EAAA,CAAA,wEAA3EqB,EAEIF,EAAAwX,EAAArX,CAAA,EADJJ,EAA2EyX,EAAAqY,CAAA,8BAAXhxB,EAAG,CAAA,CAAA,EAA1DK,EAAA,CAAA,EAAA,MAAAk2B,KAAAA,EAAAv2B,MAAGA,EAAQ,CAAA,CAAA,eAAMK,EAAA,CAAA,EAAA,OAAA6wB,KAAAA,EAAAlxB,MAAGA,EAAQ,CAAA,CAAA,eAAWK,EAAA,CAAA,EAAA,OAAAg9B,KAAAA,EAAAr9B,MAAGA,EAAQ,CAAA,CAAA,mCADnBA,EAAW,CAAA,EAAA,kEAWoF6oB,EAAA7oB,MAAYA,EAAQ,CAAA,CAAA,EAAA,kEAA7Im7B,EAAqB,aAAQA,EAAqB,EAAK54B,EAAAyuB,EAAA,IAAAuF,EAAAv2B,MAAGA,EAAQ,CAAA,CAAA,CAAA,EAAMuC,EAAAyuB,EAAA,IAAAE,EAAAlxB,MAAGA,EAAQ,CAAA,CAAA,CAAA,EAAOuC,EAAAyuB,EAAA,KAAAyF,EAAAz2B,EAAE,CAAA,EAAA,EAAEA,MAAY,EAAIA,EAAE,EAAA,GAAIA,EAAE,EAAA,CAAA,gDAD/FA,EAAO,EAAA,CAAA,UAA5CqB,EAEIF,EAAAwX,EAAArX,CAAA,EADJJ,EAAoKyX,EAAAqY,CAAA,iBAA7B3wB,EAAA,CAAA,EAAA,QAAAwoB,KAAAA,EAAA7oB,MAAYA,EAAQ,CAAA,CAAA,EAAA,KAAA0C,GAAA+Q,EAAAoV,CAAA,EAAtFxoB,EAAA,CAAA,EAAA,MAAAk2B,KAAAA,EAAAv2B,MAAGA,EAAQ,CAAA,CAAA,eAAMK,EAAA,CAAA,EAAA,OAAA6wB,KAAAA,EAAAlxB,MAAGA,EAAQ,CAAA,CAAA,eAAOK,EAAA,CAAA,EAAA,MAAAo2B,KAAAA,EAAAz2B,EAAE,CAAA,EAAA,EAAEA,MAAY,EAAIA,EAAE,EAAA,GAAIA,EAAE,EAAA,uDAnDrIA,EAAK,CAAA,GAAIA,EAAE,EAAA,GAAIA,EAAE,EAAA,GAAAoK,GAAApK,CAAA,kEAAjBA,EAAK,CAAA,GAAIA,EAAE,EAAA,GAAIA,EAAE,EAAA,4IAtHR,QAAA84B,CAAO,EAAAhuB,GACP,QAAAiuB,CAAO,EAAAjuB,GACP,YAAAyyB,CAAW,EAAAzyB,GACX,SAAA0yB,CAAQ,EAAA1yB,GACR,OAAAoV,CAAM,EAAApV,GACN,WAAA2yB,CAAU,EAAA3yB,EACV,CAAA,UAAAqrB,EAAY,CAAG,EAAArrB,EACf,CAAA,IAAA4yB,EAAM,GAAG,EAAA5yB,EACT,CAAA,OAAAqxB,EAAS,MAAS,EAAArxB,GAClB,UAAA6yB,EAAY3C,GAAY,GAAK,EAAAlwB,EAC7B,CAAA,UAAAkuB,EAAY,MAAM,EAAAluB,EAClB,CAAA,SAAA8yB,IAAa,EAAA9yB,GAGb,QAAA+yB,CAAO,EAAA/yB,GACP,QAAAgzB,CAAO,EAAAhzB,GACP,QAAAizB,CAAO,EAAAjzB,GACP,QAAAkzB,CAAO,EAAAlzB,QAQZ+hB,EAAOxoB,GAAW,MAAM,EACxBsoB,EAAKE,EAAK,8BACVD,EAAKC,EAAK,8BACV0H,EAAO1H,EAAK,+BACZvf,EAAQuf,EAAK,+BAQfhf,EAoBAgG,GAkBAoqB,EAAIC,EAAKjuB,EAAI+mB,EAeblK,EAAIC,EAAIoR,GAqBN,MAAAC,yBAAgCpF,CAAS,wEACzCqF,GAAO,yBAA4BnD,EAAY,6CAA6CA,EAAY,wCACxGoD,GAAO,iGACPhI,qCAAiDH,CAAS,MAC1DoI,mBAA+BpI,CAAS,2mBA7EvCqH,GAAY1E,EAAO,CAEjB,MAAA7W,EAAK6W,EAEP,GAAAjrB,IAAMoU,EAAE,KACLuc,GAAW,OAAO,kBAClBC,GAAW,OAAO,0BACbh+B,GAAI,EAAGA,GAAIwhB,EAAG,OAAQxhB,KAC5B+9B,GAAW,KAAK,IAAIA,GAAUvc,EAAG,EAAExhB,EAAC,CAAA,EACpCg+B,GAAW,KAAK,IAAIA,GAAUxc,EAAG,EAAExhB,EAAC,CAAA,EAEvC8K,EAAA,GAAAsC,EAAIoU,CAAE,EACN1W,EAAA,GAAAwyB,EAAUS,EAAQ,EAClBjzB,EAAA,GAAAyyB,EAAUS,EAAQ,yCAOjB1F,EAAO,CACL,MAAAzY,EAAKyY,EAEP,GAAAllB,KAAMyM,EAAE,KACLoe,GAAW,OAAO,kBAClBC,GAAW,OAAO,0BACbl+B,GAAI,EAAGA,GAAI6f,EAAG,OAAQ7f,KAC5Bi+B,GAAW,KAAK,IAAIA,GAAUpe,EAAG,EAAE7f,EAAC,CAAA,EACpCk+B,GAAW,KAAK,IAAIA,GAAUre,EAAG,EAAE7f,EAAC,CAAA,EAEvC8K,EAAA,EAAAsI,GAAIyM,CAAE,EACN/U,EAAA,GAAAsyB,EAAUa,EAAQ,EAClBnzB,EAAA,GAAAuyB,EAAUa,EAAQ,6CAMjBxK,EAAK,CACH,MAAAhmB,EAAI0e,EAAK,cAAcqI,CAAM,OACnCjlB,EAAK4c,EAAK,UAAS,CAAE,CAAG,EAAG2I,EAAI,MAAM,EAAE,CAAC,CAAA,MACxCyI,EAAKpR,EAAK,UAAS,CAAE,EAAG,EAAGyI,EAAI,OAAO,EAAE,CAAC,CAAA,OACzC4I,EAAMD,EAAK,CAAG,EACd1yB,EAAA,GAAAyrB,EAAK7oB,CAAC,OAEN5C,EAAA,GAAA0E,EAAK,CAAC,EACN1E,EAAA,EAAA0yB,EAAK,CAAC,EACN1yB,EAAA,GAAA2yB,EAAM,CAAC,EACP3yB,EAAA,GAAAyrB,EAAK,CAAC,wCAKF7C,GAAStmB,GAAKgG,KACd2pB,IAAa,KAAOA,IAAa,WAClCW,GAAKzR,GAAM7e,EAAGgG,GAAGyhB,EAAKE,EAAK3I,CAAI,CAAA,OAElCC,EAAKD,EAAK,UAAUhf,EAAGynB,EAAI,MAAM,CAAA,OACjCvI,EAAKF,EAAK,UAAUhZ,GAAG2hB,EAAI,MAAM,CAAA,IAEjCjqB,EAAA,GAAAuhB,EAAK,IAAI,EACTvhB,EAAA,GAAAwhB,EAAK,IAAI,EACTxhB,EAAA,EAAA0yB,EAAK,IAAI,EACT1yB,EAAA,GAAA4yB,GAAK,IAAI,qBAIX5yB,EAAA,GAAEqzB,EAAc1e,GAAU,MAAM,QAAQA,CAAM,EAAIA,EAAO,IAAIvT,GAAKA,EAAE,MAAM,EAAG0uB,EAAiB,CAAA,EAAK,IAAI,qCAGrG9vB,EAAA,GAAAszB,EAAKhxB,GAAKsuB,GAAUA,EAAO,SAAWtuB,EAAE,OAASsuB,EAAS,MAAMtuB,EAAE,MAAM,EAAE,KAAK8vB,CAAS,CAAA,mjBC/DlF5C,4kBAWK,UAAAE,GAAY,cACZ,+gBAKwB,0oBArBpCj7B,EAAG,CAAA,GAAIA,EAAO,EAAA,GAAIA,EAAO,CAAA,GAAAoK,GAAApK,CAAA,yEAAzBA,EAAG,CAAA,GAAIA,EAAO,EAAA,GAAIA,EAAO,CAAA,6KA/BrB,MAAAoyB,GAAS,gBACTC,GAAS,4EAhBJ,OAAAnH,CAAM,EAAApgB,GACN,IAAAgB,CAAG,EAAAhB,EAEH,CAAA,SAAAusB,EAAW,EAAI,EAAAvsB,EACf,CAAA,SAAAilB,EAAW,eAAe,EAAAjlB,EAC1B,CAAA,SAAA0nB,EAAW8I,EAAS,EAAAxwB,EACpB,CAAA,UAAA2nB,EAAY8I,EAAU,EAAAzwB,EACtB,CAAA,OAAA4nB,EAAS8I,EAAO,EAAA1wB,QAUrBg0B,EAAM,CACT,OAAU,qBACV,OAAU,oBACV,UAAa,gCACb,UAAa,gCAGZ,IAAAC,EAAU,MACVC,EAAU,MACVxB,EAAW,IACXC,EAAa,8TAGVvS,GAAUA,EAAO,UAAY6T,GAASxzB,EAAA,GAAAwzB,EAAU7T,EAAO,OAAO,oBAC9DA,GAAUA,EAAO,UAAY8T,GAASzzB,EAAA,GAAAyzB,EAAU9T,EAAO,OAAO,oBAC9DA,GAAUA,EAAO,WAAasS,GAAUjyB,EAAA,EAAAiyB,EAAWtS,EAAO,QAAQ,oBAClEA,GAAUA,EAAO,aAAeuS,GAAYlyB,EAAA,EAAAkyB,EAAavS,EAAO,UAAU,yBAE9E+T,EAAWD,EAAUD,EAAU,KAAK,qBACpCxzB,EAAA,GAAAgd,EAAQuW,EAAOG,CAAQ,CAAA,gBAIzB1zB,EAAA,GAAE2mB,EAAOpmB,EAAO,CAAA,EAAIA,EAAI,MAAQ,GAAIA,EAAI,MAAQA,EAAI,MAAQ,EAAE,EAAK,CAAA,EAAG,CAAC,CAAA,gBACrEP,EAAA,GAAAutB,EAAUhtB,EAAMiC,GAAO,IAAI,EAAGjC,EAAI,KAAK,EAAI,IAAI,qBAC/CP,EAAA,EAAAwtB,EAAUjtB,EAAMyG,GAAOzG,EAAI,KAAKmzB,CAAQ,GAAK,IAAI,kBACnD1zB,EAAA,EAAE2U,EAAS6Y,EAAU,MAAM,KAAKA,EAAQ,CAAC,EAAE,IAAIpsB,GAAKA,EAAE,QAAQA,EAAI,GAAM,EAAI,CAAC,CAAA,EAAK,IAAI,GAJpFpB,EAAA,GAAA4mB,EAAS,CAAA,KAAM,GAAG,CAAA,sPCiIZ4I,yOACO/6B,EAAM,EAAA,CAAA,oBACRA,EAAc,EAAA,CAAA,EAgD1B,IAAAuqB,EAAAvqB,OAAa,QAASmK,GAAAnK,CAAA,oHApD3BqB,EAmDMF,EAAA6I,EAAA1I,CAAA,mYACDtB,OAAa,oOAlCC,QAAAA,MAAI,EAAY,QAAAA,MAAI,YAAck/B,YAAsB,oEAAxD7+B,EAAA,CAAA,EAAA,QAAA8+B,EAAA,QAAAn/B,MAAI,GAAYK,EAAA,CAAA,EAAA,QAAA8+B,EAAA,QAAAn/B,MAAI,4IAIpB,QAAAA,KAAI,EAAY,QAAAA,KAAI,YAAck/B,YAAsB,oEAAxD7+B,EAAA,CAAA,EAAA,MAAA8+B,EAAA,QAAAn/B,KAAI,GAAYK,EAAA,CAAA,EAAA,MAAA8+B,EAAA,QAAAn/B,KAAI,gKAsBHA,EAAS,EAAA,SAAUA,EAAS,EAAA,wHAA5BA,EAAS,EAAA,yBAAUA,EAAS,EAAA,sIA3BxDA,EAAG,EAAA,GAAAk9B,GAAAl9B,CAAA,IAIHA,EAAG,CAAA,GAAAyoB,GAAAzoB,CAAA,2KAWG,OAAAA,KAAI,iBACJA,EAAS,EAAA,0BAEHA,EAAI,EAAA,IAAA,mBAAJA,EAAI,EAAA,GACJA,EAAI,EAAA,IAAA,mBAAJA,EAAI,EAAA,GACJA,EAAI,EAAA,IAAA,mBAAJA,EAAI,EAAA,GACJA,EAAI,EAAA,IAAA,mBAAJA,EAAI,EAAA,yJAKhBA,EAAO,CAAA,IAAK,UAAYA,EAAM,EAAA,GAAA2oB,GAAA3oB,CAAA,wLA1B9BA,EAAG,EAAA,kHAIHA,EAAG,CAAA,kPAWGK,EAAA,CAAA,EAAA,IAAA++B,EAAA,OAAAp/B,KAAI,kCACJA,EAAS,EAAA,kCAEHA,EAAI,EAAA,+CACJA,EAAI,EAAA,+CACJA,EAAI,EAAA,+CACJA,EAAI,EAAA,0BAKhBA,EAAO,CAAA,IAAK,UAAYA,EAAM,EAAA,k5BAU9B,OAAAA,KAAW,EAAC4oB,wTAGjBvnB,EAAmEF,EAAA6I,EAAA1I,CAAA,4JAFnED,EAA2DF,EAAA6I,EAAA1I,CAAA,yCAvDzDipB,EAAAvqB,MAAOA,EAAM,CAAA,GAAAoK,GAAApK,CAAA,uEAAbA,MAAOA,EAAM,CAAA,6KA9IT,MAAAq3B,GAAW,GACXmG,GAAW,IACX0B,GAAa,UAGbG,GAAU,aAUPC,GAAe5zB,EAAI6zB,EAAS,CAK3B,MAJQ,CACZ,EAAK,sBACL,EAAK,kBAES7zB,CAAE,EAAI,MAAQ6zB,IAAc,MAAQ,WAAa7zB,EAAK,IAAMA,EAAK,KAAOA,EAAK,IAAMA,EAAK,2CAlCjG,OAAAwf,CAAM,EAAApgB,GACN,IAAAgB,CAAG,EAAAhB,EACH,CAAA,SAAA8yB,EAAW,MAAS,EAAA9yB,EAEpB,CAAA,SAAAilB,EAAW,eAAe,EAAAjlB,EAC1B,CAAA,SAAA0nB,EAAW8I,EAAS,EAAAxwB,EACpB,CAAA,UAAA2nB,EAAY8I,EAAU,EAAAzwB,EACtB,CAAA,OAAA4nB,EAAS8I,EAAO,EAAA1wB,EAevB00B,EAAU,UACVD,EAAY,KACZ9B,EAAa,KACblB,EAAU,OACVna,EAAQ,EAWH,SAAAqd,EAAsBC,GAAMC,GAAIC,EAAIL,GAAS,OAC7CM,GAAKF,GAAKC,EAIVjrB,GAHOtB,GAAOqsB,GAAMG,EAAE,EAGZD,EACV1uB,GAAE,CAAIyuB,GAAKC,EACX9D,GAAI,CAAInnB,GAAKzD,GACbrD,GAAIE,GAAO,IAAI,EAAG+tB,GAAO,EAAGA,GAAQuD,EAAO,EAC3CxrB,GAAIhG,GAAE,MAAMlB,IAAKA,GAAIuE,GAAKyD,EAAE,SAE/B,EAAI4qB,KAAc,MAAQ1xB,GAAE,MAAMlB,IAAK,KAAK,IAAI,EAAIA,EAAC,GAAKkB,GAC1D,EAAI0xB,KAAc,MAAQ1rB,GAAE,MAAMlH,IAAK,KAAK,IAAI,EAAIA,EAAC,GAAKkH,IAIvD,SAAAisB,EAAO7rB,GAAC,CACV,GAAA2pB,IAAa,OAAS,OACpB,MAAAlyB,GAAK,SAASuI,GAAE,OAAO,SAAS,EAChC8rB,EAAe9rB,GAAE,OAAO,YAC1BvI,IAAM,GAAKq0B,IAAiB,mBAC7Bx0B,EAAA,EAAAqyB,EAAWlyB,EAAE,EAIV,SAAAs0B,EAAe/rB,GAAC,CACtB1I,EAAA,EAAAqyB,IAAa,EAYZ,IAAAqC,EAAKC,EAWLxD,EAAW5C,EAAQ6C,EAAWC,EAAWC,GAIzC/D,EAASC,EAAS+C,EAAMqE,EAAMpE,EAAMqE,kBAsGvBA,EAAI9hC,gGACJ6hC,EAAI7hC,gGACJy9B,EAAIz9B,gGACJw9B,EAAIx9B,8XA/Hd4sB,GAAUA,EAAO,UAAYsU,GAASj0B,EAAA,GAAAi0B,EAAUtU,EAAO,OAAO,2BAC9DA,GAAUA,EAAO,YAAcqU,GAAWh0B,EAAA,GAAAg0B,EAAYrU,EAAO,SAAS,qBACtEA,GAAUA,EAAO,aAAeuS,GAAYlyB,EAAA,EAAAkyB,EAAavS,EAAO,UAAU,mBAC1EA,GAAUA,EAAO,OAAK3f,EAAA,GAAE6W,EAAQ8I,EAAO,KAAK,mBAC5CA,GAAUA,EAAO,SAAO3f,EAAA,EAAEgxB,EAAUrR,EAAO,OAAO,4BAIlDpf,GAAOsW,EAAQ,EAAC,CACd,MAAAnP,GAAIusB,IAAY,UAAY,IAAM,IAClCG,GAAK7zB,EAAImH,GAAI,IAAI,EACjB2sB,EAAK9zB,EAAImH,GAAI,IAAI,EACvB1H,EAAA,GAAA00B,EAAMR,EAAsB,IAAME,GAAGvd,EAAQ,CAAC,EAAGwd,EAAGxd,EAAQ,CAAC,EAAGmd,CAAS,CAAA,MACzEW,EAAMT,EAAsB,KAAK,IAAI,IAAM,EAAE3zB,EAAI,KAAK,EAAG6zB,GAAGvd,EAAQ,CAAC,EAAGwd,EAAGxd,EAAQ,CAAC,EAAGmd,CAAS,CAAA,EAChGh0B,EAAA,GAAA40B,EAAOD,EAAI,EAAE,EAAE,CAAC,CAAA,8BAKfxD,EAAW5C,EAAQ6C,EAAWC,EAAWC,EAAY,EAAIP,GAAe,KAAMxwB,EAAKywB,EAAS,IAAI,EAAAG,GAAAnxB,EAAA,GAAAuuB,CAAA,EAAAvuB,EAAA,EAAAO,CAAA,EAAAP,EAAA,EAAAgxB,CAAA,EAAAhxB,EAAA,EAAA2f,CAAA,IAAA3f,EAAA,GAAAoxB,CAAA,EAAApxB,EAAA,EAAAO,CAAA,EAAAP,EAAA,EAAAgxB,CAAA,EAAAhxB,EAAA,EAAA2f,CAAA,IAAA3f,EAAA,GAAAqxB,CAAA,EAAArxB,EAAA,EAAAO,CAAA,EAAAP,EAAA,EAAAgxB,CAAA,EAAAhxB,EAAA,EAAA2f,CAAA,EAAA,2BAI7F,GAAApf,GAAOsW,EAAQ,EAAC,CAGd,MAAAie,GAAS9d,GAAWzW,EAAK,QAASsW,CAAK,EACvCke,GAAS/d,GAAWzW,EAAK,QAASsW,CAAK,EAEvCnP,EAAIusB,IAAY,UAAY,IAAM,IAClCe,GAAUz0B,EAAImH,EAAI,IAAI,EAAEmP,EAAQ,CAAC,EACjCoe,GAAU10B,EAAImH,EAAI,IAAI,EAAEmP,EAAQ,CAAC,EAGjC1a,GAAI24B,GAAO,OAUb,GATJ90B,EAAA,GAAAutB,EAAU/qB,GAAO,MAAMrG,EAAC,CAAA,EACxB6D,EAAA,GAAAwtB,EAAUhrB,GAAO,MAAMrG,EAAC,CAAA,OAExBy4B,EAAO,OAAO,iBAAiB,OAC/BC,EAAO,OAAO,iBAAiB,OAC/BtE,EAAO,OAAO,iBAAiB,OAC/BC,EAAO,OAAO,iBAAiB,EAG3BwD,IAAc,MACN,QAAA9+B,GAAI,EAAGA,GAAIiH,GAAGjH,KAAC,OACfwhB,GAAK,KAAK,IAAI,EAAIoe,GAAO5/B,EAAC,EAAE8/B,EAAO,EACnCjgB,GAAK,KAAK,IAAI,EAAIggB,GAAO7/B,EAAC,EAAE+/B,EAAO,EACzCj1B,EAAA,GAAAutB,EAAQ,EAAEr4B,EAAC,EAAIwhB,GAAE6W,CAAA,EACjBvtB,EAAA,GAAAwtB,EAAQ,EAAEt4B,EAAC,EAAI6f,GAAEyY,CAAA,EACjBxtB,EAAA,GAAAuwB,EAAO,KAAK,IAAIA,EAAM7Z,EAAE,CAAA,EACxB1W,EAAA,GAAA40B,EAAO,KAAK,IAAIA,EAAM7f,EAAE,CAAA,EACxB/U,EAAA,GAAAwwB,EAAO,KAAK,IAAIA,EAAM9Z,EAAE,CAAA,EACxB1W,EAAA,GAAA60B,EAAO,KAAK,IAAIA,EAAM9f,EAAE,CAAA,MAGlB,SAAA7f,GAAI,EAAGA,GAAIiH,GAAGjH,KAAC,CACf,MAAAwhB,GAAKoe,GAAO5/B,EAAC,EAAE8/B,GACfjgB,GAAKggB,GAAO7/B,EAAC,EAAE+/B,GACrBj1B,EAAA,GAAAutB,EAAQ,EAAEr4B,EAAC,EAAIwhB,GAAE6W,CAAA,EACjBvtB,EAAA,GAAAwtB,EAAQ,EAAEt4B,EAAC,EAAI6f,GAAEyY,CAAA,EACjBxtB,EAAA,GAAAuwB,EAAO,KAAK,IAAIA,EAAM7Z,EAAE,CAAA,EACxB1W,EAAA,GAAA40B,EAAO,KAAK,IAAIA,EAAM7f,EAAE,CAAA,EACxB/U,EAAA,GAAAwwB,EAAO,KAAK,IAAIA,EAAM9Z,EAAE,CAAA,EACxB1W,EAAA,GAAA60B,EAAO,KAAK,IAAIA,EAAM9f,EAAE,CAAA,QAI9B/U,EAAA,GAAAutB,EAAU,IAAI,EACdvtB,EAAA,GAAAwtB,EAAU,IAAI,EACdxtB,EAAA,GAAA40B,EAAO,CAAC,EACR50B,EAAA,GAAA60B,EAAO,CAAC,EACR70B,EAAA,GAAAuwB,EAAO,CAAC,EACRvwB,EAAA,GAAAwwB,EAAO,CAAC,iCAIRxT,EAAQ,sBAAwBnG,EAAQ,GAAG,gCAC3CgQ,EAASkN,GAAe,IAAKC,CAAS,CAAA,gCACtClN,EAASiN,GAAe,IAAKC,CAAS,CAAA,sBAGtCh0B,EAAA,GAAAk1B,EAAU5xB,IAAKitB,EAAMoE,EAAI,EAAE,EAAEb,GAAU,CAAC,CAAA,CAAA,CAAA,sBACxC9zB,EAAA,GAAAm1B,EAAU7xB,GAAK,CAAAsxB,EAAMD,EAAI,EAAE,EAAE,CAAC,CAAA,CAAA,CAAA,sCAChC30B,EAAA,GAAE2mB,EAAI,CAAA,MAAauO,EAAU1E,GAAO,KAAO0E,CAAO,CAAA,2CAChDtO,EAAI,CAAA,MAAauO,EAAUN,IAAQ,KAAO,IAAQ7D,IAAY,SAAWmE,CAAO,CAAA,8cC7C1E3F,kKANZ15B,EA8BMF,EAAA6I,EAAA1I,CAAA,obATqC,OAAAtB,KAAI,cAAgBA,EAAI,EAAA,WAAY,cAAiB2gC,oHAArDtgC,EAAA,IAAAugC,EAAA,OAAA5gC,KAAI,0BAAgBA,EAAI,EAAA,oJAG3CA,EAAI,CAAA,UAAWA,EAAI,EAAA,EAAU,OAAAA,KAAI,mBAAqB,QAAWA,EAAI,EAAA,YAAa6gC,uFAAlF7gC,EAAI,CAAA,sBAAWA,EAAI,EAAA,GAAUK,EAAA,IAAAugC,EAAA,OAAA5gC,KAAI,0BAAgCA,EAAI,EAAA,2JAdvE,OAAA,CAAAA,MAAK,CAAC,CAAA,EAAW,KAAA,CAAAA,MAAK,CAAC,CAAA,UAAa,CAAC,QAAU,CAAC,YAAco7B,+BAC9D,CAAC,QAAU,CAAC,EAAY,OAAA,CAAAp7B,MAAK,CAAC,CAAA,EAAW,KAAA,CAAAA,MAAK,CAAC,CAAA,YAAeo7B,6DAGxC0F,eAAqB,iFAGTC,+BACpC/gC,EAAI,CAAA,UAAWA,EAAI,EAAA,SAAU,cAAgB+gC,aAAmBA,cAAoB,MAEhG,IAAAvY,GAAAxoB,EAAe,CAAA,IAAA,OAASA,OAAe,SAAM4oB,GAAA5oB,CAAA,EAG7C0oB,GAAA1oB,EAAe,CAAA,IAAA,OAASA,OAAe,SAAMmK,GAAAnK,CAAA,mUAb/BK,EAAA,QAAA2gC,EAAA,OAAA,CAAAhhC,MAAK,CAAC,CAAA,GAAWK,EAAA,QAAA2gC,EAAA,KAAA,CAAAhhC,MAAK,CAAC,CAAA,wBACCK,EAAA,QAAA4gC,EAAA,OAAA,CAAAjhC,MAAK,CAAC,CAAA,GAAWK,EAAA,QAAA4gC,EAAA,KAAA,CAAAjhC,MAAK,CAAC,CAAA,oOAOjDA,EAAI,CAAA,sBAAWA,EAAI,EAAA,aAE/BA,EAAe,CAAA,IAAA,OAASA,OAAe,iHAGvCA,EAAe,CAAA,IAAA,OAASA,OAAe,kjCAxB1CuqB,EAAAvqB,EAAW,CAAA,GAAAA,EAAW,CAAA,GAAAA,MAAQA,EAAI,EAAA,GAAAoK,GAAApK,CAAA,yEAAlCA,EAAW,CAAA,GAAAA,EAAW,CAAA,GAAAA,MAAQA,EAAI,EAAA,6KAxF9B,MAAAq3B,GAAW,GACX0J,GAAS,UACTD,GAAS,UACTD,GAAa,UACbF,GAAa,mBAOVjF,GAAa7X,EAAQzB,EAAK,CACpB,MAAA,KAAAA,CAAK,MAAMyB,EAAO,KAAK,OAAOzB,EAAQ,CAAC,EAAI,KAAK,QAAQ,CAAC,CAAA,mCA5B7D,OAAA8I,CAAM,EAAApgB,GACN,IAAAgB,CAAG,EAAAhB,GACH,MAAAmB,CAAK,EAAAnB,EAGL,CAAA,SAAAilB,EAAW,aAAa,EAAAjlB,EACxB,CAAA,SAAA0nB,EAAW8I,EAAS,EAAAxwB,EACpB,CAAA,UAAA2nB,EAAY8I,EAAU,EAAAzwB,EACtB,CAAA,OAAA4nB,EAAS8I,EAAO,EAAA1wB,EAwBvBo2B,EAAI,CAAI,EAAG,CAAC,EACZ1D,EAAW,IACXC,EAAa,OACb0D,EAAY,SAYP,SAAAC,EAAUriC,EAAC,OACX0U,EAAI8O,GAAWzW,EAAK,SAAU/M,CAAC,EAAE,QACjCyL,EAAI8X,GAAarW,EAAO,WAAYlN,CAAC,EAErCsiC,EAAO5tB,EAAE,OACT6tB,EAAO92B,EAAE,WAEX+2B,EAAO,OAAO,kBACdC,GAAO,OAAO,wBAEZC,GAAI,IAAO,MAAMJ,CAAI,EAClB,QAAA5gC,GAAI,EAAGA,GAAI4gC,EAAM5gC,KACvBgT,EAAEhT,EAAC,EAAIgT,EAAEhT,EAAC,EAAI,KAAK,KAAKihC,EAAU3iC,EAAI,CAAC,GAAKsiC,EAAO,EAAC,EAChDE,EAAO9tB,EAAEhT,EAAC,IAAG8gC,EAAO9tB,EAAEhT,EAAC,GACvB+gC,GAAO/tB,EAAEhT,EAAC,IAAG+gC,GAAO/tB,EAAEhT,EAAC,GAC3BghC,GAAKhhC,EAAC,EAAIgT,EAAEhT,EAAC,EAAI,EAAI,EAAI,QAGtBkhC,GAAI,IAAO,MAAMN,CAAI,EAClB,QAAA5gC,GAAI,EAAGA,GAAI6gC,EAAM7gC,KACnB8gC,EAAO/2B,EAAE/J,EAAC,IAAG8gC,EAAO/2B,EAAE/J,EAAC,GACvB+gC,GAAOh3B,EAAE/J,EAAC,IAAG+gC,GAAOh3B,EAAE/J,EAAC,GAC3BkhC,GAAKlhC,EAAC,EAAI+J,EAAE/J,EAAC,EAAI,EAAI,EAAI,QAGtBmhC,GAAO,IAAO7zB,GAAO0F,CAAC,EACtBouB,GAAI,IAAO9zB,GAAOvD,CAAC,EACnBs3B,GAASpG,GAAa5vB,EAAK/M,CAAC,EAC5BgjC,GAAMP,GAAOD,GAAQ,GACrBS,IAAQT,EAAOQ,EAAIP,GAAOO,CAAE,SAC1BH,GAASC,GAAMG,GAAMF,GAAQL,GAAME,EAAI,MAG9CM,EAAK,GAAOnJ,EAASJ,EAAMtG,EAAQ8P,EAOnCC,EAAS,GAAGpJ,EAASH,EAAMvG,EAAQ+P,EAAOX,EAAME,EAMhDzP,EAAMC,yRAvDHjH,GAAUA,EAAO,OAASgW,GAAM31B,EAAA,GAAA21B,EAAOhW,EAAO,IAAI,sBAClDA,GAAUA,EAAO,WAAasS,GAAUjyB,EAAA,GAAAiyB,EAAWtS,EAAO,QAAQ,qBAClEA,GAAUA,EAAO,aAAeuS,GAAYlyB,EAAA,EAAAkyB,EAAavS,EAAO,UAAU,sBAC1EA,GAAUA,EAAO,YAAciW,GAAW51B,EAAA,GAAA41B,EAAYjW,EAAO,SAAS,sBAE1EwW,EAAYz1B,EAASqW,GAAarW,EAAO,WAAW,EAAI,oBACxDV,EAAA,GAAAktB,EAAS3sB,EAAMiC,GAAO,MAAMjC,EAAI,KAAK,EAAI,IAAI,gBAC7CP,EAAA,GAAAotB,EAAS7sB,EAAMiC,GAAO,MAAMjC,EAAI,KAAK,EAAI,IAAI,sBAoCzCA,GAAOo1B,GAAQe,IAAUf,EAAK,CAAC,EAAA,MACnCe,EAAQf,EAAK,CAAC,CAAA,EACV,IAAAniC,EAAGC,EACNuM,EAAA,EAAA,CAAAutB,EAASJ,EAAMwJ,EAAO9P,EAAQrzB,EAAGC,CAAC,EAAIoiC,EAAUa,CAAK,EAAAnJ,GAAAvtB,EAAA,EAAAmtB,CAAA,EAAAntB,EAAA,EAAAO,CAAA,EAAAP,EAAA,GAAA21B,CAAA,EAAA31B,EAAA,GAAA02B,CAAA,EAAA12B,EAAA,GAAA2f,CAAA,IAAA3f,EAAA,GAAA22B,CAAA,EAAA32B,EAAA,EAAAO,CAAA,EAAAP,EAAA,GAAA21B,CAAA,EAAA31B,EAAA,GAAA02B,CAAA,EAAA12B,EAAA,GAAA2f,CAAA,IAAA3f,EAAA,EAAA6mB,CAAA,EAAA7mB,EAAA,EAAAO,CAAA,EAAAP,EAAA,GAAA21B,CAAA,EAAA31B,EAAA,GAAA02B,CAAA,EAAA12B,EAAA,GAAA2f,CAAA,4BAIlDpf,GAAOo1B,GAAQiB,IAAUjB,EAAK,CAAC,SACnCiB,EAAQjB,EAAK,CAAC,CAAA,EACb31B,EAAA,EAAA,CAAAwtB,EAASH,EAAMwJ,EAAO/P,EAAQoP,EAAME,CAAI,EAAIP,EAAUe,CAAK,EAAApJ,GAAAxtB,EAAA,GAAAqtB,CAAA,EAAArtB,EAAA,EAAAO,CAAA,EAAAP,EAAA,GAAA21B,CAAA,EAAA31B,EAAA,GAAA42B,CAAA,EAAA52B,EAAA,GAAA2f,CAAA,IAAA3f,EAAA,GAAA62B,CAAA,EAAA72B,EAAA,EAAAO,CAAA,EAAAP,EAAA,GAAA21B,CAAA,EAAA31B,EAAA,GAAA42B,CAAA,EAAA52B,EAAA,GAAA2f,CAAA,IAAA3f,EAAA,GAAA8mB,CAAA,EAAA9mB,EAAA,EAAAO,CAAA,EAAAP,EAAA,GAAA21B,CAAA,EAAA31B,EAAA,GAAA42B,CAAA,EAAA52B,EAAA,GAAA2f,CAAA,IAAA3f,EAAA,GAAAk2B,CAAA,EAAAl2B,EAAA,EAAAO,CAAA,EAAAP,EAAA,GAAA21B,CAAA,EAAA31B,EAAA,GAAA42B,CAAA,EAAA52B,EAAA,GAAA2f,CAAA,IAAA3f,EAAA,GAAAo2B,CAAA,EAAAp2B,EAAA,EAAAO,CAAA,EAAAP,EAAA,GAAA21B,CAAA,EAAA31B,EAAA,GAAA42B,CAAA,EAAA52B,EAAA,GAAA2f,CAAA,EAAA,uBAI9D,GAAMiW,IAAc,QAAO,CACnB,MAAAx0B,EAAI,KAAK,IAAI,KAAK,IAAIu1B,EAAM,CAAC,CAAI,EAAA,KAAK,IAAIE,EAAM,CAAC,CAAI,EAAAF,EAAM,CAAC,EAAGE,EAAM,CAAC,GAAK,UACjFlQ,EAAI,CAAA,CAAKvlB,EAAGA,CAAC,CAAA,OACbwlB,GAAI,CAAA,CAAKxlB,EAAGA,CAAC,CAAA,OAEbpB,EAAA,GAAA2mB,EAAOgQ,CAAK,EACZ32B,EAAA,GAAA4mB,GAAOiQ,CAAK,uZCpDNrH,6kBAWK,UAAAE,GAAY,cACZ,khBAKwB,0oBArBpCj7B,EAAK,CAAA,GAAIA,EAAO,EAAA,GAAIA,EAAO,CAAA,GAAAoK,GAAApK,CAAA,yEAA3BA,EAAK,CAAA,GAAIA,EAAO,EAAA,GAAIA,EAAO,CAAA,6KAlCvB,MAAAoyB,GAAS,gBACT7J,GAAQ,uBAOL5M,GAAE1O,EAAQgnB,EAAS,IACrBA,IAAc,OAAM,OAAShnB,EAC7B,GAAAgnB,IAAc,MAAc,OAAAhnB,EAAO,MAAMN,GAAK,KAAK,IAAIA,CAAC,CAAA,EACxD,GAAAsnB,IAAc,OAAe,OAAAhnB,EAAO,MAAMN,GAAK,KAAK,KAAKA,CAAC,CAAA,yEA1BtD,OAAAue,CAAM,EAAApgB,GACN,MAAAmB,CAAK,EAAAnB,EAEL,CAAA,SAAAusB,EAAW,EAAI,EAAAvsB,EACf,CAAA,SAAAilB,EAAW,kBAAkB,EAAAjlB,EAC7B,CAAA,SAAA0nB,EAAW8I,EAAS,EAAAxwB,EACpB,CAAA,UAAA2nB,EAAY8I,EAAU,EAAAzwB,EACtB,CAAA,OAAA4nB,EAAS8I,EAAO,EAAA1wB,QAUrBu3B,EAAO,CAAI,KAAQ,IAAK,IAAQ,SAAU,KAAQ,WACpD,IAAApO,EAAY,OACZuJ,EAAW,IACXC,EAAa,kUAUVvS,GAAUA,EAAO,YAAc+I,GAAW1oB,EAAA,GAAA0oB,EAAY/I,EAAO,SAAS,oBACtEA,GAAUA,EAAO,WAAasS,GAAUjyB,EAAA,EAAAiyB,EAAWtS,EAAO,QAAQ,oBAClEA,GAAUA,EAAO,aAAeuS,GAAYlyB,EAAA,EAAAkyB,EAAavS,EAAO,UAAU,gBAIhF3f,EAAA,GAAE+2B,EAAcr2B,EAAY,IAAA8B,GAAOuU,GAAarW,EAAO,WAAW,CAAA,EAAK,IAAI,gBACzEV,EAAA,GAAAutB,EAAU7sB,EAAQ8B,GAAO,IAAI,EAAG9B,EAAM,KAAK,EAAI,IAAI,qBACrDV,EAAA,EAAEwtB,EAAUuJ,EAAc3mB,GAAE2mB,EAAarO,CAAS,EAAI,IAAI,kBAC1D1oB,EAAA,GAAE2U,EAAS6Y,EAAU,MAAM,KAAKA,EAAQ,CAAC,EAAE,IAAIpsB,GAAKA,EAAE,QAAQA,EAAI,GAAM,EAAI,CAAC,CAAA,EAAK,IAAI,gBACtFpB,EAAA,GAAE2mB,EAAOjmB,EAAS,CAAA,EAAIA,EAAM,MAAQ,GAAIA,EAAM,MAAQA,EAAM,MAAQ,EAAE,EAAK,CAAA,EAAG,CAAC,CAAA,oBAE/EV,EAAA,GAAEg3B,EAAOxJ,EAAW9E,IAAc,OAAS,EAAI8E,EAAQ,EAAE9sB,EAAM,MAAQ,CAAC,EAAK,CAAC,kBAC9EV,EAAA,GAAEi3B,EAAOzJ,EAAUA,EAAQ,EAAE,CAAC,EAAI,CAAC,0BACjClB,GAAM2K,EAAOD,GAAQ,EAAE,qBACvBh3B,EAAA,GAAA4mB,EAAO4G,EAAW,CAAAwJ,EAAO1K,EAAI2K,EAAQ3K,CAAE,EAAI,IAAI,oBAC/CtsB,EAAA,EAAA8mB,EAASgQ,EAAQpO,CAAS,CAAA,6SC5C+Cj0B,EAAe,CAAA,UAA/BA,EAAK,CAAA,IAAA,iBAALA,EAAK,CAAA,mIAAWA,EAAe,CAAA,0BAA/BA,EAAK,CAAA,qaANtD,GAAA,CAAA,MAAA1B,EAAQ,GAAG,EAAAwM,GACX,gBAAA23B,EAAe,CAAI,IAAK,IAAK,IAAK,IAAK,IAAI,CAAA,EAAA33B,gBAKMxM,EAAKokC,4UCWV,IAAAC,EAAA,CAAA,gBAAA,CAAA,IAAK,GAAG,CAAA,SAApC3iC,EAAQ,CAAA,IAAA,iBAARA,EAAQ,CAAA,sdAARA,EAAQ,CAAA,4dAFnCqB,EAAqCF,EAAAqJ,EAAAlJ,CAAA,qGAImB,OAAQ,OAAQ,KAAK,UAA1CtB,EAAS,CAAA,IAAA,iBAATA,EAAS,CAAA,0IAATA,EAAS,CAAA,gLAGc,QAAA,CAAA,OAAQ,MAAM,UAApCA,EAAU,CAAA,IAAA,iBAAVA,EAAU,CAAA,0IAAVA,EAAU,CAAA,mIAT5CA,EAAK,CAAA,GAAAoK,GAAApK,CAAA,yEAALA,EAAK,CAAA,iMAdI,OAAAkrB,CAAM,EAAApgB,GACN,MAAAmB,CAAK,EAAAnB,EAEZ0yB,EAAW,IACXC,EAAa,OACbxJ,EAAY,qBAaWuJ,EAAQl/B,uBAEA21B,EAAS31B,uBAGRm/B,EAAUn/B,2HAhB3C4sB,EAAM,CACN,SAAAsS,EACA,WAAAC,EACA,UAAAxJ,CAAS,CAAA,2OCY2C,IAAA0O,EAAA,CAAA,gBAAA,CAAA,IAAK,GAAG,CAAA,SAApC3iC,EAAQ,CAAA,IAAA,iBAARA,EAAQ,CAAA,okBAARA,EAAQ,CAAA,skBAFnCqB,EAAkCF,EAAAqJ,EAAAlJ,CAAA,0FAIkB,QAAA,CAAA,YAAa,UAAU,UAA1CtB,EAAO,CAAA,IAAA,iBAAPA,EAAO,CAAA,0IAAPA,EAAO,CAAA,6KAGY,QAAA,CAAA,aAAc,YAAY,UAA7CA,EAAO,CAAA,IAAA,iBAAPA,EAAO,CAAA,0IAAPA,EAAO,CAAA,gLAGkB,QAAA,CAAA,OAAQ,MAAM,UAApCA,EAAU,CAAA,IAAA,iBAAVA,EAAU,CAAA,2IAAVA,EAAU,CAAA,mIAZ5CA,EAAG,CAAA,GAAAoK,GAAApK,CAAA,yEAAHA,EAAG,CAAA,0KAfD,IAAA4iC,GAAO,6BAHA,OAAA1X,CAAM,EAAApgB,GACN,IAAAgB,CAAG,EAAAhB,EAGVi0B,EAAU,YACVC,EAAU,aACVxB,EAAW,IACXC,EAAa,qBAeUD,EAAQl/B,uBAEFygC,EAAOzgC,uBAGP0gC,EAAO1gC,uBAGJm/B,EAAUn/B,uHArB3C4sB,EAAM,CACN,KAAA0X,GACA,SAAApF,EACA,QAAUuB,IAAY,YAAc,MAAQ,MAC5C,QAAUC,IAAY,aAAe,MAAQ,GAC7C,WAAAvB,+gBCwBDz9B,EAAc,CAAA,GAAAmK,GAAAnK,CAAA,ijBAAdA,EAAc,CAAA,2gBAfhBqB,EAAkCF,EAAAqJ,EAAAlJ,CAAA,4FAIQ,EAAQ,IAAAtB,KAAI,WAAa,SAAW,UAAhDA,EAAK,CAAA,IAAA,iBAALA,EAAK,CAAA,mHAAeK,EAAA,IAAAwiC,EAAA,IAAA7iC,KAAI,8BAAxBA,EAAK,CAAA,yJAGqB,IAAAqqB,EAAA,CAAA,GAAA,YAAA,QAAA,CAAA,KAAM,KAAK,UAAhCrqB,EAAS,CAAA,IAAA,iBAATA,EAAS,CAAA,0IAATA,EAAS,CAAA,8KAGQ,QAAA,CAAA,UAAW,QAAQ,UAAtCA,EAAO,CAAA,IAAA,iBAAPA,EAAO,CAAA,2IAAPA,EAAO,CAAA,iLAGkB,QAAA,CAAA,OAAQ,MAAM,UAApCA,EAAU,CAAA,IAAA,iBAAVA,EAAU,CAAA,0IAAVA,EAAU,CAAA,8dAIKA,EAAc,CAAA,UAAhCA,EAAO,CAAA,IAAA,iBAAPA,EAAO,CAAA,oIAAWA,EAAc,CAAA,2BAAhCA,EAAO,CAAA,mIAnBtCA,EAAG,CAAA,GAAAoK,GAAApK,CAAA,yEAAHA,EAAG,CAAA,oMArBM,OAAAkrB,CAAM,EAAApgB,GACN,IAAAgB,CAAG,EAAAhB,EAEVsX,EAAQ,EACRqb,EAAa,OACb8B,EAAY,KACZC,EAAU,UACVjD,EAAU,qBAoBgBna,EAAK9jB,uBAGAihC,EAASjhC,uBAGXkhC,EAAOlhC,uBAGJm/B,EAAUn/B,uBAIbi+B,EAAOj+B,kHA/BrCiN,EAAA,EAAAu3B,EAAiBh3B,EAAI,YAAcA,EAAI,WAAW,OAAS,EAAK,CAAA,OAAQ,QAAQ,EAAI,IAAI,qBAGxFof,EAAM,CACN,MAAA9I,EACA,WAAAqb,EACA,UAAA8B,EACA,QAAAC,EACA,QAAAjD,u4CCCHl7B,EAA2BF,EAAAqJ,EAAAlJ,CAAA,4FAIe,EAAQ,IAAAtB,KAAI,WAAa,SAAW,WAAa,WAA7DA,EAAK,CAAA,IAAA,iBAALA,EAAK,CAAA,mHAAeK,EAAA,IAAAwiC,EAAA,IAAA7iC,KAAI,8BAAxBA,EAAK,CAAA,+KAGO,EAAQ,IAAAA,KAAI,WAAa,SAAW,WAAa,WAA7DA,EAAK,CAAA,IAAA,iBAALA,EAAK,CAAA,mHAAeK,EAAA,IAAAwiC,EAAA,IAAA7iC,KAAI,8BAAxBA,EAAK,CAAA,gLAGuB,QAAA,CAAA,OAAQ,MAAO,MAAO,MAAM,UAAlDA,EAAU,CAAA,IAAA,iBAAVA,EAAU,CAAA,0IAAVA,EAAU,CAAA,+KAGU,QAAA,CAAA,SAAU,OAAO,UAAtCA,EAAS,CAAA,IAAA,iBAATA,EAAS,CAAA,2IAATA,EAAS,CAAA,mIAf1CA,EAAG,CAAA,GAAAoK,GAAApK,CAAA,yEAAHA,EAAG,CAAA,iMAhBM,OAAAkrB,CAAM,EAAApgB,GACN,IAAAgB,CAAG,EAAAhB,EAEVi4B,EAAQ,EACRC,EAAQl3B,GAAOA,EAAI,MAAQ,EAAI,EAAI,EACnC2xB,EAAa,OACb0D,EAAY,uBAgBc6B,EAAK1kC,uBAGLykC,EAAKzkC,uBAGCm/B,EAAUn/B,uBAGX6iC,EAAS7iC,uHAtBzC4sB,EAAM,CACN,KAAI,CAAG6X,EAAOC,CAAK,EACnB,WAAAvF,EACA,UAAA0D,mKCmCUnhC,EAAQ,CAAA,UAAWA,EAAQ,CAAA,mHAA3BA,EAAQ,CAAA,mBAAWA,EAAQ,CAAA,mKA5C7B,OAAA6jB,CAAM,EAAA/Y,GACN,KAAAo2B,CAAI,EAAAp2B,GACJ,QAAA+yB,CAAO,EAAA/yB,GACP,QAAAgzB,CAAO,EAAAhzB,GACP,QAAAizB,CAAO,EAAAjzB,GACP,QAAAkzB,CAAO,EAAAlzB,EACP,CAAA,UAAAmrB,EAAY,SAAS,EAAAnrB,EACrB,CAAA,SAAAorB,EAAW,CAAC,EAAAprB,EACZ,CAAA,MAAA6O,EAAQ,GAAI,EAAA7O,EAMjB,MAAAm4B,EAASl1B,GAAO,IAAI,EAAG,EAAI,KAAK,GAAI,GAAI,EAErC,SAAAm1B,EAAep3B,EAAKo1B,EAAM/hB,EAAK8jB,EAAM,CACrC,MAAA5pB,EAASvN,EAAI,UAAUo1B,EAAO,CAAC,EAC/Bz7B,EAAI4N,GAAO,EAAIsG,EAAO,CAAC,EACvB5a,EAAI,KAAK,KAAK0G,EAAI4T,CAAM,EACxBxL,EAAIE,GAAO,MAAMk1B,EAAO,MAAM,UAC3BxiC,EAAI,EAAGA,EAAIwiC,EAAO,OAAQxiC,IAChCoN,EAAE,EAAEpN,CAAC,EAAI1B,EAAIogB,EAAI8jB,EAAO,EAAExiC,CAAC,CAAA,SAEtBoN,EAAC,CAAG9O,EAAGA,CAAC,EAKf,IAAAkjC,EAAQ,EAAGkB,EAAW,KAOtBhB,EAAQ,EAAGiB,EAAW,sVANnBvf,GAAUqd,GAAQA,EAAK,CAAC,IAAMe,SAClCA,EAAQf,EAAK,CAAC,CAAA,EACb31B,EAAA,EAAA,CAAA43B,EAAUpF,EAASC,CAAO,EAAIkF,EAAerf,EAAQoe,EAAO,KAAK,IAAKgB,CAAM,EAAAE,GAAA53B,EAAA,EAAAwyB,CAAA,EAAAxyB,EAAA,EAAAsY,CAAA,EAAAtY,EAAA,EAAA21B,CAAA,EAAA31B,EAAA,GAAA02B,CAAA,IAAA12B,EAAA,EAAAyyB,CAAA,EAAAzyB,EAAA,EAAAsY,CAAA,EAAAtY,EAAA,EAAA21B,CAAA,EAAA31B,EAAA,GAAA02B,CAAA,sBAKzEpe,GAAUqd,GAAQA,EAAK,CAAC,IAAMiB,SAClCA,EAAQjB,EAAK,CAAC,CAAA,EACb31B,EAAA,EAAA,CAAA63B,EAAUvF,EAASC,CAAO,EAAIoF,EAAerf,EAAQse,EAAO,KAAK,IAAKc,CAAM,EAAAG,GAAA73B,EAAA,EAAAsyB,CAAA,EAAAtyB,EAAA,EAAAsY,CAAA,EAAAtY,EAAA,EAAA21B,CAAA,EAAA31B,EAAA,GAAA42B,CAAA,IAAA52B,EAAA,EAAAuyB,CAAA,EAAAvyB,EAAA,EAAAsY,CAAA,EAAAtY,EAAA,EAAA21B,CAAA,EAAA31B,EAAA,GAAA42B,CAAA,sRCqJ3EniC,EAAQ,CAAA,GAAAmK,GAAAnK,CAAA,uEAARA,EAAQ,CAAA,sMACNA,EAAQ,CAAA,CAAA,uBAAb,OAAIS,GAAA,4MAACT,EAAQ,CAAA,CAAA,oBAAb,OAAIS,GAAA,EAAA,oHAAJ,OAAIA,EAAAmK,EAAA,OAAAnK,GAAA,0CAAJ,OAAIA,GAAA,0JACU,QAAAT,MAAE,EAAY,QAAAA,MAAE,EAAc,UAAAA,KAAYA,EAAC,EAAA,CAAA,oEAA3CK,EAAA,IAAA8+B,EAAA,QAAAn/B,MAAE,GAAYK,EAAA,IAAA8+B,EAAA,QAAAn/B,MAAE,GAAcK,EAAA,IAAA8+B,EAAA,UAAAn/B,KAAYA,EAAC,EAAA,CAAA,sHAJzDA,EAAQ,CAAA,GAAAoK,GAAApK,CAAA,yEAARA,EAAQ,CAAA,oMApLC,QAAA84B,CAAO,EAAAhuB,GACP,QAAAiuB,CAAO,EAAAjuB,GACP,OAAAu4B,CAAM,EAAAv4B,GACN,WAAAw4B,CAAU,EAAAx4B,GACV,YAAAy4B,CAAW,EAAAz4B,EACX,CAAA,UAAA04B,EAAY,GAAI,EAAA14B,GAGhB,QAAA+yB,CAAO,EAAA/yB,GACP,QAAAgzB,CAAO,EAAAhzB,GACP,QAAAizB,CAAO,EAAAjzB,GACP,QAAAkzB,CAAO,EAAAlzB,EAiBT,SAAA24B,EAAWC,EAAQr2B,EAAQm2B,EAAY,IAAI,CAG1C,KAAA,CAAAzkC,EAAGC,EAAGsP,CAAC,EAAIo1B,EACZC,EAAI,KAAK,MAAM5kC,EAAIuP,IAAI,EAAI,GAAKvP,EAAIuP,EAAItP,EAAIA,EAAC,EAC/C,IAAA4kC,EAAK,IAAO7kC,EAAIuP,EAAIq1B,GACpBE,EAAK,IAAO9kC,EAAIuP,EAAIq1B,GAEpB,GAAAC,EAAKC,EAAE,CACJ,IAAA5wB,GAAI2wB,EACRA,EAAKC,EACLA,EAAK5wB,GAIF,MAAA6wB,EAAQzwB,GAAOmwB,EAAW,CAAC,EAC3B1uB,EAAK,KAAK,KAAKgvB,EAAQF,CAAE,EACzBltB,EAAK,KAAK,KAAKotB,EAAQD,CAAE,MAEjBE,EACV,GAAA,KAAK,IAAI/kC,CAAC,EAAI,KAGf+kC,EAAM,OAGF,IAAAC,GAAO,CAAAhlC,GAAKD,EAAI6kC,GAChBK,GAAM,QACJC,GAAK,KAAK,KAAKF,GAAMA,GAAMC,GAAMA,EAAG,EAC1CD,GAAMA,GAAME,GACZD,GAAMA,GAAMC,GACZH,EAAM,KAAK,MAAME,GAAKD,EAAG,EACrBD,EAAM,IAAGA,EAAMA,EAAM,EAAI,KAAK,IAM/B,MAAAI,EAAS,KAAK,IAAIJ,CAAG,EACrBK,EAAS,KAAK,IAAIL,CAAG,EAGrBM,GAAS,IACTC,EAAS,EAAI,KAAK,IAAMD,GAAS,GAGjCE,EAAOx2B,GAAO,MAAMs2B,EAAM,EAC1BG,EAAOz2B,GAAO,MAAMs2B,EAAM,MAG5BtI,EAAO,OAAO,kBACdD,EAAO,OAAO,kBACdsE,EAAO,OAAO,kBACdD,GAAO,OAAO,kBAGT,QAAA1/B,GAAI,EAAGA,GAAI4jC,GAAQ5jC,KAAC,OACpBgkC,GAAQhkC,GAAI6jC,EACZz2B,GAAIiH,EAAK,KAAK,IAAI2vB,EAAK,EACvB5wB,GAAI6C,EAAK,KAAK,IAAI+tB,EAAK,EACvBxiB,GAAKpU,GAAIs2B,EAAStwB,GAAIuwB,EAAS/2B,EAAO,CAAC,EACvCiT,EAAKzS,GAAIu2B,EAASvwB,GAAIswB,EAAS92B,EAAO,CAAC,EAC7Ck3B,EAAK,EAAE9jC,EAAC,EAAIwhB,GACZuiB,EAAK,EAAE/jC,EAAC,EAAI6f,EACZyb,EAAO,KAAK,IAAIA,EAAM9Z,EAAE,EACxB6Z,EAAO,KAAK,IAAIA,EAAM7Z,EAAE,EACxBme,EAAO,KAAK,IAAIA,EAAM9f,CAAE,EACxB6f,GAAO,KAAK,IAAIA,GAAM7f,CAAE,SAGnBikB,EAAMC,EAAMzI,EAAMD,EAAMsE,EAAMD,EAAI,WAcpCuE,EAAY5L,EAASC,EAASsK,EAAQC,EAAYE,EAAS,CAE5D,GAAA,CAAA1K,IAAYC,GAAO,CAAKsK,GAAW,CAAAC,SAAmB,WACrD57B,EAAIoxB,EAAQ,OACZ6L,EAAUrB,EAAW,OAGrBsB,MAAgB,MAAMD,CAAO,EAAE,KAAK,CAAC,EACrCE,EAAO,IAAO,MAAMF,EAAU,CAAC,EAAE,KAAK,CAAC,EACpC,QAAAlkC,EAAI,EAAGA,EAAIiH,EAAGjH,IAAC,CAGf,MAAAsT,GAAMuvB,EAAW,QAAQD,EAAO5iC,CAAC,CAAA,EAGvCmkC,EAAU7wB,EAAG,GAAK,EAClB8wB,EAAQ9wB,GAAM,CAAC,GAAK+kB,EAAQ,EAAEr4B,CAAC,EAC/BokC,EAAQ9wB,GAAM,EAAI,CAAC,GAAKglB,EAAQ,EAAEt4B,CAAC,EAI7B,QAAAA,EAAI,EAAGA,EAAIkkC,EAASlkC,IAC1BokC,EAAQpkC,EAAI,CAAC,EAAIokC,EAAQpkC,EAAI,CAAC,EAAImkC,EAAUnkC,CAAC,EAC7CokC,EAAQpkC,EAAI,EAAI,CAAC,EAAIokC,EAAQpkC,EAAI,EAAI,CAAC,EAAImkC,EAAUnkC,CAAC,QAGlDijC,EAAM,IAAO,MAAMiB,EAAU,CAAC,EAAE,KAAK,CAAC,EACnC,QAAAlkC,EAAI,EAAGA,EAAIiH,EAAGjH,IAAC,CAGf,MAAAsT,GAAMuvB,EAAW,QAAQD,EAAO5iC,CAAC,CAAA,EAIjCoN,EAAKirB,EAAQ,EAAEr4B,CAAC,EAAIokC,EAAQ9wB,GAAM,CAAC,EACnCF,EAAKklB,EAAQ,EAAEt4B,CAAC,EAAIokC,EAAQ9wB,GAAM,EAAI,CAAC,EAC7C2vB,EAAO3vB,GAAM,CAAC,GAASlG,EAAIA,EAC3B61B,EAAO3vB,GAAM,EAAI,CAAC,GAAKlG,EAAIgG,EAC3B6vB,EAAO3vB,GAAM,EAAI,CAAC,GAAKF,EAAIA,MAI1BkqB,EAAU,OAAO,kBACjBC,EAAU,OAAO,kBACjBH,EAAU,OAAO,kBACjBC,EAAU,OAAO,sBAGrBgH,EAAW,MAAMH,CAAO,CAAA,EACf,QAAAlkC,EAAI,EAAGA,EAAIkkC,EAASlkC,IAAC,OACpBskC,GAAIC,EAAIjJ,EAAMD,EAAMsE,EAAMD,CAAI,EAAIsD,GACrCC,EAAOjjC,EAAI,CAAC,GAAKmkC,EAAUnkC,CAAC,EAAI,GAAIijC,EAAOjjC,EAAI,EAAI,CAAC,GAAKmkC,EAAUnkC,CAAC,EAAI,GAAIijC,EAAOjjC,EAAI,EAAI,CAAC,GAAKmkC,EAAUnkC,CAAC,EAAI,KAChHokC,EAAQpkC,EAAI,CAAC,EAAGokC,EAAQpkC,EAAI,EAAI,CAAC,CAAA,EAClC+iC,GAEHj4B,EAAA,EAAAu5B,EAASrkC,CAAC,EAAK,CAAA,EAAGskC,GAAI,EAAGC,EAAI,EAAGzB,EAAY9iC,CAAC,CAAA,EAAAqkC,CAAA,EAC7C/G,EAAU,KAAK,IAAIA,EAAShC,CAAI,EAChCiC,EAAU,KAAK,IAAIA,EAASlC,CAAI,EAChC+B,EAAU,KAAK,IAAIA,EAASuC,CAAI,EAChCtC,EAAU,KAAK,IAAIA,EAASqC,CAAI,EAG3B,MAAA,CAAA2E,EAAU/G,EAASC,EAASH,EAASC,CAAO,yYAGtDvyB,EAAA,EAAA,CAAGu5B,EAAU/G,EAASC,EAASH,EAASC,CAAO,EAAI4G,EAAY5L,EAASC,EAASsK,EAAQC,EAAYE,CAAS,EAAAsB,GAAAv5B,EAAA,EAAAwyB,CAAA,EAAAxyB,EAAA,EAAAutB,CAAA,EAAAvtB,EAAA,EAAAwtB,CAAA,EAAAxtB,EAAA,EAAA83B,CAAA,EAAA93B,EAAA,EAAA+3B,CAAA,EAAA/3B,EAAA,GAAAi4B,CAAA,IAAAj4B,EAAA,EAAAyyB,CAAA,EAAAzyB,EAAA,EAAAutB,CAAA,EAAAvtB,EAAA,EAAAwtB,CAAA,EAAAxtB,EAAA,EAAA83B,CAAA,EAAA93B,EAAA,EAAA+3B,CAAA,EAAA/3B,EAAA,GAAAi4B,CAAA,IAAAj4B,EAAA,EAAAsyB,CAAA,EAAAtyB,EAAA,EAAAutB,CAAA,EAAAvtB,EAAA,EAAAwtB,CAAA,EAAAxtB,EAAA,EAAA83B,CAAA,EAAA93B,EAAA,EAAA+3B,CAAA,EAAA/3B,EAAA,GAAAi4B,CAAA,IAAAj4B,EAAA,EAAAuyB,CAAA,EAAAvyB,EAAA,EAAAutB,CAAA,EAAAvtB,EAAA,EAAAwtB,CAAA,EAAAxtB,EAAA,EAAA83B,CAAA,EAAA93B,EAAA,EAAA+3B,CAAA,EAAA/3B,EAAA,GAAAi4B,CAAA,EAAA,qZCNtGzI,gGAJO/6B,EAAM,EAAA,CAAA,mBACTA,EAAM,EAAA,CAAA,oBACLA,EAAc,EAAA,CAAA,EAkE1B,IAAAuqB,EAAAvqB,EAAa,CAAA,IAAA,QAAaA,QAAa,KAAGmK,GAAAnK,CAAA,oHAxE/CqB,EAuEMF,EAAA6I,EAAA1I,CAAA,8WACDtB,EAAa,CAAA,IAAA,QAAaA,QAAa,yOA1DtB,CAAC,QAAU,CAAC,EAAY,OAAA,CAAAA,MAAK,CAAC,CAAA,EAAW,KAAA,CAAAA,MAAK,CAAC,CAAA,YAAeo7B,qEAAtC/6B,EAAA,CAAA,EAAA,IAAA4kC,EAAA,OAAA,CAAAjlC,MAAK,CAAC,CAAA,GAAWK,EAAA,CAAA,EAAA,IAAA4kC,EAAA,KAAA,CAAAjlC,MAAK,CAAC,CAAA,4PAQvDA,EAAG,CAAA,UACGA,EAAK,EAAA,IAAA,mBAALA,EAAK,EAAA,GACLA,EAAK,EAAA,IAAA,mBAALA,EAAK,EAAA,GACLA,EAAK,EAAA,IAAA,mBAALA,EAAK,EAAA,GACLA,EAAK,EAAA,IAAA,mBAALA,EAAK,EAAA,uRAJXA,EAAG,CAAA,kCACGA,EAAK,EAAA,gDACLA,EAAK,EAAA,+CACLA,EAAK,EAAA,+CACLA,EAAK,EAAA,wQAyBR,UAAA,OAAO,SAASA,OAAa,IAChC,OAAAA,KAAI,QACA,WAAAA,KAAI,uBACHA,EAAM,EAAA,UACLA,EAAM,EAAA,IAAA,mBAANA,EAAM,EAAA,GACNA,EAAM,EAAA,IAAA,mBAANA,EAAM,EAAA,GACNA,EAAM,EAAA,IAAA,mBAANA,EAAM,EAAA,GACNA,EAAM,EAAA,IAAA,mBAANA,EAAM,EAAA,8QAPTK,EAAA,CAAA,EAAA,WAAA6kC,EAAA,UAAA,OAAO,SAASllC,OAAa,KAChCK,EAAA,CAAA,EAAA,IAAA6kC,EAAA,OAAAllC,KAAI,SACAK,EAAA,CAAA,EAAA,IAAA6kC,EAAA,WAAAllC,KAAI,2CACHA,EAAM,EAAA,mCACLA,EAAM,EAAA,iDACNA,EAAM,EAAA,gDACNA,EAAM,EAAA,iDACNA,EAAM,EAAA,6KAMUA,EAAS,EAAA,SAAUA,EAAS,EAAA,+HAA5BA,EAAS,EAAA,6BAAUA,EAAS,EAAA,2JApD1C,OAAA,CAAAA,MAAK,CAAC,CAAA,EAAW,KAAA,CAAAA,MAAK,CAAC,CAAA,UAAa,CAAC,QAAU,CAAC,YAAco7B,MAC5E,IAAA5S,EAAAxoB,QAAa,KAAGi9B,GAAAj9B,CAAA,EAKhB0oB,EAAA1oB,EAAgB,EAAA,IAAA,QAAUA,QAAa,KAAGk9B,GAAAl9B,CAAA,wNAqBpCA,EAAS,EAAA,GACHA,EAAK,CAAA,IAAA,mBAALA,EAAK,CAAA,GACLA,EAAK,EAAA,IAAA,mBAALA,EAAK,EAAA,GACLA,EAAK,CAAA,IAAA,mBAALA,EAAK,CAAA,GACLA,EAAK,CAAA,IAAA,mBAALA,EAAK,CAAA,mJAIjB,IAAAo3B,EAAAp3B,QAAY,UAAYA,EAAgB,EAAA,IAAA,QAAUA,EAAM,EAAA,GAAAyoB,GAAAzoB,CAAA,EAgBxDmlC,EAAAnlC,QAAY,QAAUA,EAAa,EAAA,IAAA,KAAOA,EAAS,EAAA,GAAA2oB,GAAA3oB,CAAA,gRAnDrCK,EAAA,CAAA,EAAA,IAAA4kC,EAAA,OAAA,CAAAjlC,MAAK,CAAC,CAAA,GAAWK,EAAA,CAAA,EAAA,IAAA4kC,EAAA,KAAA,CAAAjlC,MAAK,CAAC,CAAA,aACrCA,QAAa,sHAKbA,EAAgB,EAAA,IAAA,QAAUA,QAAa,sVAqBjCA,EAAS,EAAA,iCACHA,EAAK,CAAA,+CACLA,EAAK,EAAA,8CACLA,EAAK,CAAA,8CACLA,EAAK,CAAA,0BAIjBA,QAAY,UAAYA,EAAgB,EAAA,IAAA,QAAUA,EAAM,EAAA,sHAgBxDA,QAAY,QAAUA,EAAa,EAAA,IAAA,KAAOA,EAAS,EAAA,i+BAUnD,OAAAA,KAAW,EAAC4oB,wTAGjBvnB,EAAmEF,EAAA6I,EAAA1I,CAAA,4JAFnED,EAA2DF,EAAA6I,EAAA1I,CAAA,2CA3EzDtB,EAAG,CAAA,GAAAoK,GAAApK,CAAA,uEAAHA,EAAG,CAAA,6KAvIC,MAAAq3B,GAAW,6BArBN,OAAAnM,CAAM,EAAApgB,GACN,IAAAgB,CAAG,EAAAhB,GACH,QAAAiB,CAAO,EAAAjB,EACP,CAAA,MAAA2xB,EAAQ,KAAK,EAAA3xB,EACb,CAAA,MAAA6O,EAAQ,GAAI,EAAA7O,EAGZ,CAAA,SAAAilB,EAAW,aAAa,EAAAjlB,EACxB,CAAA,SAAA0nB,EAAW8I,EAAS,EAAAxwB,EACpB,CAAA,UAAA2nB,EAAY8I,EAAU,EAAAzwB,EACtB,CAAA,OAAA4nB,EAAS8I,EAAO,EAAA1wB,EAGhB,CAAA,SAAA8yB,EAAW,MAAS,EAAA9yB,EAetB,SAAAg1B,EAAO7rB,GAAC,CACV,GAAA2pB,IAAa,OAAS,OACpB,MAAAlyB,GAAK,SAASuI,GAAE,OAAO,SAAS,EAChC8rB,GAAe9rB,GAAE,OAAO,YAC1BvI,IAAM,IAAMq0B,KAAiB,iBAAmBA,KAAiB,gBAClEx0B,EAAA,EAAAqyB,EAAWlyB,EAAE,EAQV,SAAAs0B,EAAe/rB,GAAC,CACtB1I,EAAA,EAAAqyB,IAAa,EAIZ,IAAAwH,EAAOC,EAAOC,EAAOC,EACrBC,EAAOC,EAAOC,EAAOC,EACrBC,EAAQC,EAAQC,EAAQC,EAGxB7E,EAAI,CAAI,EAAG,CAAC,EACZ1D,EAAW,IACXC,EAAa,OACbuI,GAAc,OACdzJ,EAAU,OACVC,EAAa,EACbyJ,EAAc,gBAiBT7E,EAAUlvB,GAAGnT,GAAC,CACT,OAAA,IAAAgP,GAAOwU,GAAWrQ,GAAG,SAAUnT,EAAC,CAAA,EAI1C,IAAAmnC,EAAYhmB,EAOZ+hB,GAAQ,EAAGkE,GAAc,KAKzBhE,GAAQ,EAAGpJ,GAAU,KAQrB2D,GAAW5C,GAAQ6C,EAAWC,GAAWC,GAIzCzK,GAAQC,GASRF,GAAMD,GAmCN3J,GAAQ,yBAiCKkd,EAAKnnC,2BACLqnC,EAAKrnC,2BACLknC,EAAKlnC,2BACLonC,EAAKpnC,2BAcL+mC,EAAK/mC,0BACLinC,EAAKjnC,2BACL8mC,EAAK9mC,0BACLgnC,EAAKhnC,0BAYLunC,EAAMvnC,2BACNynC,EAAMznC,2BACNsnC,EAAMtnC,0BACNwnC,EAAMxnC,yaA3JhB4sB,GAAUA,EAAO,OAASgW,GAAM31B,EAAA,GAAA21B,EAAOhW,EAAO,IAAI,2CAClDA,GAAUA,EAAO,WAAasS,GAAUjyB,EAAA,GAAAiyB,EAAWtS,EAAO,QAAQ,2CAClEA,GAAUA,EAAO,aAAeuS,GAAYlyB,EAAA,GAAAkyB,EAAavS,EAAO,UAAU,2CAC1EA,GAAUA,EAAO,cAAgB8a,IAAaz6B,EAAA,GAAAy6B,GAAc9a,EAAO,WAAW,2CAC9EA,GAAUA,EAAO,UAAYqR,GAAShxB,EAAA,GAAAgxB,EAAUrR,EAAO,OAAO,sBAC9DA,GAAUA,EAAO,aAAesR,GAAYjxB,EAAA,GAAAixB,EAAatR,EAAO,UAAU,4CAC1EA,GAAUA,EAAO,cAAgB+a,GAAa16B,EAAA,GAAA06B,EAAc/a,EAAO,WAAW,mBAc9Epf,GAAOA,EAAI,MAAQ,IACvBP,EAAA,GAAA26B,EAAa3zB,GAAOzG,EAAI,UAAU,CAAA,EAClCP,EAAA,GAAA2U,EAASpU,EAAI,UAAU,IAAIa,IAAKA,GAAE,MAAM,EAAG0uB,EAAiB,CAAA,CAAA,4CAKxD6F,EAAK,CAAC,IAAMe,IAAK12B,EAAA,GAAE02B,GAAQf,EAAK,CAAC,CAAA,sCACvC31B,EAAA,GAAE46B,GAAcr6B,EAAMs1B,EAAUt1B,EAAKm2B,EAAK,EAAI,IAAI,4CAI5Cf,EAAK,CAAC,IAAMiB,IAAK52B,EAAA,GAAE42B,GAAQjB,EAAK,CAAC,CAAA,uCACvC31B,EAAA,GAAEwtB,GAAUjtB,EAAMs1B,EAAUt1B,EAAKq2B,EAAK,EAAI,IAAI,6CAG9C52B,EAAA,GAAEutB,EAAU0E,IAAa,IAAM2I,GAAcD,CAAU,4CAIvD36B,EAAA,GAAA,CAAGmxB,GAAW5C,GAAQ6C,EAAWC,GAAWC,EAAY,EAAIP,GAAevwB,EAASD,EAAKywB,EAASC,EAAYC,CAAK,EAAAC,IAAAnxB,EAAA,GAAAuuB,EAAA,EAAAvuB,EAAA,GAAAQ,CAAA,EAAAR,EAAA,EAAAO,CAAA,EAAAP,EAAA,GAAAgxB,CAAA,EAAAhxB,EAAA,GAAAixB,CAAA,EAAAjxB,EAAA,GAAAkxB,CAAA,EAAAlxB,EAAA,GAAA2f,CAAA,IAAA3f,EAAA,GAAAoxB,CAAA,EAAApxB,EAAA,GAAAQ,CAAA,EAAAR,EAAA,EAAAO,CAAA,EAAAP,EAAA,GAAAgxB,CAAA,EAAAhxB,EAAA,GAAAixB,CAAA,EAAAjxB,EAAA,GAAAkxB,CAAA,EAAAlxB,EAAA,GAAA2f,CAAA,IAAA3f,EAAA,GAAAqxB,EAAA,EAAArxB,EAAA,GAAAQ,CAAA,EAAAR,EAAA,EAAAO,CAAA,EAAAP,EAAA,GAAAgxB,CAAA,EAAAhxB,EAAA,GAAAixB,CAAA,EAAAjxB,EAAA,GAAAkxB,CAAA,EAAAlxB,EAAA,GAAA2f,CAAA,IAAA3f,EAAA,GAAAsxB,EAAA,EAAAtxB,EAAA,GAAAQ,CAAA,EAAAR,EAAA,EAAAO,CAAA,EAAAP,EAAA,GAAAgxB,CAAA,EAAAhxB,EAAA,GAAAixB,CAAA,EAAAjxB,EAAA,GAAAkxB,CAAA,EAAAlxB,EAAA,GAAA2f,CAAA,EAAA,0BAI7Gpf,GAAOo1B,QACX9O,GAASoL,IAAa,IAAM9B,GAAa5vB,EAAKo1B,EAAK,CAAC,CAAA,EAAK,SAAS,EAClE31B,EAAA,GAAA8mB,GAASqJ,GAAa5vB,EAAKo1B,EAAK,CAAC,CAAA,CAAA,IAEjC31B,EAAA,GAAA6mB,GAAS,EAAE,EACX7mB,EAAA,GAAA8mB,GAAS,EAAE,2BAIP,GAAA+S,IAAU,eAAoBE,IAAU,QAAS,OAAWD,IAAU,QAAoB,OAAAE,IAAU,OAAS,CAG7G,IAAAnF,GAAOiF,EACPlF,GAAOoF,EACPxJ,GAAOqJ,EACPtJ,GAAOwJ,EAGPU,KAAgB,QAAUR,GAASE,GAASD,GAASE,IACtDvF,GAAO,KAAK,IAAIA,GAAMqF,CAAK,EAC3BtF,GAAO,KAAK,IAAIA,GAAMwF,CAAK,EAC3B5J,GAAO,KAAK,IAAIA,GAAMyJ,CAAK,EAC3B1J,GAAO,KAAK,IAAIA,GAAM4J,CAAK,GAI1BO,IAAgB,QAAUL,GAAUE,GAAUD,GAAUE,IACzD3F,GAAO,KAAK,IAAIA,GAAMyF,CAAM,EAC5B1F,GAAO,KAAK,IAAIA,GAAM4F,CAAM,EAC5BhK,GAAO,KAAK,IAAIA,GAAM6J,CAAM,EAC5B9J,GAAO,KAAK,IAAIA,GAAMgK,CAAM,GAGzB,MAAA3N,IAAM2D,GAAOC,IAAQ,GACrBlE,IAAMsI,GAAOC,IAAQ,GAC3B70B,EAAA,GAAA2mB,IAAQ6J,GAAO5D,GAAI2D,GAAO3D,EAAE,CAAA,EAC5B5sB,EAAA,GAAA4mB,GAAQ,CAAAiO,GAAOvI,GAAIsI,GAAOtI,IAAM,GAAK0E,IAAY,QAAM,CAAA,YAEvDrK,GAAI,CAAI,EAAG,CAAC,CAAA,OACZC,GAAI,CAAI,EAAG,CAAC,CAAA,kDAKRqL,IAAa,KAAOjB,IAAY,OAAM,CACpC,MAAA6J,GAAgBvJ,IAAgB9wB,EAAQ,eAAiB,IAAMA,EAAQ,eAAiB,SAC9Fwc,GAAQgU,IAAW,SAAW,6BAA+B,sBAAwB6J,GAAgB,GAAG,OAExG76B,EAAA,GAAAgd,GAAQ,QAAQ,4gBCAVwS,gGALO/6B,EAAM,EAAA,CAAA,mBACTA,EAAM,EAAA,CAAA,oBACLA,EAAc,EAAA,CAAA,+dAST,CAAC,QAAU,CAAC,EAAY,OAAA,CAAAA,MAAK,CAAC,CAAA,EAAW,KAAA,CAAAA,MAAK,CAAC,CAAA,YAAeo7B,qEAAtC/6B,EAAA,CAAA,EAAA,SAAA4kC,EAAA,OAAA,CAAAjlC,MAAK,CAAC,CAAA,GAAWK,EAAA,CAAA,EAAA,SAAA4kC,EAAA,KAAA,CAAAjlC,MAAK,CAAC,CAAA,mJAF/C,OAAA,CAAAA,MAAK,CAAC,CAAA,EAAW,KAAA,CAAAA,MAAK,CAAC,CAAA,UAAa,CAAC,QAAU,CAAC,YAAco7B,MAC5E,IAAA7Q,EAAAvqB,QAAa,KAAGmK,GAAAnK,CAAA,6MAYVA,EAAS,EAAA,UACHA,EAAI,CAAA,IAAA,mBAAJA,EAAI,CAAA,GACJA,EAAI,CAAA,IAAA,mBAAJA,EAAI,CAAA,GACJA,EAAI,CAAA,IAAA,mBAAJA,EAAI,CAAA,GACJA,EAAI,CAAA,IAAA,mBAAJA,EAAI,CAAA,+RAjBFK,EAAA,CAAA,EAAA,SAAA4kC,EAAA,OAAA,CAAAjlC,MAAK,CAAC,CAAA,GAAWK,EAAA,CAAA,EAAA,SAAA4kC,EAAA,KAAA,CAAAjlC,MAAK,CAAC,CAAA,aACrCA,QAAa,sSAYPA,EAAS,EAAA,iCACHA,EAAI,CAAA,6CACJA,EAAI,CAAA,8CACJA,EAAI,CAAA,8CACJA,EAAI,CAAA,yyBA9BnBA,EAAK,CAAA,GAAAoK,GAAApK,CAAA,uEAALA,EAAK,CAAA,6KAjID,MAAAq3B,GAAW,0BAlBN,OAAAnM,CAAM,EAAApgB,GACN,MAAAmB,CAAK,EAAAnB,EAGL,CAAA,SAAAilB,EAAW,eAAe,EAAAjlB,EAC1B,CAAA,SAAA0nB,EAAW8I,EAAS,EAAAxwB,EACpB,CAAA,UAAA2nB,EAAY8I,EAAU,EAAAzwB,EACtB,CAAA,OAAA4nB,EAAS8I,EAAO,EAAA1wB,EAGhB,CAAA,SAAA8yB,EAAW,MAAS,EAAA9yB,WAetBs2B,EAAUjzB,GAAGpP,GAAC,CACT,OAAA,IAAAgP,GAAOuU,GAAanU,GAAG,WAAYpP,EAAC,CAAA,MAI9CsnC,EAAYC,EAAWC,EAAW/gB,EAAgBD,EAa7C,SAAAua,EAAO7rB,GAAC,EAeR,SAAA+rB,EAAe/rB,GAAC,CACtB1I,EAAA,EAAAqyB,IAAa,MAKZuC,EAAO,OAAO,kBACdC,EAAO,OAAO,kBACdtE,EAAO,OAAO,kBACdC,EAAO,OAAO,kBAGdmF,EAAI,CAAI,EAAG,CAAC,EACZ1D,EAAW,IACXC,EAAa,OACb0D,EAAY,SAUZc,EAAQ,EAAGkE,EAAc,KAOzBhE,EAAQ,EAAGpJ,EAAU,KAOrBD,EAAS1G,GAAQC,EAgBjB+P,EASAF,EAQAhQ,EAAMC,iBA4COiO,EAAI9hC,0BACJ6hC,EAAI7hC,0BACJy9B,EAAIz9B,0BACJw9B,EAAIx9B,qTAlJd2N,SACJsZ,EAAgBtZ,EAAM,aAAa,OACnCuZ,EAAiBvZ,EAAM,cAAc,OACrCq6B,EAAYr6B,EAAM,SAAS,EAC3BV,EAAA,GAAA86B,EAAa9zB,GAAOtG,EAAM,UAAU,CAAA,OACpCs6B,EAAYt6B,EAAM,SAAS,2BAwCvBif,GAAUA,EAAO,OAASgW,GAAM31B,EAAA,GAAA21B,EAAOhW,EAAO,IAAI,yBAClDA,GAAUA,EAAO,WAAasS,GAAUjyB,EAAA,GAAAiyB,EAAWtS,EAAO,QAAQ,yBAClEA,GAAUA,EAAO,aAAeuS,GAAYlyB,EAAA,GAAAkyB,EAAavS,EAAO,UAAU,2BAC1EA,GAAUA,EAAO,YAAciW,GAAW51B,EAAA,GAAA41B,EAAYjW,EAAO,SAAS,2BAKtEjf,GAASi1B,GAAQA,EAAK,CAAC,IAAMe,SACjCA,EAAQf,EAAK,CAAC,CAAA,EACd31B,EAAA,GAAA46B,EAAc/E,EAAUn1B,EAAOg2B,CAAK,CAAA,6BAKhCh2B,GAASi1B,GAAQA,EAAK,CAAC,IAAMiB,SACjCA,EAAQjB,EAAK,CAAC,CAAA,EACd31B,EAAA,GAAAwtB,EAAUqI,EAAUn1B,EAAOk2B,CAAK,CAAA,8BAK5B3E,IAAa,KACjBjyB,EAAA,GAAAutB,EAAUqN,CAAW,EACrB56B,EAAA,GAAA6mB,QAAc6P,CAAK,EAAA,EACnB12B,EAAA,GAAA8mB,OAAc8P,CAAK,EAAA,GACX3E,IAAa,KAAO8I,EAAU,OAAS,QAC/CxN,EAAUvmB,GAAO+zB,CAAS,CAAA,OAC1BlU,GAAS7M,GAAiBC,EAAiB,KAAOA,EAAiB,GAAE,EACrEja,EAAA,GAAA8mB,OAAc8P,CAAK,EAAA,IAEnB52B,EAAA,GAAAutB,EAAUuN,CAAU,EACpB96B,EAAA,GAAA6mB,GAAS,WAAW,EACpB7mB,EAAA,GAAA8mB,OAAc8P,CAAK,EAAA,sBAKrB,GAAM/B,EAAO,OAAO,mBAAqBD,EAAO,OAAO,kBAAiB,CAChE,MAAAtI,IAAMsI,EAAOC,GAAQ,GAC3B70B,EAAA,GAAA62B,GAAShC,EAAOvI,GAAIsI,EAAOtI,EAAE,CAAA,YAE7BuK,EAAK,CAAI,EAAG,CAAC,CAAA,uBAKf,GAAMrG,EAAO,OAAO,mBAAqBD,EAAO,OAAO,kBAAiB,CAChE,MAAA3D,IAAM2D,EAAOC,GAAQ,GAC3BxwB,EAAA,GAAA22B,GAASnG,EAAO5D,GAAI2D,EAAO3D,EAAE,CAAA,YAE7B+J,EAAK,CAAI,EAAG,CAAC,CAAA,6CAIf,GAAMf,IAAc,QACd,GAAA3D,IAAa,IAAG,CACX,MAAA7wB,GAAI,KAAK,IAAI,KAAK,IAAIu1B,EAAM,CAAC,CAAI,EAAA,KAAK,IAAIE,EAAM,CAAC,CAAI,EAAAF,EAAM,CAAC,EAAGE,EAAM,CAAC,GAAK,UACjFlQ,EAAI,CAAA,CAAKvlB,GAAGA,EAAC,CAAA,OACbwlB,EAAI,CAAA,CAAKxlB,GAAGA,EAAC,CAAA,OAEP,MAAAA,GAAI,KAAK,IAAI,KAAK,IAAIy1B,EAAM,CAAC,CAAA,EAAIA,EAAM,CAAC,GAAK,KACnD72B,EAAA,GAAA2mB,EAAOgQ,CAAK,OACZ/P,EAAI,CAAA,CAAKxlB,GAAGA,EAAC,CAAA,OAGhBpB,EAAA,GAAA2mB,EAAOgQ,CAAK,EACZ32B,EAAA,GAAA4mB,EAAOiQ,CAAK,4YCzHwC,IAAK,IAAK,GAAG,GAAzCpiC,EAAQ,CAAA,IAAA,iBAARA,EAAQ,CAAA,oIAKjC,IAAAwoB,EAAAxoB,OAAa,KAAGk9B,GAAAl9B,CAAA,6EAShB,IAAA0oB,EAAA1oB,OAAa,KAAGyoB,GAAAzoB,CAAA,EAMhBo3B,EAAAp3B,OAAa,KAAG4oB,GAAA5oB,CAAA,EAWhBmlC,EAAAnlC,EAAa,CAAA,IAAA,KAAOA,OAAY,UAAQmK,GAAAnK,CAAA,obA/BfA,EAAQ,CAAA,qFAKjCA,OAAa,wKASbA,OAAa,6GAMbA,OAAa,6GAWbA,EAAa,CAAA,IAAA,KAAOA,OAAY,yiBAjClCqB,EAAgCF,EAAAqJ,EAAAlJ,CAAA,6FAKU,EAAQ,IAAAtB,KAAI,WAAa,SAAW,WAAa,WAA7DA,EAAK,CAAA,IAAA,iBAALA,EAAK,CAAA,mHAAeK,EAAA,IAAAwiC,EAAA,IAAA7iC,KAAI,8BAAxBA,EAAK,CAAA,6dAIO,EAAQ,IAAAA,KAAI,WAAa,SAAW,WAAa,WAA7DA,EAAK,CAAA,IAAA,iBAALA,EAAK,CAAA,mHAAeK,EAAA,IAAAwiC,EAAA,IAAA7iC,KAAI,8BAAxBA,EAAK,CAAA,iLAIuB,QAAA,CAAA,OAAQ,MAAM,UAApCA,EAAU,CAAA,IAAA,iBAAVA,EAAU,CAAA,2IAAVA,EAAU,CAAA,8dAKc,QAAA,CAAA,OAAQ,MAAM,UAArCA,EAAW,CAAA,IAAA,iBAAXA,EAAW,CAAA,4IAAXA,EAAW,CAAA,kNAQ9C,IAAAuqB,EAAAvqB,OAAY,YAAU2oB,GAAA3oB,CAAA,2KAAtBA,OAAY,oTAFqCA,EAAc,CAAA,UAAhCA,EAAO,CAAA,IAAA,iBAAPA,EAAO,CAAA,qIAAWA,EAAc,CAAA,2BAAhCA,EAAO,CAAA,+dAIY,EAAQ,IAAAA,KAAI,WAAa,SAAW,WAAa,WAAlEA,EAAU,CAAA,IAAA,iBAAVA,EAAU,CAAA,mHAAeK,EAAA,IAAAwiC,EAAA,IAAA7iC,KAAI,+BAA7BA,EAAU,CAAA,geAOe,QAAA,CAAA,OAAQ,KAAM,KAAM,IAAI,UAA/CA,EAAW,CAAA,IAAA,iBAAXA,EAAW,CAAA,4IAAXA,EAAW,CAAA,mIArC9CA,EAAG,CAAA,GAAAoK,GAAApK,CAAA,yEAAHA,EAAG,CAAA,oMA5BM,OAAAkrB,CAAM,EAAApgB,GACN,IAAAgB,CAAG,EAAAhB,EAEVi4B,EAAQ,EACRC,EAAQl3B,GAAOA,EAAI,MAAQ,EAAI,EAAI,EACnC0xB,EAAW,IACXjB,EAAU,OACVC,EAAa,EACbiB,EAAa,OACbuI,EAAc,OACdC,EAAc,qBAsBSzI,EAAQl/B,uBAGL0kC,EAAK1kC,uBAILykC,EAAKzkC,uBAICm/B,EAAUn/B,uBAKT0nC,EAAW1nC,4CAMfi+B,EAAOj+B,uBAILk+B,EAAUl+B,uBAOR2nC,EAAW3nC,iIArD7CiN,EAAA,EAAAu3B,EAAiBh3B,EAAI,YAAcA,EAAI,WAAW,OAAS,GAAK,OAAQ,SAAU,UAAU,EAAK,CAAA,OAAQ,UAAU,CAAA,kBAa/G0xB,IAAa,KAAOjB,IAAY,WAAQhxB,EAAA,EAAE06B,EAAc,MAAM,mBAD9DzI,IAAa,KAAQjB,IAAY,UAAY0J,IAAgB,SAAS16B,EAAA,EAAAy6B,EAAc,MAAM,uBAV9F9a,EAAM,CACN,KAAI,CAAG6X,EAAOC,CAAK,EACnB,SAAAxF,EACA,WAAAC,EACA,QAAAlB,EACA,WAAAC,EACA,YAAAwJ,EACA,YAAAC,4RCCoD,IAAK,IAAK,GAAG,GAAzCjmC,EAAQ,CAAA,IAAA,iBAARA,EAAQ,CAAA,oIAKjC,IAAAuqB,EAAAvqB,OAAa,KAAGmK,GAAAnK,CAAA,ofALSA,EAAQ,CAAA,mFAKjCA,OAAa,ynBAPfqB,EAAkCF,EAAAqJ,EAAAlJ,CAAA,4FAKQ,EAAQ,IAAAtB,KAAM,WAAa,SAAW,WAAa,WAA/DA,EAAK,CAAA,IAAA,iBAALA,EAAK,CAAA,mHAAeK,EAAA,IAAAwiC,EAAA,IAAA7iC,KAAM,8BAA1BA,EAAK,CAAA,0dAIO,EAAQ,IAAAA,KAAM,WAAa,SAAW,WAAa,WAA/DA,EAAK,CAAA,IAAA,iBAALA,EAAK,CAAA,mHAAeK,EAAA,IAAAwiC,EAAA,IAAA7iC,KAAM,8BAA1BA,EAAK,CAAA,iLAIuB,QAAA,CAAA,OAAQ,MAAM,UAApCA,EAAU,CAAA,IAAA,iBAAVA,EAAU,CAAA,2IAAVA,EAAU,CAAA,gLAGU,QAAA,CAAA,SAAU,OAAO,UAAtCA,EAAS,CAAA,IAAA,iBAATA,EAAS,CAAA,2IAATA,EAAS,CAAA,mIAlB1CA,EAAK,CAAA,GAAAoK,GAAApK,CAAA,yEAALA,EAAK,CAAA,iMAlBI,OAAAkrB,CAAM,EAAApgB,GACN,MAAAmB,CAAK,EAAAnB,EAEZi4B,EAAQ,EACRC,EAAQ/2B,GAASA,EAAM,MAAQ,EAAI,EAAI,EACvCuxB,EAAW,IACXC,EAAa,OACb0D,EAAY,uBAeW3D,EAAQl/B,uBAGL0kC,EAAK1kC,uBAILykC,EAAKzkC,uBAICm/B,EAAUn/B,uBAGX6iC,EAAS7iC,2HA1BzC4sB,EAAM,CACN,KAAI,CAAG6X,EAAOC,CAAK,EACnB,SAAAxF,EACA,WAAAC,EACA,UAAA0D,mfCEQ,IAAAr1B,CAAG,EAAAhB,GACH,MAAAmB,CAAK,EAAAnB,GACL,QAAAiB,CAAO,EAAAjB,QAOZzI,EAAO,EACT,MAAO,SAAU,MAAO,SAAU,cAAemkC,GAAY,kBAAmBC,KAChF,MAAO,WAAY,MAAO,YAAa,cAAeC,GAAc,kBAAmBC,KACvF,MAAO,SAAU,MAAO,OAAQ,cAAeC,GAAQ,kBAAmBC,KAC1E,MAAO,WAAY,MAAO,OAAQ,cAAeC,GAAc,kBAAmBC,KAClF,MAAO,cAAe,MAAO,YAAa,cAAeC,GAAiB,kBAAmBC,KAC7F,MAAO,YAAa,MAAO,UAAW,cAAeC,GAAc,kBAAmBC,olBCtBRC,EAAApnC,KAAQ,SAAQ,mBAChDA,EAAO,CAAA,EAAC,OAAO,MAAK,SAAWA,EAAO,CAAA,EAAC,OAAO,MAAK,mNAA9B,KAAS,iCADpCuC,EAAA8kC,EAAA,QAAAC,EAAAtnC,KAAQ,QAAQ,kIADzDqB,EAGIF,EAAAqJ,EAAAlJ,CAAA,EAFDJ,EAAuBsJ,EAAA+8B,CAAA,SAACrmC,EAA4EsJ,EAAA68B,CAAA,SAAAnmC,EAAIsJ,EAAAg9B,CAAA,SACxGtmC,EAAkBsJ,EAAAi9B,CAAA,SAACvmC,EAAoFsJ,EAAAk9B,CAAA,uDAD3B,CAAAjd,GAAApqB,EAAA,IAAA+mC,KAAAA,EAAApnC,KAAQ,SAAQ,KAAA0C,GAAA2U,EAAA+vB,CAAA,GAAtD,CAAA3c,GAAApqB,EAAA,GAAAinC,KAAAA,EAAAtnC,KAAQ,6CACFA,EAAO,CAAA,EAAC,OAAO,MAAK,KAAA0C,GAAAilC,EAAAC,CAAA,oBAAW5nC,EAAO,CAAA,EAAC,OAAO,MAAK,KAAA0C,GAAAmlC,EAAAC,CAAA,0HALnG9nC,EAAO,CAAA,GAAAoK,GAAApK,CAAA,yEAAPA,EAAO,CAAA,iMAJE,QAAA+L,CAAO,EAAAjB,4MCUhB9K,EAAI,CAAA,EAAGA,KAAK,KAAOA,EAAO,CAAA,GAAA,2EACgCA,EAAE,CAAA,CAAA,kCAAsBA,EAAU,CAAA,CAAA,4DAF1EgD,GAAAqlB,EAAA,WAAAroB,OAAS,IAAI,UAApCqB,EAGQF,EAAAknB,EAAA/mB,CAAA,gBADLJ,EAAgGmnB,EAAAzlB,CAAA,8BAA9E5C,EAAY,CAAA,CAAA,+BAD5BA,EAAI,CAAA,EAAGA,KAAK,KAAOA,EAAO,CAAA,GAAA,KAAA0C,GAAAoH,EAAAH,CAAA,kBACgC3J,EAAE,CAAA,CAAA,oBAAsBA,EAAU,CAAA,CAAA,OAF1EgD,GAAAqlB,EAAA,WAAAroB,OAAS,IAAI,uEAbtB,GAAA0L,CAAE,EAAAZ,GACF,KAAAi9B,CAAI,EAAAj9B,EACJ,CAAA,QAAAk9B,EAAU,8BAA8B,EAAAl9B,EACxC,CAAA,WAAAm9B,EAAa,MAAM,EAAAn9B,EAE1Bo9B,EACK,SAAAC,EAAal0B,EAAC,CAChBi0B,EAAU,MAAM,OAAS,GAC1B38B,EAAA,EAAAw8B,EAAOG,EAAU,MAAM,CAAC,CAAA,4CAOaA,EAAS9d,oXCN9BpqB,EAAE,CAAA,CAAA,0CAA2BA,EAAS,CAAA,CAAA,2DADxCA,EAAS,CAAA,EAAA,iBAAA,UAAhCqB,EAEMF,EAAA6I,EAAA1I,CAAA,EADNJ,EAAoF8I,EAAApH,CAAA,OAAP5C,EAAK,CAAA,CAAA,2DAAzDA,EAAE,CAAA,CAAA,qDAA2BA,EAAS,CAAA,CAAA,iBAAcA,EAAK,CAAA,QAALA,EAAK,CAAA,CAAA,2BAD3DA,EAAS,CAAA,EAAA,6FARlB,GAAA0L,CAAE,EAAAZ,EACF,CAAA,MAAAxM,EAAQ,EAAE,EAAAwM,EACV,CAAA,UAAAib,EAAY,EAAE,EAAAjb,EACd,CAAA,YAAAs9B,EAAc,EAAE,EAAAt9B,EAChB,CAAA,UAAAu9B,EAAY,EAAE,EAAAv9B,eAKiDxM,EAAK,KAAA,mZCiR5C0B,EAAK,EAAA,CAAA,kUAvBhCA,EAAO,CAAA,EAAAoG,CAAA,iJAAPpG,EAAO,CAAA,IAAAkG,GAAAokB,EAAAlkB,CAAA,kKA7CT,IAAAkiC,EAAAtoC,OAAa,uBAWdA,EAAQ,CAAA,GAAA4oB,GAAA5oB,CAAA,qGAXPK,EAAA,CAAA,EAAA,IAAAvB,GAAAwpC,EAAAA,EAAAtoC,OAAa,MAAS,4EAWvBA,EAAQ,CAAA,4gBAkDHA,EAAK,EAAA,EAAA,yCAATqB,EAAcF,EAAAqJ,EAAAlJ,CAAA,kCAAVtB,EAAK,EAAA,EAAA,KAAA0C,GAAA+Q,EAAAoV,CAAA,yCARP0B,EAAAvqB,OAAY,MAAIi9B,GAAAj9B,CAAA,uEAAhBA,OAAY,6PAEkBA,EAAK,EAAA,CAAA,6eAPjCA,EAAK,CAAA,EAAG,kCAAoC,iHAAhDqB,EAAsEF,EAAAqJ,EAAAlJ,CAAA,2CAAlEtB,EAAK,CAAA,EAAG,kCAAoC,oBAAiB0C,GAAA+Z,EAAA+N,CAAA,qNA3CtDxqB,EAAQ,CAAA,IAAA,gBAARA,EAAQ,CAAA,4IAARA,EAAQ,CAAA,olBAanBA,EAAc,CAAA,GAAAyoB,GAAAzoB,CAAA,6EAQf,IAAA0oB,EAAA1oB,QAAS,UAAQ2oB,GAAA3oB,CAAA,2cARhBA,EAAc,CAAA,kLAQfA,QAAS,uhBAbgCA,EAAU,EAAA,UAAxBA,EAAG,CAAA,IAAA,iBAAHA,EAAG,CAAA,8IAAHA,EAAG,CAAA,0JAGwB,IAAAqqB,EAAA,CAAA,GAAA,YAAA,QAAA,CAAA,KAAM,KAAK,UAAhCrqB,EAAS,EAAA,IAAA,iBAATA,EAAS,EAAA,gJAATA,EAAS,EAAA,+JAG5BA,EAAS,CAAA,EAAA,qIAATA,EAAS,CAAA,EAAA,qMACoC,IAAAqqB,EAAA,CAAA,GAAA,YAAA,QAAA,CAAA,KAAM,KAAK,UAArCrqB,EAAc,EAAA,IAAA,iBAAdA,EAAc,EAAA,gJAAdA,EAAc,EAAA,qLAIAA,EAAa,EAAA,UAA9BA,EAAM,EAAA,IAAA,iBAANA,EAAM,EAAA,gJAANA,EAAM,EAAA,owBAIIA,EAAa,CAAA,IAAA,iBAAbA,EAAa,CAAA,8IAAbA,EAAa,CAAA,+LAGe,iCAA3BA,EAAc,CAAA,IAAA,iBAAdA,EAAc,CAAA,+IAAdA,EAAc,CAAA,+IAI7B,MAAI,0IAAdA,EAAQ,EAAA,CAAA,giBA4CzBA,EAAM,EAAA,CAAA,UAAVqB,EAAeF,EAAAqJ,EAAAlJ,CAAA,iCAAXtB,EAAM,EAAA,CAAA,8FAnFPA,EAAO,CAAA,EA8CRA,EAAO,CAAA,EAAA,EAwBJA,OAAY,KAAI,KAtEX,qCAiFRA,EAAM,CAAA,IAAK,SAAWA,EAAM,EAAA,IAAAoK,GAAApK,CAAA,iRAA5BA,EAAM,CAAA,IAAK,SAAWA,EAAM,EAAA,kOA7QnB,GAAA,CAAA,KAAA6K,EAAO,IAAI,EAAAC,EACX,CAAA,MAAAmB,EAAQ,IAAI,EAAAnB,GACZ,SAAAkB,EAAQ,EAAA,EAAAlB,EAER,CAAA,UAAAib,EAAY,OAAO,EAAAjb,EACnB,CAAA,eAAAy9B,EAAiB,EAAK,EAAAz9B,EACtB,CAAA,YAAA09B,EAAc,EAAK,EAAA19B,GAGnB,QAAAiB,CAAO,EAAAjB,EACP,CAAA,IAAAgB,EAAM,IAAI,EAAAhB,EAOjB29B,EACAljB,EAAgB,GAChBC,EAAiB,GACjBkjB,EAAc18B,EACd7F,EAGAmiB,EAAS,UACToC,EAAS,SAGPie,EAAU,CAAI,IAAK,GAAG,MACxBC,EAAgB38B,EAAK,CAAI,KAAM,KAAK,EAAA,CAAK,KAAM,SAAU,QAAQ,EAGjEW,EACAvC,EACA8V,EACA2H,EAGK,SAAA+gB,EAAQ58B,EAAOF,EAASC,GAAQ,CACtCT,EAAA,EAAApF,EAAU0E,EAAI,EACV,KAAKgY,IAAM,MACT/W,EAAM2Y,GAAgB5B,GAAQ5W,EAAOF,EAASC,EAAQ,CAAA,CAExD,CAAA,EAAA,MAAMiI,IAAC,CACL,QAAQ,MAAMA,EAAC,EACf1I,EAAA,GAAAO,EAAM,IAAI,EACVP,EAAA,EAAA+c,EAAS,OAAO,EAChB/c,EAAA,GAAAmf,EAASzW,EAAC,cAKV60B,EAAYL,EAAUx8B,EAAK,CAC3B,MAAA88B,GAAW98B,GAAU,KACtB,GAAA,CAAAw8B,GAAYA,EAAS,KAAO,GAAE,OAC7B,MAAAO,GAAY,IACZC,GAAaR,EAAS,MAAM,EAAGO,EAAS,EAExCE,OAAa,WACnBA,GAAO,OAAM,IAAA,OACJ/jB,GAAY+jB,GAAO,OACpB,GAAA,CAAA/jB,IAAaA,GAAU,OAAS,EAAC,OAClC,IAAAgkB,GAAeC,OAClBx8B,EAAKu8B,GAAeC,EAAoB/+B,CAAM,EAAIgd,GAAelC,EAAS,EAAAvY,EAAArB,EAAA,GAAAlB,CAAA,CAAA,EAC3EkB,EAAA,GAAA4U,EAAYgpB,GAAgB,MAAQ,IAAI,EACxC59B,EAAA,GAAAuc,EAAkBygB,GAAkBa,EAAsB,MAAQ,IAAI,EAClEL,IAAY1+B,IAAW,MAAMkB,EAAA,GAAAlB,EAAS,KAAK,GAGlD6+B,GAAO,QAAO,SAAYj1B,GAAC,CACxB,UAAY,KACZ1I,EAAA,EAAA+c,EAAS,OAAO,EAChB/c,EAAA,GAAAmf,EAASzW,EAAC,EACV,QAAQ,MAAM,0BAA2BA,EAAC,GAG7Ci1B,GAAO,WAAWD,EAAU,EAKtB,SAAAI,EAAQ9oB,EAAO,KAEZ,MAAAjS,EAAI+W,GACP9E,EACA3T,EACAvC,IAAW,MAAQ,SAAWA,EAC9B8V,IAAc,MACd2H,IAAmB,MACnBvC,EACAC,GAGC,GAAAlX,EAAE,OAAO,MAAQ,EACR,MAAA,IAAA,MAAM,mCAAmC,EAGlD,GAAArC,GAASqC,EAAE,OAAO,QAAWrC,EAAM,MAAQA,EAAM,SAAS,OACjD,MAAA,IAAA,MAAM,gEAAgE,KAG/EqC,EAAE,WAAW,OAASA,EAAE,OAAO,MAAQ,EAC9B,MAAA,IAAA,MAAM,+BAAiCyX,EAAU,YAAW,EAAK,YAAczX,EAAE,WAAW,OAAS,yBAAyB,EAGvI,GAAAi6B,GAAkBj6B,EAAE,WAAW,SAAW,EACjC,MAAA,IAAA,MAAM,yDAAyD,EAGxE,GAAAk6B,GAAel6B,EAAE,WAAW,OAAS,EAC5B,MAAA,IAAA,MAAM,6EAA6E,EAGhGA,EAAE,SAAcm6B,EAAS,KAAK,QAAQ,YAAa,EAAE,EAGjDx8B,IAGGA,EAAM,SAAQqC,EAAE,OAASsW,GAAetW,EAAE,MAAM,EACpDA,EAAE,UAAYrC,EAAM,WACpBqC,EAAE,UAAYrC,EAAM,UACpBqC,EAAE,cAAgBrC,EAAM,cACxBqC,EAAE,eAAiBrC,EAAM,gBAG5BV,EAAA,EAAAQ,EAAUuC,CAAC,EACPrC,GAED48B,EAAQ58B,EAAOF,EAAO,CAAA,CAAA,OAGzB28B,EAAW,CAAA,CAAA,EACXn9B,EAAA,GAAAmf,EAAS,EAAE,EACXnf,EAAA,EAAA+c,EAAS,SAAS,QACZrU,EAAC,CACP1I,EAAA,EAAAQ,EAAU,IAAI,OACd28B,EAAW,CAAA,CAAA,EACXn9B,EAAA,EAAA+c,EAAS,OAAO,EAChB/c,EAAA,GAAAmf,EAASzW,CAAC,GAKP,SAAAq1B,EAAUr1B,EAAC,CACX,MAAAi1B,MAAa,WACnBA,EAAO,OAAM,IAAA,CAAWG,EAAQH,EAAO,MAAM,GAC7CA,EAAO,WAAWT,CAAQ,WAIpB5d,GAAK,CACXtf,EAAA,EAAAk9B,EAAW,IAAI,gBA6CDA,EAAQnqC,uBAQOsO,EAAGtO,wBAGG6hB,EAAS7hB,wBAITwpB,EAAcxpB,wBAIjB+L,EAAM/L,wBAIIinB,EAAajnB,uBAGZknB,EAAclnB,kVAnErDmqC,IAAa,KAEjBl9B,EAAA,EAAAQ,EAAU,IAAI,GAGd+8B,EAAYL,EAAUx8B,CAAK,EAC3BV,EAAA,EAAA+c,EAAS,SAAS,EAClB/c,EAAA,GAAAmf,EAAS,EAAE,sBAIP9d,IAEJrB,EAAA,EAAA+c,EAAS,SAAS,EAClB/c,EAAA,GAAAmf,EAAS,EAAE,0BAIP3e,GAAWE,GAASD,IAAa08B,MAElCn9B,EAAA,GAAAO,EAAM+8B,EAAQ58B,EAAOF,EAASC,CAAQ,CAAA,EACtCT,EAAA,GAAAm9B,EAAc18B,CAAQ,EACtBT,EAAA,GAAAmf,EAAS,EAAE,EACXnf,EAAA,EAAA+c,EAAS,SAAS,QACZrU,EAAC,CACP1I,EAAA,EAAAQ,EAAU,IAAI,EACdR,EAAA,EAAA+c,EAAS,OAAO,EAChB/c,EAAA,GAAAmf,EAASzW,CAAC,4UCxLTs1B,EAAA3iC,GAAA5G,EAAI,CAAA,EAAA,KAAK,WAAW,OAAMA,EAAA,CAAA,CAAA,CAAA,uBAA/B,OAAIS,GAAA,2BASDT,EAAG,CAAA,EAAC,MAAQwpC,IAAQ5gB,GAAA,IASpB5oB,EAAG,CAAA,EAAC,OAASwpC,IAAQr/B,GAAAnK,CAAA,6VAzB7BqB,EAiCWF,EAAAsoC,EAAAnoC,CAAA,EAhCRJ,EAKKuoC,EAAAC,CAAA,uHACEH,EAAA3iC,GAAA5G,EAAI,CAAA,EAAA,KAAK,WAAW,OAAMA,EAAA,CAAA,CAAA,CAAA,oBAA/B,OAAIS,GAAA,EAAA,gHAAJ,OASGT,EAAG,CAAA,EAAC,MAAQwpC,iDASZxpC,EAAG,CAAA,EAAC,OAASwpC,gIAhBVxpC,EAAC,CAAA,EAAA,YACAA,EAAM,CAAA,EAACA,EAAI,CAAA,EAAA,CAAC,EAAI,KAAK,QAAQ,CAAC,EAAA,YAC9BA,EAAS,CAAA,EAACA,EAAI,CAAA,EAAA,CAAC,EAAI,KAAK,QAAQ,CAAC,EAAA,SACjC4nC,EAAA5nC,KAAUA,EAAC,CAAA,EAAG,CAAC,EAAG,QAAQ,CAAC,EAAA,kRAJpCqB,EAKKF,EAAAuoC,EAAApoC,CAAA,EAJFJ,EAAYwoC,EAAAC,CAAA,gBACZzoC,EAA2CwoC,EAAAE,CAAA,gBAC3C1oC,EAA8CwoC,EAAAG,CAAA,gBAC9C3oC,EAAwCwoC,EAAAI,CAAA,6BAHnC9pC,EAAC,CAAA,EAAA,KAAA0C,GAAAoH,EAAAH,CAAA,eACA3J,EAAM,CAAA,EAACA,EAAI,CAAA,EAAA,CAAC,EAAI,KAAK,QAAQ,CAAC,EAAA,KAAA0C,GAAA2U,EAAA+vB,CAAA,eAC9BpnC,EAAS,CAAA,EAACA,EAAI,CAAA,EAAA,CAAC,EAAI,KAAK,QAAQ,CAAC,EAAA,KAAA0C,GAAAqnC,EAAAC,CAAA,EACjC3pC,EAAA,GAAAunC,KAAAA,EAAA5nC,KAAUA,EAAC,CAAA,EAAG,CAAC,EAAG,QAAQ,CAAC,EAAA,KAAA0C,GAAAilC,EAAAC,CAAA,gQAKpCvmC,EAKKF,EAAAuoC,EAAApoC,CAAA,yCAKGqI,EAAA3J,KAAI,MAAK,SACPonC,IAAApnC,KAAUA,EAAG,CAAA,EAAC,MAAQ,CAAC,EAAIA,EAAS,CAAA,EAACA,EAAI,CAAA,EAAA,MAAQ,CAAC,GAAK,KAAK,QAAQ,CAAC,EAAA,YACtEA,EAAS,CAAA,EAACA,EAAG,CAAA,EAAC,MAAQ,CAAC,EAAI,KAAK,QAAQ,CAAC,EAAA,WACzCA,EAAS,CAAA,EAACA,EAAI,CAAA,EAAA,MAAQ,CAAC,EAAG,QAAQ,CAAC,EAAA,kRAJ5CqB,EAKKF,EAAAuoC,EAAApoC,CAAA,EAJFJ,EAAoBwoC,EAAAC,CAAA,gBACpBzoC,EAAmFwoC,EAAAE,CAAA,gBACnF1oC,EAAsDwoC,EAAAG,CAAA,gBACtD3oC,EAAgDwoC,EAAAI,CAAA,iBAH3CzpC,EAAA,GAAAsJ,KAAAA,EAAA3J,KAAI,MAAK,KAAA0C,GAAAoH,EAAAH,CAAA,EACPtJ,EAAA,GAAA+mC,KAAAA,IAAApnC,KAAUA,EAAG,CAAA,EAAC,MAAQ,CAAC,EAAIA,EAAS,CAAA,EAACA,EAAI,CAAA,EAAA,MAAQ,CAAC,GAAK,KAAK,QAAQ,CAAC,EAAA,KAAA0C,GAAA2U,EAAA+vB,CAAA,eACtEpnC,EAAS,CAAA,EAACA,EAAG,CAAA,EAAC,MAAQ,CAAC,EAAI,KAAK,QAAQ,CAAC,EAAA,KAAA0C,GAAAqnC,EAAAC,CAAA,cACzChqC,EAAS,CAAA,EAACA,EAAI,CAAA,EAAA,MAAQ,CAAC,EAAG,QAAQ,CAAC,EAAA,KAAA0C,GAAAilC,EAAAC,CAAA,yCA/B1C5nC,EAAG,CAAA,GAAAoK,GAAApK,CAAA,oEAAHA,EAAG,CAAA,wGAVC,MAAAwpC,GAAW,0BAFN,IAAA19B,CAAG,EAAAhB,EAGVgZ,EAAQG,EAAWyd,UAiBW/0B,GAAKA,EAAI68B,8EAhBpC19B,IACJP,EAAA,EAAA0Y,EAAYnY,EAAI,KAAK,SAAS,EAC9BP,EAAA,EAAAuY,EAAShY,EAAI,KAAK,MAAM,MACxB41B,EAAY51B,EAAI,SAAS,iZCaNmc,EAAAjoB,EAAS,CAAA,EAAA,IAAkEA,EAAA,CAAA,CAAA,EAAA,KAAK,GAAG,EAAA,2CAE9EA,EAAa,CAAA,CAAA,qBAHjB,WACR,8FADZqB,EAEIF,EAAAqJ,EAAAlJ,CAAA,kDADe,CAAAmpB,GAAApqB,EAAA,IAAA4nB,KAAAA,EAAAjoB,EAAS,CAAA,EAAA,IAAkEA,EAAA,CAAA,CAAA,EAAA,KAAK,GAAG,EAAA,KAAAgoB,EAAA,EAAAC,CAAA,0HAJvGjoB,EAAQ,CAAA,EAAC,OAAS,GAACoK,GAAApK,CAAA,yEAAnBA,EAAQ,CAAA,EAAC,OAAS,6LAZd,MAAAipB,EAAW/kB,SAGN,SAAA8H,CAAQ,EAAAlB,GACR,QAAAiB,CAAO,EAAAjB,EAGT,SAAAm/B,EAAc1e,EAAE,CACtBtC,EAAS,gBAAe,CAAA,CAAA,UAQQtc,GAAK,qBAAuBZ,EAAQ,UAAUY,CAAC,EAAI,0RC2EZ3M,EAAQ,CAAA,IAAA,oBAARA,EAAQ,CAAA,6EAAtCA,EAAa,CAAA,CAAA,uFADtDqB,EAEMF,EAAA6I,EAAA1I,CAAA,uFADiEtB,EAAQ,CAAA,0OAKnBA,EAAK,CAAA,IAAA,iBAALA,EAAK,CAAA,GAAYA,EAAG,CAAA,IAAA,eAAHA,EAAG,CAAA,qFACxEA,EAAG,CAAA,GAAAk9B,GAAAl9B,CAAA,+GAFXqB,EAUMF,EAAA6I,EAAA1I,CAAA,oJATsDtB,EAAK,CAAA,qCAAYA,EAAG,CAAA,0BACxEA,EAAG,CAAA,yhBAG4E,SAAO,wEAC1C,OAAK,6UAFnDqB,EAGMF,EAAA6I,EAAA1I,CAAA,obAQZD,EAEMF,EAAA6I,EAAA1I,CAAA,6KAiEGtB,EAAG,CAAA,yFAAHA,EAAG,CAAA,CAAA,iLAzDHA,EAAO,CAAA,EAAA,OAAAmK,OAgDJnK,EAAK,CAAA,EAAA,OAAA4oB,uGAjDdvnB,EAwDMF,EAAA6I,EAAA1I,CAAA,6NAGmBtB,EAAU,CAAA,CAAA,gmBAThCqB,EAA8BF,EAAA8O,EAAA3O,CAAA,WAC9BD,EAEIF,EAAA2O,EAAAxO,CAAA;qrEAnDJD,EAEIF,EAAA8O,EAAA3O,CAAA,WACJD,EAA+BF,EAAA2O,EAAAxO,CAAA,WAC/BD,EAEIF,EAAA4O,EAAAzO,CAAA,WACJD,EAEIF,EAAA8U,EAAA3U,CAAA,WACJD,EAEIF,EAAA+U,EAAA5U,CAAA,WACJD,EA+BMF,EAAA6I,EAAA1I,CAAA,WACND,EAAOF,EAAAgV,EAAA7U,CAAA,iLA/EgBtB,EAAO,CAAA,IAAA,mBAAPA,EAAO,CAAA,4DAE/BA,EAAQ,CAAA,EAAC,OAAS,GAACi9B,GAAAj9B,CAAA,IAKnBA,EAAO,CAAA,GAAAyoB,GAAAzoB,CAAA,IAePA,EAAG,CAAA,GAAA2oB,GAAA3oB,CAAA,uCASF,MAAA,CAAAA,OAAQA,EAAK,CAAA,EAAA,0ZApCzBqB,EAoGMF,EAAA+oC,EAAA5oC,CAAA,EAjGHJ,EA6BMgpC,EAAAnf,CAAA,EA5BH7pB,EAEM6pB,EAAA7gB,CAAA,iEAmBNhJ,EACM6pB,EAAA9gB,CAAA,+BAST/I,EAgEMgpC,EAAAC,CAAA,oEA9F0BnqC,EAAO,CAAA,0BAE/BA,EAAQ,CAAA,EAAC,OAAS,iGAKlBA,EAAO,CAAA,gGAePA,EAAG,CAAA,iaAhGA,KAAA6K,CAAI,EAAAC,EAWXiB,EACAE,EACAH,EAGAs+B,EAAY,EAGZp+B,EAAQ,CAAA,EAMH,SAAAq+B,EAAWp2B,EAAC,CAGZ,MAAA4iB,EAAM,SAAS5iB,EAAE,OAAO,EAAE,EAC5B,GAAA,OAAO,MAAM4iB,CAAG,GAAKA,EAAM,GAAKA,GAAO/qB,EAAI,WAAW,OAAM,OAG1D,MAAAJ,EAAKI,EAAI,WAAW+qB,CAAG,EAGzBnrB,GAAM,GAAC,CAAKM,EAAS,SAASN,CAAE,QACjCM,EAAQ,CAAA,GAAOA,EAAUN,CAAE,CAAA,EAC3BH,EAAA,EAAAU,EAAQ,IAAI,YAQTg+B,GAAa,KACnBj+B,EAAQ,CAAA,CAAA,EACRT,EAAA,EAAAU,EAAQ,IAAI,gBA2BiBF,EAAOzN,uBAImC0N,EAAQ1N,8BAKnB2N,EAAK3N,8BAAYwN,EAAGxN,mCAIlDuN,GAAgBC,EAAKC,EAAS,QAASC,EAAUC,CAAK,EACtDq+B,EAAA,IAAA38B,GAAc1B,CAAK,+EArC7CF,IAAY,OAEhBR,EAAA,EAAAU,EAAQ,IAAI,MACZD,EAAQ,CAAA,CAAA,iBAIJC,IAAU,OACdV,EAAA,EAAAO,EAAM,IAAI,EACVP,EAAA,EAAA6+B,EAAY,CAAC,mBAITn+B,GAASA,EAAM,OAASm+B,OAC5BA,EAAYn+B,EAAM,IAAI,+ZCXnB,IAAAq8B,EAAAtoC,OAAc,uBAMfA,EAAS,CAAA,GAAA4oB,GAAA5oB,CAAA,qGANRK,EAAA,GAAAvB,GAAAwpC,EAAAA,EAAAtoC,OAAc,MAAS,4EAMxBA,EAAS,CAAA,yQAaaA,EAAK,CAAA,CAAA,+EAFgDA,EAAa,CAAA,CAAA,+CAAhDA,EAAa,CAAA,CAAA,2FADvDqB,EAEIF,EAAAqJ,EAAAlJ,CAAA,EADDJ,EAAwBsJ,EAAA+8B,CAAA,SAACrmC,EAAsEsJ,EAAA68B,CAAA,SAAAnmC,EAAIsJ,EAAAg9B,CAAA,kDAAzBxnC,EAAa,CAAA,CAAA,0BAAhDA,EAAa,CAAA,CAAA,kOAffA,EAAS,CAAA,IAAA,gBAATA,EAAS,CAAA,wIAATA,EAAS,CAAA,msBAMrB,MAAI,0IAAdA,EAAQ,CAAA,CAAA,mhBAmB7BqB,EAAqBF,EAAAqJ,EAAAlJ,CAAA,cAAXtB,EAAM,CAAA,4BAANA,EAAM,CAAA,4FA/BbA,EAAK,CAAA,IAAA,+BA6BNA,EAAM,CAAA,IAAK,SAAWA,EAAM,CAAA,IAAAoK,GAAApK,CAAA,uPAA5BA,EAAM,CAAA,IAAK,SAAWA,EAAM,CAAA,gOAtFnB,MAAAiM,CAAK,EAAAnB,EAQZy/B,EAGAjiB,EAAS,UACToC,EAAS,GAGJ,SAAA8f,EAASjqB,EAAO,KAEb,MAAApS,EAAI,KAAK,MAAMoS,CAAO,EAEvB,GADLpS,EAAE,EAAC,IAAO,aAAaA,EAAE,CAAC,EACrB,CAAA,OAAO,KAAKA,CAAC,EAAE,SAAS,OAAO,GAAKA,EAAE,MAAM,CAAC,IAAM,WAC/C,MAAA,MAAM,uDAAuD,EAEtE5C,EAAA,EAAAU,EAAQkC,CAAC,EACT5C,EAAA,EAAA+c,EAAS,SAAS,EAClB/c,EAAA,EAAAmf,EAAS,EAAE,QACLzW,EAAC,CACP1I,EAAA,EAAAU,EAAQ,IAAI,EACZV,EAAA,EAAA+c,EAAS,OAAO,EAChB/c,EAAA,EAAAmf,EAASzW,CAAC,GAKP,SAAAq1B,EAAUr1B,EAAC,CACX,MAAAi1B,MAAa,WACnBA,EAAO,OAAM,IAAA,CAAWsB,EAAStB,EAAO,MAAM,GAC9CA,EAAO,WAAWqB,CAAS,WAGrB1f,GAAK,CACXtf,EAAA,EAAAg/B,EAAY,IAAI,gBAuBwBA,EAASjsC,yFAnB7CisC,IAAc,KAElBh/B,EAAA,EAAAU,EAAQ,IAAI,GAGZV,EAAA,EAAA+c,EAAS,SAAS,EAClB/c,EAAA,EAAAmf,EAAS,EAAE,kBAIXnf,EAAA,EAAAk/B,EAAgBF,EAAYA,EAAU,KAAK,QAAQ,YAAa,EAAE,EAAI,EAAE,geClDhE,IAAAz+B,CAAG,EAAAhB,GACH,MAAAmB,CAAK,EAAAnB,GACL,QAAAiB,CAAO,EAAAjB,QAOZzI,EAAO,EACT,MAAO,SAAU,MAAO,SAAU,cAAemkC,GAAY,kBAAmBC,KAChF,MAAO,SAAU,MAAO,OAAQ,cAAeG,GAAQ,kBAAmBC,KAC1E,MAAO,WAAY,MAAO,OAAQ,cAAeC,GAAc,kBAAmBC,KAClF,MAAO,YAAa,MAAO,UAAW,cAAeG,GAAc,kBAAmBC,sXCRnFoC,EAAA3iC,GAAA5G,EAAI,CAAA,EAAA,KAAK,WAAW,OAAMA,EAAA,CAAA,CAAA,CAAA,uBAA/B,OAAIS,GAAA,2BAQDT,EAAG,CAAA,EAAC,MAAQwpC,IAAQ5gB,GAAA,IAQpB5oB,EAAG,CAAA,EAAC,OAASwpC,IAAQr/B,GAAAnK,CAAA,mTAtB7BqB,EA6BWF,EAAAsoC,EAAAnoC,CAAA,EA5BRJ,EAIKuoC,EAAAC,CAAA,sHACEH,EAAA3iC,GAAA5G,EAAI,CAAA,EAAA,KAAK,WAAW,OAAMA,EAAA,CAAA,CAAA,CAAA,oBAA/B,OAAIS,GAAA,EAAA,gHAAJ,OAQGT,EAAG,CAAA,EAAC,MAAQwpC,iDAQZxpC,EAAG,CAAA,EAAC,OAASwpC,gIAdVxpC,EAAC,CAAA,EAAA,YACAA,EAAM,CAAA,EAACA,EAAI,CAAA,EAAA,CAAC,EAAI,KAAK,QAAQ,CAAC,EAAA,YAC9BA,EAAS,CAAA,EAACA,EAAI,CAAA,EAAA,CAAC,EAAI,KAAK,QAAQ,CAAC,EAAA,4NAH1CqB,EAIKF,EAAAuoC,EAAApoC,CAAA,EAHFJ,EAAYwoC,EAAAC,CAAA,gBACZzoC,EAA2CwoC,EAAAE,CAAA,gBAC3C1oC,EAA8CwoC,EAAAG,CAAA,6BAFzC7pC,EAAC,CAAA,EAAA,KAAA0C,GAAAoH,EAAAH,CAAA,eACA3J,EAAM,CAAA,EAACA,EAAI,CAAA,EAAA,CAAC,EAAI,KAAK,QAAQ,CAAC,EAAA,KAAA0C,GAAA2U,EAAA+vB,CAAA,eAC9BpnC,EAAS,CAAA,EAACA,EAAI,CAAA,EAAA,CAAC,EAAI,KAAK,QAAQ,CAAC,EAAA,KAAA0C,GAAAqnC,EAAAC,CAAA,4NAK1C3oC,EAIKF,EAAAuoC,EAAApoC,CAAA,yCAKGqI,EAAA3J,KAAI,MAAK,SACPonC,IAAApnC,KAAUA,EAAG,CAAA,EAAC,MAAQ,CAAC,EAAIA,EAAS,CAAA,EAACA,EAAI,CAAA,EAAA,MAAQ,CAAC,GAAK,KAAK,QAAQ,CAAC,EAAA,YACtEA,EAAS,CAAA,EAACA,EAAG,CAAA,EAAC,MAAQ,CAAC,EAAI,KAAK,QAAQ,CAAC,EAAA,4NAHlDqB,EAIKF,EAAAuoC,EAAApoC,CAAA,EAHFJ,EAAoBwoC,EAAAC,CAAA,gBACpBzoC,EAAmFwoC,EAAAE,CAAA,gBACnF1oC,EAAsDwoC,EAAAG,CAAA,iBAFjDxpC,EAAA,GAAAsJ,KAAAA,EAAA3J,KAAI,MAAK,KAAA0C,GAAAoH,EAAAH,CAAA,EACPtJ,EAAA,GAAA+mC,KAAAA,IAAApnC,KAAUA,EAAG,CAAA,EAAC,MAAQ,CAAC,EAAIA,EAAS,CAAA,EAACA,EAAI,CAAA,EAAA,MAAQ,CAAC,GAAK,KAAK,QAAQ,CAAC,EAAA,KAAA0C,GAAA2U,EAAA+vB,CAAA,eACtEpnC,EAAS,CAAA,EAACA,EAAG,CAAA,EAAC,MAAQ,CAAC,EAAI,KAAK,QAAQ,CAAC,EAAA,KAAA0C,GAAAqnC,EAAAC,CAAA,yCA3BhDhqC,EAAG,CAAA,GAAAoK,GAAApK,CAAA,oEAAHA,EAAG,CAAA,wGATC,MAAAwpC,GAAW,0BAFN,IAAA19B,CAAG,EAAAhB,EAGVgZ,EAAQG,UAesBtX,GAAKA,EAAI68B,8EAdpC19B,IACJP,EAAA,EAAA0Y,EAAYnY,EAAI,KAAK,SAAS,EAC9BP,EAAA,EAAAuY,EAAShY,EAAI,KAAK,MAAM,gPCwFK9L,EAAO,CAAA,IAAA,mBAAPA,EAAO,CAAA,GAAYA,EAAG,CAAA,IAAA,eAAHA,EAAG,CAAA,oKADnDqB,EAEMF,EAAA6I,EAAA1I,CAAA,8HADuBtB,EAAO,CAAA,qCAAYA,EAAG,CAAA,8LAMoBA,EAAQ,CAAA,IAAA,oBAARA,EAAQ,CAAA,6EAAtCA,EAAa,CAAA,CAAA,uFADtDqB,EAEMF,EAAA6I,EAAA1I,CAAA,uFADiEtB,EAAQ,CAAA,maAK/EqB,EAMMF,EAAA+I,EAAA5I,CAAA,uBACND,EAEMF,EAAA8I,EAAA3I,CAAA,6SANwE,SAAO,kOAD/ED,EAEMF,EAAA6I,EAAA1I,CAAA,+LA4BHtB,EAAG,CAAA,yFAAHA,EAAG,CAAA,CAAA,4LAZAA,EAAK,CAAA,KAAAmK,oVAJd9I,EAcMF,EAAA6I,EAAA1I,CAAA,EAbHJ,EAEI8I,EAAAiG,CAAA,4BAUJ/O,EAAO8I,EAAA8F,CAAA,kMAIe9P,EAAU,CAAA,CAAA,i4BAThCqB,EAA+BF,EAAA8O,EAAA3O,CAAA,WAC/BD,EACIF,EAAA2O,EAAAxO,CAAA,WACJD,EAA6HF,EAAA4O,EAAAzO,CAAA,wSAN7HD,EAA+BF,EAAA8O,EAAA3O,CAAA,WAC/BD,EAAiFF,EAAA2O,EAAAxO,CAAA,0GAtC3DtB,EAAK,CAAA,IAAA,iBAALA,EAAK,CAAA,0DAG5BA,EAAK,CAAA,GAAAyoB,GAAAzoB,CAAA,IAMLA,EAAQ,CAAA,EAAC,OAAS,GAAC2oB,GAAA3oB,CAAA,IAMnBA,EAAG,CAAA,GAAA4oB,GAAA5oB,CAAA,8CAgBFA,EAAG,CAAA,IAAA,8UApCfqB,EA0DMF,EAAAgpC,EAAA7oC,CAAA,EAvDHJ,EA6BMipC,EAAAlgC,CAAA,EA5BH/I,EAEM+I,EAAAC,CAAA,uFA6BThJ,EAsBMipC,EAAApf,CAAA,kEApDyB/qB,EAAK,CAAA,0BAG5BA,EAAK,CAAA,gGAMLA,EAAQ,CAAA,EAAC,OAAS,iGAMlBA,EAAG,CAAA,iaAxFA,KAAA6K,CAAI,EAAAC,EAWXiB,EACAE,EACAH,EAGAs+B,EAAY,EAGZp+B,EAAQ,CAAA,EAOH,SAAAq+B,EAAWp2B,EAAC,CAGZ,MAAA4iB,EAAM,SAAS5iB,EAAE,OAAO,EAAE,EAC5B,GAAA,OAAO,MAAM4iB,CAAG,GAAKA,EAAM,GAAKA,GAAO/qB,EAAI,WAAW,OAAM,OAG1D,MAAAJ,EAAKI,EAAI,WAAW+qB,CAAG,EAGzBnrB,GAAM,GAAC,CAAKM,EAAS,SAASN,CAAE,OACjCM,EAAQ,CAAA,GAAOA,EAAUN,CAAE,CAAA,WAQxBu+B,GAAa,KACnBj+B,EAAQ,CAAA,CAAA,gBA2BoBC,EAAK3N,uBAKJyN,EAAOzN,8BAAYwN,EAAGxN,qCAMoB0N,EAAQ1N,uBAQjD,MAAAqN,EAAA,IAAAE,GAAgBC,EAAKC,EAAS,MAAOC,CAAQ,+EA1CvEC,IAAU,OACdV,EAAA,EAAAQ,EAAU,IAAI,EACdR,EAAA,EAAA6+B,EAAY,CAAC,iBAKTr+B,IAAY,OAChBR,EAAA,EAAAO,EAAM,IAAI,MACVE,EAAQ,CAAA,CAAA,mBAIJC,GAASA,EAAM,OAASm+B,OAC5BA,EAAYn+B,EAAM,IAAI,kMCxF5B,IAAIy+B,IAAO,IAAM,CACf,IAAIC,EAAcC,IAAAA,GAAA,QAAA,YAAA,IAAA,UAAAA,GAAA,KAAA,IAAA,IAAA,SAAA,SAAA,OAAA,EAAA,KAElB,OACF,eAAeC,EAAY,CAAA,EAAI,CAC7B,IAAIC,EAEFjoB,EAAOgoB,EAAcE,EAAoBC,EAAuBC,EAAa,IAAI,QAAQ,CAACva,EAAQC,IAAS,CAACoa,EAAoBra,EAAQsa,EAAmBra,CAAM,CAAC,EAAMua,EAAmB,OAAO,QAAQ,SAAaC,EAAsB,OAAO,kBAAmB,IAAgBC,EAAoB,OAAO,SAAS,UAAU,OAAO,QAAQ,UAAU,UAAU,OAAO,QAAQ,SAAS,MAAM,UAAU,QAAQ,MAAM,WAAW,GAAGA,EAAoB,CAAC,KAAK,CAAC,cAAAC,CAAa,EAAE,MAAKC,GAAA,IAAC,QAAgB,QAAA,EAAA,KAAA,IAAAC,EAAA,EAAA,MAAA,EAAC,IAAIC,EAAuBZ,IAAAA,GAAA,QAAA,YAAA,IAAA,UAAAA,GAAA,KAAA,IAAA,IAAA,SAAA,SAAA,OAAA,EAAA,KAAIY,EAAQ,WAAW,OAAO,IAAGA,EAAQ,KAAI,IAAIC,EAAQJ,EAAcG,CAAO,CAAC,CAAC,IAAIE,EAAgB,OAAO,OAAO,CAAE,EAAC7oB,CAAM,EAAyD8oB,EAAM,CAACrjB,EAAOsjB,IAAU,CAAC,MAAMA,CAAO,EAAMC,EAAgB,GAAG,SAASC,EAAWC,EAAK,CAAC,OAAGlpB,EAAO,WAAsBA,EAAO,WAAckpB,EAAKF,CAAe,EAASA,EAAgBE,CAAI,CAAC,IAAIC,EAAUC,EAAW,GAAGb,EAAoB,CAAC,IAAIc,EAAGT,EAAQ,IAAI,EAAMU,EAASV,EAAQ,MAAM,GAAqBb,IAAAA,GAAA,QAAA,YAAA,IAAA,UAAAA,GAAA,KAAA,IAAA,IAAA,SAAA,SAAA,OAAA,EAAA,MAAC,WAAW,OAAO,IAAGiB,EAAgBM,EAAS,QAAQV,EAAQ,KAAK,EAAE,cAA6Bb,IAAAA,GAAA,QAAA,YAAA,IAAA,UAAAA,GAAA,KAAA,IAAA,IAAA,SAAA,SAAA,OAAA,EAAA,IAAA,CAAC,EAAE,KAAIqB,EAAWG,GAAU,CAACA,EAASC,GAAUD,CAAQ,EAAE,IAAI,IAAIA,CAAQ,EAAED,EAAS,UAAUC,CAAQ,EAAE,IAAI/iC,EAAI6iC,EAAG,aAAaE,CAAQ,EAAE,OAAO/iC,CAAG,EAAE2iC,EAAU,CAACI,EAASE,EAAO,MAAQF,EAASC,GAAUD,CAAQ,EAAE,IAAI,IAAIA,CAAQ,EAAED,EAAS,UAAUC,CAAQ,EAAS,IAAI,QAAQ,CAAC1b,GAAQC,KAAS,CAACub,EAAG,SAASE,EAASE,EAAO,OAAU,OAAO,CAACvb,GAAIhvB,KAAO,CAAIgvB,GAAIJ,GAAOI,EAAG,EAAOL,GAAQ4b,EAAOvqC,GAAK,OAAOA,EAAI,CAAC,CAAC,CAAC,CAAC,GAAM,CAAC8gB,EAAO,aAAgB,QAAQ,KAAK,OAAO,GAAe,QAAQ,KAAK,CAAC,EAAE,QAAQ,MAAM,GAAG,EAAa,QAAQ,KAAK,MAAM,CAAC,EAAE8oB,EAAM,CAACrjB,EAAOsjB,IAAU,CAAC,cAAQ,SAAStjB,EAAasjB,CAAO,CAAC,MAASV,GAAoBC,KAA0BA,EAAuBU,EAAgB,KAAK,SAAS,KAAa,OAAO,SAAU,KAAa,SAAS,gBAAeA,EAAgB,SAAS,cAAc,KAAOlB,IAAakB,EAAgBlB,GAAekB,EAAgB,WAAW,OAAO,EAAGA,EAAgB,GAAQA,EAAgBA,EAAgB,OAAO,EAAEA,EAAgB,QAAQ,SAAS,EAAE,EAAE,YAAY,GAAG,EAAE,CAAC,EAAMV,IAAuBc,EAAW7sC,GAAK,CAAC,IAAImtC,EAAI,IAAI,eAAe,OAAAA,EAAI,KAAK,MAAMntC,EAAI,EAAK,EAAEmtC,EAAI,aAAa,cAAcA,EAAI,KAAK,IAAI,EAAS,IAAI,WAAWA,EAAI,QAAQ,CAAC,GAAEP,EAAU5sC,GAASitC,GAAUjtC,CAAG,EAAU,IAAI,QAAQ,CAACsxB,EAAQC,KAAS,CAAC,IAAI4b,GAAI,IAAI,eAAeA,GAAI,KAAK,MAAMntC,EAAI,EAAI,EAAEmtC,GAAI,aAAa,cAAcA,GAAI,OAAO,IAAI,CAAC,GAAGA,GAAI,QAAQ,KAAKA,GAAI,QAAQ,GAAGA,GAAI,SAAS,CAAC7b,EAAQ6b,GAAI,QAAQ,EAAE,MAAM,CAAC5b,GAAO4b,GAAI,MAAM,CAAC,EAAEA,GAAI,QAAQ5b,GAAO4b,GAAI,KAAK,IAAI,CAAC,CAAC,EAAS,MAAMntC,EAAI,CAAC,YAAY,aAAa,CAAC,EAAE,KAAKotC,GAAcA,EAAS,GAAWA,EAAS,YAAW,EAAU,QAAQ,OAAO,IAAI,MAAMA,EAAS,OAAO,MAAMA,EAAS,GAAG,CAAC,CAAE,GAAkB3pB,EAAO,OAAU,QAAQ,IAAI,KAAK,OAAO,EAAE,IAAIkO,EAAIlO,EAAO,UAAa,QAAQ,MAAM,KAAK,OAAO,EAAE,OAAO,OAAOA,EAAO6oB,CAAe,EAAEA,EAAgB,KAAQ7oB,EAAO,WAAwBA,EAAO,UAAgBA,EAAO,aAA2BA,EAAO,YAAe,IAAI4pB,EAAW5pB,EAAO,WAAkB6pB,EAAeC,EAAM,GAAUC,EAAeC,EAAMC,EAAqD,SAASC,GAAmB,CAAC,IAAI/tC,EAAE0tC,EAAW,OAAO7pB,EAAO,MAASgqB,EAAM,IAAI,UAAU7tC,CAAC,EAAE6jB,EAAO,OAAiB,IAAI,WAAW7jB,CAAC,EAAE6jB,EAAO,OAAUiqB,EAAO,IAAI,WAAW9tC,CAAC,EAAE6jB,EAAO,QAAmB,IAAI,YAAY7jB,CAAC,EAAE6jB,EAAO,OAAiB,IAAI,WAAW7jB,CAAC,EAAE6jB,EAAO,QAAmB,IAAI,YAAY7jB,CAAC,EAAE6jB,EAAO,QAAmB,IAAI,aAAa7jB,CAAC,EAAE6jB,EAAO,QAAmB,IAAI,aAAa7jB,CAAC,CAAC,CAAC,IAAIguC,EAAa,CAAA,EAAOC,EAAW,GAAOC,EAAc,CAAE,EAA8B,SAASC,GAAQ,CAAC,GAAGtqB,EAAO,OAAsF,IAAxE,OAAOA,EAAO,QAAW,aAAWA,EAAO,OAAU,CAACA,EAAO,MAAS,GAAQA,EAAO,OAAU,QAAQuqB,EAAYvqB,EAAO,OAAU,MAAK,CAAE,EAAGwqB,GAAqBL,CAAY,CAAC,CAAC,SAASM,IAAa,CAAyBD,GAAqBJ,CAAU,CAAC,CAAC,SAASM,GAAS,CAAC,GAAG1qB,EAAO,QAA0F,IAA3E,OAAOA,EAAO,SAAY,aAAWA,EAAO,QAAW,CAACA,EAAO,OAAU,GAAQA,EAAO,QAAW,QAAQ2qB,EAAa3qB,EAAO,QAAW,MAAK,CAAE,EAAGwqB,GAAqBH,CAAa,CAAC,CAAC,SAASE,EAAYK,EAAG,CAACT,EAAa,QAAQS,CAAE,CAAC,CAAC,SAASC,EAAUD,EAAG,CAACR,EAAW,QAAQQ,CAAE,CAAC,CAAC,SAASD,EAAaC,EAAG,CAACP,EAAc,QAAQO,CAAE,CAAC,CAAC,IAAIE,EAAgB,EAAoCC,EAAsB,KAAK,SAASC,GAAiBniC,EAAG,OAACiiC,KAAkBG,EAAAjrB,EAAO,yBAAP,MAAAirB,EAAA,KAAAjrB,EAAmC8qB,EAAgB,CAAC,SAASI,GAAoBriC,EAAG,QAAuE,GAAtEiiC,KAAkBG,GAAAjrB,EAAO,yBAAP,MAAAirB,GAAA,KAAAjrB,EAAmC8qB,GAAoBA,GAAiB,GAAoGC,EAAsB,CAAC,IAAIluC,EAASkuC,EAAsBA,EAAsB,KAAKluC,EAAU,CAAA,CAAE,CAAC,SAASsuC,GAAMC,EAAK,SAACH,GAAAjrB,EAAO,UAAP,MAAAirB,GAAA,KAAAjrB,EAAoBorB,GAAMA,EAAK,WAAWA,EAAK,IAAIld,EAAIkd,CAAI,EAAEtB,EAAM,GAAKsB,GAAM,2CAA2C,IAAIh6B,EAAE,IAAI,YAAY,aAAag6B,CAAI,EAAE,MAAAjD,EAAmB/2B,CAAC,EAAQA,CAAC,CAAC,IAAIi6B,GAAc,wCAA4CC,GAAU/B,GAAUA,EAAS,WAAW8B,EAAa,EAAM7B,GAAUD,GAAUA,EAAS,WAAW,SAAS,EAAE,SAASgC,GAAgB,CAAC,GAAGvrB,EAAO,WAAc,CAAC,IAAIlH,EAAE,gBAAgB,OAAIwyB,GAAUxyB,CAAC,EAA+BA,EAArBmwB,EAAWnwB,CAAC,CAAU,CAAC,OAAO,IAAA,IAAA,YAAA,KAAA,QAAA,EAAyC,IAAI,CAAC,IAAI0yB,GAAe,SAASC,GAAcvG,EAAK,CAAC,GAAGA,GAAMsG,IAAgB5B,EAAY,OAAO,IAAI,WAAWA,CAAU,EAAE,GAAGR,EAAY,OAAOA,EAAWlE,CAAI,EAAE,KAAK,iDAAiD,CAAC,SAASwG,GAAiBC,EAAW,CAAC,OAAI/B,EAAuH,QAAQ,QAAS,EAAC,KAAK,IAAI6B,GAAcE,CAAU,CAAC,EAAxJxC,EAAUwC,CAAU,EAAE,KAAKhC,GAAU,IAAI,WAAWA,CAAQ,EAAE,IAAI8B,GAAcE,CAAU,CAAC,CAA8D,CAAC,SAASC,GAAuBD,EAAWE,EAAQC,GAAS,CAAC,OAAOJ,GAAiBC,CAAU,EAAE,KAAKlC,IAAQ,YAAY,YAAYA,GAAOoC,CAAO,CAAC,EAAE,KAAKC,GAASC,IAAQ,CAAC7d,EAAI,0CAA0C6d,EAAM,EAAE,EAAEZ,GAAMY,EAAM,CAAC,CAAC,CAAC,CAAC,SAASC,GAAiBvC,EAAOkC,EAAWE,GAAQhvC,GAAS,CAAC,MAAG,CAAC4sC,GAAQ,OAAO,YAAY,sBAAsB,YAAY,CAAC6B,GAAUK,CAAU,GAAG,CAACnC,GAAUmC,CAAU,GAAG,CAACpD,GAAqB,OAAO,OAAO,WAAmB,MAAMoD,EAAW,CAAC,YAAY,aAAa,CAAC,EAAE,KAAKhC,IAAU,CAAC,IAAIsC,GAAO,YAAY,qBAAqBtC,GAASkC,EAAO,EAAE,OAAOI,GAAO,KAAKpvC,GAAS,SAASkvC,GAAO,CAAC,OAAA7d,EAAI,kCAAkC6d,EAAM,EAAE,EAAE7d,EAAI,2CAA2C,EAAS0d,GAAuBD,EAAWE,GAAQhvC,EAAQ,CAAC,CAAC,CAAC,CAAC,EAAS+uC,GAAuBD,EAAWE,GAAQhvC,EAAQ,CAAC,CAAC,SAASqvC,IAAgB,CAAC,MAAM,CAAC,EAAEC,EAAW,CAAC,CAAC,SAASC,IAAY,CAAC,IAAI7oC,EAAK2oC,GAAgB,EAAC,SAASG,EAAgBnmC,GAASomC,GAAO,CAAC,OAAAC,GAAYrmC,GAAS,QAAQ2jC,EAAW0C,GAAY,EAAKrC,EAAmB,EAACW,EAAU0B,GAAY,CAAI,EAAErB,GAAsC,EAASqB,EAAW,CAACvB,GAAmC,EAAE,SAASwB,GAA2BP,GAAO,CAACI,EAAgBJ,GAAO,QAAW,CAAC,CAAC,GAAGjsB,EAAO,gBAAoB,GAAG,CAAC,OAAOA,EAAO,gBAAmBzc,EAAK8oC,CAAe,CAAC,OAAOj7B,GAAE,CAAC8c,EAAI,sDAAsD9c,EAAC,EAAE,EAAE+2B,EAAmB/2B,EAAC,CAAC,CAAE,OAAAo6B,QAAiBD,EAAc,GAAGS,GAAiBpC,EAAW4B,GAAejoC,EAAKipC,EAA0B,EAAE,MAAMrE,CAAkB,EAAQ,CAAA,CAAE,CAAC,MAAMsE,EAAU,CAAmB,YAAYhnB,EAAO,CAArC7kB,GAAA,YAAK,cAAiC,KAAK,QAAQ,gCAAgC6kB,CAAM,IAAI,KAAK,OAAOA,CAAM,CAAC,CAAC,IAAI+kB,GAAqB5tC,GAAW,CAAC,KAAMA,EAAU,OAAO,GAAGA,EAAU,MAAO,EAACojB,CAAM,CAAE,EAAM0sB,GAAc1sB,EAAO,eAAkB,GAAS2sB,GAAaC,GAAKC,GAA2BD,CAAG,EAAME,GAAU,IAAIC,KAAoCC,GAAW,IAAI,CAAC7B,GAAM,EAAE,CAAC,EAAM8B,GAAuB,CAACC,EAAK5xC,EAAIiuB,KAAM0gB,EAAO,WAAWiD,EAAK5xC,EAAIA,EAAIiuB,EAAG,EAAM4jB,GAAwB,EAAMC,GAAqC,IAAI,CAACV,GAAc,GAAMS,GAAwB,CAAC,EAAME,GAAO,CAAE,EAAKC,GAAgBl8B,GAAG,CAAC,GAAGA,aAAaq7B,IAAYr7B,GAAG,SAAU,OAAO24B,EAAWjB,EAAM,EAAE13B,CAAC,CAAC,EAAMm8B,EAAiB,IAAIb,IAAeS,GAAwB,EAAMK,GAAWC,GAAM,OAAC1D,EAAW0D,EAASF,EAAkB,KAAEtC,EAAAjrB,EAAO,SAAP,MAAAirB,EAAA,KAAAjrB,EAAmBytB,GAAM3D,EAAM,IAAKhB,EAAM2E,EAAK,IAAIhB,GAAWgB,CAAI,CAAC,CAAC,EAAMC,GAAO,CAACjoB,EAAOkoB,IAAW,CAAC5D,EAAWtkB,EAAO+nB,GAAW/nB,CAAM,CAAC,EAAMmoB,GAAMF,GAAWG,GAAU,IAAI,CAAC,GAAG,CAACN,EAAkB,EAAE,GAAG,CAACK,GAAM7D,CAAU,CAAC,OAAO34B,EAAE,CAACk8B,GAAgBl8B,CAAC,CAAC,CAAE,EAAM08B,GAAiBC,GAAM,CAAC,GAAG,CAAAjE,EAAc,GAAG,CAACiE,EAAI,EAAGF,IAAW,OAAOz8B,EAAE,CAACk8B,GAAgBl8B,CAAC,CAAC,CAAC,EAAM48B,GAAoB,IAAI,YAAY,IAAK,EAAKC,GAAe,CAACC,EAAMC,IAAa,CAAuE,GAAnEd,GAAOa,CAAK,IAAG,aAAab,GAAOa,CAAK,EAAE,EAAE,EAAE,OAAOb,GAAOa,CAAK,GAAK,CAACC,EAAW,MAAO,GAAE,IAAItlC,GAAG,WAAW,IAAI,CAAC,OAAOwkC,GAAOa,CAAK,EAAEJ,GAAiB,IAAIM,GAAqBF,EAAMF,GAAqB,CAAA,CAAC,CAAC,EAAEG,CAAU,EAAE,OAAAd,GAAOa,CAAK,EAAE,CAAC,GAAArlC,GAAG,WAAAslC,CAAU,EAAS,CAAC,EAAME,GAAqB,IAAI,KAAK,IAAK,EAAKC,GAAW,IAAI,WAAeC,GAAY,CAAChjB,EAAKijB,IAAY,KAAK,KAAKjjB,EAAKijB,CAAS,EAAEA,EAAcC,GAAWljB,GAAM,CAAC,IAAIpvB,EAAE0tC,EAAW,OAAW6E,IAAOnjB,EAAKpvB,EAAE,WAAW,OAAO,MAAM,EAAE,GAAG,CAAC,OAAA0tC,EAAW,KAAK6E,EAAK,EAAExE,EAAmB,EAAQ,CAAC,MAAS,CAAA,CAAE,EAAMyE,GAAwBC,GAAe,CAAC,IAAIC,EAAQ5E,EAAO,OAAO2E,KAAiB,EAAE,IAAIE,GAAYR,KAAa,GAAGM,EAAcE,GAAa,MAAO,GAAM,QAAQC,GAAQ,EAAEA,IAAS,EAAEA,IAAS,EAAE,CAAC,IAAIC,GAAkBH,GAAS,EAAE,GAAGE,IAASC,GAAkB,KAAK,IAAIA,GAAkBJ,EAAc,SAAS,EAAE,IAAIK,GAAQ,KAAK,IAAIH,GAAYP,GAAY,KAAK,IAAIK,EAAcI,EAAiB,EAAE,KAAK,CAAC,EAAME,GAAYT,GAAWQ,EAAO,EAAE,GAAGC,GAAa,MAAO,EAAK,CAAC,MAAO,EAAK,EAAMC,GAASC,GAAO,CAAC,IAAIrB,EAAK/tB,EAAO,IAAIovB,CAAK,EAAE,OAAOrB,CAAI,EAAMsB,GAAmB,CAACC,EAAMC,IAAS,CAACvF,EAAM,IAAIsF,EAAMC,CAAM,CAAC,EAAMC,GAAgBryB,GAAK,CAAW,QAANxf,EAAI,EAAUC,GAAE,EAAEA,GAAEuf,EAAI,OAAO,EAAEvf,GAAE,CAAC,IAAIgF,GAAEua,EAAI,WAAWvf,EAAC,EAAKgF,IAAG,IAAKjF,IAAciF,IAAG,KAAMjF,GAAK,EAAUiF,IAAG,OAAOA,IAAG,OAAOjF,GAAK,EAAE,EAAEC,IAAOD,GAAK,CAAE,CAAC,OAAOA,CAAG,EAAM8xC,GAAkB,CAACtyB,EAAIuyB,EAAKC,GAAOC,KAAkB,CAAC,GAAG,EAAEA,GAAgB,GAAG,MAAO,GAA0D,QAApDC,GAASF,GAAWG,GAAOH,GAAOC,GAAgB,EAAUhyC,GAAE,EAAEA,GAAEuf,EAAI,OAAO,EAAEvf,GAAE,CAAC,IAAIuV,GAAEgK,EAAI,WAAWvf,EAAC,EAAE,GAAGuV,IAAG,OAAOA,IAAG,MAAM,CAAC,IAAI48B,GAAG5yB,EAAI,WAAW,EAAEvf,EAAC,EAAEuV,GAAE,QAAQA,GAAE,OAAO,IAAI48B,GAAG,IAAI,CAAC,GAAG58B,IAAG,IAAI,CAAC,GAAGw8B,IAAQG,GAAO,MAAMJ,EAAKC,IAAQ,EAAEx8B,EAAC,SAASA,IAAG,KAAK,CAAC,GAAGw8B,GAAO,GAAGG,GAAO,MAAMJ,EAAKC,IAAQ,EAAE,IAAIx8B,IAAG,EAAEu8B,EAAKC,IAAQ,EAAE,IAAIx8B,GAAE,EAAE,SAASA,IAAG,MAAM,CAAC,GAAGw8B,GAAO,GAAGG,GAAO,MAAMJ,EAAKC,IAAQ,EAAE,IAAIx8B,IAAG,GAAGu8B,EAAKC,IAAQ,EAAE,IAAIx8B,IAAG,EAAE,GAAGu8B,EAAKC,IAAQ,EAAE,IAAIx8B,GAAE,EAAE,KAAK,CAAC,GAAGw8B,GAAO,GAAGG,GAAO,MAAMJ,EAAKC,IAAQ,EAAE,IAAIx8B,IAAG,GAAGu8B,EAAKC,IAAQ,EAAE,IAAIx8B,IAAG,GAAG,GAAGu8B,EAAKC,IAAQ,EAAE,IAAIx8B,IAAG,EAAE,GAAGu8B,EAAKC,IAAQ,EAAE,IAAIx8B,GAAE,EAAE,CAAC,CAAC,OAAAu8B,EAAKC,EAAM,EAAE,EAASA,GAAOE,EAAQ,EAAMG,GAAa,CAAC7yB,EAAI8yB,EAAOL,KAAkBH,GAAkBtyB,EAAI8sB,EAAOgG,EAAOL,EAAe,EAAMM,GAAWC,GAAIC,GAAyBD,CAAE,EAAME,GAAoBlzB,GAAK,CAAC,IAAIoO,EAAKikB,GAAgBryB,CAAG,EAAE,EAAM3W,GAAI0pC,GAAW3kB,CAAI,EAAE,OAAAykB,GAAa7yB,EAAI3W,GAAI+kB,CAAI,EAAS/kB,EAAG,EAAM8pC,GAAY,OAAO,YAAa,IAAY,IAAI,YAAY,OAAcC,GAAkB,CAACC,EAAYC,EAAI,EAAEC,GAAe,MAAM,CAA8C,QAAzCZ,GAAOW,EAAIC,GAAmBC,GAAOF,EAAUD,EAAYG,EAAM,GAAG,EAAEA,IAAQb,KAAQ,EAAEa,GAAO,GAAGA,GAAOF,EAAI,IAAID,EAAY,QAAQF,GAAa,OAAOA,GAAY,OAAOE,EAAY,SAASC,EAAIE,EAAM,CAAC,EAAa,QAAPxzB,GAAI,GAASszB,EAAIE,IAAO,CAAC,IAAIC,GAAGJ,EAAYC,GAAK,EAAE,GAAG,EAAEG,GAAG,KAAK,CAACzzB,IAAK,OAAO,aAAayzB,EAAE,EAAE,QAAQ,CAAC,IAAIb,GAAGS,EAAYC,GAAK,EAAE,GAAG,IAAIG,GAAG,MAAM,IAAI,CAACzzB,IAAK,OAAO,cAAcyzB,GAAG,KAAK,EAAEb,EAAE,EAAE,QAAQ,CAAC,IAAIc,GAAGL,EAAYC,GAAK,EAAE,GAAmG,IAA5FG,GAAG,MAAM,IAAKA,IAAIA,GAAG,KAAK,GAAGb,IAAI,EAAEc,GAAQD,IAAIA,GAAG,IAAI,GAAGb,IAAI,GAAGc,IAAI,EAAEL,EAAYC,GAAK,EAAE,GAAMG,GAAG,MAAOzzB,IAAK,OAAO,aAAayzB,EAAE,MAAM,CAAC,IAAIE,GAAGF,GAAG,MAAMzzB,IAAK,OAAO,aAAa,MAAM2zB,IAAI,GAAG,MAAMA,GAAG,IAAI,CAAC,CAAC,CAAC,OAAO3zB,EAAG,EAAM4zB,GAAa,CAACC,EAAIN,IAAiBM,EAAIT,GAAkBtG,EAAO+G,EAAIN,CAAc,EAAE,GAAOO,GAAM,CAAC7B,EAAM8B,EAAWC,GAASxyB,GAAKyyB,KAAO,CAAC,IAAIC,GAAI,CAAC,OAAOl0B,IAAK,CAAC,IAAI3W,GAAI,EAAE,OAAG2W,IAAM,MAAuBA,KAAM,IAAG3W,GAAI6pC,GAAoBlzB,EAAG,GAAS3W,EAAG,EAAE,MAAMoZ,IAAK,CAAC,IAAIpZ,GAAI0pC,GAAWtwB,GAAI,MAAM,EAAE,OAAAyvB,GAAmBzvB,GAAIpZ,EAAG,EAASA,EAAG,CAAC,EAAE,SAAS8qC,GAAmB9qC,GAAI,CAAC,OAAG0qC,IAAa,SAAiBH,GAAavqC,EAAG,EAAK0qC,IAAa,UAAiB,EAAQ1qC,GAAYA,EAAG,CAAC,IAAIunC,GAAKoB,GAASC,CAAK,EAAMmC,GAAM,CAAA,EAAOC,GAAM,EAAE,GAAG7yB,GAAM,QAAQ/gB,GAAE,EAAEA,GAAE+gB,GAAK,OAAO/gB,KAAI,CAAC,IAAI6zC,GAAUJ,GAAIF,GAASvzC,EAAC,CAAC,EAAK6zC,IAAcD,KAAQ,IAAEA,GAAM1E,GAAW,GAACyE,GAAM3zC,EAAC,EAAE6zC,GAAU9yB,GAAK/gB,EAAC,CAAC,GAAO2zC,GAAM3zC,EAAC,EAAE+gB,GAAK/gB,EAAC,CAAE,CAAE,IAAI4I,GAAIunC,GAAK,GAAGwD,EAAK,EAAE,SAASG,GAAOlrC,GAAI,CAAC,OAAGgrC,KAAQ,GAAE7E,GAAa6E,EAAK,EAASF,GAAmB9qC,EAAG,CAAC,CAAC,OAAAA,GAAIkrC,GAAOlrC,EAAG,EAASA,EAAG,EAAM2lC,GAAY,CAAC,EAAEa,GAAW,EAAEC,GAAuB,EAAEG,GAAqC,EAAEa,GAAe,EAAEI,GAAqB,EAAEM,GAAwB,EAAEnB,EAAU,EAAMjB,GAAYH,GAAU,EAAuFpsB,EAAO,aAAgB,CAAC/R,EAAGC,EAAGC,GAAGC,GAAG0C,GAAGC,GAAG4gC,GAAGC,GAAGC,GAAGC,GAAGC,MAAoB/xB,EAAO,aAAgBusB,GAAY,GAAMt+B,EAAGC,EAAGC,GAAGC,GAAG0C,GAAGC,GAAG4gC,GAAGC,GAAGC,GAAGC,GAAGC,EAAG,EAAc/xB,EAAO,QAAW/R,IAAa+R,EAAO,QAAWusB,GAAY,GAAMt+B,CAAE,EAAY+R,EAAO,MAAS/R,IAAW+R,EAAO,MAASusB,GAAY,GAAMt+B,CAAE,EAAuB+R,EAAO,iBAAoB,CAAC/R,EAAGC,EAAGC,GAAGC,GAAG0C,GAAGC,GAAG4gC,GAAGC,GAAGC,MAAuB7xB,EAAO,iBAAoBusB,GAAY,GAAMt+B,EAAGC,EAAGC,GAAGC,GAAG0C,GAAGC,GAAG4gC,GAAGC,GAAGC,EAAE,EAAmB7xB,EAAO,aAAgB,CAAC/R,EAAGC,EAAGC,GAAGC,GAAG0C,GAAGC,GAAG4gC,GAAGC,GAAGC,GAAGC,GAAGC,GAAIC,GAAIC,GAAIC,GAAIC,MAAoBnyB,EAAO,aAAgBusB,GAAY,GAAMt+B,EAAGC,EAAGC,GAAGC,GAAG0C,GAAGC,GAAG4gC,GAAGC,GAAGC,GAAGC,GAAGC,GAAIC,GAAIC,GAAIC,GAAIC,EAAG,EAAE,IAAI/D,GAAqB,CAACngC,EAAGC,KAAMkgC,GAAqB7B,GAAY,GAAMt+B,EAAGC,CAAE,EAAM2+B,GAA2B5+B,IAAK4+B,GAA2BN,GAAY,GAAMt+B,CAAE,EAAMmiC,GAAyBniC,IAAKmiC,GAAyB7D,GAAY,GAAMt+B,CAAE,EAAM8+B,GAA8B,KAAKA,GAA8BR,GAAY,GAAI,EAAIvsB,EAAO,MAASixB,GAAM,IAAImB,GAAUrH,EAAsB,SAASsH,GAAW,CAAKD,IAAU12C,GAAK,EAAK02C,KAAUrH,EAAsBsH,EAAS,EAAE,SAAS32C,IAAK,CAAuC,GAAnCovC,EAAgB,IAAUR,EAAM,EAAMQ,EAAgB,GAAG,OAAO,SAASwH,GAAO,OAAIF,KAAiBA,GAAU,GAAKpyB,EAAO,UAAa,GAAQ,CAAA8pB,IAAaW,GAAa,EAACvC,EAAoBloB,CAAM,GAAEirB,EAAAjrB,EAAO,uBAAP,MAAAirB,EAAA,KAAAjrB,GAAmC0qB,KAAS,CAAI1qB,EAAO,WAAcA,EAAO,UAAa,YAAY,EAAE,WAAW,IAAI,CAAC,WAAW,IAAIA,EAAO,UAAa,EAAE,EAAE,CAAC,EAAEsyB,EAAK,CAAE,EAAE,CAAC,GAAOA,GAAQ,CAAC,GAAGtyB,EAAO,QAA0F,IAA3E,OAAOA,EAAO,SAAY,aAAWA,EAAO,QAAW,CAACA,EAAO,OAAU,GAAQA,EAAO,QAAW,OAAO,GAAGA,EAAO,QAAW,IAAK,EAAA,EAAI,OAAAtkB,GAAG,EAAGusC,EAAUG,EAG99cH,CACT,CAEA,GAAI;;gYCYDzpC,EAAqCF,EAAA8a,EAAA3a,CAAA,WACrCD,EAAkFF,EAAA8O,EAAA3O,CAAA,WAClFD,EAIIF,EAAA2O,EAAAxO,CAAA,WACJD,EACAF,EAAA4O,EAAAzO,CAAA,EAAAD,EAAiBF,EAAAi0C,EAAA9zC,CAAA,WACjBD,EAA+CF,EAAA8U,EAAA3U,CAAA,WAC/CD,EAEKF,EAAAsJ,EAAAnJ,CAAA;;;;+IArBLD,EAOMF,EAAA6I,EAAA1I,CAAA,gHARuC,4UAN7B,EACZ,KAAM,QAAS,UAAW+zC,KAC1B,KAAM,UAAW,UAAWC,yECVvB,IAAIC,GAAQ,CACvB,OAAQ,SAAS,IAClB,CAAC,uECJc,CAAA","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,12,13,14,15,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]}